<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="_pre_charge_8ino" kind="file" language="C++">
    <compoundname>PreCharge.ino</compoundname>
    <includes refid="_precharge_8h" local="yes">Precharge.h</includes>
    <includes local="no">Wire.h</includes>
    <incdepgraph>
      <node id="3">
        <label>FreeRTOS_TEENSY4.h</label>
        <link refid="_free_r_t_o_s___t_e_e_n_s_y4_8h"/>
      </node>
      <node id="1">
        <label>PreCharge.ino</label>
        <link refid="_pre_charge_8ino"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Precharge.h</label>
        <link refid="_precharge_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Wire.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_pre_charge_8ino_1a2cd6f5c27d7667dbd0b6a0bc756340a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prechargeTask</definition>
        <argsstring>(void *taskData)</argsstring>
        <name>prechargeTask</name>
        <param>
          <type>void *</type>
          <declname>taskData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PreCharge.ino" line="54" column="6" bodyfile="PreCharge.ino" bodystart="54" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="_pre_charge_8ino_1ad5e3efaa785dcd1d9143ec7e5d117277" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void preChargeCircuitFSMTransitions</definition>
        <argsstring>(PreChargeTaskData preChargeData)</argsstring>
        <name>preChargeCircuitFSMTransitions</name>
        <param>
          <type><ref refid="struct_pre_charge_task_data" kindref="compound">PreChargeTaskData</ref></type>
          <declname>preChargeData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PreCharge.ino" line="68" column="6" bodyfile="PreCharge.ino" bodystart="68" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="_pre_charge_8ino_1ad2376a25ab645f00587791af3c89968e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void preChargeCircuitFSMStateActions</definition>
        <argsstring>(PreChargeTaskData preChargeData)</argsstring>
        <name>preChargeCircuitFSMStateActions</name>
        <param>
          <type><ref refid="struct_pre_charge_task_data" kindref="compound">PreChargeTaskData</ref></type>
          <declname>preChargeData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PreCharge.ino" line="128" column="6" bodyfile="PreCharge.ino" bodystart="128" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="_pre_charge_8ino_1a42b25fa6ccd2c8d82ba24c5ed4aaa7d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isPrecharged</definition>
        <argsstring>(PreChargeTaskData preChargeData)</argsstring>
        <name>isPrecharged</name>
        <param>
          <type><ref refid="struct_pre_charge_task_data" kindref="compound">PreChargeTaskData</ref></type>
          <declname>preChargeData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PreCharge.ino" line="152" column="6" bodyfile="PreCharge.ino" bodystart="152" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="_pre_charge_8ino_1a65867cb936f7ef47ffd07fbfd4a91355" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isHVSafe</definition>
        <argsstring>(PreChargeTaskData preChargeData)</argsstring>
        <name>isHVSafe</name>
        <param>
          <type><ref refid="struct_pre_charge_task_data" kindref="compound">PreChargeTaskData</ref></type>
          <declname>preChargeData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PreCharge.ino" line="167" column="6" bodyfile="PreCharge.ino" bodystart="167" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="_pre_charge_8ino_1a6798f4bd0a5b6353886f894b38b32473" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool check_HV_TOGGLE</definition>
        <argsstring>()</argsstring>
        <name>check_HV_TOGGLE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PreCharge.ino" line="188" column="6" bodyfile="PreCharge.ino" bodystart="188" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="_pre_charge_8ino_1a0a3e1d4e80c1320d3308a0e0bb10ac87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * state_name</definition>
        <argsstring>(HV_STATE state)</argsstring>
        <name>state_name</name>
        <param>
          <type><ref refid="_precharge_8h_1a5faacefaff4b0ce77f1f8be0bf2aaf29" kindref="member">HV_STATE</ref></type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PreCharge.ino" line="192" column="6" bodyfile="PreCharge.ino" bodystart="192" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="_pre_charge_8ino_1a5782bd590f95fb2269eb43a3d70c18f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setupI2C</definition>
        <argsstring>(PreChargeTaskData preChargeData)</argsstring>
        <name>setupI2C</name>
        <param>
          <type><ref refid="struct_pre_charge_task_data" kindref="compound">PreChargeTaskData</ref></type>
          <declname>preChargeData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PreCharge.ino" line="201" column="6" bodyfile="PreCharge.ino" bodystart="201" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="_pre_charge_8ino_1ad8511ef84de5112bd6beb8e3ac5fff67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gyro_signals</definition>
        <argsstring>(PreChargeTaskData preChargeData)</argsstring>
        <name>gyro_signals</name>
        <param>
          <type><ref refid="struct_pre_charge_task_data" kindref="compound">PreChargeTaskData</ref></type>
          <declname>preChargeData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PreCharge.ino" line="230" column="6" bodyfile="PreCharge.ino" bodystart="230" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="_pre_charge_8ino_1a87184d718be6821c71e697fc1fd98d3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void updateGyroData</definition>
        <argsstring>(PreChargeTaskData preChargeData)</argsstring>
        <name>updateGyroData</name>
        <param>
          <type><ref refid="struct_pre_charge_task_data" kindref="compound">PreChargeTaskData</ref></type>
          <declname>preChargeData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PreCharge.ino" line="297" column="6" bodyfile="PreCharge.ino" bodystart="297" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="_pre_charge_8ino_1ade8f654468b951602d2622b34902944f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kalman_1d</definition>
        <argsstring>(float KalmanState, float KalmanUncertainty, float KalmanInput, float KalmanMeasurement, PreChargeTaskData preChargeData)</argsstring>
        <name>kalman_1d</name>
        <param>
          <type>float</type>
          <declname>KalmanState</declname>
        </param>
        <param>
          <type>float</type>
          <declname>KalmanUncertainty</declname>
        </param>
        <param>
          <type>float</type>
          <declname>KalmanInput</declname>
        </param>
        <param>
          <type>float</type>
          <declname>KalmanMeasurement</declname>
        </param>
        <param>
          <type><ref refid="struct_pre_charge_task_data" kindref="compound">PreChargeTaskData</ref></type>
          <declname>preChargeData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PreCharge.ino" line="319" column="6" bodyfile="PreCharge.ino" bodystart="319" bodyend="328"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="_pre_charge_8ino" kindref="compound">PreCharge.ino</ref> file for the PreCharge/Controls task for the bike&apos;s firmware. This calls on the stats that are updated by CAN and then updates the state of controls (HV Off, ON, etc.) based on them. Pretty simple. This also reads in the gyroscope data to determine when to kill power to the bike. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Washington Superbike </para>
</simplesect>
<simplesect kind="date"><para>1-March-2023</para>
</simplesect>
<simplesect kind="note"><para>up all members to be able to use it without any trouble.</para>
</simplesect>
<xrefsect id="todo_1_todo000010"><xreftitle>Todo</xreftitle><xrefdescription><para>Goal 1. <linebreak/>
 <linebreak/>
 Goal 2. <linebreak/>
 <linebreak/>
 Goal 3. <linebreak/>
 <linebreak/>
 Final Goal. </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_precharge_8h" kindref="compound">Precharge.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Wire.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>I2C<sp/>is<sp/>incredibly<sp/>unstable?<sp/>Or<sp/>perhaps<sp/>not<sp/>using<sp/>proper<sp/>wiring<sp/>causes<sp/>this,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>the<sp/>reading<sp/>in<sp/>precharge<sp/>data<sp/>can<sp/>often<sp/>bug<sp/>out<sp/>and<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;nan&quot;<sp/>because<sp/>of<sp/>randomness?<sp/>I<sp/>would<sp/>personally<sp/>recommend</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>having<sp/>some<sp/>sort<sp/>of<sp/>true<sp/>or<sp/>false<sp/>based</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>indicator<sp/>at<sp/>the<sp/>bottom<sp/>right<sp/>of<sp/>the<sp/>speedometer<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>outputs<sp/>&quot;true&quot;<sp/>or<sp/>something<sp/>to<sp/>indicate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>the<sp/>gyro<sp/>is<sp/>not<sp/>bugging<sp/>out.<sp/>Or<sp/>perhaps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>output<sp/>the<sp/>gyro<sp/>data<sp/>on<sp/>the<sp/>bottom<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>indicate<sp/>danger?<sp/>Something<sp/>like<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OKAY,<sp/>MAKE<sp/>SURE<sp/>YOU<sp/>READ<sp/>THIS<sp/>IF<sp/>YOU<sp/>SEE<sp/>ISSUES<sp/>WITH<sp/>THE<sp/>GYRO.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>my<sp/>*limited*<sp/>understanding,<sp/>I<sp/>think<sp/>the<sp/>problem<sp/>is<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>gyro<sp/>needs<sp/>to<sp/>be<sp/>consistently<sp/>powered,<sp/>hence<sp/>why<sp/>proper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>gyro<sp/>setup<sp/>code<sp/>has<sp/>a<sp/>significant<sp/>delay<sp/>between</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>turning<sp/>the<sp/>thing<sp/>on<sp/>and<sp/>actually<sp/>reading<sp/>data<sp/>from<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>An<sp/>easy<sp/>way<sp/>to<sp/>work<sp/>around<sp/>it,<sp/>is<sp/>to<sp/>power<sp/>on<sp/>the<sp/>Teensy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>then<sp/>once<sp/>everything<sp/>is<sp/>up<sp/>and<sp/>running,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reprogram<sp/>it<sp/>by<sp/>using<sp/>the<sp/>button<sp/>on<sp/>the<sp/>board.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>case<sp/>of<sp/>the<sp/>actual<sp/>race,<sp/>I<sp/>would<sp/>turn<sp/>on<sp/>low-voltage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>then<sp/>wait<sp/>a<sp/>second<sp/>and<sp/>then<sp/>turn<sp/>it<sp/>off<sp/>and<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>turn<sp/>it<sp/>back<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>state<sp/>HV_PRECHARGING,<sp/>HV_ON<sp/>are<sp/>badly<sp/>named.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>enum<sp/>should<sp/>be<sp/>renamed<sp/>to<sp/>HV_STATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>instead<sp/>we<sp/>should<sp/>have<sp/>HV_OFF,<sp/>HV_ON,<sp/>HV_ON<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="_pre_charge_8ino_1a2cd6f5c27d7667dbd0b6a0bc756340a3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_pre_charge_8ino_1a2cd6f5c27d7667dbd0b6a0bc756340a3" kindref="member">prechargeTask</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*taskData)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="struct_pre_charge_task_data" kindref="compound">PreChargeTaskData</ref><sp/>prechargeData<sp/>=<sp/>*(<ref refid="struct_pre_charge_task_data" kindref="compound">PreChargeTaskData</ref><sp/>*)taskData;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_pre_charge_8ino_1ad2376a25ab645f00587791af3c89968e" kindref="member">preChargeCircuitFSMStateActions</ref>(prechargeData);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_pre_charge_8ino_1ad5e3efaa785dcd1d9143ec7e5d117277" kindref="member">preChargeCircuitFSMTransitions</ref>(prechargeData);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_pre_charge_8ino_1a87184d718be6821c71e697fc1fd98d3b" kindref="member">updateGyroData</ref>(<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>100<sp/>ms<sp/>should<sp/>be<sp/>unnoticeable<sp/>compared<sp/>to<sp/>other<sp/>task<sp/>updates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>should<sp/>be<sp/>fast<sp/>to<sp/>pick<sp/>up<sp/>errors<sp/>/<sp/>switch<sp/>updates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="task_8h_1aa154068cecd7f31446a7a84af44ab1a3" kindref="member">vTaskDelay</ref>((1<sp/>*<sp/><ref refid="_free_r_t_o_s_config__default_8h_1a2f0258dd1e3b877e5bc013be54c2db6a" kindref="member">configTICK_RATE_HZ</ref>)<sp/>/<sp/>1000);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NOTE:<sp/>&quot;input&quot;<sp/>needs<sp/>to<sp/>change<sp/>to<sp/>the<sp/>GPIO<sp/>value<sp/>for<sp/>the<sp/>on-button<sp/>for<sp/>the<sp/>bike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="_precharge_8h_1ad5e3efaa785dcd1d9143ec7e5d117277" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_pre_charge_8ino_1ad5e3efaa785dcd1d9143ec7e5d117277" kindref="member">preChargeCircuitFSMTransitions</ref><sp/>(<ref refid="struct_pre_charge_task_data" kindref="compound">PreChargeTaskData</ref><sp/><ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="_precharge_8h_1a5faacefaff4b0ce77f1f8be0bf2aaf29" kindref="member">HV_STATE</ref><sp/>old_state<sp/>=<sp/><ref refid="_precharge_8h_1a5c9b1f4b5a31b5d46c45310567595867" kindref="member">hv_state</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="_precharge_8h_1a5c9b1f4b5a31b5d46c45310567595867" kindref="member">hv_state</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>transitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_precharge_8h_1a5faacefaff4b0ce77f1f8be0bf2aaf29abc9f85ed087d13faf9b1c463431ee66a" kindref="member">HV_OFF</ref>:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_pre_charge_8ino_1a6798f4bd0a5b6353886f894b38b32473" kindref="member">check_HV_TOGGLE</ref>())<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_precharge_8h_1a5c9b1f4b5a31b5d46c45310567595867" kindref="member">hv_state</ref><sp/>=<sp/><ref refid="_precharge_8h_1a5faacefaff4b0ce77f1f8be0bf2aaf29a2da9fa3988c31a60d94ee2a751ba32ce" kindref="member">HV_PRECHARGING</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_precharge_8h_1a5faacefaff4b0ce77f1f8be0bf2aaf29a2da9fa3988c31a60d94ee2a751ba32ce" kindref="member">HV_PRECHARGING</ref>:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_pre_charge_8ino_1a6798f4bd0a5b6353886f894b38b32473" kindref="member">check_HV_TOGGLE</ref>())<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>kill-switch<sp/>activated<sp/>or<sp/>HV<sp/>switch<sp/>turned<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_precharge_8h_1a5c9b1f4b5a31b5d46c45310567595867" kindref="member">hv_state</ref><sp/>=<sp/><ref refid="_precharge_8h_1a5faacefaff4b0ce77f1f8be0bf2aaf29abc9f85ed087d13faf9b1c463431ee66a" kindref="member">HV_OFF</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_pre_charge_8ino_1a65867cb936f7ef47ffd07fbfd4a91355" kindref="member">isHVSafe</ref>(<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>))<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HV<sp/>error<sp/>detected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_precharge_8h_1a5c9b1f4b5a31b5d46c45310567595867" kindref="member">hv_state</ref><sp/>=<sp/><ref refid="_precharge_8h_1a5faacefaff4b0ce77f1f8be0bf2aaf29a2303713b8a2ce365abb6b0de95c38595" kindref="member">HV_ERROR</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_pre_charge_8ino_1a42b25fa6ccd2c8d82ba24c5ed4aaa7d1" kindref="member">isPrecharged</ref>(<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>))<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>finished<sp/>precharging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_precharge_8h_1a5c9b1f4b5a31b5d46c45310567595867" kindref="member">hv_state</ref><sp/>=<sp/><ref refid="_precharge_8h_1a5faacefaff4b0ce77f1f8be0bf2aaf29ab5febf14562b68ff6bdaaa86ec9b5dec" kindref="member">HV_ON</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>updates,<sp/>keep<sp/>precharging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_precharge_8h_1a5c9b1f4b5a31b5d46c45310567595867" kindref="member">hv_state</ref><sp/>=<sp/><ref refid="_precharge_8h_1a5faacefaff4b0ce77f1f8be0bf2aaf29a2da9fa3988c31a60d94ee2a751ba32ce" kindref="member">HV_PRECHARGING</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_precharge_8h_1a5faacefaff4b0ce77f1f8be0bf2aaf29ab5febf14562b68ff6bdaaa86ec9b5dec" kindref="member">HV_ON</ref>:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>TODO:<sp/>add<sp/>another<sp/>&amp;&amp;<sp/>next<sp/>to<sp/>the<sp/>!check_HV_TOGGLE,<sp/>that<sp/>essentially<sp/>checks<sp/>the<sp/>measured<sp/>angle<sp/>&gt;<sp/>45<sp/>degrees<sp/>on<sp/>left<sp/>or<sp/>right<sp/>side<sp/>(+-<sp/>45<sp/>degrees?)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_pre_charge_8ino_1a6798f4bd0a5b6353886f894b38b32473" kindref="member">check_HV_TOGGLE</ref>()<sp/>||<sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a7a48fc6887285d4cb55bff65fca23f36" kindref="member">angle_Y</ref><sp/>&gt;<sp/>45<sp/>||<sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a7a48fc6887285d4cb55bff65fca23f36" kindref="member">angle_Y</ref><sp/>&lt;<sp/>-45<sp/>||<sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a53289d52f48c067285cb843ef7470c9a" kindref="member">angle_X</ref><sp/>&gt;<sp/>45<sp/>||<sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a53289d52f48c067285cb843ef7470c9a" kindref="member">angle_X</ref><sp/>&lt;<sp/>-45)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>kill-switch<sp/>activated<sp/>or<sp/>HV<sp/>switch<sp/>turned<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_precharge_8h_1a5c9b1f4b5a31b5d46c45310567595867" kindref="member">hv_state</ref><sp/>=<sp/><ref refid="_precharge_8h_1a5faacefaff4b0ce77f1f8be0bf2aaf29abc9f85ed087d13faf9b1c463431ee66a" kindref="member">HV_OFF</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_pre_charge_8ino_1a65867cb936f7ef47ffd07fbfd4a91355" kindref="member">isHVSafe</ref>(<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>))<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HV<sp/>error<sp/>detected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_precharge_8h_1a5c9b1f4b5a31b5d46c45310567595867" kindref="member">hv_state</ref><sp/>=<sp/><ref refid="_precharge_8h_1a5faacefaff4b0ce77f1f8be0bf2aaf29a2303713b8a2ce365abb6b0de95c38595" kindref="member">HV_ERROR</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>updates,<sp/>keep<sp/>HV<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_precharge_8h_1a5c9b1f4b5a31b5d46c45310567595867" kindref="member">hv_state</ref><sp/>=<sp/><ref refid="_precharge_8h_1a5faacefaff4b0ce77f1f8be0bf2aaf29ab5febf14562b68ff6bdaaa86ec9b5dec" kindref="member">HV_ON</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_precharge_8h_1a5faacefaff4b0ce77f1f8be0bf2aaf29a2303713b8a2ce365abb6b0de95c38595" kindref="member">HV_ERROR</ref>:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_pre_charge_8ino_1a65867cb936f7ef47ffd07fbfd4a91355" kindref="member">isHVSafe</ref>(<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>))<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>error<sp/>has<sp/>been<sp/>cleared</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_precharge_8h_1a5c9b1f4b5a31b5d46c45310567595867" kindref="member">hv_state</ref><sp/>=<sp/><ref refid="_precharge_8h_1a5faacefaff4b0ce77f1f8be0bf2aaf29abc9f85ed087d13faf9b1c463431ee66a" kindref="member">HV_OFF</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise<sp/>stay<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_precharge_8h_1a5c9b1f4b5a31b5d46c45310567595867" kindref="member">hv_state</ref><sp/>=<sp/><ref refid="_precharge_8h_1a5faacefaff4b0ce77f1f8be0bf2aaf29a2303713b8a2ce365abb6b0de95c38595" kindref="member">HV_ERROR</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_precharge_8h_1a5c9b1f4b5a31b5d46c45310567595867" kindref="member">hv_state</ref><sp/>=<sp/><ref refid="_precharge_8h_1a5faacefaff4b0ce77f1f8be0bf2aaf29abc9f85ed087d13faf9b1c463431ee66a" kindref="member">HV_OFF</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>transitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_precharge_8h_1a5c9b1f4b5a31b5d46c45310567595867" kindref="member">hv_state</ref><sp/>!=<sp/>old_state)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.printf(</highlight><highlight class="stringliteral">&quot;HV<sp/>transitioned<sp/>from<sp/>%s<sp/>to<sp/>%s<sp/>state\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="_pre_charge_8ino_1a0a3e1d4e80c1320d3308a0e0bb10ac87" kindref="member">state_name</ref>(old_state),<sp/><ref refid="_pre_charge_8ino_1a0a3e1d4e80c1320d3308a0e0bb10ac87" kindref="member">state_name</ref>(<ref refid="_precharge_8h_1a5c9b1f4b5a31b5d46c45310567595867" kindref="member">hv_state</ref>));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="_precharge_8h_1ad2376a25ab645f00587791af3c89968e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_pre_charge_8ino_1ad2376a25ab645f00587791af3c89968e" kindref="member">preChargeCircuitFSMStateActions</ref><sp/>(<ref refid="struct_pre_charge_task_data" kindref="compound">PreChargeTaskData</ref><sp/><ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="_precharge_8h_1a5c9b1f4b5a31b5d46c45310567595867" kindref="member">hv_state</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>state<sp/>actions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_precharge_8h_1a5faacefaff4b0ce77f1f8be0bf2aaf29abc9f85ed087d13faf9b1c463431ee66a" kindref="member">HV_OFF</ref>:</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_precharge_8h_1ae1099ac76283225ff2bbbbdc0819ba4e" kindref="member">CONTACTOR</ref>,<sp/>LOW);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_precharge_8h_1a093dd273c900bae9cba2b32149e30eaa" kindref="member">PRECHARGE</ref>,<sp/>LOW);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_precharge_8h_1a5faacefaff4b0ce77f1f8be0bf2aaf29a2da9fa3988c31a60d94ee2a751ba32ce" kindref="member">HV_PRECHARGING</ref>:</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_precharge_8h_1ae1099ac76283225ff2bbbbdc0819ba4e" kindref="member">CONTACTOR</ref>,<sp/>LOW);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_precharge_8h_1a093dd273c900bae9cba2b32149e30eaa" kindref="member">PRECHARGE</ref>,<sp/>HIGH);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_precharge_8h_1a5faacefaff4b0ce77f1f8be0bf2aaf29ab5febf14562b68ff6bdaaa86ec9b5dec" kindref="member">HV_ON</ref>:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_precharge_8h_1ae1099ac76283225ff2bbbbdc0819ba4e" kindref="member">CONTACTOR</ref>,<sp/>HIGH);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_precharge_8h_1a093dd273c900bae9cba2b32149e30eaa" kindref="member">PRECHARGE</ref>,<sp/>LOW);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_precharge_8h_1a5faacefaff4b0ce77f1f8be0bf2aaf29a2303713b8a2ce365abb6b0de95c38595" kindref="member">HV_ERROR</ref>:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_precharge_8h_1ae1099ac76283225ff2bbbbdc0819ba4e" kindref="member">CONTACTOR</ref>,<sp/>LOW);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_precharge_8h_1a093dd273c900bae9cba2b32149e30eaa" kindref="member">PRECHARGE</ref>,<sp/>LOW);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>state<sp/>actions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>motor<sp/>controller<sp/>is<sp/>done<sp/>precharging.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>false<sp/>otherwise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="_precharge_8h_1a42b25fa6ccd2c8d82ba24c5ed4aaa7d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_pre_charge_8ino_1a42b25fa6ccd2c8d82ba24c5ed4aaa7d1" kindref="member">isPrecharged</ref>(<ref refid="struct_pre_charge_task_data" kindref="compound">PreChargeTaskData</ref><sp/><ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Ret<sp/>false<sp/>if<sp/>we<sp/>haven&apos;t<sp/>received<sp/>all<sp/>BMS<sp/>cell<sp/>voltages<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1afdfc29c3040101593d7d298c7b432132" kindref="member">cellVoltages</ref>.<ref refid="struct_cell_voltages_1a844b5b2d0bd58e1147076ab8aacc420a" kindref="member">ready</ref>)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Ret<sp/>true<sp/>if<sp/>the<sp/>difference<sp/>between<sp/>the<sp/>main-accumulator-series-voltage<sp/>and<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>motorcontroller-voltage<sp/>is<sp/>less<sp/>than<sp/>10%<sp/>of<sp/>the<sp/>main-accumulator-series-voltage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1afdfc29c3040101593d7d298c7b432132" kindref="member">cellVoltages</ref>.<ref refid="struct_cell_voltages_1a739cccc4cfe6c366e7474ae1c71097bf" kindref="member">seriesVoltage</ref><sp/>-<sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1aae4496a1b8d72f6107bdfcf81472741b" kindref="member">motorControllerBatteryVoltage</ref>)<sp/>&lt;=<sp/>(*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1afdfc29c3040101593d7d298c7b432132" kindref="member">cellVoltages</ref>.<ref refid="struct_cell_voltages_1a739cccc4cfe6c366e7474ae1c71097bf" kindref="member">seriesVoltage</ref><sp/>*<sp/>0.1)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>main-accumulator-voltage<sp/>is<sp/>greater<sp/>than<sp/>80V<sp/>(but<sp/>this<sp/>should<sp/>be<sp/>changed<sp/>later<sp/>as<sp/>the<sp/>bike<sp/>voltage<sp/>may<sp/>be<sp/>as<sp/>low<sp/>as<sp/>~60V).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1afdfc29c3040101593d7d298c7b432132" kindref="member">cellVoltages</ref>.<ref refid="struct_cell_voltages_1a739cccc4cfe6c366e7474ae1c71097bf" kindref="member">seriesVoltage</ref><sp/>&gt;<sp/>80);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>function<sp/>returns<sp/>true<sp/>if<sp/>there<sp/>are<sp/>no<sp/>HV<sp/>errors<sp/>detected<sp/>on<sp/>the<sp/>bike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="_precharge_8h_1a65867cb936f7ef47ffd07fbfd4a91355" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_pre_charge_8ino_1a65867cb936f7ef47ffd07fbfd4a91355" kindref="member">isHVSafe</ref>(<ref refid="struct_pre_charge_task_data" kindref="compound">PreChargeTaskData</ref><sp/><ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//BMSStatus<sp/>bmsStatus<sp/>=<sp/>preChargeData.bmsStatus;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><ref refid="struct_motor_temps" kindref="compound">MotorTemps</ref><sp/><ref refid="_main_8h_1abb61c6dc61d12b31aad7bdadd495b70a" kindref="member">motorTemps</ref><sp/>=<sp/><ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a3e8e3c4386b66dbf1011082b1f8ce7aa" kindref="member">motorTemps</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>!!!!<sp/>these<sp/>are<sp/>commented<sp/>out<sp/>now<sp/>but<sp/>all<sp/>of<sp/>this<sp/>should<sp/>be<sp/>checked<sp/>when<sp/>using<sp/>the<sp/>real<sp/>bike<sp/>!!!!</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/>though<sp/>you<sp/>will<sp/>have<sp/>to<sp/>determine<sp/>which<sp/>of<sp/>these<sp/>are<sp/>emergency<sp/>HV<sp/>states.<sp/>i.e.<sp/>Which<sp/>ones<sp/>should<sp/>turn<sp/>off<sp/>the<sp/>contactor<sp/>instantly</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/><sp/>and<sp/>which<sp/>ones<sp/>should<sp/>you<sp/>simply<sp/>alert<sp/>the<sp/>rider?</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/>As<sp/>of<sp/>now,<sp/>they<sp/>all<sp/>immediately<sp/>turn<sp/>off<sp/>the<sp/>contactor<sp/>which<sp/>may<sp/>be<sp/>dangerous<sp/>for<sp/>the<sp/>rider</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>(*bmsStatus.ltc_fault<sp/>==<sp/>1)<sp/>return<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>(*bmsStatus.ltc_count<sp/>!=<sp/>NUMBER_OF_LTCS)<sp/>return<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>below<sp/>if<sp/>can<sp/>be<sp/>reduced<sp/>to<sp/>if<sp/>(*bmsStatus.bms_c_fault)<sp/>which<sp/>returns<sp/>true<sp/>for<sp/>any<sp/>non-zero<sp/>bms_c_fault<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>(*bmsStatus.bms_c_fault<sp/>==<sp/>1<sp/>||<sp/>*bmsStatus.bms_c_fault<sp/>==<sp/>2<sp/>||<sp/>*bmsStatus.bms_c_fault<sp/>==<sp/>4<sp/>||<sp/><sp/><sp/><sp/>//checks<sp/>BMS<sp/>fault<sp/>error<sp/>codes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>*bmsStatus.bms_c_fault<sp/>==<sp/>8)<sp/>return<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>(*bmsStatus.bms_status_flag<sp/>==<sp/>1<sp/>||<sp/>*bmsStatus.bms_status_flag<sp/>==<sp/>2)<sp/>return<sp/>0;<sp/><sp/>//check<sp/>if<sp/>cells<sp/>are<sp/>above<sp/>or<sp/>below<sp/>the<sp/>voltage<sp/>cutoffs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="_main_8h_1abb61c6dc61d12b31aad7bdadd495b70a" kindref="member">motorTemps</ref>.<ref refid="struct_motor_temps_1a1c8b1bb77f968573fe2d1af0a0815d35" kindref="member">motorControllerTemperature</ref><sp/>&gt;=<sp/><ref refid="_precharge_8h_1a1f9513787cfe256aae379719ab26ca39" kindref="member">MOTORCONTROLLER_TEMP_MAX</ref></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>*<ref refid="_main_8h_1abb61c6dc61d12b31aad7bdadd495b70a" kindref="member">motorTemps</ref>.<ref refid="struct_motor_temps_1ad9864aa48ce76c5965919c459cc6e9b7" kindref="member">motorTemperature</ref><sp/>&gt;=<sp/><ref refid="_precharge_8h_1aa39f17be3d8f2f799f7fbd0dc01963db" kindref="member">MOTOR_TEMP_MAX</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="_precharge_8h_1a6798f4bd0a5b6353886f894b38b32473" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_pre_charge_8ino_1a6798f4bd0a5b6353886f894b38b32473" kindref="member">check_HV_TOGGLE</ref>()<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!digitalRead(<ref refid="_precharge_8h_1a4e1dc017df18faad4234012c3e88d2f6" kindref="member">HIGH_VOLTAGE_TOGGLE</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="_precharge_8h_1a0a3e1d4e80c1320d3308a0e0bb10ac87" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="_pre_charge_8ino_1a0a3e1d4e80c1320d3308a0e0bb10ac87" kindref="member">state_name</ref>(<ref refid="_precharge_8h_1a5faacefaff4b0ce77f1f8be0bf2aaf29" kindref="member">HV_STATE</ref><sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(state)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_precharge_8h_1a5faacefaff4b0ce77f1f8be0bf2aaf29abc9f85ed087d13faf9b1c463431ee66a" kindref="member">HV_OFF</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;HV_OFF&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_precharge_8h_1a5faacefaff4b0ce77f1f8be0bf2aaf29a2da9fa3988c31a60d94ee2a751ba32ce" kindref="member">HV_PRECHARGING</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;HV_PRECHARGING&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_precharge_8h_1a5faacefaff4b0ce77f1f8be0bf2aaf29ab5febf14562b68ff6bdaaa86ec9b5dec" kindref="member">HV_ON</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;HV_ON&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_precharge_8h_1a5faacefaff4b0ce77f1f8be0bf2aaf29a2303713b8a2ce365abb6b0de95c38595" kindref="member">HV_ERROR</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;HV_ERROR&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="_precharge_8h_1a5782bd590f95fb2269eb43a3d70c18f4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_pre_charge_8ino_1a5782bd590f95fb2269eb43a3d70c18f4" kindref="member">setupI2C</ref>(<ref refid="struct_pre_charge_task_data" kindref="compound">PreChargeTaskData</ref><sp/><ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>Wire.setClock(400000);<sp/></highlight><highlight class="comment">//<sp/>MPU6050<sp/>supports<sp/>up<sp/>to<sp/>400k<sp/>Hz<sp/>in<sp/>specifications</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>Wire.begin();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>delay(50);<sp/></highlight><highlight class="comment">//<sp/>give<sp/>delay<sp/>for<sp/>device<sp/>to<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>gyro<sp/>in<sp/>power<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>Wire.beginTransmission(0x68);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>Wire.write(0x6B);<sp/></highlight><highlight class="comment">//<sp/>6B<sp/>is<sp/>relevant<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>Wire.write(0x00);<sp/></highlight><highlight class="comment">//<sp/>all<sp/>bits<sp/>must<sp/>be<sp/>0<sp/>to<sp/>start<sp/>and<sp/>continue<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>Wire.endTransmission();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>gyroscope<sp/>calibration<sp/>measurements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>2000<sp/>milliseconds<sp/>=<sp/>2<sp/>seconds<sp/>to<sp/>add<sp/>all<sp/>measured<sp/>variables<sp/>to<sp/>calibration<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>important<sp/>because<sp/>this<sp/>solves<sp/>the<sp/>issue<sp/>of<sp/>a<sp/>non-zero<sp/>rotation<sp/>rate<sp/>when<sp/>stationary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1ab12a4f264d6acfdf84ce67728ecb42b2" kindref="member">RateCalibrationNumber</ref><sp/>=<sp/>0;<sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1ab12a4f264d6acfdf84ce67728ecb42b2" kindref="member">RateCalibrationNumber</ref><sp/>&lt;<sp/>2000;<sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1ab12a4f264d6acfdf84ce67728ecb42b2" kindref="member">RateCalibrationNumber</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_pre_charge_8ino_1ad8511ef84de5112bd6beb8e3ac5fff67" kindref="member">gyro_signals</ref>(<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a4d7799e4a73f6488e3296c35f66c2e30" kindref="member">RateCalibrationRoll</ref><sp/>+=<sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a33b675970bf11d7e27edf3b542431997" kindref="member">RateRoll</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a80f6f899a8c9d6b3e7850f52350a414d" kindref="member">RateCalibrationPitch</ref><sp/>+=<sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1afc133d30f22f7a7f72ee498b3d69be82" kindref="member">RatePitch</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1aa0d6bb3b938787ae1de06d67d1e3deaf" kindref="member">RateCalibrationYaw</ref><sp/>+=<sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1aaf5cdfb5b1dd1857d4082f3a014ffb51" kindref="member">RateYaw</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(1);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>average<sp/>of<sp/>calibrated<sp/>rotation<sp/>rate<sp/>values<sp/>from<sp/>each<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a4d7799e4a73f6488e3296c35f66c2e30" kindref="member">RateCalibrationRoll</ref><sp/>/=<sp/>2000;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a80f6f899a8c9d6b3e7850f52350a414d" kindref="member">RateCalibrationPitch</ref><sp/>/=<sp/>2000;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1aa0d6bb3b938787ae1de06d67d1e3deaf" kindref="member">RateCalibrationYaw</ref><sp/>/=<sp/>2000;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*preChargeData.LoopTimer<sp/>=<sp/>micros();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="_precharge_8h_1ad8511ef84de5112bd6beb8e3ac5fff67" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_pre_charge_8ino_1ad8511ef84de5112bd6beb8e3ac5fff67" kindref="member">gyro_signals</ref>(<ref refid="struct_pre_charge_task_data" kindref="compound">PreChargeTaskData</ref><sp/><ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>I2C<sp/>communication<sp/>with<sp/>MPU6050</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>Wire.beginTransmission(0x68);<sp/></highlight><highlight class="comment">//<sp/>0x68<sp/>is<sp/>default<sp/>register<sp/>value<sp/>for<sp/>MPU6050</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Switch<sp/>on<sp/>low<sp/>pass<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>Wire.write(0x1A);<sp/></highlight><highlight class="comment">//<sp/>activate<sp/>low<sp/>pass<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>Wire.write(0x05);<sp/></highlight><highlight class="comment">//<sp/>cut<sp/>off<sp/>frequency<sp/>of<sp/>10<sp/>Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>Wire.endTransmission();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>accelerometer<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>Wire.beginTransmission(0x68);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>Wire.write(0x1C);<sp/></highlight><highlight class="comment">//<sp/>1C<sp/>is<sp/>relevant<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>Wire.write(0x10);<sp/></highlight><highlight class="comment">//<sp/>full<sp/>scale<sp/>range<sp/>of<sp/>+/-8g</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>Wire.endTransmission();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Access<sp/>registers<sp/>storing<sp/>accelerometer<sp/>measurements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>Wire.beginTransmission(0x68);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>Wire.write(0x3B);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>Wire.endTransmission();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>Wire.requestFrom(0x68,<sp/>6);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>accelerometer<sp/>measurements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>int16_t<sp/>AccXLSB<sp/>=<sp/>Wire.read()<sp/>&lt;&lt;<sp/>8<sp/>|<sp/>Wire.read();<sp/></highlight><highlight class="comment">//<sp/>x-direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>int16_t<sp/>AccYLSB<sp/>=<sp/>Wire.read()<sp/>&lt;&lt;<sp/>8<sp/>|<sp/>Wire.read();<sp/></highlight><highlight class="comment">//<sp/>y-direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>int16_t<sp/>AccZLSB<sp/>=<sp/>Wire.read()<sp/>&lt;&lt;<sp/>8<sp/>|<sp/>Wire.read();<sp/></highlight><highlight class="comment">//<sp/>z-direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>gyroscope<sp/>output<sp/>and<sp/>pull<sp/>rotation<sp/>rate<sp/>measurements<sp/>from<sp/>sensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>sensitivity<sp/>scale<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>Wire.beginTransmission(0x68);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>Wire.write(0x1B);<sp/></highlight><highlight class="comment">//<sp/>1B<sp/>is<sp/>hexadecimal<sp/>associated<sp/>with<sp/>gyroscope<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>Wire.write(0x8);<sp/></highlight><highlight class="comment">//<sp/>8<sp/>is<sp/>hexadecimal<sp/>for<sp/>LSB<sp/>sensitivity<sp/>of<sp/>65.6<sp/>LSB/degree/second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>Wire.endTransmission();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Access<sp/>registers<sp/>storing<sp/>gyro<sp/>measurements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>Wire.beginTransmission(0x68);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>Wire.write(0x43);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>Wire.endTransmission();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>Wire.requestFrom(0x68,<sp/>6);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>gyro<sp/>measurements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>int16_t<sp/>GyroX<sp/>=<sp/>Wire.read()<sp/>&lt;&lt;<sp/>8<sp/>|<sp/>Wire.read();<sp/></highlight><highlight class="comment">//<sp/>around<sp/>x-axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>int16_t<sp/>GyroY<sp/>=<sp/>Wire.read()<sp/>&lt;&lt;<sp/>8<sp/>|<sp/>Wire.read();<sp/></highlight><highlight class="comment">//<sp/>around<sp/>y-axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>int16_t<sp/>GyroZ<sp/>=<sp/>Wire.read()<sp/>&lt;&lt;<sp/>8<sp/>|<sp/>Wire.read();<sp/></highlight><highlight class="comment">//<sp/>around<sp/>z-axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>measurement<sp/>units<sp/>to<sp/>degree/second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a33b675970bf11d7e27edf3b542431997" kindref="member">RateRoll</ref><sp/>=<sp/>(float)GyroX<sp/>/<sp/>65.5;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1afc133d30f22f7a7f72ee498b3d69be82" kindref="member">RatePitch</ref><sp/>=<sp/>(float)GyroY<sp/>/<sp/>65.5;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1aaf5cdfb5b1dd1857d4082f3a014ffb51" kindref="member">RateYaw</ref><sp/>=<sp/>(float)GyroZ<sp/>/<sp/>65.5;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>measurements<sp/>to<sp/>from<sp/>LSB<sp/>to<sp/>g</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Divide<sp/>4096<sp/>because<sp/>full<sp/>range<sp/>+/-8g<sp/>is<sp/>associated<sp/>with<sp/>4096<sp/>LSB/g</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a3c051d79159770c924eda82743ba8d81" kindref="member">AccX</ref><sp/>=<sp/>(float)AccXLSB<sp/>/<sp/>4096;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a80f0e6e50839ffb0fc6d04cd3d871a3f" kindref="member">AccY</ref><sp/>=<sp/>(float)AccYLSB<sp/>/<sp/>4096;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a3bb9585d2c3e9ee02ed1f98f706426b3" kindref="member">AccZ</ref><sp/>=<sp/>(float)AccZLSB<sp/>/<sp/>4096;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>AccX<sp/>=<sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a3c051d79159770c924eda82743ba8d81" kindref="member">AccX</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>AccY<sp/>=<sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a80f0e6e50839ffb0fc6d04cd3d871a3f" kindref="member">AccY</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>AccZ<sp/>=<sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a3bb9585d2c3e9ee02ed1f98f706426b3" kindref="member">AccZ</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>absolute<sp/>angles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>IMPORTANT<sp/>LINE<sp/>OF<sp/>CODE:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-<sp/>WE<sp/>CAN<sp/>ADD<sp/>OR<sp/>SUBTRACT<sp/>FROM<sp/>THE<sp/>ANGLE<sp/>DEPENDING<sp/>ON<sp/>THE<sp/>PLACEMENT<sp/>OF<sp/>GYROSCOPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-<sp/>EX:<sp/>If<sp/>MPU6050<sp/>is<sp/>laid<sp/>on<sp/>port<sp/>side,<sp/>add<sp/>90<sp/>to<sp/>AnglePitch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a99d4f80bc2e399c388039183debf146a" kindref="member">AngleRoll</ref><sp/>=<sp/>(atan(AccY<sp/>/<sp/>sqrt(AccX<sp/>*<sp/>AccX<sp/>+<sp/>AccZ<sp/>*<sp/>AccZ))<sp/>*<sp/>1<sp/>/<sp/>(3.142<sp/>/<sp/>180))<sp/>+<sp/>5;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a4bb0f04e326928d80e286b279ca81003" kindref="member">AnglePitch</ref><sp/>=<sp/>(-atan(AccX<sp/>/<sp/>sqrt(AccY<sp/>*<sp/>AccY<sp/>+<sp/>AccZ<sp/>*<sp/>AccZ))<sp/>*<sp/>1<sp/>/<sp/>(3.142<sp/>/<sp/>180));</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="_precharge_8h_1a87184d718be6821c71e697fc1fd98d3b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_pre_charge_8ino_1a87184d718be6821c71e697fc1fd98d3b" kindref="member">updateGyroData</ref>(<ref refid="struct_pre_charge_task_data" kindref="compound">PreChargeTaskData</ref><sp/><ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><ref refid="_pre_charge_8ino_1ad8511ef84de5112bd6beb8e3ac5fff67" kindref="member">gyro_signals</ref>(<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a33b675970bf11d7e27edf3b542431997" kindref="member">RateRoll</ref><sp/>-=<sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a4d7799e4a73f6488e3296c35f66c2e30" kindref="member">RateCalibrationRoll</ref>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1afc133d30f22f7a7f72ee498b3d69be82" kindref="member">RatePitch</ref><sp/>-=<sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a80f6f899a8c9d6b3e7850f52350a414d" kindref="member">RateCalibrationPitch</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1aaf5cdfb5b1dd1857d4082f3a014ffb51" kindref="member">RateYaw</ref><sp/>-=<sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1aa0d6bb3b938787ae1de06d67d1e3deaf" kindref="member">RateCalibrationYaw</ref>;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>Roll<sp/>angle<sp/>(around<sp/>x<sp/>axis)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><ref refid="_pre_charge_8ino_1ade8f654468b951602d2622b34902944f" kindref="member">kalman_1d</ref>(*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a53289d52f48c067285cb843ef7470c9a" kindref="member">angle_X</ref>,<sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a56b12f35d375a77d39a5067b35701ec6" kindref="member">KalmanUncertaintyAngleRoll</ref>,<sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a33b675970bf11d7e27edf3b542431997" kindref="member">RateRoll</ref>,<sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a99d4f80bc2e399c388039183debf146a" kindref="member">AngleRoll</ref>,<sp/><ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>Kalman<sp/>output<sp/>to<sp/>angle<sp/>roll<sp/>and<sp/>uncertaintity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a53289d52f48c067285cb843ef7470c9a" kindref="member">angle_X</ref><sp/>=<sp/><ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a4ca4aeeb66f8fa86b2b33287d78f8174" kindref="member">Kalman1DOutput</ref>[0];</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a56b12f35d375a77d39a5067b35701ec6" kindref="member">KalmanUncertaintyAngleRoll</ref><sp/>=<sp/><ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a4ca4aeeb66f8fa86b2b33287d78f8174" kindref="member">Kalman1DOutput</ref>[1];</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>Pitch<sp/>angle<sp/>(around<sp/>y-axis)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><ref refid="_pre_charge_8ino_1ade8f654468b951602d2622b34902944f" kindref="member">kalman_1d</ref>(*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a7a48fc6887285d4cb55bff65fca23f36" kindref="member">angle_Y</ref>,<sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a87db2a0a7add2863f02e490544f937b2" kindref="member">KalmanUncertaintyAnglePitch</ref>,<sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1afc133d30f22f7a7f72ee498b3d69be82" kindref="member">RatePitch</ref>,<sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a4bb0f04e326928d80e286b279ca81003" kindref="member">AnglePitch</ref>,<sp/><ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>Kalman<sp/>output<sp/>to<sp/>angle<sp/>pitch<sp/>and<sp/>uncertaintity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a7a48fc6887285d4cb55bff65fca23f36" kindref="member">angle_Y</ref><sp/>=<sp/><ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a4ca4aeeb66f8fa86b2b33287d78f8174" kindref="member">Kalman1DOutput</ref>[0];</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>*<ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a87db2a0a7add2863f02e490544f937b2" kindref="member">KalmanUncertaintyAnglePitch</ref><sp/>=<sp/><ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a4ca4aeeb66f8fa86b2b33287d78f8174" kindref="member">Kalman1DOutput</ref>[1];</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="_precharge_8h_1ade8f654468b951602d2622b34902944f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_pre_charge_8ino_1ade8f654468b951602d2622b34902944f" kindref="member">kalman_1d</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>KalmanState,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>KalmanUncertainty,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>KalmanInput,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>KalmanMeasurement,<sp/><ref refid="struct_pre_charge_task_data" kindref="compound">PreChargeTaskData</ref><sp/><ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>KalmanState<sp/>=<sp/>KalmanState<sp/>+<sp/>0.004<sp/>*<sp/>KalmanInput;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>KalmanUncertainty<sp/>=<sp/>KalmanUncertainty<sp/>+<sp/>0.004<sp/>*<sp/>0.004<sp/>*<sp/>4<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>KalmanGain<sp/>=<sp/>KalmanUncertainty<sp/>*<sp/>1<sp/>/<sp/>(1<sp/>*<sp/>KalmanUncertainty<sp/>+<sp/>3<sp/>*<sp/>3);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>KalmanState<sp/>=<sp/>KalmanState<sp/>+<sp/>KalmanGain<sp/>*<sp/>(KalmanMeasurement<sp/>-<sp/>KalmanState);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>KalmanUncertainty<sp/>=<sp/>(1<sp/>-<sp/>KalmanGain)<sp/>*<sp/>KalmanUncertainty;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Output<sp/>of<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a4ca4aeeb66f8fa86b2b33287d78f8174" kindref="member">Kalman1DOutput</ref>[0]<sp/>=<sp/>KalmanState;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><ref refid="_main_8h_1a695dccac97a0f45cf570237e981b2b5d" kindref="member">preChargeData</ref>.<ref refid="struct_pre_charge_task_data_1a4ca4aeeb66f8fa86b2b33287d78f8174" kindref="member">Kalman1DOutput</ref>[1]<sp/>=<sp/>KalmanUncertainty;</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="PreCharge.ino"/>
  </compounddef>
</doxygen>
