<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="portable_8h" kind="file" language="C++">
    <compoundname>portable.h</compoundname>
    <includes refid="deprecated__definitions_8h" local="yes">deprecated_definitions.h</includes>
    <includes refid="portmacro_8h" local="yes">portmacro.h</includes>
    <includes refid="mpu__wrappers_8h" local="yes">mpu_wrappers.h</includes>
    <includedby refid="_free_r_t_o_s_8h" local="yes">C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/FreeRTOS.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>deprecated_definitions.h</label>
        <link refid="deprecated__definitions_8h"/>
      </node>
      <node id="4">
        <label>mpu_wrappers.h</label>
        <link refid="mpu__wrappers_8h"/>
      </node>
      <node id="1">
        <label>C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h</label>
        <link refid="portable_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>portmacro.h</label>
        <link refid="portmacro_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/FreeRTOS.h</label>
        <link refid="_free_r_t_o_s_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/croutine.c</label>
        <link refid="croutine_8c"/>
      </node>
      <node id="4">
        <label>C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/event_groups.c</label>
        <link refid="event__groups_8c"/>
      </node>
      <node id="5">
        <label>C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/heap_3.c</label>
        <link refid="heap__3_8c"/>
      </node>
      <node id="6">
        <label>C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/list.c</label>
        <link refid="list_8c"/>
      </node>
      <node id="7">
        <label>C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/port.c</label>
        <link refid="port_8c"/>
      </node>
      <node id="1">
        <label>C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h</label>
        <link refid="portable_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/queue.c</label>
        <link refid="queue_8c"/>
      </node>
      <node id="9">
        <label>C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/stream_buffer.c</label>
        <link refid="stream__buffer_8c"/>
      </node>
      <node id="10">
        <label>C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/tasks.c</label>
        <link refid="tasks_8c"/>
      </node>
      <node id="11">
        <label>C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/threading_alt.h</label>
        <link refid="threading__alt_8h"/>
      </node>
      <node id="12">
        <label>C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/timers.c</label>
        <link refid="timers_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_heap_region" prot="public">HeapRegion</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="portable_8h_1a92f6cfc08bf7459db3227a18ae8b6b59" prot="public" static="no">
        <name>portBYTE_ALIGNMENT_MASK</name>
        <initializer>( 0x0003 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" line="68" column="10" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portable_8h_1aca7e1a8a568a38b74cc9db10c8efebda" prot="public" static="no">
        <name>portNUM_CONFIGURABLE_REGIONS</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" line="84" column="10" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portable_8h_1a19b8150e9a84001333b8728be1882da0" prot="public" static="no">
        <name>portHAS_STACK_OVERFLOW_CHECKING</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" line="88" column="10" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portable_8h_1a2d5be0d247f2bf84b3d699be1378e8c4" prot="public" static="no">
        <name>portARCH_NAME</name>
        <initializer>NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" line="92" column="10" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="portable_8h_1acce46e1bf21496c11f2b1e49ded2882b" prot="public" static="no">
        <type>struct <ref refid="struct_heap_region" kindref="compound">HeapRegion</ref></type>
        <definition>typedef struct HeapRegion HeapRegion_t</definition>
        <argsstring></argsstring>
        <name>HeapRegion_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" line="126" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="portable_8h_1aec89de59377079f7dc6a71dfbefd9a6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref> *</type>
        <definition>StackType_t * pxPortInitialiseStack</definition>
        <argsstring>(StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParameters)</argsstring>
        <name>pxPortInitialiseStack</name>
        <param>
          <type><ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref> *</type>
          <declname>pxTopOfStack</declname>
        </param>
        <param>
          <type><ref refid="projdefs_8h_1a9b32502ff92c255c686dacde53c1cba0" kindref="member">TaskFunction_t</ref></type>
          <declname>pxCode</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pvParameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" line="117" column="13" declfile="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" declline="117" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="portable_8h_1ab13f7c55a8661da7bba3ef95f1282aee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vPortDefineHeapRegions</definition>
        <argsstring>(const HeapRegion_t *const pxHeapRegions)</argsstring>
        <name>vPortDefineHeapRegions</name>
        <param>
          <type>const <ref refid="portable_8h_1acce46e1bf21496c11f2b1e49ded2882b" kindref="member">HeapRegion_t</ref> *const</type>
          <declname>pxHeapRegions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" line="139" column="6" declfile="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" declline="139" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="portable_8h_1ac59aab2e8ca1f2585bc5a650a14b02b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * pvPortMalloc</definition>
        <argsstring>(size_t xSize)</argsstring>
        <name>pvPortMalloc</name>
        <param>
          <type>size_t</type>
          <declname>xSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" line="145" column="6" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/heap_3.c" bodystart="100" bodyend="122" declfile="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" declline="145" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="portable_8h_1a1e7cea2fd1bc894ea3b5f5e8179d259b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vPortFree</definition>
        <argsstring>(void *pv)</argsstring>
        <name>vPortFree</name>
        <param>
          <type>void *</type>
          <declname>pv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" line="146" column="6" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/heap_3.c" bodystart="125" bodyend="136" declfile="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" declline="146" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="portable_8h_1a8bf103ce32ce8473574e9920af8b4eec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vPortInitialiseBlocks</definition>
        <argsstring>(void)</argsstring>
        <name>vPortInitialiseBlocks</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" line="147" column="6" declfile="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" declline="147" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="portable_8h_1a0c28a12b313bc248be0cb7a37ed81bb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t xPortGetFreeHeapSize</definition>
        <argsstring>(void)</argsstring>
        <name>xPortGetFreeHeapSize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" line="148" column="8" declfile="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" declline="148" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="portable_8h_1ab222e4545b8ff12b62fd000fea6b34eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t xPortGetMinimumEverFreeHeapSize</definition>
        <argsstring>(void)</argsstring>
        <name>xPortGetMinimumEverFreeHeapSize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" line="149" column="8" declfile="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" declline="149" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="portable_8h_1ade5a8c6666e7413a0355cc252029c5c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref></type>
        <definition>BaseType_t xPortStartScheduler</definition>
        <argsstring>(void)</argsstring>
        <name>xPortStartScheduler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" line="155" column="12" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/port.c" bodystart="350" bodyend="473" declfile="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" declline="155" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="portable_8h_1af76f3c0b44c5b5c06fc046a4ee1a6423" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vPortEndScheduler</definition>
        <argsstring>(void)</argsstring>
        <name>vPortEndScheduler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" line="162" column="6" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/port.c" bodystart="491" bodyend="502" declfile="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h" declline="162" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>FreeRTOS<sp/>Kernel<sp/>V10.2.0</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2019<sp/>Amazon.com,<sp/>Inc.<sp/>or<sp/>its<sp/>affiliates.<sp/><sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy<sp/>of</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>http://www.FreeRTOS.org</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>http://aws.amazon.com/freertos</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>1<sp/>tab<sp/>==<sp/>4<sp/>spaces!</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>Portable<sp/>layer<sp/>API.<sp/><sp/>Each<sp/>function<sp/>must<sp/>be<sp/>defined<sp/>for<sp/>each<sp/>port.</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PORTABLE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PORTABLE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Each<sp/>FreeRTOS<sp/>port<sp/>has<sp/>a<sp/>unique<sp/>portmacro.h<sp/>header<sp/>file.<sp/><sp/>Originally<sp/>a</highlight></codeline>
<codeline lineno="36"><highlight class="comment">pre-processor<sp/>definition<sp/>was<sp/>used<sp/>to<sp/>ensure<sp/>the<sp/>pre-processor<sp/>found<sp/>the<sp/>correct</highlight></codeline>
<codeline lineno="37"><highlight class="comment">portmacro.h<sp/>file<sp/>for<sp/>the<sp/>port<sp/>being<sp/>used.<sp/><sp/>That<sp/>scheme<sp/>was<sp/>deprecated<sp/>in<sp/>favour</highlight></codeline>
<codeline lineno="38"><highlight class="comment">of<sp/>setting<sp/>the<sp/>compiler&apos;s<sp/>include<sp/>path<sp/>such<sp/>that<sp/>it<sp/>found<sp/>the<sp/>correct</highlight></codeline>
<codeline lineno="39"><highlight class="comment">portmacro.h<sp/>file<sp/>-<sp/>removing<sp/>the<sp/>need<sp/>for<sp/>the<sp/>constant<sp/>and<sp/>allowing<sp/>the</highlight></codeline>
<codeline lineno="40"><highlight class="comment">portmacro.h<sp/>file<sp/>to<sp/>be<sp/>located<sp/>anywhere<sp/>in<sp/>relation<sp/>to<sp/>the<sp/>port<sp/>being<sp/>used.</highlight></codeline>
<codeline lineno="41"><highlight class="comment">Purely<sp/>for<sp/>reasons<sp/>of<sp/>backward<sp/>compatibility<sp/>the<sp/>old<sp/>method<sp/>is<sp/>still<sp/>valid,<sp/>but</highlight></codeline>
<codeline lineno="42"><highlight class="comment">to<sp/>make<sp/>it<sp/>clear<sp/>that<sp/>new<sp/>projects<sp/>should<sp/>not<sp/>use<sp/>it,<sp/>support<sp/>for<sp/>the<sp/>port</highlight></codeline>
<codeline lineno="43"><highlight class="comment">specific<sp/>constants<sp/>has<sp/>been<sp/>moved<sp/>into<sp/>the<sp/>deprecated_definitions.h<sp/>header</highlight></codeline>
<codeline lineno="44"><highlight class="comment">file.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="deprecated__definitions_8h" kindref="compound">deprecated_definitions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>portENTER_CRITICAL<sp/>is<sp/>not<sp/>defined<sp/>then<sp/>including<sp/>deprecated_definitions.h</highlight></codeline>
<codeline lineno="48"><highlight class="comment">did<sp/>not<sp/>result<sp/>in<sp/>a<sp/>portmacro.h<sp/>header<sp/>file<sp/>being<sp/>included<sp/>-<sp/>and<sp/>it<sp/>should<sp/>be</highlight></codeline>
<codeline lineno="49"><highlight class="comment">included<sp/>here.<sp/><sp/>In<sp/>this<sp/>case<sp/>the<sp/>path<sp/>to<sp/>the<sp/>correct<sp/>portmacro.h<sp/>header<sp/>file</highlight></codeline>
<codeline lineno="50"><highlight class="comment">must<sp/>be<sp/>set<sp/>in<sp/>the<sp/>compiler&apos;s<sp/>include<sp/>path.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>portENTER_CRITICAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&quot;<ref refid="portmacro_8h" kindref="compound">portmacro.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>portBYTE_ALIGNMENT<sp/>==<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>portBYTE_ALIGNMENT_MASK<sp/>(<sp/>0x001f<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>portBYTE_ALIGNMENT<sp/>==<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>portBYTE_ALIGNMENT_MASK<sp/>(<sp/>0x000f<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>portBYTE_ALIGNMENT<sp/>==<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>portBYTE_ALIGNMENT_MASK<sp/>(<sp/>0x0007<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>portBYTE_ALIGNMENT<sp/>==<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="portable_8h_1a92f6cfc08bf7459db3227a18ae8b6b59" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>portBYTE_ALIGNMENT_MASK<sp/>(<sp/>0x0003<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>portBYTE_ALIGNMENT<sp/>==<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>portBYTE_ALIGNMENT_MASK<sp/>(<sp/>0x0001<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>portBYTE_ALIGNMENT<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>portBYTE_ALIGNMENT_MASK<sp/>(<sp/>0x0000<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>portBYTE_ALIGNMENT_MASK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/>&quot;Invalid<sp/>portBYTE_ALIGNMENT<sp/>definition&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>portNUM_CONFIGURABLE_REGIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="portable_8h_1aca7e1a8a568a38b74cc9db10c8efebda" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>portNUM_CONFIGURABLE_REGIONS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>portHAS_STACK_OVERFLOW_CHECKING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="portable_8h_1a19b8150e9a84001333b8728be1882da0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>portHAS_STACK_OVERFLOW_CHECKING<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>portARCH_NAME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="portable_8h_1a2d5be0d247f2bf84b3d699be1378e8c4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>portARCH_NAME<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mpu__wrappers_8h" kindref="compound">mpu_wrappers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>Setup<sp/>the<sp/>stack<sp/>of<sp/>a<sp/>new<sp/>task<sp/>so<sp/>it<sp/>is<sp/>ready<sp/>to<sp/>be<sp/>placed<sp/>under<sp/>the</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/>scheduler<sp/>control.<sp/><sp/>The<sp/>registers<sp/>have<sp/>to<sp/>be<sp/>placed<sp/>on<sp/>the<sp/>stack<sp/>in</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>the<sp/>order<sp/>that<sp/>the<sp/>port<sp/>expects<sp/>to<sp/>find<sp/>them.</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#if(<sp/>portUSING_MPU_WRAPPERS<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if(<sp/>portHAS_STACK_OVERFLOW_CHECKING<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref><sp/>*<ref refid="portable_8h_1aec89de59377079f7dc6a71dfbefd9a6f" kindref="member">pxPortInitialiseStack</ref>(<sp/><ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref><sp/>*pxTopOfStack,<sp/><ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref><sp/>*pxEndOfStack,<sp/><ref refid="projdefs_8h_1a9b32502ff92c255c686dacde53c1cba0" kindref="member">TaskFunction_t</ref><sp/>pxCode,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvParameters,<sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>xRunPrivileged<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref><sp/>*<ref refid="portable_8h_1aec89de59377079f7dc6a71dfbefd9a6f" kindref="member">pxPortInitialiseStack</ref>(<sp/><ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref><sp/>*pxTopOfStack,<sp/><ref refid="projdefs_8h_1a9b32502ff92c255c686dacde53c1cba0" kindref="member">TaskFunction_t</ref><sp/>pxCode,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvParameters,<sp/><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/>xRunPrivileged<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if(<sp/>portHAS_STACK_OVERFLOW_CHECKING<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref><sp/>*<ref refid="portable_8h_1aec89de59377079f7dc6a71dfbefd9a6f" kindref="member">pxPortInitialiseStack</ref>(<sp/><ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref><sp/>*pxTopOfStack,<sp/><ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref><sp/>*pxEndOfStack,<sp/><ref refid="projdefs_8h_1a9b32502ff92c255c686dacde53c1cba0" kindref="member">TaskFunction_t</ref><sp/>pxCode,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvParameters<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="portable_8h_1aec89de59377079f7dc6a71dfbefd9a6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref><sp/>*<ref refid="portable_8h_1aec89de59377079f7dc6a71dfbefd9a6f" kindref="member">pxPortInitialiseStack</ref>(<sp/><ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref><sp/>*pxTopOfStack,<sp/><ref refid="projdefs_8h_1a9b32502ff92c255c686dacde53c1cba0" kindref="member">TaskFunction_t</ref><sp/>pxCode,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pvParameters<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Used<sp/>by<sp/>heap_5.c.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="struct_heap_region" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_heap_region" kindref="compound">HeapRegion</ref></highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124" refid="struct_heap_region_1aab323508c34642ebfb884a68441d97fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*<ref refid="struct_heap_region_1aab323508c34642ebfb884a68441d97fc" kindref="member">pucStartAddress</ref>;</highlight></codeline>
<codeline lineno="125" refid="struct_heap_region_1a5933b0fd422e70a92ceef839b89a757f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="struct_heap_region_1a5933b0fd422e70a92ceef839b89a757f" kindref="member">xSizeInBytes</ref>;</highlight></codeline>
<codeline lineno="126" refid="portable_8h_1acce46e1bf21496c11f2b1e49ded2882b" refkind="member"><highlight class="normal">}<sp/><ref refid="portable_8h_1acce46e1bf21496c11f2b1e49ded2882b" kindref="member">HeapRegion_t</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*<sp/>Used<sp/>to<sp/>define<sp/>multiple<sp/>heap<sp/>regions<sp/>for<sp/>use<sp/>by<sp/>heap_5.c.<sp/><sp/>This<sp/>function</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/>must<sp/>be<sp/>called<sp/>before<sp/>any<sp/>calls<sp/>to<sp/>pvPortMalloc()<sp/>-<sp/>not<sp/>creating<sp/>a<sp/>task,</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/>queue,<sp/>semaphore,<sp/>mutex,<sp/>software<sp/>timer,<sp/>event<sp/>group,<sp/>etc.<sp/>will<sp/>result<sp/>in</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/>pvPortMalloc<sp/>being<sp/>called.</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/>pxHeapRegions<sp/>passes<sp/>in<sp/>an<sp/>array<sp/>of<sp/>HeapRegion_t<sp/>structures<sp/>-<sp/>each<sp/>of<sp/>which</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*<sp/>defines<sp/>a<sp/>region<sp/>of<sp/>memory<sp/>that<sp/>can<sp/>be<sp/>used<sp/>as<sp/>the<sp/>heap.<sp/><sp/>The<sp/>array<sp/>is</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*<sp/>terminated<sp/>by<sp/>a<sp/>HeapRegions_t<sp/>structure<sp/>that<sp/>has<sp/>a<sp/>size<sp/>of<sp/>0.<sp/><sp/>The<sp/>region</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>lowest<sp/>start<sp/>address<sp/>must<sp/>appear<sp/>first<sp/>in<sp/>the<sp/>array.</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="portable_8h_1ab13f7c55a8661da7bba3ef95f1282aee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="portable_8h_1ab13f7c55a8661da7bba3ef95f1282aee" kindref="member">vPortDefineHeapRegions</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_heap_region" kindref="compound">HeapRegion_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pxHeapRegions<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*<sp/>Map<sp/>to<sp/>the<sp/>memory<sp/>management<sp/>routines<sp/>required<sp/>for<sp/>the<sp/>port.</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="portable_8h_1ac59aab2e8ca1f2585bc5a650a14b02b8" kindref="member">pvPortMalloc</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>xSize<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="portable_8h_1a1e7cea2fd1bc894ea3b5f5e8179d259b" kindref="member">vPortFree</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pv<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="147" refid="portable_8h_1a8bf103ce32ce8473574e9920af8b4eec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="portable_8h_1a8bf103ce32ce8473574e9920af8b4eec" kindref="member">vPortInitialiseBlocks</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="148" refid="portable_8h_1a0c28a12b313bc248be0cb7a37ed81bb7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="portable_8h_1a0c28a12b313bc248be0cb7a37ed81bb7" kindref="member">xPortGetFreeHeapSize</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="149" refid="portable_8h_1ab222e4545b8ff12b62fd000fea6b34eb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="portable_8h_1ab222e4545b8ff12b62fd000fea6b34eb" kindref="member">xPortGetMinimumEverFreeHeapSize</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/>Setup<sp/>the<sp/>hardware<sp/>ready<sp/>for<sp/>the<sp/>scheduler<sp/>to<sp/>take<sp/>control.<sp/><sp/>This<sp/>generally</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/>sets<sp/>up<sp/>a<sp/>tick<sp/>interrupt<sp/>and<sp/>sets<sp/>timers<sp/>for<sp/>the<sp/>correct<sp/>tick<sp/>frequency.</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><ref refid="portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796" kindref="member">BaseType_t</ref><sp/><ref refid="portable_8h_1ade5a8c6666e7413a0355cc252029c5c6" kindref="member">xPortStartScheduler</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*<sp/>Undo<sp/>any<sp/>hardware/ISR<sp/>setup<sp/>that<sp/>was<sp/>performed<sp/>by<sp/>xPortStartScheduler()<sp/>so</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*<sp/>the<sp/>hardware<sp/>is<sp/>left<sp/>in<sp/>its<sp/>original<sp/>condition<sp/>after<sp/>the<sp/>scheduler<sp/>stops</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/>executing.</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="portable_8h_1af76f3c0b44c5b5c06fc046a4ee1a6423" kindref="member">vPortEndScheduler</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*<sp/>The<sp/>structures<sp/>and<sp/>methods<sp/>of<sp/>manipulating<sp/>the<sp/>MPU<sp/>are<sp/>contained<sp/>within<sp/>the</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/>port<sp/>layer.</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*<sp/>Fills<sp/>the<sp/>xMPUSettings<sp/>structure<sp/>with<sp/>the<sp/>memory<sp/>region<sp/>information</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*<sp/>contained<sp/>in<sp/>xRegions.</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#if(<sp/>portUSING_MPU_WRAPPERS<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structx_m_e_m_o_r_y___r_e_g_i_o_n" kindref="compound">xMEMORY_REGION</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vPortStoreTaskMPUSettings(<sp/>xMPU_SETTINGS<sp/>*xMPUSettings,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structx_m_e_m_o_r_y___r_e_g_i_o_n" kindref="compound">xMEMORY_REGION</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xRegions,<sp/><ref refid="portmacro_8h_1aa73b01e0200940d619095fb74fb3030b" kindref="member">StackType_t</ref><sp/>*pxBottomOfStack,<sp/>uint32_t<sp/>ulStackDepth<sp/>)<sp/><ref refid="mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078" kindref="member">PRIVILEGED_FUNCTION</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>PORTABLE_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/portable.h"/>
  </compounddef>
</doxygen>
