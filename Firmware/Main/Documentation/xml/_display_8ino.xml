<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="_display_8ino" kind="file" language="C++">
    <compoundname>Display.ino</compoundname>
    <includes refid="_display_8h" local="yes">Display.h</includes>
    <includes refid="_main_8h" local="yes">Main.h</includes>
    <includes refid="_free_r_t_o_s___t_e_e_n_s_y4_8h" local="yes">FreeRTOS_TEENSY4.h</includes>
    <incdepgraph>
      <node id="4">
        <label>Adafruit_GFX.h</label>
      </node>
      <node id="3">
        <label>Adafruit_ILI9341.h</label>
      </node>
      <node id="10">
        <label>CAN.h</label>
        <link refid="_c_a_n_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>DataLogging.h</label>
        <link refid="_data_logging_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Display.h</label>
        <link refid="_display_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/ponym/ARHMA2021/Firmware/Main/Display.ino</label>
        <link refid="_display_8ino"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>FreeRTOS_TEENSY4.h</label>
        <link refid="_free_r_t_o_s___t_e_e_n_s_y4_8h"/>
      </node>
      <node id="8">
        <label>Main.h</label>
        <link refid="_main_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Precharge.h</label>
        <link refid="_precharge_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="11">
        <label>FlexCAN_T4.h</label>
      </node>
      <node id="5">
        <label>SPI.h</label>
      </node>
      <node id="14">
        <label>SdFat.h</label>
      </node>
      <node id="15">
        <label>TimeLib.h</label>
      </node>
      <node id="6">
        <label>XPT2046_Touchscreen.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_display_8ino_1a7121972a969d5d8bd9c96626cfd61b11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void displayTask</definition>
        <argsstring>(void *measurementDataPtr)</argsstring>
        <name>displayTask</name>
        <param>
          <type>void *</type>
          <declname>measurementDataPtr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Parses the data from the void pointer to be processable? Idk if that&apos;s word. Passes the measurementScreenData to the <ref refid="_display_8h_1a2af0d27bbe0bf5e4e4b8207139104c78" kindref="member">displayUpdate()</ref> method. The <ref refid="_display_8h_1a2af0d27bbe0bf5e4e4b8207139104c78" kindref="member">displayUpdate()</ref> method then processes it and updates the screen accordingly.</para>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/Display.ino" line="38" column="6" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/Display.ino" bodystart="38" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="_display_8ino_1a79b84de3ddc4f88db07ac708452e4467" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setupDisplay</definition>
        <argsstring>(MeasurementScreenData msData)</argsstring>
        <name>setupDisplay</name>
        <param>
          <type><ref refid="_display_8h_1a2dded6e25e0cb307491fd7997b66b2a4" kindref="member">MeasurementScreenData</ref></type>
          <declname>msData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Calls on tft.begin() method and sets the orientation using tft.setRotatio() and also sets the screen to ILI9341_WHITE or ILI9341_BLACK based on Debugging or Speedometer screen.</para>
<para>Initializes all the PrintedDataStructs to set their position, values, and point to the correct pointer corresponding to the correct data.</para>
<para>Calls on the <ref refid="_display_8h_1ae5303e677c439d26296656ed10d656cc" kindref="member">setupMeasurementScreen()</ref> to finish up the setup.</para>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/Display.ino" line="51" column="6" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/Display.ino" bodystart="51" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="_display_8ino_1a2af0d27bbe0bf5e4e4b8207139104c78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void displayUpdate</definition>
        <argsstring>(MeasurementScreenData msData)</argsstring>
        <name>displayUpdate</name>
        <param>
          <type><ref refid="_display_8h_1a2dded6e25e0cb307491fd7997b66b2a4" kindref="member">MeasurementScreenData</ref></type>
          <declname>msData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/Display.ino" line="84" column="6" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/Display.ino" bodystart="84" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="_display_8ino_1a255d71bb7f36b2056059bd579af11f3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void thermiDataPrint</definition>
        <argsstring>(int numberOfLines)</argsstring>
        <name>thermiDataPrint</name>
        <param>
          <type>int</type>
          <declname>numberOfLines</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/Display.ino" line="130" column="6" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/Display.ino" bodystart="130" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="_display_8ino_1a1faaa02c20faaddf6f9e78859eb3cb0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void timePrint</definition>
        <argsstring>()</argsstring>
        <name>timePrint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/Display.ino" line="160" column="6" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/Display.ino" bodystart="160" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="_display_8ino_1ae5303e677c439d26296656ed10d656cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setupMeasurementScreen</definition>
        <argsstring>()</argsstring>
        <name>setupMeasurementScreen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>If the screen is debugging type, it will print out all the data labels in their data locations as a black text This is achieved using a bunch of tft methods. Nice.</para>
<para>If the screen is speedometer type, it will print out all the data labels in their locations (SPEED up top and RPM at the bottom). This is achieved using a bunch of tft methods. Nice.</para>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/Display.ino" line="171" column="6" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/Display.ino" bodystart="171" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="_display_8ino_1a9622e737a6a548ba9f9ffcbb6ed1bb2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eraseThenPrint</definition>
        <argsstring>(int xPos, int yPos, String oldData, String newData)</argsstring>
        <name>eraseThenPrint</name>
        <param>
          <type>int</type>
          <declname>xPos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>yPos</declname>
        </param>
        <param>
          <type>String</type>
          <declname>oldData</declname>
        </param>
        <param>
          <type>String</type>
          <declname>newData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Erases the old value using the oldData parameter by writing it in the background color and then setting it back to the printing color to write the newData.</para>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/Display.ino" line="208" column="6" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/Display.ino" bodystart="208" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="_display_8ino_1a2fcaba5d0c64fb3389132dca04224211" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void manualScreenDataUpdater</definition>
        <argsstring>()</argsstring>
        <name>manualScreenDataUpdater</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Iterates through all the printedVals array and then does += 1 to make sure it&apos;s increasing. This change should be reflected in the display itself.</para>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/Display.ino" line="225" column="6" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/Display.ino" bodystart="225" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="_display_8ino_1ad609934bdce8f8169cc609cb7913f507" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float aux_voltage_read</definition>
        <argsstring>()</argsstring>
        <name>aux_voltage_read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Reads in the aux_voltage of the LV system and reads in the values. Would be better in CAN, but alas Chase said leave it here, it&apos;s here.</para>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/Display.ino" line="240" column="7" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/Display.ino" bodystart="240" bodyend="247"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="_display_8ino" kindref="compound">Display.ino</ref> file executes the Display task for the bike&apos;s firmware. This calls on the variables that are initialized in <ref refid="_display_8h" kindref="compound">Display.h</ref> and then calls on various methods from the ILI9341&apos;s adafruit display library to update the display. Updating the display includes comparing old and new data to ensure data has changed, erasing the previous data if it&apos;s changed and writing in the new data. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Washington Superbike </para>
</simplesect>
<simplesect kind="date"><para>1-March-2023 </para>
</simplesect>
<simplesect kind="note"><para>This works. Display does slow down a bit in the speedometer screen, but that is also due to often the numbers were changing in the <ref refid="_display_8ino_1a2fcaba5d0c64fb3389132dca04224211" kindref="member">manualScreenDataUpdater()</ref>method updating data too frequently. Just consider reducing the size of the text in case it looks like it is updating too slowly at speeds of ~60-80 mph.</para>
</simplesect>
<xrefsect id="todo_1_todo000007"><xreftitle>Todo</xreftitle><xrefdescription><para>Remove all unused vars and tighten up methods. <linebreak/>
 <linebreak/>
 There are WAY more macros (#define statements) that need to be written for defining some frequently used values in display. Can&apos;t think of them off the top of my head, but make and use those. <linebreak/>
 <linebreak/>
 In the speedometer screen, add code to show angles. If the angle is near the threshold (&gt; ~30 degrees), show it in red. If the angle is near safe (&lt; ~30 degrees), show it in green. Add an indicator that prints out preCharge statuses This variable is called hv_state in <ref refid="_precharge_8h" kindref="compound">preCharge.h</ref> basically print out this variable if possbie. This is similar to how cars print out engine flags, etc. </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_display_8h" kindref="compound">Display.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_main_8h" kindref="compound">Main.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_free_r_t_o_s___t_e_e_n_s_y4_8h" kindref="compound">FreeRTOS_TEENSY4.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="_display_8ino_1a7121972a969d5d8bd9c96626cfd61b11" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_display_8ino_1a7121972a969d5d8bd9c96626cfd61b11" kindref="member">displayTask</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*measurementDataPtr)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_measurement_screen_data_struct" kindref="compound">MeasurementScreenData</ref><sp/>msData<sp/>=<sp/>*(<ref refid="struct_measurement_screen_data_struct" kindref="compound">MeasurementScreenData</ref><sp/>*)measurementDataPtr;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_display_8ino_1a2af0d27bbe0bf5e4e4b8207139104c78" kindref="member">displayUpdate</ref>(msData);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_display_8ino_1a2fcaba5d0c64fb3389132dca04224211" kindref="member">manualScreenDataUpdater</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="task_8h_1aa154068cecd7f31446a7a84af44ab1a3" kindref="member">vTaskDelay</ref>((20<sp/>*<sp/><ref refid="_free_r_t_o_s_config__default_8h_1a2f0258dd1e3b877e5bc013be54c2db6a" kindref="member">configTICK_RATE_HZ</ref>)<sp/>/<sp/>1000);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="_display_8h_1a79b84de3ddc4f88db07ac708452e4467" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_display_8ino_1a79b84de3ddc4f88db07ac708452e4467" kindref="member">setupDisplay</ref>(<ref refid="struct_measurement_screen_data_struct" kindref="compound">MeasurementScreenData</ref><sp/>msData)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="_display_8h_1a41c3eb6bc5901609f9f976b594e5089f" kindref="member">tft</ref>.begin();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="_display_8h_1a41c3eb6bc5901609f9f976b594e5089f" kindref="member">tft</ref>.setRotation(1);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="_display_8h_1a41c3eb6bc5901609f9f976b594e5089f" kindref="member">tft</ref>.fillScreen(<ref refid="_display_8h_1a61ae6f1ae401c962137f2ae1d2a158df" kindref="member">BACKGROUND_COLOR</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="_display_8h_1a41c3eb6bc5901609f9f976b594e5089f" kindref="member">tft</ref>.setTextColor(<ref refid="_display_8h_1a761b36c5e7be7b06b38d2b1e38dcf213" kindref="member">PRINT_COLOR</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//PrintedData<sp/>*thermTemps<sp/>=<sp/>&amp;printedVals[7];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//PrintedData<sp/>*timeData<sp/>=<sp/>&amp;printedVals[11];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>*<ref refid="_display_8h_1a0dbb33f8e641008d67ebd4388521ab69" kindref="member">batteryVoltage</ref><sp/>=<sp/>{1,<sp/>10,<sp/><ref refid="_display_8h_1accd27f9824631fc37bcb677947f1f63a" kindref="member">DEFAULT_X_POS</ref>,<sp/><ref refid="_display_8h_1aa6b0be19465bc73429fbaf37ea6d7f5d" kindref="member">DEFAULT_FLOAT</ref>,<sp/><ref refid="_display_8h_1a0d9a05d88ef681f9a1e7d362f6f20ac1a12a90dfe20486bbe3e075afcd19ef2d0" kindref="member">NUMBER</ref>,<sp/>msData.<ref refid="struct_measurement_screen_data_struct_1aed564048111fa898cf8de61099391863" kindref="member">mainBatteryVoltage</ref>,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;Main<sp/>Batt<sp/>Voltage:<sp/>&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>*<ref refid="_display_8h_1ab1f53d3b1963f27d117ab4846e36897e" kindref="member">motorControllerVoltage</ref><sp/>=<sp/>{1,<sp/>10<sp/>+<sp/><ref refid="_display_8h_1a9705c15b04a1787116a4fbdf987e0328" kindref="member">VERTICAL_SCALER</ref><sp/>*<sp/>1,<sp/><ref refid="_display_8h_1accd27f9824631fc37bcb677947f1f63a" kindref="member">DEFAULT_X_POS</ref>,<sp/><ref refid="_display_8h_1aa6b0be19465bc73429fbaf37ea6d7f5d" kindref="member">DEFAULT_FLOAT</ref>,<sp/><ref refid="_display_8h_1a0d9a05d88ef681f9a1e7d362f6f20ac1a12a90dfe20486bbe3e075afcd19ef2d0" kindref="member">NUMBER</ref>,<sp/>msData.<ref refid="struct_measurement_screen_data_struct_1a1e2df8e919bbae0941ccecfa5eb62cbe" kindref="member">motorControllerVoltage</ref>,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;Main<sp/>Batt<sp/>Voltage<sp/>(Motor<sp/>Controller):<sp/>&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>auxVolt<sp/>=<sp/><ref refid="_display_8ino_1ad609934bdce8f8169cc609cb7913f507" kindref="member">aux_voltage_read</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>*<ref refid="_display_8h_1a012dded9173d07c300ffad949e96a940" kindref="member">auxBatteryVoltage</ref><sp/>=<sp/>{1,<sp/>10<sp/>+<sp/>16<sp/>*<sp/>2,<sp/><ref refid="_display_8h_1accd27f9824631fc37bcb677947f1f63a" kindref="member">DEFAULT_X_POS</ref>,<sp/><ref refid="_display_8h_1aa6b0be19465bc73429fbaf37ea6d7f5d" kindref="member">DEFAULT_FLOAT</ref>,<sp/><ref refid="_display_8h_1a0d9a05d88ef681f9a1e7d362f6f20ac1a12a90dfe20486bbe3e075afcd19ef2d0" kindref="member">NUMBER</ref>,<sp/>&amp;auxVolt,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;Aux<sp/>Batt<sp/>Voltage:<sp/>&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>*<ref refid="_display_8h_1a96f08d4bf70ba395b285b8d6a352bdf9" kindref="member">rpm</ref><sp/>=<sp/>{1,<sp/>10<sp/>+<sp/><ref refid="_display_8h_1a9705c15b04a1787116a4fbdf987e0328" kindref="member">VERTICAL_SCALER</ref><sp/>*<sp/>3,<sp/><ref refid="_display_8h_1accd27f9824631fc37bcb677947f1f63a" kindref="member">DEFAULT_X_POS</ref>,<sp/><ref refid="_display_8h_1aa6b0be19465bc73429fbaf37ea6d7f5d" kindref="member">DEFAULT_FLOAT</ref>,<sp/><ref refid="_display_8h_1a0d9a05d88ef681f9a1e7d362f6f20ac1a12a90dfe20486bbe3e075afcd19ef2d0" kindref="member">NUMBER</ref>,<sp/>msData.<ref refid="struct_measurement_screen_data_struct_1a032fdb5cea2670a02f48dae82cb6c5f7" kindref="member">RPM</ref>,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;RPM:<sp/>&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>*<ref refid="_display_8h_1ab1eb6959a5903caaa2277b5c19bc64b8" kindref="member">motorTemperature</ref><sp/>=<sp/>{1,<sp/>10<sp/>+<sp/><ref refid="_display_8h_1a9705c15b04a1787116a4fbdf987e0328" kindref="member">VERTICAL_SCALER</ref><sp/>*<sp/>4,<sp/><ref refid="_display_8h_1accd27f9824631fc37bcb677947f1f63a" kindref="member">DEFAULT_X_POS</ref>,<sp/><ref refid="_display_8h_1aa6b0be19465bc73429fbaf37ea6d7f5d" kindref="member">DEFAULT_FLOAT</ref>,<sp/><ref refid="_display_8h_1a0d9a05d88ef681f9a1e7d362f6f20ac1a12a90dfe20486bbe3e075afcd19ef2d0" kindref="member">NUMBER</ref>,<sp/>msData.<ref refid="struct_measurement_screen_data_struct_1ac41c602ffafc714ec356ea502c8ae58a" kindref="member">motorTemp</ref>,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;Motor<sp/>Temp:<sp/>&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>*<ref refid="_display_8h_1ac5969222ac88224eb77bc5aa7dd0e2d0" kindref="member">motorCurr</ref><sp/>=<sp/>{1,<sp/>10<sp/>+<sp/><ref refid="_display_8h_1a9705c15b04a1787116a4fbdf987e0328" kindref="member">VERTICAL_SCALER</ref><sp/>*<sp/>5,<sp/><ref refid="_display_8h_1accd27f9824631fc37bcb677947f1f63a" kindref="member">DEFAULT_X_POS</ref>,<sp/><ref refid="_display_8h_1aa6b0be19465bc73429fbaf37ea6d7f5d" kindref="member">DEFAULT_FLOAT</ref>,<sp/><ref refid="_display_8h_1a0d9a05d88ef681f9a1e7d362f6f20ac1a12a90dfe20486bbe3e075afcd19ef2d0" kindref="member">NUMBER</ref>,<sp/>msData.<ref refid="struct_measurement_screen_data_struct_1a9685a96c491e4d8276fea2e35bc538cd" kindref="member">motorCurrent</ref>,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;Motor<sp/>Current:<sp/>&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>*<ref refid="_display_8h_1aec89495f1135f6268d3c23d3d89c6b05" kindref="member">errMessage</ref><sp/>=<sp/>{1,<sp/>10<sp/>+<sp/><ref refid="_display_8h_1a9705c15b04a1787116a4fbdf987e0328" kindref="member">VERTICAL_SCALER</ref><sp/>*<sp/>6,<sp/><ref refid="_display_8h_1accd27f9824631fc37bcb677947f1f63a" kindref="member">DEFAULT_X_POS</ref>,<sp/><ref refid="_display_8h_1aa6b0be19465bc73429fbaf37ea6d7f5d" kindref="member">DEFAULT_FLOAT</ref>,<sp/><ref refid="_display_8h_1a0d9a05d88ef681f9a1e7d362f6f20ac1a12a90dfe20486bbe3e075afcd19ef2d0" kindref="member">NUMBER</ref>,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)<sp/>msData.<ref refid="struct_measurement_screen_data_struct_1aa63c57e04a22b9ff0feba3172fb46e7c" kindref="member">errorMessage</ref>,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>Message:<sp/>&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>*<ref refid="_display_8h_1a44fd669aa58c2b66ab018fd2df3e046a" kindref="member">chargerVolt</ref><sp/>=<sp/>{1,<sp/>10<sp/>+<sp/><ref refid="_display_8h_1a9705c15b04a1787116a4fbdf987e0328" kindref="member">VERTICAL_SCALER</ref><sp/>*<sp/>9,<sp/><ref refid="_display_8h_1accd27f9824631fc37bcb677947f1f63a" kindref="member">DEFAULT_X_POS</ref>,<sp/><ref refid="_display_8h_1aa6b0be19465bc73429fbaf37ea6d7f5d" kindref="member">DEFAULT_FLOAT</ref>,<sp/><ref refid="_display_8h_1a0d9a05d88ef681f9a1e7d362f6f20ac1a12a90dfe20486bbe3e075afcd19ef2d0" kindref="member">NUMBER</ref>,<sp/>msData.<ref refid="struct_measurement_screen_data_struct_1a8c456547b18cc7388d407a3fa01f770f" kindref="member">chargerVoltage</ref>,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;Charger<sp/>Voltage:<sp/>&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>*<ref refid="_display_8h_1ac618dcef8a9f06e79d1cbe8cb9383aa6" kindref="member">chargerCurr</ref><sp/>=<sp/>{1,<sp/>10<sp/>+<sp/><ref refid="_display_8h_1a9705c15b04a1787116a4fbdf987e0328" kindref="member">VERTICAL_SCALER</ref><sp/>*<sp/>10,<sp/><ref refid="_display_8h_1accd27f9824631fc37bcb677947f1f63a" kindref="member">DEFAULT_X_POS</ref>,<sp/><ref refid="_display_8h_1aa6b0be19465bc73429fbaf37ea6d7f5d" kindref="member">DEFAULT_FLOAT</ref>,<sp/><ref refid="_display_8h_1a0d9a05d88ef681f9a1e7d362f6f20ac1a12a90dfe20486bbe3e075afcd19ef2d0" kindref="member">NUMBER</ref>,<sp/>msData.<ref refid="struct_measurement_screen_data_struct_1ab325b90179563b0cbd69138e4faca679" kindref="member">chargerCurrent</ref>,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;Charger<sp/>Current:<sp/>&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>*<ref refid="_display_8h_1a940677548971e0943f36dcfa95bb8b44" kindref="member">bmsStatusFlag</ref><sp/>=<sp/>{1,<sp/>10<sp/>+<sp/><ref refid="_display_8h_1a9705c15b04a1787116a4fbdf987e0328" kindref="member">VERTICAL_SCALER</ref><sp/>*<sp/>11,<sp/><ref refid="_display_8h_1accd27f9824631fc37bcb677947f1f63a" kindref="member">DEFAULT_X_POS</ref>,<sp/><ref refid="_display_8h_1aa6b0be19465bc73429fbaf37ea6d7f5d" kindref="member">DEFAULT_FLOAT</ref>,<sp/><ref refid="_display_8h_1a0d9a05d88ef681f9a1e7d362f6f20ac1a12a90dfe20486bbe3e075afcd19ef2d0" kindref="member">NUMBER</ref>,<sp/>msData.<ref refid="struct_measurement_screen_data_struct_1ac41c602ffafc714ec356ea502c8ae58a" kindref="member">motorTemp</ref>,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;BMS<sp/>Status<sp/>Flag:<sp/>&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>*<ref refid="_display_8h_1a1f928d9e961d6ef649cb8bc5d3178b8e" kindref="member">evccVolt</ref><sp/>=<sp/>{1,<sp/>10<sp/>+<sp/><ref refid="_display_8h_1a9705c15b04a1787116a4fbdf987e0328" kindref="member">VERTICAL_SCALER</ref><sp/>*<sp/>12,<sp/><ref refid="_display_8h_1accd27f9824631fc37bcb677947f1f63a" kindref="member">DEFAULT_X_POS</ref>,<sp/><ref refid="_display_8h_1aa6b0be19465bc73429fbaf37ea6d7f5d" kindref="member">DEFAULT_FLOAT</ref>,<sp/><ref refid="_display_8h_1a0d9a05d88ef681f9a1e7d362f6f20ac1a12a90dfe20486bbe3e075afcd19ef2d0" kindref="member">NUMBER</ref>,<sp/>msData.<ref refid="struct_measurement_screen_data_struct_1ac41c602ffafc714ec356ea502c8ae58a" kindref="member">motorTemp</ref>,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;EVCC<sp/>Voltage:<sp/>&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="_display_8h_1a700ec86cb550fd4426014190222173ac" kindref="member">thermiData</ref><sp/>=<sp/>{1,<sp/>10<sp/>+<sp/><ref refid="_display_8h_1a9705c15b04a1787116a4fbdf987e0328" kindref="member">VERTICAL_SCALER</ref><sp/>*<sp/>7,<sp/>180,<sp/>{<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1,<sp/>-1},<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)<sp/>msData.<ref refid="struct_measurement_screen_data_struct_1a246a330e1d725800363777a3a373f740" kindref="member">thermistorTemps</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Thermist<sp/>Temp:<sp/>&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="_display_8ino_1ae5303e677c439d26296656ed10d656cc" kindref="member">setupMeasurementScreen</ref>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="_display_8h_1a2af0d27bbe0bf5e4e4b8207139104c78" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_display_8ino_1a2af0d27bbe0bf5e4e4b8207139104c78" kindref="member">displayUpdate</ref>(<ref refid="struct_measurement_screen_data_struct" kindref="compound">MeasurementScreenData</ref><sp/>msData)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>USE_DEBUGGING_SCREEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_display_8h_1a41c3eb6bc5901609f9f976b594e5089f" kindref="member">tft</ref>.setTextSize(1);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="_display_8h_1a3b5584bed4734b437f2ef171dfa600e2" kindref="member">NUM_DATA</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[i].type<sp/>==<sp/><ref refid="_display_8h_1a0d9a05d88ef681f9a1e7d362f6f20ac1a12a90dfe20486bbe3e075afcd19ef2d0" kindref="member">NUMBER</ref>)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*<ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[i].currData)<sp/>!=<sp/>(<ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[i].oldData)<sp/>||<sp/>(<ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[i].oldData)<sp/>==<sp/><ref refid="_display_8h_1aa6b0be19465bc73429fbaf37ea6d7f5d" kindref="member">DEFAULT_FLOAT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_display_8ino_1a9622e737a6a548ba9f9ffcbb6ed1bb2d" kindref="member">eraseThenPrint</ref>(<ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[i].dataX,<sp/><ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[i].y,<sp/><ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[i].oldData,<sp/>*<ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[i].currData);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[i].<ref refid="struct_printed_data_struct_1ae0952f0395d23e49c6db5cbea2eca92c" kindref="member">oldData</ref><sp/>=<sp/>*<ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[i].<ref refid="struct_printed_data_struct_1a5871bcbf6b81d6ba842d61fe62349ff4" kindref="member">currData</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Printing<sp/>out<sp/>thermistor<sp/>data<sp/>over<sp/>2<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_display_8ino_1a255d71bb7f36b2056059bd579af11f3a" kindref="member">thermiDataPrint</ref>(2);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Printing<sp/>out<sp/>time<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_display_8ino_1a1faaa02c20faaddf6f9e78859eb3cb0c" kindref="member">timePrint</ref>();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else<sp/></highlight><highlight class="comment">//<sp/>(if<sp/>speedometer<sp/>screen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_display_8h_1a41c3eb6bc5901609f9f976b594e5089f" kindref="member">tft</ref>.setTextSize(8);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>newString<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>oldString<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*<ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[3].currData)<sp/>!=<sp/>(<ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[3].oldData)<sp/>||<sp/>(<ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[3].oldData)<sp/>==<sp/><ref refid="_display_8h_1aa6b0be19465bc73429fbaf37ea6d7f5d" kindref="member">DEFAULT_FLOAT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Gear<sp/>ratio,<sp/>48<sp/>teeth<sp/>in<sp/>the<sp/>back<sp/>wheel<sp/>sprocoket.<sp/>16<sp/>on<sp/>motor<sp/>sprocket</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Diameter<sp/>=<sp/>0.522<sp/>m,<sp/>divided<sp/>by<sp/>60<sp/>converts<sp/>it<sp/>into<sp/>per<sp/>second,<sp/>so<sp/>the<sp/>RPM<sp/>is<sp/>converted<sp/>to<sp/>a<sp/>final</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Speed<sp/>of<sp/>m/s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>gearRatio<sp/>=<sp/>48/16;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>diameterPerSecond<sp/>=<sp/>0.522/60;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pi<sp/>=<sp/>3.14159;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mphConvert<sp/>=<sp/>2.2369362920544;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newSpeed<sp/>=<sp/>*<ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[3].<ref refid="struct_printed_data_struct_1a5871bcbf6b81d6ba842d61fe62349ff4" kindref="member">currData</ref><sp/>/<sp/>gearRatio<sp/>*<sp/>pi<sp/>*<sp/>diameterPerSecond<sp/>*<sp/>mphConvert;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldSpeed<sp/>=<sp/><ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[3].<ref refid="struct_printed_data_struct_1ae0952f0395d23e49c6db5cbea2eca92c" kindref="member">oldData</ref><sp/>/<sp/>gearRatio<sp/>*<sp/>pi<sp/>*<sp/>diameterPerSecond<sp/>*<sp/>mphConvert;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newString<sp/>=<sp/>(String)<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>newSpeed;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>oldString<sp/>=<sp/>(String)<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>oldSpeed;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(newString);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(oldString);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_display_8ino_1a9622e737a6a548ba9f9ffcbb6ed1bb2d" kindref="member">eraseThenPrint</ref>(175,<sp/>0,<sp/>oldString,<sp/>newString);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newString<sp/>=<sp/>(String)<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>*<ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[3].<ref refid="struct_printed_data_struct_1a5871bcbf6b81d6ba842d61fe62349ff4" kindref="member">currData</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>oldString<sp/>=<sp/>(String)<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[3].<ref refid="struct_printed_data_struct_1ae0952f0395d23e49c6db5cbea2eca92c" kindref="member">oldData</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_display_8ino_1a9622e737a6a548ba9f9ffcbb6ed1bb2d" kindref="member">eraseThenPrint</ref>(120,<sp/>180,<sp/>oldString,<sp/>newString);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[3].<ref refid="struct_printed_data_struct_1ae0952f0395d23e49c6db5cbea2eca92c" kindref="member">oldData</ref><sp/>=<sp/>*<ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[3].<ref refid="struct_printed_data_struct_1a5871bcbf6b81d6ba842d61fe62349ff4" kindref="member">currData</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="_display_8h_1a255d71bb7f36b2056059bd579af11f3a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_display_8ino_1a255d71bb7f36b2056059bd579af11f3a" kindref="member">thermiDataPrint</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numberOfLines)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>thermistor<sp/>values<sp/>to<sp/>print<sp/>per<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>incr<sp/>=<sp/><ref refid="config_8h_1a9e9f6a6f679efeb38325e7474a2e4c85" kindref="member">NUM_THERMI</ref><sp/>/<sp/>numberOfLines;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numberOfLines;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sameData<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>sOld,<sp/>sNew;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>data/update<sp/>display<sp/>one<sp/>line<sp/>of<sp/>therm<sp/>values<sp/>at<sp/>a<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i<sp/>*<sp/>incr;<sp/>j<sp/>&lt;<sp/>incr<sp/>+<sp/>(i<sp/>*<sp/>incr);<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_display_8h_1a700ec86cb550fd4426014190222173ac" kindref="member">thermiData</ref>.<ref refid="struct_printed_data_therm_struct_1aa2f24f2c6e39a25af913ff218361f691" kindref="member">currData</ref>[j]<sp/>!=<sp/><ref refid="_display_8h_1a700ec86cb550fd4426014190222173ac" kindref="member">thermiData</ref>.<ref refid="struct_printed_data_therm_struct_1a14bcd79d4f08e87c4c435ad6894f13b3" kindref="member">oldData</ref>[j])<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sameData<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sNew.append((</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)<ref refid="_display_8h_1a700ec86cb550fd4426014190222173ac" kindref="member">thermiData</ref>.<ref refid="struct_printed_data_therm_struct_1aa2f24f2c6e39a25af913ff218361f691" kindref="member">currData</ref>[j]);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sOld.append((</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)<ref refid="_display_8h_1a700ec86cb550fd4426014190222173ac" kindref="member">thermiData</ref>.<ref refid="struct_printed_data_therm_struct_1a14bcd79d4f08e87c4c435ad6894f13b3" kindref="member">oldData</ref>[j]);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_display_8h_1a700ec86cb550fd4426014190222173ac" kindref="member">thermiData</ref>.<ref refid="struct_printed_data_therm_struct_1a14bcd79d4f08e87c4c435ad6894f13b3" kindref="member">oldData</ref>[j]<sp/>=<sp/><ref refid="_display_8h_1a700ec86cb550fd4426014190222173ac" kindref="member">thermiData</ref>.<ref refid="struct_printed_data_therm_struct_1aa2f24f2c6e39a25af913ff218361f691" kindref="member">currData</ref>[j];</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sOld.append((</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)<ref refid="_display_8h_1a700ec86cb550fd4426014190222173ac" kindref="member">thermiData</ref>.<ref refid="struct_printed_data_therm_struct_1a14bcd79d4f08e87c4c435ad6894f13b3" kindref="member">oldData</ref>[j]);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sNew.append((</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)<ref refid="_display_8h_1a700ec86cb550fd4426014190222173ac" kindref="member">thermiData</ref>.<ref refid="struct_printed_data_therm_struct_1a14bcd79d4f08e87c4c435ad6894f13b3" kindref="member">oldData</ref>[j]);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>not<sp/>the<sp/>last<sp/>value<sp/>on<sp/>a<sp/>line,<sp/>add<sp/>a<sp/>comma</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>!=<sp/>(incr<sp/>+<sp/>(i<sp/>*<sp/>incr))<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sOld.append(</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sNew.append(</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>therm<sp/>data<sp/>has<sp/>changed<sp/>since<sp/>the<sp/>last<sp/>print,<sp/>update<sp/>the<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sameData)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_display_8ino_1a9622e737a6a548ba9f9ffcbb6ed1bb2d" kindref="member">eraseThenPrint</ref>(<ref refid="_display_8h_1a700ec86cb550fd4426014190222173ac" kindref="member">thermiData</ref>.<ref refid="struct_printed_data_therm_struct_1a5f4a978790b000578684d99f8e42e747" kindref="member">dataX</ref>,<sp/><ref refid="_display_8h_1a700ec86cb550fd4426014190222173ac" kindref="member">thermiData</ref>.<ref refid="struct_printed_data_therm_struct_1aa3c56195d5e129e46e6820fe69eb7193" kindref="member">y</ref><sp/>+<sp/>(<ref refid="_display_8h_1a9705c15b04a1787116a4fbdf987e0328" kindref="member">VERTICAL_SCALER</ref><sp/>*<sp/>i),<sp/>sOld,<sp/>sNew);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="_display_8h_1a1faaa02c20faaddf6f9e78859eb3cb0c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_display_8ino_1a1faaa02c20faaddf6f9e78859eb3cb0c" kindref="member">timePrint</ref>()<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufSize<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>date<sp/>and<sp/>time,<sp/>update<sp/>by<sp/>erasing<sp/>previous<sp/>text<sp/>then<sp/>writing<sp/>new</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>previousTime[bufSize];</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[bufSize];</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;%02u/%02u/%02u<sp/><sp/>%02u:%02u:%02u&quot;</highlight><highlight class="normal">,<sp/>month(),<sp/>day(),<sp/>year(),<sp/>hour(),<sp/>minute(),<sp/>second());</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><ref refid="_display_8ino_1a9622e737a6a548ba9f9ffcbb6ed1bb2d" kindref="member">eraseThenPrint</ref>(140,<sp/>10<sp/>+<sp/><ref refid="_display_8h_1a9705c15b04a1787116a4fbdf987e0328" kindref="member">VERTICAL_SCALER</ref><sp/>*<sp/>(<ref refid="_display_8h_1a3b5584bed4734b437f2ef171dfa600e2" kindref="member">NUM_DATA</ref><sp/>+<sp/>2),<sp/>previousTime,<sp/>buf);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>memcpy(previousTime,<sp/>buf,<sp/>bufSize);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="_display_8h_1ae5303e677c439d26296656ed10d656cc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_display_8ino_1ae5303e677c439d26296656ed10d656cc" kindref="member">setupMeasurementScreen</ref>()<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>USE_DEBUGGING_SCREEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_display_8h_1a41c3eb6bc5901609f9f976b594e5089f" kindref="member">tft</ref>.setTextSize(1);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="_display_8h_1a3b5584bed4734b437f2ef171dfa600e2" kindref="member">NUM_DATA</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_display_8h_1a41c3eb6bc5901609f9f976b594e5089f" kindref="member">tft</ref>.setCursor(<ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[i].labelX,<sp/><ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[i].y);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_display_8h_1a41c3eb6bc5901609f9f976b594e5089f" kindref="member">tft</ref>.print(<ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[i].labelPtr);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Printing<sp/>out<sp/>time<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_display_8h_1a41c3eb6bc5901609f9f976b594e5089f" kindref="member">tft</ref>.setCursor(<ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[10].labelX,<sp/><ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[10].y<sp/>+<sp/><ref refid="_display_8h_1a9705c15b04a1787116a4fbdf987e0328" kindref="member">VERTICAL_SCALER</ref>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_display_8h_1a41c3eb6bc5901609f9f976b594e5089f" kindref="member">tft</ref>.print(</highlight><highlight class="stringliteral">&quot;Time:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Printing<sp/>out<sp/>thermistor<sp/>temps<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_display_8h_1a41c3eb6bc5901609f9f976b594e5089f" kindref="member">tft</ref>.setCursor(<ref refid="_display_8h_1a700ec86cb550fd4426014190222173ac" kindref="member">thermiData</ref>.<ref refid="struct_printed_data_therm_struct_1ab6d40c87b9c92abc235f3ca8d2e68f6c" kindref="member">labelX</ref>,<sp/><ref refid="_display_8h_1a700ec86cb550fd4426014190222173ac" kindref="member">thermiData</ref>.<ref refid="struct_printed_data_therm_struct_1aa3c56195d5e129e46e6820fe69eb7193" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_display_8h_1a41c3eb6bc5901609f9f976b594e5089f" kindref="member">tft</ref>.print(<ref refid="_display_8h_1a700ec86cb550fd4426014190222173ac" kindref="member">thermiData</ref>.<ref refid="struct_printed_data_therm_struct_1acc2d2cee759f3cc546922b2a34dae206" kindref="member">labelPtr</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_display_8h_1a41c3eb6bc5901609f9f976b594e5089f" kindref="member">tft</ref>.setTextSize(5);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_display_8h_1a41c3eb6bc5901609f9f976b594e5089f" kindref="member">tft</ref>.setCursor(0,0);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_display_8h_1a41c3eb6bc5901609f9f976b594e5089f" kindref="member">tft</ref>.print(</highlight><highlight class="stringliteral">&quot;SPEED&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_display_8h_1a41c3eb6bc5901609f9f976b594e5089f" kindref="member">tft</ref>.setCursor(220,<sp/>62);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_display_8h_1a41c3eb6bc5901609f9f976b594e5089f" kindref="member">tft</ref>.print(</highlight><highlight class="stringliteral">&quot;mph&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_display_8h_1a41c3eb6bc5901609f9f976b594e5089f" kindref="member">tft</ref>.setCursor(0,<sp/>205);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_display_8h_1a41c3eb6bc5901609f9f976b594e5089f" kindref="member">tft</ref>.print(</highlight><highlight class="stringliteral">&quot;RPM&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="_display_8h_1a9622e737a6a548ba9f9ffcbb6ed1bb2d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_display_8ino_1a9622e737a6a548ba9f9ffcbb6ed1bb2d" kindref="member">eraseThenPrint</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xPos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yPos,<sp/>String<sp/>oldData,<sp/>String<sp/>newData)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><ref refid="_display_8h_1a41c3eb6bc5901609f9f976b594e5089f" kindref="member">tft</ref>.setCursor(xPos,<sp/>yPos);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><ref refid="_display_8h_1a41c3eb6bc5901609f9f976b594e5089f" kindref="member">tft</ref>.setTextColor(<ref refid="_display_8h_1a61ae6f1ae401c962137f2ae1d2a158df" kindref="member">BACKGROUND_COLOR</ref>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><ref refid="_display_8h_1a41c3eb6bc5901609f9f976b594e5089f" kindref="member">tft</ref>.print(oldData);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><ref refid="_display_8h_1a41c3eb6bc5901609f9f976b594e5089f" kindref="member">tft</ref>.setCursor(xPos,<sp/>yPos);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><ref refid="_display_8h_1a41c3eb6bc5901609f9f976b594e5089f" kindref="member">tft</ref>.setTextColor(<ref refid="_display_8h_1a761b36c5e7be7b06b38d2b1e38dcf213" kindref="member">PRINT_COLOR</ref>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><ref refid="_display_8h_1a41c3eb6bc5901609f9f976b594e5089f" kindref="member">tft</ref>.print(newData);</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>screenEraser(int<sp/>scaler,<sp/>int<sp/>i)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>floor(log10(abs(*printedVals[i].currData)))<sp/>+<sp/>1<sp/>=<sp/>formula<sp/>to<sp/>return<sp/>the<sp/>number<sp/>of<sp/>digits<sp/>in<sp/>the<sp/>int.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Attempting<sp/>to<sp/>scale<sp/>the<sp/>clearing<sp/>rectangle<sp/>based<sp/>on<sp/>int<sp/>length,<sp/>except,<sp/>when<sp/>int<sp/>length<sp/>=<sp/>1,<sp/>it&apos;s<sp/>kinda<sp/>useless.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>tft.fillRect(printedVals[i].dataX,<sp/>printedVals[i].y,<sp/>scaler<sp/>*<sp/>(floor(log10(abs(*printedVals[i].currData)))<sp/>+<sp/>1),<sp/>8,<sp/>ILI9341_WHITE);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="_display_8h_1a2fcaba5d0c64fb3389132dca04224211" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_display_8ino_1a2fcaba5d0c64fb3389132dca04224211" kindref="member">manualScreenDataUpdater</ref>()<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="_display_8h_1a3b5584bed4734b437f2ef171dfa600e2" kindref="member">NUM_DATA</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[i].type<sp/>==<sp/><ref refid="_display_8h_1a0d9a05d88ef681f9a1e7d362f6f20ac1a12a90dfe20486bbe3e075afcd19ef2d0" kindref="member">NUMBER</ref>)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[i].<ref refid="struct_printed_data_struct_1a5871bcbf6b81d6ba842d61fe62349ff4" kindref="member">currData</ref><sp/>=<sp/>*<ref refid="_display_8h_1a4d31440d430c0fc247733e218f14278f" kindref="member">printedVals</ref>[i].<ref refid="struct_printed_data_struct_1a5871bcbf6b81d6ba842d61fe62349ff4" kindref="member">currData</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(*printedVals[i].currData);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>10;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_display_8h_1a700ec86cb550fd4426014190222173ac" kindref="member">thermiData</ref>.<ref refid="struct_printed_data_therm_struct_1aa2f24f2c6e39a25af913ff218361f691" kindref="member">currData</ref>[j]++;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="_display_8h_1ad609934bdce8f8169cc609cb7913f507" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_display_8ino_1ad609934bdce8f8169cc609cb7913f507" kindref="member">aux_voltage_read</ref>()<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>aux_voltage<sp/>=<sp/>3.3<sp/>*<sp/>analogRead(13)<sp/>/<sp/>1024.0;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>aux_voltage<sp/>*=<sp/>42.0<sp/>/<sp/>10.0;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>aux_voltage;</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/Display.ino"/>
  </compounddef>
</doxygen>
