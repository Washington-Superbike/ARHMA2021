<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="_c_a_n_8h" kind="file" language="C++">
    <compoundname>CAN.h</compoundname>
    <includes local="no">FlexCAN_T4.h</includes>
    <includes refid="_display_8h" local="yes">Display.h</includes>
    <includes refid="_free_r_t_o_s___t_e_e_n_s_y4_8h" local="yes">FreeRTOS_TEENSY4.h</includes>
    <includedby refid="_c_a_n_8ino" local="yes">C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.ino</includedby>
    <includedby refid="_main_8h" local="yes">C:/Users/ponym/ARHMA2021/Firmware/Main/Main.h</includedby>
    <incdepgraph>
      <node id="5">
        <label>Adafruit_GFX.h</label>
      </node>
      <node id="4">
        <label>Adafruit_ILI9341.h</label>
      </node>
      <node id="1">
        <label>C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h</label>
        <link refid="_c_a_n_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Display.h</label>
        <link refid="_display_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>FreeRTOS_TEENSY4.h</label>
        <link refid="_free_r_t_o_s___t_e_e_n_s_y4_8h"/>
      </node>
      <node id="2">
        <label>FlexCAN_T4.h</label>
      </node>
      <node id="6">
        <label>SPI.h</label>
      </node>
      <node id="7">
        <label>XPT2046_Touchscreen.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h</label>
        <link refid="_c_a_n_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.ino</label>
        <link refid="_c_a_n_8ino"/>
      </node>
      <node id="4">
        <label>C:/Users/ponym/ARHMA2021/Firmware/Main/DataLogging.ino</label>
        <link refid="_data_logging_8ino"/>
      </node>
      <node id="5">
        <label>C:/Users/ponym/ARHMA2021/Firmware/Main/Display.ino</label>
        <link refid="_display_8ino"/>
      </node>
      <node id="3">
        <label>C:/Users/ponym/ARHMA2021/Firmware/Main/Main.h</label>
        <link refid="_main_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>C:/Users/ponym/ARHMA2021/Firmware/Main/Main.ino</label>
        <link refid="_main_8ino"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_motor_stats" prot="public">MotorStats</innerclass>
    <innerclass refid="struct_motor_temps" prot="public">MotorTemps</innerclass>
    <innerclass refid="struct_charge_controller_stats" prot="public">ChargeControllerStats</innerclass>
    <innerclass refid="struct_charger_stats" prot="public">ChargerStats</innerclass>
    <innerclass refid="struct_b_m_s_status" prot="public">BMSStatus</innerclass>
    <innerclass refid="struct_thermistor_temps" prot="public">ThermistorTemps</innerclass>
    <innerclass refid="struct_cell_voltages" prot="public">CellVoltages</innerclass>
    <innerclass refid="struct_c_a_n_task_data" prot="public">CANTaskData</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_c_a_n_8h_1ab9d0930315055c0f1a6511c6cc3c5524" prot="public" static="no">
        <name>CAN_TASK_STACK_SIZE</name>
        <initializer><ref refid="_free_r_t_o_s_config__default_8h_1a6c534a6cf8a00528fe0be42083484f9a" kindref="member">configMINIMAL_STACK_SIZE</ref> + 4096</initializer>
        <briefdescription>
<para>Uses the configMINIMAL_STACK_SIZE variable in <ref refid="_main_8h" kindref="compound">Main.h</ref> to add up to the stack size used for the <ref refid="_c_a_n_8h_1a785e095da30ce4993a186804102bf2ea" kindref="member">canTask()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="30" column="9" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_c_a_n_8h_1a1b593ffe62c4590fa197331661393984" prot="public" static="no">
        <name>MOTOR_STATS_MSG</name>
        <initializer>0x0CF11E05</initializer>
        <briefdescription>
<para>Motor controller message - CAN. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="33" column="9" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_c_a_n_8h_1a464be4036d5c85f472f461fc987eb2da" prot="public" static="no">
        <name>MOTOR_TEMPS_MSG</name>
        <initializer>0x0CF11F05</initializer>
        <briefdescription>
<para>Motor controller message - CAN. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="35" column="9" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_c_a_n_8h_1ac7e658bcd09f49f37c7732ddc1c80fe2" prot="public" static="no">
        <name>EVCC_STATS</name>
        <initializer>0x18e54024</initializer>
        <briefdescription>
<para>Charge controller status (current,volt...) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="37" column="9" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_c_a_n_8h_1aaa765e2d2381f199ed620b8d6962f60d" prot="public" static="no">
        <name>CHARGER_STATS</name>
        <initializer>0x18eb2440</initializer>
        <briefdescription>
<para>Thunderstruck Charger status (current,volt...) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="39" column="9" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_c_a_n_8h_1a44d631b0f4e7e294bc26dd9c77d3dcb9" prot="public" static="no">
        <name>DD_BMS_STATUS_IND</name>
        <initializer>0x01dd0001</initializer>
        <briefdescription>
<para>BMS cell data message (overvolt,undervolt...) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="41" column="9" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_c_a_n_8h_1a5a71b982a71be6bc19546f4c8fecadd7" prot="public" static="no">
        <name>DD_BMSC_TH_STATUS_IND</name>
        <initializer>0x01df0e00</initializer>
        <briefdescription>
<para>Themistor values message. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="43" column="9" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_c_a_n_8h_1a366031af35039c965b2bb3ac07dd702a" prot="public" static="no">
        <name>BMSC1_LTC1_CELLS_04</name>
        <initializer>0x01df0900</initializer>
        <briefdescription>
<para>Convention: BMSC, LTC, CELL RANGE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="45" column="9" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_c_a_n_8h_1a2da14593c5f2bdd4bc417f9e66bc2a75" prot="public" static="no">
        <name>BMSC1_LTC1_CELLS_58</name>
        <initializer>0x01df0a00</initializer>
        <briefdescription>
<para>Convention: BMSC, LTC, CELL RANGE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="47" column="9" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_c_a_n_8h_1ac1908e8612424d72ae778e43759f077f" prot="public" static="no">
        <name>BMSC1_LTC1_CELLS_912</name>
        <initializer>0x01df0b00</initializer>
        <briefdescription>
<para>Convention: BMSC, LTC, CELL RANGE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="49" column="9" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_c_a_n_8h_1a76c8bda430a00f369aed9309100c3107" prot="public" static="no">
        <name>BMSC1_LTC2_CELLS_04</name>
        <initializer>0x01df0901</initializer>
        <briefdescription>
<para>Convention: BMSC, LTC, CELL RANGE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="51" column="9" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_c_a_n_8h_1aa605748f6dfeb5f3ba7b8b473a2f41b5" prot="public" static="no">
        <name>BMSC1_LTC2_CELLS_58</name>
        <initializer>0x01df0a01</initializer>
        <briefdescription>
<para>Convention: BMSC, LTC, CELL RANGE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="53" column="9" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_c_a_n_8h_1af80d69aa4a06cbc8b1137773336f74ec" prot="public" static="no">
        <name>BMSC1_LTC2_CELLS_912</name>
        <initializer>0x01df0b01</initializer>
        <briefdescription>
<para>Convention: BMSC, LTC, CELL RANGE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="55" column="9" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_c_a_n_8h_1aedb50849ed846717c3096b10fb75d537" prot="public" static="no">
        <name>BMS_CELLS</name>
        <initializer>24</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is set to 24 instead of 20 because the BMS sends cells in packs of 12 so it makes the decipher function simpler. This represents the number of cells connected to the main accumulator BMS </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="60" column="9" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_c_a_n_8h_1aa4303f5a4b2f41108b988f850270b2d1" prot="public" static="no" mutable="no">
        <type>FlexCAN_T4&lt; CAN2, RX_SIZE_256, TX_SIZE_16 &gt;</type>
        <definition>FlexCAN_T4&lt;CAN2, RX_SIZE_256, TX_SIZE_16&gt; CAN_bus</definition>
        <argsstring></argsstring>
        <name>CAN_bus</name>
        <briefdescription>
<para>CAN bus handle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="63" column="12" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_c_a_n_8h_1afef5641c16f897cbe9fc00682fb749ed" prot="public" static="no" mutable="no">
        <type>CAN_message_t</type>
        <definition>CAN_message_t CAN_msg</definition>
        <argsstring></argsstring>
        <name>CAN_msg</name>
        <briefdescription>
<para>Used to format reading/writing on the CAN bus. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="66" column="15" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_c_a_n_8h_1af798cac38f8c00111b4be880f47d8020" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool cellVoltagesReady[24]</definition>
        <argsstring>[24]</argsstring>
        <name>cellVoltagesReady</name>
        <initializer>= {false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If cellVoltagesReady[INDEX] is true, we have received that cell&apos;s voltage from the BMS it is false otherwise (so we know when we have collected all distinct cell voltages </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="70" column="13" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_c_a_n_8h_1a785e095da30ce4993a186804102bf2ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void canTask</definition>
        <argsstring>(void *canData)</argsstring>
        <name>canTask</name>
        <param>
          <type>void *</type>
          <declname>canData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>First <ref refid="_c_a_n_8h_1a785e095da30ce4993a186804102bf2ea" kindref="member">canTask()</ref> checks for new incoming messages</para>
<para>NOTE: CAN breaks if we try sending messages with 0 other nodes on the bus as there is no node to &apos;ACK&apos; our message. Therefore, change CAN_NODES in <ref refid="_main_8h" kindref="compound">Main.h</ref> to make sure things dont break.</para>
<para>Ask for other half of cell voltages from BMS every 2 seconds</para>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="163" column="6" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.ino" bodystart="31" bodyend="53" declfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" declline="163" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_c_a_n_8h_1a833ae6516ecb5cb3f8a7bd5adbf2bd9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setupCAN</definition>
        <argsstring>()</argsstring>
        <name>setupCAN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="164" column="6" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.ino" bodystart="55" bodyend="58" declfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" declline="164" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_c_a_n_8h_1acc8ad6a9a2388c904e5c2a81e263c59d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void decipherEVCCStats</definition>
        <argsstring>(CAN_message_t msg, ChargeControllerStats evccStats)</argsstring>
        <name>decipherEVCCStats</name>
        <param>
          <type>CAN_message_t</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="struct_charge_controller_stats" kindref="compound">ChargeControllerStats</ref></type>
          <declname>evccStats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="165" column="6" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.ino" bodystart="60" bodyend="64" declfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" declline="165" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_c_a_n_8h_1a3e5ce0cee4895bc07047a515ac2fa8ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void decipherChargerStats</definition>
        <argsstring>(CAN_message_t msg, ChargerStats chargerStats)</argsstring>
        <name>decipherChargerStats</name>
        <param>
          <type>CAN_message_t</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="struct_charger_stats" kindref="compound">ChargerStats</ref></type>
          <declname>chargerStats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="166" column="6" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.ino" bodystart="66" bodyend="72" declfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" declline="166" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_c_a_n_8h_1abd98b0e43fb7330bf8964d8da390810f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void decodeMotorStats</definition>
        <argsstring>(CAN_message_t msg, MotorStats motorStats)</argsstring>
        <name>decodeMotorStats</name>
        <param>
          <type>CAN_message_t</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="struct_motor_stats" kindref="compound">MotorStats</ref></type>
          <declname>motorStats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="167" column="6" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.ino" bodystart="74" bodyend="79" declfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" declline="167" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_c_a_n_8h_1a950c51dd93e1585b49156c52113ab832" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void decodeMotorTemps</definition>
        <argsstring>(CAN_message_t msg, MotorTemps motorTemps)</argsstring>
        <name>decodeMotorTemps</name>
        <param>
          <type>CAN_message_t</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="struct_motor_temps" kindref="compound">MotorTemps</ref></type>
          <declname>motorTemps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="168" column="6" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.ino" bodystart="81" bodyend="86" declfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" declline="168" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_c_a_n_8h_1ac7f58797b08a603835f0488b5fe3fb7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void decipherBMSStatus</definition>
        <argsstring>(CAN_message_t msg, BMSStatus bmsStatus)</argsstring>
        <name>decipherBMSStatus</name>
        <param>
          <type>CAN_message_t</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="struct_b_m_s_status" kindref="compound">BMSStatus</ref></type>
          <declname>bmsStatus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="169" column="6" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.ino" bodystart="88" bodyend="94" declfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" declline="169" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_c_a_n_8h_1ac7f0128ba5279b58ce4917ff6d80264e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void decipherCellsVoltage</definition>
        <argsstring>(CAN_message_t msg, CellVoltages cellVoltages)</argsstring>
        <name>decipherCellsVoltage</name>
        <param>
          <type>CAN_message_t</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="struct_cell_voltages" kindref="compound">CellVoltages</ref></type>
          <declname>cellVoltages</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="170" column="6" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.ino" bodystart="96" bodyend="121" declfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" declline="170" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_c_a_n_8h_1a11cd027f4ad6ca2a6b9a860a07fb8e41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void decipherThermistors</definition>
        <argsstring>(CAN_message_t msg, ThermistorTemps thermistorTemps)</argsstring>
        <name>decipherThermistors</name>
        <param>
          <type>CAN_message_t</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="struct_thermistor_temps" kindref="compound">ThermistorTemps</ref></type>
          <declname>thermistorTemps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="171" column="6" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.ino" bodystart="123" bodyend="132" declfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" declline="171" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_c_a_n_8h_1afd1fb5329197c4478969008e0ee42f90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateSeriesVoltage</definition>
        <argsstring>(CellVoltages cellVs)</argsstring>
        <name>calculateSeriesVoltage</name>
        <param>
          <type><ref refid="struct_cell_voltages" kindref="compound">CellVoltages</ref></type>
          <declname>cellVs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="172" column="6" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.ino" bodystart="135" bodyend="142" declfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" declline="172" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_c_a_n_8h_1ab92f5f7e74cba4411e9f1c6f32a720a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void checkCAN</definition>
        <argsstring>(CANTaskData canData)</argsstring>
        <name>checkCAN</name>
        <param>
          <type><ref refid="struct_c_a_n_task_data" kindref="compound">CANTaskData</ref></type>
          <declname>canData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="173" column="6" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.ino" bodystart="145" bodyend="187" declfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" declline="173" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_c_a_n_8h_1a317708f05ea5de4b748e27c49e2a85e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void printBMSStatus</definition>
        <argsstring>()</argsstring>
        <name>printBMSStatus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="174" column="6" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.ino" bodystart="190" bodyend="221" declfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" declline="174" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_c_a_n_8h_1ad899aaa07def0c8757bea6e9a75f878d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void printMessage</definition>
        <argsstring>(CAN_message_t msg)</argsstring>
        <name>printMessage</name>
        <param>
          <type>CAN_message_t</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="175" column="6" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.ino" bodystart="224" bodyend="230" declfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" declline="175" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_c_a_n_8h_1a0953b2f37f0e637d3f5fba2148109d2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void requestCellVoltages</definition>
        <argsstring>(int LTC)</argsstring>
        <name>requestCellVoltages</name>
        <param>
          <type>int</type>
          <declname>LTC</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" line="176" column="6" bodyfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.ino" bodystart="234" bodyend="242" declfile="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h" declline="176" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="_c_a_n_8h" kindref="compound">CAN.h</ref> config file for the CAN task for the bike&apos;s firmware. This defines the variables that are passed along to the <ref refid="_c_a_n_8ino" kindref="compound">CAN.ino</ref> file and others if they use it. Then it creates the initial reference (there&apos;s a proper C programming term for it) for all the methods used in <ref refid="_c_a_n_8ino" kindref="compound">CAN.ino</ref>. This file also creates multiple typedef structs that basically allow us to package the data that is processed in CAN, nicely. There are a lot of structs and they will be spoken about in detail below. Like all header files, this exists as the skeleton/framework for the .ino or main c file. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Washington Superbike </para>
</simplesect>
<simplesect kind="date"><para>1-March-2023 </para>
</simplesect>
<simplesect kind="note"><para>Frankly, unless you add more CAN devices or if the BMS or any other CAN device acts up, you should have no reason to update or mess with this at all.</para>
</simplesect>
<xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>Nothing? <linebreak/>
 <linebreak/>
 More Nothing? <linebreak/>
 <linebreak/>
 Nothing supreme? <linebreak/>
 <linebreak/>
 Nothing maxima. </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_CAN_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_CAN_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;FlexCAN_T4.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_display_8h" kindref="compound">Display.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_free_r_t_o_s___t_e_e_n_s_y4_8h" kindref="compound">FreeRTOS_TEENSY4.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="_c_a_n_8h_1ab9d0930315055c0f1a6511c6cc3c5524" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_TASK_STACK_SIZE<sp/>configMINIMAL_STACK_SIZE<sp/>+<sp/>4096</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="_c_a_n_8h_1a1b593ffe62c4590fa197331661393984" refkind="member"><highlight class="preprocessor">#define<sp/>MOTOR_STATS_MSG<sp/>0x0CF11E05</highlight></codeline>
<codeline lineno="35" refid="_c_a_n_8h_1a464be4036d5c85f472f461fc987eb2da" refkind="member"><highlight class="preprocessor">#define<sp/>MOTOR_TEMPS_MSG<sp/>0x0CF11F05</highlight></codeline>
<codeline lineno="37" refid="_c_a_n_8h_1ac7e658bcd09f49f37c7732ddc1c80fe2" refkind="member"><highlight class="preprocessor">#define<sp/>EVCC_STATS<sp/>0x18e54024</highlight></codeline>
<codeline lineno="39" refid="_c_a_n_8h_1aaa765e2d2381f199ed620b8d6962f60d" refkind="member"><highlight class="preprocessor">#define<sp/>CHARGER_STATS<sp/>0x18eb2440</highlight></codeline>
<codeline lineno="41" refid="_c_a_n_8h_1a44d631b0f4e7e294bc26dd9c77d3dcb9" refkind="member"><highlight class="preprocessor">#define<sp/>DD_BMS_STATUS_IND<sp/>0x01dd0001</highlight></codeline>
<codeline lineno="43" refid="_c_a_n_8h_1a5a71b982a71be6bc19546f4c8fecadd7" refkind="member"><highlight class="preprocessor">#define<sp/>DD_BMSC_TH_STATUS_IND<sp/>0x01df0e00</highlight></codeline>
<codeline lineno="45" refid="_c_a_n_8h_1a366031af35039c965b2bb3ac07dd702a" refkind="member"><highlight class="preprocessor">#define<sp/>BMSC1_LTC1_CELLS_04<sp/><sp/>0x01df0900</highlight></codeline>
<codeline lineno="47" refid="_c_a_n_8h_1a2da14593c5f2bdd4bc417f9e66bc2a75" refkind="member"><highlight class="preprocessor">#define<sp/>BMSC1_LTC1_CELLS_58<sp/><sp/>0x01df0a00</highlight></codeline>
<codeline lineno="49" refid="_c_a_n_8h_1ac1908e8612424d72ae778e43759f077f" refkind="member"><highlight class="preprocessor">#define<sp/>BMSC1_LTC1_CELLS_912<sp/>0x01df0b00</highlight></codeline>
<codeline lineno="51" refid="_c_a_n_8h_1a76c8bda430a00f369aed9309100c3107" refkind="member"><highlight class="preprocessor">#define<sp/>BMSC1_LTC2_CELLS_04<sp/><sp/>0x01df0901</highlight></codeline>
<codeline lineno="53" refid="_c_a_n_8h_1aa605748f6dfeb5f3ba7b8b473a2f41b5" refkind="member"><highlight class="preprocessor">#define<sp/>BMSC1_LTC2_CELLS_58<sp/><sp/>0x01df0a01</highlight></codeline>
<codeline lineno="55" refid="_c_a_n_8h_1af80d69aa4a06cbc8b1137773336f74ec" refkind="member"><highlight class="preprocessor">#define<sp/>BMSC1_LTC2_CELLS_912<sp/>0x01df0b01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="_c_a_n_8h_1aedb50849ed846717c3096b10fb75d537" refkind="member"><highlight class="preprocessor">#define<sp/>BMS_CELLS<sp/>24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="_c_a_n_8h_1aa4303f5a4b2f41108b988f850270b2d1" refkind="member"><highlight class="normal">FlexCAN_T4&lt;CAN2,<sp/>RX_SIZE_256,<sp/>TX_SIZE_16&gt;<sp/><ref refid="_c_a_n_8h_1aa4303f5a4b2f41108b988f850270b2d1" kindref="member">CAN_bus</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="_c_a_n_8h_1afef5641c16f897cbe9fc00682fb749ed" refkind="member"><highlight class="normal">CAN_message_t<sp/><ref refid="_c_a_n_8h_1afef5641c16f897cbe9fc00682fb749ed" kindref="member">CAN_msg</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="_c_a_n_8h_1af798cac38f8c00111b4be880f47d8020" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_c_a_n_8h_1af798cac38f8c00111b4be880f47d8020" kindref="member">cellVoltagesReady</ref>[<ref refid="_c_a_n_8h_1aedb50849ed846717c3096b10fb75d537" kindref="member">BMS_CELLS</ref>]<sp/>=<sp/>{</highlight><highlight class="keyword">false</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="struct_motor_stats" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="77" refid="struct_motor_stats_1a7e3450d33d8be341dea374a2fcafd257" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="struct_motor_stats_1a7e3450d33d8be341dea374a2fcafd257" kindref="member">RPM</ref>;</highlight></codeline>
<codeline lineno="78" refid="struct_motor_stats_1ab207f3db0daa47cabc8644495bca6d4e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="struct_motor_stats_1ab207f3db0daa47cabc8644495bca6d4e" kindref="member">motorCurrent</ref>;</highlight></codeline>
<codeline lineno="79" refid="struct_motor_stats_1acf61562c6e2b1fdcdb548a04bff1f0aa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="struct_motor_stats_1acf61562c6e2b1fdcdb548a04bff1f0aa" kindref="member">motorControllerBatteryVoltage</ref>;</highlight></codeline>
<codeline lineno="80" refid="struct_motor_stats_1af51eb591d7b6b57838499e55d5f2828b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="struct_motor_stats_1af51eb591d7b6b57838499e55d5f2828b" kindref="member">errorMessage</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}<sp/><ref refid="struct_motor_stats" kindref="compound">MotorStats</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="struct_motor_temps" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="88" refid="struct_motor_temps_1acd9280e84ed18ff75d285e1377c01443" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="struct_motor_temps_1acd9280e84ed18ff75d285e1377c01443" kindref="member">throttle</ref>;</highlight></codeline>
<codeline lineno="89" refid="struct_motor_temps_1a1c8b1bb77f968573fe2d1af0a0815d35" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="struct_motor_temps_1a1c8b1bb77f968573fe2d1af0a0815d35" kindref="member">motorControllerTemperature</ref>;</highlight></codeline>
<codeline lineno="90" refid="struct_motor_temps_1ad9864aa48ce76c5965919c459cc6e9b7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="struct_motor_temps_1ad9864aa48ce76c5965919c459cc6e9b7" kindref="member">motorTemperature</ref>;</highlight></codeline>
<codeline lineno="91" refid="struct_motor_temps_1aeb45f993f33820d44f9f4d1f02cf0f13" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">*<sp/><ref refid="struct_motor_temps_1aeb45f993f33820d44f9f4d1f02cf0f13" kindref="member">controllerStatus</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}<sp/><ref refid="struct_motor_temps" kindref="compound">MotorTemps</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="struct_charge_controller_stats" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="99" refid="struct_charge_controller_stats_1a16a3123ac01bcd73faa3a97e6ec4a774" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">*<sp/><ref refid="struct_charge_controller_stats_1a16a3123ac01bcd73faa3a97e6ec4a774" kindref="member">en</ref>;</highlight></codeline>
<codeline lineno="100" refid="struct_charge_controller_stats_1a928012799250fc25ea8510f4b5a3f873" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="struct_charge_controller_stats_1a928012799250fc25ea8510f4b5a3f873" kindref="member">chargeVoltage</ref>;</highlight></codeline>
<codeline lineno="101" refid="struct_charge_controller_stats_1ae130510a45203d35d88f44253b5837cb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="struct_charge_controller_stats_1ae130510a45203d35d88f44253b5837cb" kindref="member">chargeCurrent</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}<sp/><ref refid="struct_charge_controller_stats" kindref="compound">ChargeControllerStats</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="struct_charger_stats" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="109" refid="struct_charger_stats_1ace07d9acd921d4f06f44ff347591d32b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">*<sp/><ref refid="struct_charger_stats_1ace07d9acd921d4f06f44ff347591d32b" kindref="member">statusFlag</ref>;</highlight></codeline>
<codeline lineno="110" refid="struct_charger_stats_1a35334daccd006a7cdbb635e1ac8bed14" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">*<sp/><ref refid="struct_charger_stats_1a35334daccd006a7cdbb635e1ac8bed14" kindref="member">chargeFlag</ref>;</highlight></codeline>
<codeline lineno="111" refid="struct_charger_stats_1aae5124f4063e787f9d7b838235f66d79" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="struct_charger_stats_1aae5124f4063e787f9d7b838235f66d79" kindref="member">outputVoltage</ref>;</highlight></codeline>
<codeline lineno="112" refid="struct_charger_stats_1a0bafa595413f23895c8e4c55a64da3aa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="struct_charger_stats_1a0bafa595413f23895c8e4c55a64da3aa" kindref="member">outputCurrent</ref>;</highlight></codeline>
<codeline lineno="113" refid="struct_charger_stats_1a404624494d0facf36c3928f337eb4e87" refkind="member"><highlight class="normal"><sp/><sp/>int8_t*<sp/><ref refid="struct_charger_stats_1a404624494d0facf36c3928f337eb4e87" kindref="member">chargerTemp</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}<sp/><ref refid="struct_charger_stats" kindref="compound">ChargerStats</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="struct_b_m_s_status" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="122" refid="struct_b_m_s_status_1acab09ac12be3be24bce0abc90862dacd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="struct_b_m_s_status_1acab09ac12be3be24bce0abc90862dacd" kindref="member">bms_status_flag</ref>;</highlight></codeline>
<codeline lineno="123" refid="struct_b_m_s_status_1a02b6f2e9d6f9655e47184007195c7265" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="struct_b_m_s_status_1a02b6f2e9d6f9655e47184007195c7265" kindref="member">bms_c_id</ref>;</highlight></codeline>
<codeline lineno="124" refid="struct_b_m_s_status_1a8b316c1509dc351897db5b5726026e3e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="struct_b_m_s_status_1a8b316c1509dc351897db5b5726026e3e" kindref="member">bms_c_fault</ref>;</highlight></codeline>
<codeline lineno="125" refid="struct_b_m_s_status_1a53663d5549fc358f1f06927c9b2c3676" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="struct_b_m_s_status_1a53663d5549fc358f1f06927c9b2c3676" kindref="member">ltc_fault</ref>;</highlight></codeline>
<codeline lineno="126" refid="struct_b_m_s_status_1aafe89416c934c33489db12fdce4d6f6e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="struct_b_m_s_status_1aafe89416c934c33489db12fdce4d6f6e" kindref="member">ltc_count</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}<sp/><ref refid="struct_b_m_s_status" kindref="compound">BMSStatus</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="struct_thermistor_temps" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="134" refid="struct_thermistor_temps_1a586a85cf3b40e573c835319024d7eb5b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="struct_thermistor_temps_1a586a85cf3b40e573c835319024d7eb5b" kindref="member">temps</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}<sp/><ref refid="struct_thermistor_temps" kindref="compound">ThermistorTemps</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="struct_cell_voltages" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="142" refid="struct_cell_voltages_1a6af0d6a1dbf317365e4fa56be6c595fc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="struct_cell_voltages_1a6af0d6a1dbf317365e4fa56be6c595fc" kindref="member">cellVoltages</ref>;</highlight></codeline>
<codeline lineno="143" refid="struct_cell_voltages_1a739cccc4cfe6c366e7474ae1c71097bf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="struct_cell_voltages_1a739cccc4cfe6c366e7474ae1c71097bf" kindref="member">seriesVoltage</ref>;</highlight></codeline>
<codeline lineno="144" refid="struct_cell_voltages_1a844b5b2d0bd58e1147076ab8aacc420a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/><ref refid="struct_cell_voltages_1a844b5b2d0bd58e1147076ab8aacc420a" kindref="member">ready</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}<sp/><ref refid="struct_cell_voltages" kindref="compound">CellVoltages</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="struct_c_a_n_task_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="153" refid="struct_c_a_n_task_data_1a47d2113927a00ff554160b7fabfc6471" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_motor_stats" kindref="compound">MotorStats</ref><sp/><ref refid="struct_c_a_n_task_data_1a47d2113927a00ff554160b7fabfc6471" kindref="member">motorStats</ref>;</highlight></codeline>
<codeline lineno="154" refid="struct_c_a_n_task_data_1a28c4ff53f540fa92e730acfd0def5d88" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_motor_temps" kindref="compound">MotorTemps</ref><sp/><ref refid="struct_c_a_n_task_data_1a28c4ff53f540fa92e730acfd0def5d88" kindref="member">motorTemps</ref>;</highlight></codeline>
<codeline lineno="155" refid="struct_c_a_n_task_data_1a02b8e7f2fddd541dfd7b42efb7a1bbf3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_b_m_s_status" kindref="compound">BMSStatus</ref><sp/><ref refid="struct_c_a_n_task_data_1a02b8e7f2fddd541dfd7b42efb7a1bbf3" kindref="member">bmsStatus</ref>;</highlight></codeline>
<codeline lineno="156" refid="struct_c_a_n_task_data_1a1f1f9a7c959359030e8ab98d5ecf6a57" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_thermistor_temps" kindref="compound">ThermistorTemps</ref><sp/><ref refid="struct_c_a_n_task_data_1a1f1f9a7c959359030e8ab98d5ecf6a57" kindref="member">thermistorTemps</ref>;</highlight></codeline>
<codeline lineno="157" refid="struct_c_a_n_task_data_1a3d198d3fdb7daa5117a01954825e30ad" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_cell_voltages" kindref="compound">CellVoltages</ref><sp/><ref refid="struct_c_a_n_task_data_1a3d198d3fdb7daa5117a01954825e30ad" kindref="member">cellVoltages</ref>;</highlight></codeline>
<codeline lineno="158" refid="struct_c_a_n_task_data_1a173c0fd4a49d1c2c1d01225b28d04f19" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_charger_stats" kindref="compound">ChargerStats</ref><sp/><ref refid="struct_c_a_n_task_data_1a173c0fd4a49d1c2c1d01225b28d04f19" kindref="member">chargerStats</ref>;</highlight></codeline>
<codeline lineno="159" refid="struct_c_a_n_task_data_1a541dfccdee9cf36b2252abfffbbdda41" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_charge_controller_stats" kindref="compound">ChargeControllerStats</ref><sp/><ref refid="struct_c_a_n_task_data_1a541dfccdee9cf36b2252abfffbbdda41" kindref="member">chargeControllerStats</ref>;</highlight></codeline>
<codeline lineno="160" refid="struct_c_a_n_task_data_1a3bcffb9987e3444b4e55f523b32ef119" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="struct_c_a_n_task_data_1a3bcffb9987e3444b4e55f523b32ef119" kindref="member">seriesVoltage</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}<sp/><ref refid="struct_c_a_n_task_data" kindref="compound">CANTaskData</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_c_a_n_8h_1a785e095da30ce4993a186804102bf2ea" kindref="member">canTask</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*canData);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_c_a_n_8h_1a833ae6516ecb5cb3f8a7bd5adbf2bd9b" kindref="member">setupCAN</ref>();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_c_a_n_8h_1acc8ad6a9a2388c904e5c2a81e263c59d" kindref="member">decipherEVCCStats</ref>(CAN_message_t<sp/>msg,<sp/><ref refid="struct_charge_controller_stats" kindref="compound">ChargeControllerStats</ref><sp/>evccStats);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_c_a_n_8h_1a3e5ce0cee4895bc07047a515ac2fa8ea" kindref="member">decipherChargerStats</ref>(CAN_message_t<sp/>msg,<sp/><ref refid="struct_charger_stats" kindref="compound">ChargerStats</ref><sp/><ref refid="_main_8h_1aa249f1d073086c27682168bbd7dc77ee" kindref="member">chargerStats</ref>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_c_a_n_8h_1abd98b0e43fb7330bf8964d8da390810f" kindref="member">decodeMotorStats</ref>(CAN_message_t<sp/>msg,<sp/><ref refid="struct_motor_stats" kindref="compound">MotorStats</ref><sp/><ref refid="_main_8h_1a9eeb128a9907154869e9ffa78e065039" kindref="member">motorStats</ref><sp/>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_c_a_n_8h_1a950c51dd93e1585b49156c52113ab832" kindref="member">decodeMotorTemps</ref>(CAN_message_t<sp/>msg,<sp/><ref refid="struct_motor_temps" kindref="compound">MotorTemps</ref><sp/><ref refid="_main_8h_1abb61c6dc61d12b31aad7bdadd495b70a" kindref="member">motorTemps</ref>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_c_a_n_8h_1ac7f58797b08a603835f0488b5fe3fb7c" kindref="member">decipherBMSStatus</ref>(CAN_message_t<sp/>msg,<sp/><ref refid="struct_b_m_s_status" kindref="compound">BMSStatus</ref><sp/><ref refid="_main_8h_1ae0522609134711f92c96ffa8ed05e582" kindref="member">bmsStatus</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_c_a_n_8h_1ac7f0128ba5279b58ce4917ff6d80264e" kindref="member">decipherCellsVoltage</ref>(CAN_message_t<sp/>msg,<sp/><ref refid="struct_cell_voltages" kindref="compound">CellVoltages</ref><sp/><ref refid="_main_8h_1afca6798677cebeeb7599ea00e1e243dd" kindref="member">cellVoltages</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_c_a_n_8h_1a11cd027f4ad6ca2a6b9a860a07fb8e41" kindref="member">decipherThermistors</ref>(CAN_message_t<sp/>msg,<sp/><ref refid="struct_thermistor_temps" kindref="compound">ThermistorTemps</ref><sp/><ref refid="_main_8h_1a18571448b101f12a60457d717dc4f953" kindref="member">thermistorTemps</ref>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_c_a_n_8h_1afd1fb5329197c4478969008e0ee42f90" kindref="member">calculateSeriesVoltage</ref>(<ref refid="struct_cell_voltages" kindref="compound">CellVoltages</ref><sp/>cellVs);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_c_a_n_8h_1ab92f5f7e74cba4411e9f1c6f32a720a5" kindref="member">checkCAN</ref>(<ref refid="struct_c_a_n_task_data" kindref="compound">CANTaskData</ref><sp/>canData);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_c_a_n_8h_1a317708f05ea5de4b748e27c49e2a85e8" kindref="member">printBMSStatus</ref>();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_c_a_n_8h_1ad899aaa07def0c8757bea6e9a75f878d" kindref="member">printMessage</ref>(CAN_message_t<sp/>msg);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_c_a_n_8h_1a0953b2f37f0e637d3f5fba2148109d2a" kindref="member">requestCellVoltages</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LTC);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>_CAN_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.h"/>
  </compounddef>
</doxygen>
