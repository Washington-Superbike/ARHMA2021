<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_task_8h_source" xml:lang="en-US">
<title>task.h</title>
<indexterm><primary>FreeRTOS/task.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_task_8h_source_1l00001"/>00001 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_task_8h_source_1l00002"/>00002 <emphasis role="comment">&#32;*&#32;FreeRTOS&#32;Kernel&#32;V10.2.0</emphasis>
<anchor xml:id="_task_8h_source_1l00003"/>00003 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;2019&#32;Amazon.com,&#32;Inc.&#32;or&#32;its&#32;affiliates.&#32;&#32;All&#32;Rights&#32;Reserved.</emphasis>
<anchor xml:id="_task_8h_source_1l00004"/>00004 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_task_8h_source_1l00005"/>00005 <emphasis role="comment">&#32;*&#32;Permission&#32;is&#32;hereby&#32;granted,&#32;free&#32;of&#32;charge,&#32;to&#32;any&#32;person&#32;obtaining&#32;a&#32;copy&#32;of</emphasis>
<anchor xml:id="_task_8h_source_1l00006"/>00006 <emphasis role="comment">&#32;*&#32;this&#32;software&#32;and&#32;associated&#32;documentation&#32;files&#32;(the&#32;&quot;Software&quot;),&#32;to&#32;deal&#32;in</emphasis>
<anchor xml:id="_task_8h_source_1l00007"/>00007 <emphasis role="comment">&#32;*&#32;the&#32;Software&#32;without&#32;restriction,&#32;including&#32;without&#32;limitation&#32;the&#32;rights&#32;to</emphasis>
<anchor xml:id="_task_8h_source_1l00008"/>00008 <emphasis role="comment">&#32;*&#32;use,&#32;copy,&#32;modify,&#32;merge,&#32;publish,&#32;distribute,&#32;sublicense,&#32;and/or&#32;sell&#32;copies&#32;of</emphasis>
<anchor xml:id="_task_8h_source_1l00009"/>00009 <emphasis role="comment">&#32;*&#32;the&#32;Software,&#32;and&#32;to&#32;permit&#32;persons&#32;to&#32;whom&#32;the&#32;Software&#32;is&#32;furnished&#32;to&#32;do&#32;so,</emphasis>
<anchor xml:id="_task_8h_source_1l00010"/>00010 <emphasis role="comment">&#32;*&#32;subject&#32;to&#32;the&#32;following&#32;conditions:</emphasis>
<anchor xml:id="_task_8h_source_1l00011"/>00011 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_task_8h_source_1l00012"/>00012 <emphasis role="comment">&#32;*&#32;The&#32;above&#32;copyright&#32;notice&#32;and&#32;this&#32;permission&#32;notice&#32;shall&#32;be&#32;included&#32;in&#32;all</emphasis>
<anchor xml:id="_task_8h_source_1l00013"/>00013 <emphasis role="comment">&#32;*&#32;copies&#32;or&#32;substantial&#32;portions&#32;of&#32;the&#32;Software.</emphasis>
<anchor xml:id="_task_8h_source_1l00014"/>00014 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_task_8h_source_1l00015"/>00015 <emphasis role="comment">&#32;*&#32;THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;&quot;AS&#32;IS&quot;,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
<anchor xml:id="_task_8h_source_1l00016"/>00016 <emphasis role="comment">&#32;*&#32;IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,&#32;FITNESS</emphasis>
<anchor xml:id="_task_8h_source_1l00017"/>00017 <emphasis role="comment">&#32;*&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL&#32;THE&#32;AUTHORS&#32;OR</emphasis>
<anchor xml:id="_task_8h_source_1l00018"/>00018 <emphasis role="comment">&#32;*&#32;COPYRIGHT&#32;HOLDERS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER&#32;LIABILITY,&#32;WHETHER</emphasis>
<anchor xml:id="_task_8h_source_1l00019"/>00019 <emphasis role="comment">&#32;*&#32;IN&#32;AN&#32;ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING&#32;FROM,&#32;OUT&#32;OF&#32;OR&#32;IN</emphasis>
<anchor xml:id="_task_8h_source_1l00020"/>00020 <emphasis role="comment">&#32;*&#32;CONNECTION&#32;WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS&#32;IN&#32;THE&#32;SOFTWARE.</emphasis>
<anchor xml:id="_task_8h_source_1l00021"/>00021 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_task_8h_source_1l00022"/>00022 <emphasis role="comment">&#32;*&#32;http://www.FreeRTOS.org</emphasis>
<anchor xml:id="_task_8h_source_1l00023"/>00023 <emphasis role="comment">&#32;*&#32;http://aws.amazon.com/freertos</emphasis>
<anchor xml:id="_task_8h_source_1l00024"/>00024 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_task_8h_source_1l00025"/>00025 <emphasis role="comment">&#32;*&#32;1&#32;tab&#32;==&#32;4&#32;spaces!</emphasis>
<anchor xml:id="_task_8h_source_1l00026"/>00026 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00027"/>00027 
<anchor xml:id="_task_8h_source_1l00028"/>00028 
<anchor xml:id="_task_8h_source_1l00029"/>00029 <emphasis role="preprocessor">#ifndef&#32;INC_TASK_H</emphasis>
<anchor xml:id="_task_8h_source_1l00030"/>00030 <emphasis role="preprocessor">#define&#32;INC_TASK_H</emphasis>
<anchor xml:id="_task_8h_source_1l00031"/>00031 
<anchor xml:id="_task_8h_source_1l00032"/>00032 <emphasis role="preprocessor">#ifndef&#32;INC_FREERTOS_H</emphasis>
<anchor xml:id="_task_8h_source_1l00033"/>00033 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#error&#32;&quot;include&#32;FreeRTOS.h&#32;must&#32;appear&#32;in&#32;source&#32;files&#32;before&#32;include&#32;task.h&quot;</emphasis>
<anchor xml:id="_task_8h_source_1l00034"/>00034 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_task_8h_source_1l00035"/>00035 
<anchor xml:id="_task_8h_source_1l00036"/>00036 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_list_8h">list.h</link>&quot;</emphasis>
<anchor xml:id="_task_8h_source_1l00037"/>00037 
<anchor xml:id="_task_8h_source_1l00038"/>00038 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
<anchor xml:id="_task_8h_source_1l00039"/>00039 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>&#32;{
<anchor xml:id="_task_8h_source_1l00040"/>00040 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_task_8h_source_1l00041"/>00041 
<anchor xml:id="_task_8h_source_1l00042"/>00042 <emphasis role="comment">/*-----------------------------------------------------------</emphasis>
<anchor xml:id="_task_8h_source_1l00043"/>00043 <emphasis role="comment">&#32;*&#32;MACROS&#32;AND&#32;DEFINITIONS</emphasis>
<anchor xml:id="_task_8h_source_1l00044"/>00044 <emphasis role="comment">&#32;*----------------------------------------------------------*/</emphasis>
<anchor xml:id="_task_8h_source_1l00045"/>00045 
<anchor xml:id="_task_8h_source_1l00046"/><link linkend="_task_8h_1a3de6ae5641d96a68aa027673b6588016">00046</link> <emphasis role="preprocessor">#define&#32;tskKERNEL_VERSION_NUMBER&#32;&quot;V10.2.0&quot;</emphasis>
<anchor xml:id="_task_8h_source_1l00047"/><link linkend="_task_8h_1a790e0e16f79e71d4791435a31d5b0fc7">00047</link> <emphasis role="preprocessor">#define&#32;tskKERNEL_VERSION_MAJOR&#32;10</emphasis>
<anchor xml:id="_task_8h_source_1l00048"/><link linkend="_task_8h_1ab0b5ab04d8419227d0a5ac94af6b3639">00048</link> <emphasis role="preprocessor">#define&#32;tskKERNEL_VERSION_MINOR&#32;2</emphasis>
<anchor xml:id="_task_8h_source_1l00049"/><link linkend="_task_8h_1a4cb001d5c86f4a8a5272f27227eb3247">00049</link> <emphasis role="preprocessor">#define&#32;tskKERNEL_VERSION_BUILD&#32;0</emphasis>
<anchor xml:id="_task_8h_source_1l00050"/>00050 
<anchor xml:id="_task_8h_source_1l00051"/>00051 <emphasis role="comment">/*&#32;MPU&#32;region&#32;parameters&#32;passed&#32;in&#32;ulParameters</emphasis>
<anchor xml:id="_task_8h_source_1l00052"/>00052 <emphasis role="comment">&#32;*&#32;of&#32;MemoryRegion_t&#32;struct.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00053"/>00053 <emphasis role="preprocessor">#define&#32;tskMPU_REGION_READ_ONLY&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;1UL&#32;&lt;&lt;&#32;0UL&#32;)</emphasis>
<anchor xml:id="_task_8h_source_1l00054"/>00054 <emphasis role="preprocessor">#define&#32;tskMPU_REGION_READ_WRITE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;1UL&#32;&lt;&lt;&#32;1UL&#32;)</emphasis>
<anchor xml:id="_task_8h_source_1l00055"/>00055 <emphasis role="preprocessor">#define&#32;tskMPU_REGION_EXECUTE_NEVER&#32;&#32;&#32;&#32;&#32;(&#32;1UL&#32;&lt;&lt;&#32;2UL&#32;)</emphasis>
<anchor xml:id="_task_8h_source_1l00056"/>00056 <emphasis role="preprocessor">#define&#32;tskMPU_REGION_NORMAL_MEMORY&#32;&#32;&#32;&#32;&#32;(&#32;1UL&#32;&lt;&lt;&#32;3UL&#32;)</emphasis>
<anchor xml:id="_task_8h_source_1l00057"/>00057 <emphasis role="preprocessor">#define&#32;tskMPU_REGION_DEVICE_MEMORY&#32;&#32;&#32;&#32;&#32;(&#32;1UL&#32;&lt;&lt;&#32;4UL&#32;)</emphasis>
<anchor xml:id="_task_8h_source_1l00058"/>00058 
<anchor xml:id="_task_8h_source_1l00059"/>00059 <emphasis role="comment">/*&#32;MPU&#32;region&#32;parameters&#32;passed&#32;in&#32;ulParameters</emphasis>
<anchor xml:id="_task_8h_source_1l00060"/>00060 <emphasis role="comment">&#32;*&#32;of&#32;MemoryRegion_t&#32;struct.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00061"/><link linkend="_task_8h_1a96fbec2d0baf0d3e958af5fc709de9d6">00061</link> <emphasis role="preprocessor">#define&#32;tskMPU_REGION_READ_ONLY&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;1UL&#32;&lt;&lt;&#32;0UL&#32;)</emphasis>
<anchor xml:id="_task_8h_source_1l00062"/><link linkend="_task_8h_1aa13782bf13a683798cda192165d8c5d6">00062</link> <emphasis role="preprocessor">#define&#32;tskMPU_REGION_READ_WRITE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;1UL&#32;&lt;&lt;&#32;1UL&#32;)</emphasis>
<anchor xml:id="_task_8h_source_1l00063"/><link linkend="_task_8h_1ab011150da041e1e65bc271152eabba3c">00063</link> <emphasis role="preprocessor">#define&#32;tskMPU_REGION_EXECUTE_NEVER&#32;&#32;&#32;&#32;&#32;(&#32;1UL&#32;&lt;&lt;&#32;2UL&#32;)</emphasis>
<anchor xml:id="_task_8h_source_1l00064"/><link linkend="_task_8h_1ad300fc0b16549387b185dffa7a2dc323">00064</link> <emphasis role="preprocessor">#define&#32;tskMPU_REGION_NORMAL_MEMORY&#32;&#32;&#32;&#32;&#32;(&#32;1UL&#32;&lt;&lt;&#32;3UL&#32;)</emphasis>
<anchor xml:id="_task_8h_source_1l00065"/><link linkend="_task_8h_1a4ce090b0f3d783e72e230647c0261f96">00065</link> <emphasis role="preprocessor">#define&#32;tskMPU_REGION_DEVICE_MEMORY&#32;&#32;&#32;&#32;&#32;(&#32;1UL&#32;&lt;&lt;&#32;4UL&#32;)</emphasis>
<anchor xml:id="_task_8h_source_1l00066"/>00066 
<anchor xml:id="_task_8h_source_1l00077"/>00077 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structtsk_task_control_block">tskTaskControlBlock</link>;&#32;<emphasis role="comment">/*&#32;The&#32;old&#32;naming&#32;convention&#32;is&#32;used&#32;to&#32;prevent&#32;breaking&#32;kernel&#32;aware&#32;debuggers.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00078"/><link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">00078</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structtsk_task_control_block">tskTaskControlBlock</link>*&#32;<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link>;
<anchor xml:id="_task_8h_source_1l00079"/>00079 
<anchor xml:id="_task_8h_source_1l00080"/>00080 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_task_8h_source_1l00081"/>00081 <emphasis role="comment">&#32;*&#32;Defines&#32;the&#32;prototype&#32;to&#32;which&#32;the&#32;application&#32;task&#32;hook&#32;function&#32;must</emphasis>
<anchor xml:id="_task_8h_source_1l00082"/>00082 <emphasis role="comment">&#32;*&#32;conform.</emphasis>
<anchor xml:id="_task_8h_source_1l00083"/>00083 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00084"/><link linkend="_task_8h_1af984026250bf8fece2e0068874d4661d">00084</link> <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;(*<link linkend="_task_8h_1af984026250bf8fece2e0068874d4661d">TaskHookFunction_t</link>)(&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;);
<anchor xml:id="_task_8h_source_1l00085"/>00085 
<anchor xml:id="_task_8h_source_1l00086"/>00086 <emphasis role="comment">/*&#32;Task&#32;states&#32;returned&#32;by&#32;eTaskGetState.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00087"/><link linkend="_task_8h_1a1749369458e2282a22e862a619a3892c">00087</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>
<anchor xml:id="_task_8h_source_1l00088"/>00088 {
<anchor xml:id="_task_8h_source_1l00089"/><link linkend="_task_8h_1a1749369458e2282a22e862a619a3892ca83318c0d58e6b2bafaefa1be597fb8b6">00089</link> &#32;&#32;&#32;&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892ca83318c0d58e6b2bafaefa1be597fb8b6">eRunning</link>&#32;=&#32;0,&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;task&#32;is&#32;querying&#32;the&#32;state&#32;of&#32;itself,&#32;so&#32;must&#32;be&#32;running.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00090"/><link linkend="_task_8h_1a1749369458e2282a22e862a619a3892ca8570b65f331057b2cf92c504f0a2bc83">00090</link> &#32;&#32;&#32;&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892ca8570b65f331057b2cf92c504f0a2bc83">eReady</link>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;being&#32;queried&#32;is&#32;in&#32;a&#32;read&#32;or&#32;pending&#32;ready&#32;list.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00091"/><link linkend="_task_8h_1a1749369458e2282a22e862a619a3892cad23d72c68f43b6fff4962ad4154766af">00091</link> &#32;&#32;&#32;&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892cad23d72c68f43b6fff4962ad4154766af">eBlocked</link>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;being&#32;queried&#32;is&#32;in&#32;the&#32;Blocked&#32;state.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00092"/><link linkend="_task_8h_1a1749369458e2282a22e862a619a3892caf35a900d49fdfc2502eefc68fdb70f72">00092</link> &#32;&#32;&#32;&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892caf35a900d49fdfc2502eefc68fdb70f72">eSuspended</link>,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;being&#32;queried&#32;is&#32;in&#32;the&#32;Suspended&#32;state,&#32;or&#32;is&#32;in&#32;the&#32;Blocked&#32;state&#32;with&#32;an&#32;infinite&#32;time&#32;out.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00093"/><link linkend="_task_8h_1a1749369458e2282a22e862a619a3892cacef5c6e771d3a07f656e07a13a20ba35">00093</link> &#32;&#32;&#32;&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892cacef5c6e771d3a07f656e07a13a20ba35">eDeleted</link>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;being&#32;queried&#32;has&#32;been&#32;deleted,&#32;but&#32;its&#32;TCB&#32;has&#32;not&#32;yet&#32;been&#32;freed.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00094"/>00094 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892cab32c771bb60dc8b502f65b81eef3bd86">eInvalid</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Used&#32;as&#32;an&#32;&apos;invalid&#32;state&apos;&#32;value.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00095"/><link linkend="_task_8h_1a1749369458e2282a22e862a619a3892cab32c771bb60dc8b502f65b81eef3bd86">00095</link> }&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892c">eTaskState</link>;
<anchor xml:id="_task_8h_source_1l00096"/>00096 
<anchor xml:id="_task_8h_source_1l00097"/>00097 <emphasis role="comment">/*&#32;Actions&#32;that&#32;can&#32;be&#32;performed&#32;when&#32;vTaskNotify()&#32;is&#32;called.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00098"/><link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233">00098</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>
<anchor xml:id="_task_8h_source_1l00099"/>00099 {
<anchor xml:id="_task_8h_source_1l00100"/><link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233abac2b17ab15444724b6f35d47cd0a64a">00100</link> &#32;&#32;&#32;&#32;<link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233abac2b17ab15444724b6f35d47cd0a64a">eNoAction</link>&#32;=&#32;0,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Notify&#32;the&#32;task&#32;without&#32;updating&#32;its&#32;notify&#32;value.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00101"/><link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233ab7b1af2eeee53ae78eeff37c1cb6f79b">00101</link> &#32;&#32;&#32;&#32;<link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233ab7b1af2eeee53ae78eeff37c1cb6f79b">eSetBits</link>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Set&#32;bits&#32;in&#32;the&#32;task&apos;s&#32;notification&#32;value.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00102"/><link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233a04fb0e98d2400e4cd28f1593bc868822">00102</link> &#32;&#32;&#32;&#32;<link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233a04fb0e98d2400e4cd28f1593bc868822">eIncrement</link>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Increment&#32;the&#32;task&apos;s&#32;notification&#32;value.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00103"/><link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233ab61fc296ef909186b5824c823b33e130">00103</link> &#32;&#32;&#32;&#32;<link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233ab61fc296ef909186b5824c823b33e130">eSetValueWithOverwrite</link>,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Set&#32;the&#32;task&apos;s&#32;notification&#32;value&#32;to&#32;a&#32;specific&#32;value&#32;even&#32;if&#32;the&#32;previous&#32;value&#32;has&#32;not&#32;yet&#32;been&#32;read&#32;by&#32;the&#32;task.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00104"/>00104 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233acc4dd3fe71b62c751187a2c4c515abac">eSetValueWithoutOverwrite</link>&#32;&#32;&#32;<emphasis role="comment">/*&#32;Set&#32;the&#32;task&apos;s&#32;notification&#32;value&#32;if&#32;the&#32;previous&#32;value&#32;has&#32;been&#32;read&#32;by&#32;the&#32;task.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00105"/><link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233acc4dd3fe71b62c751187a2c4c515abac">00105</link> }&#32;<link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233">eNotifyAction</link>;
<anchor xml:id="_task_8h_source_1l00106"/>00106 
<anchor xml:id="_task_8h_source_1l00107"/>00107 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_task_8h_source_1l00108"/>00108 <emphasis role="comment">&#32;*&#32;Used&#32;internally&#32;only.</emphasis>
<anchor xml:id="_task_8h_source_1l00109"/>00109 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00110"/><link linkend="_structx_t_i_m_e___o_u_t">00110</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structx_t_i_m_e___o_u_t">xTIME_OUT</link>
<anchor xml:id="_task_8h_source_1l00111"/>00111 {
<anchor xml:id="_task_8h_source_1l00112"/><link linkend="_structx_t_i_m_e___o_u_t_1a9289c6f97096a9b3e3fc705d0bc5a160">00112</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_structx_t_i_m_e___o_u_t_1a9289c6f97096a9b3e3fc705d0bc5a160">xOverflowCount</link>;
<anchor xml:id="_task_8h_source_1l00113"/><link linkend="_structx_t_i_m_e___o_u_t_1a3464939ca050f7bcc6ffe0d8d3766337">00113</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;<link linkend="_structx_t_i_m_e___o_u_t_1a3464939ca050f7bcc6ffe0d8d3766337">xTimeOnEntering</link>;
<anchor xml:id="_task_8h_source_1l00114"/><link linkend="_task_8h_1a558b407b5433bee1696535e3c4816bdf">00114</link> }&#32;<link linkend="_task_8h_1a558b407b5433bee1696535e3c4816bdf">TimeOut_t</link>;
<anchor xml:id="_task_8h_source_1l00115"/>00115 
<anchor xml:id="_task_8h_source_1l00116"/>00116 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_task_8h_source_1l00117"/>00117 <emphasis role="comment">&#32;*&#32;Defines&#32;the&#32;memory&#32;ranges&#32;allocated&#32;to&#32;the&#32;task&#32;when&#32;an&#32;MPU&#32;is&#32;used.</emphasis>
<anchor xml:id="_task_8h_source_1l00118"/>00118 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00119"/><link linkend="_structx_m_e_m_o_r_y___r_e_g_i_o_n">00119</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structx_m_e_m_o_r_y___r_e_g_i_o_n">xMEMORY_REGION</link>
<anchor xml:id="_task_8h_source_1l00120"/>00120 {
<anchor xml:id="_task_8h_source_1l00121"/><link linkend="_structx_m_e_m_o_r_y___r_e_g_i_o_n_1a228036bbfdbc38f170e45deadb166172">00121</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="_structx_m_e_m_o_r_y___r_e_g_i_o_n_1a228036bbfdbc38f170e45deadb166172">pvBaseAddress</link>;
<anchor xml:id="_task_8h_source_1l00122"/><link linkend="_structx_m_e_m_o_r_y___r_e_g_i_o_n_1a97e59578d3c4c46270d33e7206258a65">00122</link> &#32;&#32;&#32;&#32;uint32_t&#32;<link linkend="_structx_m_e_m_o_r_y___r_e_g_i_o_n_1a97e59578d3c4c46270d33e7206258a65">ulLengthInBytes</link>;
<anchor xml:id="_task_8h_source_1l00123"/><link linkend="_structx_m_e_m_o_r_y___r_e_g_i_o_n_1a6ba180553e9a318f23acc5f4664934e3">00123</link> &#32;&#32;&#32;&#32;uint32_t&#32;<link linkend="_structx_m_e_m_o_r_y___r_e_g_i_o_n_1a6ba180553e9a318f23acc5f4664934e3">ulParameters</link>;
<anchor xml:id="_task_8h_source_1l00124"/><link linkend="_task_8h_1abc1e4d1b3f52e2a9101487e1831b992a">00124</link> }&#32;<link linkend="_task_8h_1abc1e4d1b3f52e2a9101487e1831b992a">MemoryRegion_t</link>;
<anchor xml:id="_task_8h_source_1l00125"/>00125 
<anchor xml:id="_task_8h_source_1l00126"/>00126 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_task_8h_source_1l00127"/>00127 <emphasis role="comment">&#32;*&#32;Parameters&#32;required&#32;to&#32;create&#32;an&#32;MPU&#32;protected&#32;task.</emphasis>
<anchor xml:id="_task_8h_source_1l00128"/>00128 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00129"/><link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s">00129</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s">xTASK_PARAMETERS</link>
<anchor xml:id="_task_8h_source_1l00130"/>00130 {
<anchor xml:id="_task_8h_source_1l00131"/><link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1a7527993402054565cda38251c8922880">00131</link> &#32;&#32;&#32;&#32;<link linkend="_projdefs_8h_1a9b32502ff92c255c686dacde53c1cba0">TaskFunction_t</link>&#32;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1a7527993402054565cda38251c8922880">pvTaskCode</link>;
<anchor xml:id="_task_8h_source_1l00132"/><link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1a7b3e5583acf9de8bacac572a42246459">00132</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1a7b3e5583acf9de8bacac572a42246459">pcName</link>;&#32;&#32;<emphasis role="comment">/*lint&#32;!e971&#32;Unqualified&#32;char&#32;types&#32;are&#32;allowed&#32;for&#32;strings&#32;and&#32;single&#32;characters&#32;only.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00133"/><link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1ac2edb442cd1a9dc5435c7735ed99c83e">00133</link> &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ae4e85bffd36d76cf2796092f0ccd784a">configSTACK_DEPTH_TYPE</link>&#32;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1ac2edb442cd1a9dc5435c7735ed99c83e">usStackDepth</link>;
<anchor xml:id="_task_8h_source_1l00134"/><link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1accbb9f4de75b5b5be750198b52390c7f">00134</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1accbb9f4de75b5b5be750198b52390c7f">pvParameters</link>;
<anchor xml:id="_task_8h_source_1l00135"/><link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1aa1aff14035db645e2bdcc85b3cdc9bab">00135</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1aa1aff14035db645e2bdcc85b3cdc9bab">uxPriority</link>;
<anchor xml:id="_task_8h_source_1l00136"/><link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1a946c525d3765369780538f9bc3f3586d">00136</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1aa73b01e0200940d619095fb74fb3030b">StackType_t</link>&#32;*<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1a946c525d3765369780538f9bc3f3586d">puxStackBuffer</link>;
<anchor xml:id="_task_8h_source_1l00137"/><link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1ae8b97c6b7a344bf09b066b0844844d66">00137</link> &#32;&#32;&#32;&#32;<link linkend="_structx_m_e_m_o_r_y___r_e_g_i_o_n">MemoryRegion_t</link>&#32;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1ae8b97c6b7a344bf09b066b0844844d66">xRegions</link>[&#32;<link linkend="_portable_8h_1aca7e1a8a568a38b74cc9db10c8efebda">portNUM_CONFIGURABLE_REGIONS</link>&#32;];
<anchor xml:id="_task_8h_source_1l00138"/>00138 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;(&#32;portUSING_MPU_WRAPPERS&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configSUPPORT_STATIC_ALLOCATION&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_task_8h_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structx_s_t_a_t_i_c___t_c_b">StaticTask_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxTaskBuffer;
<anchor xml:id="_task_8h_source_1l00140"/>00140 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_task_8h_source_1l00141"/><link linkend="_task_8h_1a388dc3e95bc2a93a2841a8d1e49634f3">00141</link> }&#32;<link linkend="_task_8h_1a388dc3e95bc2a93a2841a8d1e49634f3">TaskParameters_t</link>;
<anchor xml:id="_task_8h_source_1l00142"/>00142 
<anchor xml:id="_task_8h_source_1l00143"/>00143 <emphasis role="comment">/*&#32;Used&#32;with&#32;the&#32;uxTaskGetSystemState()&#32;function&#32;to&#32;return&#32;the&#32;state&#32;of&#32;each&#32;task</emphasis>
<anchor xml:id="_task_8h_source_1l00144"/>00144 <emphasis role="comment">in&#32;the&#32;system.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00145"/><link linkend="_structx_t_a_s_k___s_t_a_t_u_s">00145</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structx_t_a_s_k___s_t_a_t_u_s">xTASK_STATUS</link>
<anchor xml:id="_task_8h_source_1l00146"/>00146 {
<anchor xml:id="_task_8h_source_1l00147"/><link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1ac57f825f365c3c64bba827285fe3c2a0">00147</link> &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1ac57f825f365c3c64bba827285fe3c2a0">xHandle</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;handle&#32;of&#32;the&#32;task&#32;to&#32;which&#32;the&#32;rest&#32;of&#32;the&#32;information&#32;in&#32;the&#32;structure&#32;relates.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00148"/><link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1ad272663e2560bd9ea088384a39ba6192">00148</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1ad272663e2560bd9ea088384a39ba6192">pcTaskName</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;pointer&#32;to&#32;the&#32;task&apos;s&#32;name.&#32;&#32;This&#32;value&#32;will&#32;be&#32;invalid&#32;if&#32;the&#32;task&#32;was&#32;deleted&#32;since&#32;the&#32;structure&#32;was&#32;populated!&#32;*/</emphasis>&#32;<emphasis role="comment">/*lint&#32;!e971&#32;Unqualified&#32;char&#32;types&#32;are&#32;allowed&#32;for&#32;strings&#32;and&#32;single&#32;characters&#32;only.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00149"/><link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1acd44468ba37270b04f83d0833c098057">00149</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1acd44468ba37270b04f83d0833c098057">xTaskNumber</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;number&#32;unique&#32;to&#32;the&#32;task.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00150"/><link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1a727e904e3afe49472b0fc6a4e96439cb">00150</link> &#32;&#32;&#32;&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892c">eTaskState</link>&#32;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1a727e904e3afe49472b0fc6a4e96439cb">eCurrentState</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;state&#32;in&#32;which&#32;the&#32;task&#32;existed&#32;when&#32;the&#32;structure&#32;was&#32;populated.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00151"/><link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1a39df647234fc0d6de5852042a2741a94">00151</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1a39df647234fc0d6de5852042a2741a94">uxCurrentPriority</link>;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;priority&#32;at&#32;which&#32;the&#32;task&#32;was&#32;running&#32;(may&#32;be&#32;inherited)&#32;when&#32;the&#32;structure&#32;was&#32;populated.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00152"/><link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1a692f4c8957b7270f1579cdee63ff287e">00152</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1a692f4c8957b7270f1579cdee63ff287e">uxBasePriority</link>;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;priority&#32;to&#32;which&#32;the&#32;task&#32;will&#32;return&#32;if&#32;the&#32;task&apos;s&#32;current&#32;priority&#32;has&#32;been&#32;inherited&#32;to&#32;avoid&#32;unbounded&#32;priority&#32;inversion&#32;when&#32;obtaining&#32;a&#32;mutex.&#32;&#32;Only&#32;valid&#32;if&#32;configUSE_MUTEXES&#32;is&#32;defined&#32;as&#32;1&#32;in&#32;FreeRTOSConfig.h.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00153"/><link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1a92ab83f4f376c255dedf8e06a78261f7">00153</link> &#32;&#32;&#32;&#32;uint32_t&#32;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1a92ab83f4f376c255dedf8e06a78261f7">ulRunTimeCounter</link>;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;total&#32;run&#32;time&#32;allocated&#32;to&#32;the&#32;task&#32;so&#32;far,&#32;as&#32;defined&#32;by&#32;the&#32;run&#32;time&#32;stats&#32;clock.&#32;&#32;See&#32;http://www.freertos.org/rtos-run-time-stats.html.&#32;&#32;Only&#32;valid&#32;when&#32;configGENERATE_RUN_TIME_STATS&#32;is&#32;defined&#32;as&#32;1&#32;in&#32;FreeRTOSConfig.h.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00154"/><link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1a0ee59674d2cc57d3a5a29c777d5452ed">00154</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1aa73b01e0200940d619095fb74fb3030b">StackType_t</link>&#32;*<link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1a0ee59674d2cc57d3a5a29c777d5452ed">pxStackBase</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Points&#32;to&#32;the&#32;lowest&#32;address&#32;of&#32;the&#32;task&apos;s&#32;stack&#32;area.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00155"/><link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1aaad57afd4a629d2404e1cff97891c571">00155</link> &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ae4e85bffd36d76cf2796092f0ccd784a">configSTACK_DEPTH_TYPE</link>&#32;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1aaad57afd4a629d2404e1cff97891c571">usStackHighWaterMark</link>;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;minimum&#32;amount&#32;of&#32;stack&#32;space&#32;that&#32;has&#32;remained&#32;for&#32;the&#32;task&#32;since&#32;the&#32;task&#32;was&#32;created.&#32;&#32;The&#32;closer&#32;this&#32;value&#32;is&#32;to&#32;zero&#32;the&#32;closer&#32;the&#32;task&#32;has&#32;come&#32;to&#32;overflowing&#32;its&#32;stack.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00156"/><link linkend="_task_8h_1ae5c0c4b9b2c8af5836583b2984ef5b6e">00156</link> }&#32;<link linkend="_task_8h_1ae5c0c4b9b2c8af5836583b2984ef5b6e">TaskStatus_t</link>;
<anchor xml:id="_task_8h_source_1l00157"/>00157 
<anchor xml:id="_task_8h_source_1l00158"/>00158 <emphasis role="comment">/*&#32;Possible&#32;return&#32;values&#32;for&#32;eTaskConfirmSleepModeStatus().&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00159"/><link linkend="_task_8h_1afd168a210ae0f2fb0fca242860a8178e">00159</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>
<anchor xml:id="_task_8h_source_1l00160"/>00160 {
<anchor xml:id="_task_8h_source_1l00161"/><link linkend="_task_8h_1afd168a210ae0f2fb0fca242860a8178eaba7b1a394c63faa14a85dbb191f1c6f9">00161</link> &#32;&#32;&#32;&#32;<link linkend="_task_8h_1afd168a210ae0f2fb0fca242860a8178eaba7b1a394c63faa14a85dbb191f1c6f9">eAbortSleep</link>&#32;=&#32;0,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;task&#32;has&#32;been&#32;made&#32;ready&#32;or&#32;a&#32;context&#32;switch&#32;pended&#32;since&#32;portSUPPORESS_TICKS_AND_SLEEP()&#32;was&#32;called&#32;-&#32;abort&#32;entering&#32;a&#32;sleep&#32;mode.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00162"/><link linkend="_task_8h_1afd168a210ae0f2fb0fca242860a8178ea2c539add8104402c6336bc33a660d1d1">00162</link> &#32;&#32;&#32;&#32;<link linkend="_task_8h_1afd168a210ae0f2fb0fca242860a8178ea2c539add8104402c6336bc33a660d1d1">eStandardSleep</link>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Enter&#32;a&#32;sleep&#32;mode&#32;that&#32;will&#32;not&#32;last&#32;any&#32;longer&#32;than&#32;the&#32;expected&#32;idle&#32;time.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00163"/>00163 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1afd168a210ae0f2fb0fca242860a8178ea004c4d9f1a2619193750d0e2f18f6046">eNoTasksWaitingTimeout</link>&#32;&#32;<emphasis role="comment">/*&#32;No&#32;tasks&#32;are&#32;waiting&#32;for&#32;a&#32;timeout&#32;so&#32;it&#32;is&#32;safe&#32;to&#32;enter&#32;a&#32;sleep&#32;mode&#32;that&#32;can&#32;only&#32;be&#32;exited&#32;by&#32;an&#32;external&#32;interrupt.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00164"/><link linkend="_task_8h_1afd168a210ae0f2fb0fca242860a8178ea004c4d9f1a2619193750d0e2f18f6046">00164</link> }&#32;<link linkend="_task_8h_1afd168a210ae0f2fb0fca242860a8178e">eSleepModeStatus</link>;
<anchor xml:id="_task_8h_source_1l00165"/>00165 
<anchor xml:id="_task_8h_source_1l00171"/><link linkend="_task_8h_1a94ed0b9b3b4e8ccc859c322f18583e67">00171</link> <emphasis role="preprocessor">#define&#32;tskIDLE_PRIORITY&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(&#32;UBaseType_t&#32;)&#32;0U&#32;)</emphasis>
<anchor xml:id="_task_8h_source_1l00172"/>00172 
<anchor xml:id="_task_8h_source_1l00181"/><link linkend="_task_8h_1a767e474430db1e60056e9678763f9202">00181</link> <emphasis role="preprocessor">#define&#32;taskYIELD()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;portYIELD()</emphasis>
<anchor xml:id="_task_8h_source_1l00182"/>00182 
<anchor xml:id="_task_8h_source_1l00195"/><link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">00195</link> <emphasis role="preprocessor">#define&#32;taskENTER_CRITICAL()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;portENTER_CRITICAL()</emphasis>
<anchor xml:id="_task_8h_source_1l00196"/><link linkend="_task_8h_1acb27098fc27d117f720d96bfdcd2b4c8">00196</link> <emphasis role="preprocessor">#define&#32;taskENTER_CRITICAL_FROM_ISR()&#32;portSET_INTERRUPT_MASK_FROM_ISR()</emphasis>
<anchor xml:id="_task_8h_source_1l00197"/>00197 
<anchor xml:id="_task_8h_source_1l00210"/><link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">00210</link> <emphasis role="preprocessor">#define&#32;taskEXIT_CRITICAL()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;portEXIT_CRITICAL()</emphasis>
<anchor xml:id="_task_8h_source_1l00211"/><link linkend="_task_8h_1afa2f5acc3c925b6542ecca1acf67a234">00211</link> <emphasis role="preprocessor">#define&#32;taskEXIT_CRITICAL_FROM_ISR(&#32;x&#32;)&#32;portCLEAR_INTERRUPT_MASK_FROM_ISR(&#32;x&#32;)</emphasis>
<anchor xml:id="_task_8h_source_1l00220"/><link linkend="_task_8h_1aa455a648c2224964ee57758b8794198e">00220</link> <emphasis role="preprocessor">#define&#32;taskDISABLE_INTERRUPTS()&#32;&#32;&#32;&#32;portDISABLE_INTERRUPTS()</emphasis>
<anchor xml:id="_task_8h_source_1l00221"/>00221 
<anchor xml:id="_task_8h_source_1l00230"/><link linkend="_task_8h_1a04361ba499e91eb35324e4cba6feea17">00230</link> <emphasis role="preprocessor">#define&#32;taskENABLE_INTERRUPTS()&#32;&#32;&#32;&#32;&#32;portENABLE_INTERRUPTS()</emphasis>
<anchor xml:id="_task_8h_source_1l00231"/>00231 
<anchor xml:id="_task_8h_source_1l00232"/>00232 <emphasis role="comment">/*&#32;Definitions&#32;returned&#32;by&#32;xTaskGetSchedulerState().&#32;&#32;taskSCHEDULER_SUSPENDED&#32;is</emphasis>
<anchor xml:id="_task_8h_source_1l00233"/>00233 <emphasis role="comment">0&#32;to&#32;generate&#32;more&#32;optimal&#32;code&#32;when&#32;configASSERT()&#32;is&#32;defined&#32;as&#32;the&#32;constant</emphasis>
<anchor xml:id="_task_8h_source_1l00234"/>00234 <emphasis role="comment">is&#32;used&#32;in&#32;assert()&#32;statements.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00235"/><link linkend="_task_8h_1a0cad071ca127a35df93166e9ed5b6ada">00235</link> <emphasis role="preprocessor">#define&#32;taskSCHEDULER_SUSPENDED&#32;&#32;&#32;&#32;&#32;(&#32;(&#32;BaseType_t&#32;)&#32;0&#32;)</emphasis>
<anchor xml:id="_task_8h_source_1l00236"/><link linkend="_task_8h_1a0923fdaae1bfe42ac5cccd9e9ddca9ed">00236</link> <emphasis role="preprocessor">#define&#32;taskSCHEDULER_NOT_STARTED&#32;&#32;&#32;(&#32;(&#32;BaseType_t&#32;)&#32;1&#32;)</emphasis>
<anchor xml:id="_task_8h_source_1l00237"/><link linkend="_task_8h_1acbb675035741787d29da475b5a887545">00237</link> <emphasis role="preprocessor">#define&#32;taskSCHEDULER_RUNNING&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(&#32;BaseType_t&#32;)&#32;2&#32;)</emphasis>
<anchor xml:id="_task_8h_source_1l00238"/>00238 
<anchor xml:id="_task_8h_source_1l00239"/>00239 
<anchor xml:id="_task_8h_source_1l00240"/>00240 <emphasis role="comment">/*-----------------------------------------------------------</emphasis>
<anchor xml:id="_task_8h_source_1l00241"/>00241 <emphasis role="comment">&#32;*&#32;TASK&#32;CREATION&#32;API</emphasis>
<anchor xml:id="_task_8h_source_1l00242"/>00242 <emphasis role="comment">&#32;*----------------------------------------------------------*/</emphasis>
<anchor xml:id="_task_8h_source_1l00243"/>00243 
<anchor xml:id="_task_8h_source_1l00337"/>00337 <emphasis role="preprocessor">#if(&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_task_8h_source_1l00338"/>00338 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_tasks_8c_1ad138d9dda4709b10d711775fa40eb1a1">xTaskCreate</link>(&#32;<link linkend="_projdefs_8h_1a9b32502ff92c255c686dacde53c1cba0">TaskFunction_t</link>&#32;pxTaskCode,
<anchor xml:id="_task_8h_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pcName,&#32;&#32;<emphasis role="comment">/*lint&#32;!e971&#32;Unqualified&#32;char&#32;types&#32;are&#32;allowed&#32;for&#32;strings&#32;and&#32;single&#32;characters&#32;only.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__free_r_t_o_s_8h_1ae4e85bffd36d76cf2796092f0ccd784a">configSTACK_DEPTH_TYPE</link>&#32;usStackDepth,
<anchor xml:id="_task_8h_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pvParameters,
<anchor xml:id="_task_8h_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxPriority,
<anchor xml:id="_task_8h_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxCreatedTask&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l00344"/>00344 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_task_8h_source_1l00345"/>00345 
<anchor xml:id="_task_8h_source_1l00453"/>00453 <emphasis role="preprocessor">#if(&#32;configSUPPORT_STATIC_ALLOCATION&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_task_8h_source_1l00454"/>00454 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTaskCreateStatic(&#32;<link linkend="_projdefs_8h_1a9b32502ff92c255c686dacde53c1cba0">TaskFunction_t</link>&#32;pxTaskCode,
<anchor xml:id="_task_8h_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pcName,&#32;<emphasis role="comment">/*lint&#32;!e971&#32;Unqualified&#32;char&#32;types&#32;are&#32;allowed&#32;for&#32;strings&#32;and&#32;single&#32;characters&#32;only.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint32_t&#32;ulStackDepth,
<anchor xml:id="_task_8h_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pvParameters,
<anchor xml:id="_task_8h_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxPriority,
<anchor xml:id="_task_8h_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1aa73b01e0200940d619095fb74fb3030b">StackType_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;puxStackBuffer,
<anchor xml:id="_task_8h_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structx_s_t_a_t_i_c___t_c_b">StaticTask_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxTaskBuffer&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l00461"/>00461 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configSUPPORT_STATIC_ALLOCATION&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_task_8h_source_1l00462"/>00462 
<anchor xml:id="_task_8h_source_1l00535"/>00535 <emphasis role="preprocessor">#if(&#32;portUSING_MPU_WRAPPERS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_task_8h_source_1l00536"/>00536 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xTaskCreateRestricted(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s">TaskParameters_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxTaskDefinition,&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;*pxCreatedTask&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l00537"/>00537 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_task_8h_source_1l00538"/>00538 
<anchor xml:id="_task_8h_source_1l00623"/>00623 <emphasis role="preprocessor">#if(&#32;(&#32;portUSING_MPU_WRAPPERS&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configSUPPORT_STATIC_ALLOCATION&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_task_8h_source_1l00624"/>00624 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xTaskCreateRestrictedStatic(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s">TaskParameters_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxTaskDefinition,&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;*pxCreatedTask&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l00625"/>00625 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_task_8h_source_1l00626"/>00626 
<anchor xml:id="_task_8h_source_1l00673"/><link linkend="_task_8h_1ad889595baff9faf9efe02f3696825409">00673</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1ad889595baff9faf9efe02f3696825409">vTaskAllocateMPURegions</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structx_m_e_m_o_r_y___r_e_g_i_o_n">MemoryRegion_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxRegions&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l00674"/>00674 
<anchor xml:id="_task_8h_source_1l00714"/>00714 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1a27ff4ebce26565bef136bda84201ff80">vTaskDelete</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTaskToDelete&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l00715"/>00715 
<anchor xml:id="_task_8h_source_1l00716"/>00716 <emphasis role="comment">/*-----------------------------------------------------------</emphasis>
<anchor xml:id="_task_8h_source_1l00717"/>00717 <emphasis role="comment">&#32;*&#32;TASK&#32;CONTROL&#32;API</emphasis>
<anchor xml:id="_task_8h_source_1l00718"/>00718 <emphasis role="comment">&#32;*----------------------------------------------------------*/</emphasis>
<anchor xml:id="_task_8h_source_1l00719"/>00719 
<anchor xml:id="_task_8h_source_1l00766"/>00766 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1aa154068cecd7f31446a7a84af44ab1a3">vTaskDelay</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToDelay&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l00767"/>00767 
<anchor xml:id="_task_8h_source_1l00825"/>00825 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1a067da3e949e248096ec6c01f9cb75a47">vTaskDelayUntil</link>(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxPreviousWakeTime,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTimeIncrement&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l00826"/>00826 
<anchor xml:id="_task_8h_source_1l00850"/><link linkend="_task_8h_1afefe333df0492c8411c0094badd25185">00850</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_task_8h_1afefe333df0492c8411c0094badd25185">xTaskAbortDelay</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l00851"/>00851 
<anchor xml:id="_task_8h_source_1l00897"/>00897 <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_task_8h_1a18d1148c845f5c4bff3b9e5b2077e058">uxTaskPriorityGet</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l00898"/>00898 
<anchor xml:id="_task_8h_source_1l00905"/>00905 <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_task_8h_1a772bdcb1ae3cb58b0f12a172357f4a06">uxTaskPriorityGetFromISR</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l00906"/>00906 
<anchor xml:id="_task_8h_source_1l00923"/>00923 <link linkend="_task_8h_1a1749369458e2282a22e862a619a3892c">eTaskState</link>&#32;<link linkend="_task_8h_1a954df77397d616484edb7c58c7760b10">eTaskGetState</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l00924"/>00924 
<anchor xml:id="_task_8h_source_1l00979"/>00979 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1ac08c26d037d0dc685740eec9b2028715">vTaskGetInfo</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask,&#32;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s">TaskStatus_t</link>&#32;*pxTaskStatus,&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xGetFreeStackSpace,&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892c">eTaskState</link>&#32;eState&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l00980"/>00980 
<anchor xml:id="_task_8h_source_1l01021"/>01021 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1a1ee31be76e326e0644dbd6ac40a787b6">vTaskPrioritySet</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask,&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxNewPriority&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l01022"/>01022 
<anchor xml:id="_task_8h_source_1l01072"/>01072 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1a84d4e660b04630be2939d91b3c2412f8">vTaskSuspend</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTaskToSuspend&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l01073"/>01073 
<anchor xml:id="_task_8h_source_1l01121"/>01121 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1a84a1584f29fb7736a1aa72ad5b3e9b44">vTaskResume</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTaskToResume&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l01122"/>01122 
<anchor xml:id="_task_8h_source_1l01150"/>01150 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_task_8h_1aefbfd37c0661c3062fafd7334bff9aed">xTaskResumeFromISR</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTaskToResume&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l01151"/>01151 
<anchor xml:id="_task_8h_source_1l01152"/>01152 <emphasis role="comment">/*-----------------------------------------------------------</emphasis>
<anchor xml:id="_task_8h_source_1l01153"/>01153 <emphasis role="comment">&#32;*&#32;SCHEDULER&#32;CONTROL</emphasis>
<anchor xml:id="_task_8h_source_1l01154"/>01154 <emphasis role="comment">&#32;*----------------------------------------------------------*/</emphasis>
<anchor xml:id="_task_8h_source_1l01155"/>01155 
<anchor xml:id="_task_8h_source_1l01183"/>01183 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1aaf9dca1065c60abdeb309d56ab7293cb">vTaskStartScheduler</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l01184"/>01184 
<anchor xml:id="_task_8h_source_1l01239"/>01239 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1a1651e13c7ccd6273f53a62425ec79a15">vTaskEndScheduler</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l01240"/>01240 
<anchor xml:id="_task_8h_source_1l01290"/>01290 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1a366b302eba79d10b5ee2a3756f0fcc43">vTaskSuspendAll</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l01291"/>01291 
<anchor xml:id="_task_8h_source_1l01344"/>01344 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_task_8h_1a003f8ae6d649225abd030cc76e1c7d0e">xTaskResumeAll</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l01345"/>01345 
<anchor xml:id="_task_8h_source_1l01346"/>01346 <emphasis role="comment">/*-----------------------------------------------------------</emphasis>
<anchor xml:id="_task_8h_source_1l01347"/>01347 <emphasis role="comment">&#32;*&#32;TASK&#32;UTILITIES</emphasis>
<anchor xml:id="_task_8h_source_1l01348"/>01348 <emphasis role="comment">&#32;*----------------------------------------------------------*/</emphasis>
<anchor xml:id="_task_8h_source_1l01349"/>01349 
<anchor xml:id="_task_8h_source_1l01359"/>01359 <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;<link linkend="_task_8h_1a753ecfe23e7386066ecccad5d16422f7">xTaskGetTickCount</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l01360"/>01360 
<anchor xml:id="_task_8h_source_1l01375"/>01375 <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;<link linkend="_task_8h_1a092be3fd5752625303c307620be523ff">xTaskGetTickCountFromISR</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l01376"/>01376 
<anchor xml:id="_task_8h_source_1l01389"/>01389 <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_task_8h_1a70a89a0f07c7db5d695707d1f6f44a4a">uxTaskGetNumberOfTasks</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l01390"/>01390 
<anchor xml:id="_task_8h_source_1l01402"/>01402 <emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_task_8h_1aedab278c23c41dcbfdf312d383bdb342">pcTaskGetName</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTaskToQuery&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;&#32;<emphasis role="comment">/*lint&#32;!e971&#32;Unqualified&#32;char&#32;types&#32;are&#32;allowed&#32;for&#32;strings&#32;and&#32;single&#32;characters&#32;only.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l01403"/>01403 
<anchor xml:id="_task_8h_source_1l01418"/>01418 <link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;<link linkend="_task_8h_1a45b3b1cd0227269609499beeeb8c5c26">xTaskGetHandle</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*pcNameToQuery&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;&#32;<emphasis role="comment">/*lint&#32;!e971&#32;Unqualified&#32;char&#32;types&#32;are&#32;allowed&#32;for&#32;strings&#32;and&#32;single&#32;characters&#32;only.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l01419"/>01419 
<anchor xml:id="_task_8h_source_1l01445"/><link linkend="_task_8h_1a799967af01d328132cde814e47733437">01445</link> <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_task_8h_1a799967af01d328132cde814e47733437">uxTaskGetStackHighWaterMark</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l01446"/>01446 
<anchor xml:id="_task_8h_source_1l01472"/><link linkend="_task_8h_1a7fd88fa038a89eb539bd41ce64a93744">01472</link> <link linkend="__free_r_t_o_s_8h_1ae4e85bffd36d76cf2796092f0ccd784a">configSTACK_DEPTH_TYPE</link>&#32;<link linkend="_task_8h_1a7fd88fa038a89eb539bd41ce64a93744">uxTaskGetStackHighWaterMark2</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l01473"/>01473 
<anchor xml:id="_task_8h_source_1l01474"/>01474 <emphasis role="comment">/*&#32;When&#32;using&#32;trace&#32;macros&#32;it&#32;is&#32;sometimes&#32;necessary&#32;to&#32;include&#32;task.h&#32;before</emphasis>
<anchor xml:id="_task_8h_source_1l01475"/>01475 <emphasis role="comment">FreeRTOS.h.&#32;&#32;When&#32;this&#32;is&#32;done&#32;TaskHookFunction_t&#32;will&#32;not&#32;yet&#32;have&#32;been&#32;defined,</emphasis>
<anchor xml:id="_task_8h_source_1l01476"/>01476 <emphasis role="comment">so&#32;the&#32;following&#32;two&#32;prototypes&#32;will&#32;cause&#32;a&#32;compilation&#32;error.&#32;&#32;This&#32;can&#32;be</emphasis>
<anchor xml:id="_task_8h_source_1l01477"/>01477 <emphasis role="comment">fixed&#32;by&#32;simply&#32;guarding&#32;against&#32;the&#32;inclusion&#32;of&#32;these&#32;two&#32;prototypes&#32;unless</emphasis>
<anchor xml:id="_task_8h_source_1l01478"/>01478 <emphasis role="comment">they&#32;are&#32;explicitly&#32;required&#32;by&#32;the&#32;configUSE_APPLICATION_TASK_TAG&#32;configuration</emphasis>
<anchor xml:id="_task_8h_source_1l01479"/>01479 <emphasis role="comment">constant.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l01480"/>01480 <emphasis role="preprocessor">#ifdef&#32;configUSE_APPLICATION_TASK_TAG</emphasis>
<anchor xml:id="_task_8h_source_1l01481"/>01481 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;configUSE_APPLICATION_TASK_TAG&#32;==&#32;1</emphasis>
<anchor xml:id="_task_8h_source_1l01490"/>01490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;vTaskSetApplicationTaskTag(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask,&#32;<link linkend="_task_8h_1af984026250bf8fece2e0068874d4661d">TaskHookFunction_t</link>&#32;pxHookFunction&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l01491"/>01491 
<anchor xml:id="_task_8h_source_1l01500"/>01500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1af984026250bf8fece2e0068874d4661d">TaskHookFunction_t</link>&#32;xTaskGetApplicationTaskTag(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l01501"/>01501 
<anchor xml:id="_task_8h_source_1l01509"/>01509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1af984026250bf8fece2e0068874d4661d">TaskHookFunction_t</link>&#32;xTaskGetApplicationTaskTagFromISR(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l01510"/>01510 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_APPLICATION_TASK_TAG&#32;==1&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_task_8h_source_1l01511"/>01511 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;ifdef&#32;configUSE_APPLICATION_TASK_TAG&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_task_8h_source_1l01512"/>01512 
<anchor xml:id="_task_8h_source_1l01513"/>01513 <emphasis role="preprocessor">#if(&#32;configNUM_THREAD_LOCAL_STORAGE_POINTERS&#32;&gt;&#32;0&#32;)</emphasis>
<anchor xml:id="_task_8h_source_1l01514"/>01514 
<anchor xml:id="_task_8h_source_1l01515"/>01515 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Each&#32;task&#32;contains&#32;an&#32;array&#32;of&#32;pointers&#32;that&#32;is&#32;dimensioned&#32;by&#32;the</emphasis>
<anchor xml:id="_task_8h_source_1l01516"/>01516 <emphasis role="comment">&#32;&#32;&#32;&#32;configNUM_THREAD_LOCAL_STORAGE_POINTERS&#32;setting&#32;in&#32;FreeRTOSConfig.h.&#32;&#32;The</emphasis>
<anchor xml:id="_task_8h_source_1l01517"/>01517 <emphasis role="comment">&#32;&#32;&#32;&#32;kernel&#32;does&#32;not&#32;use&#32;the&#32;pointers&#32;itself,&#32;so&#32;the&#32;application&#32;writer&#32;can&#32;use</emphasis>
<anchor xml:id="_task_8h_source_1l01518"/>01518 <emphasis role="comment">&#32;&#32;&#32;&#32;the&#32;pointers&#32;for&#32;any&#32;purpose&#32;they&#32;wish.&#32;&#32;The&#32;following&#32;two&#32;functions&#32;are</emphasis>
<anchor xml:id="_task_8h_source_1l01519"/>01519 <emphasis role="comment">&#32;&#32;&#32;&#32;used&#32;to&#32;set&#32;and&#32;query&#32;a&#32;pointer&#32;respectively.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l01520"/>01520 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1a8b1132bc3b01220a1b949c8006af0943">vTaskSetThreadLocalStoragePointer</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTaskToSet,&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xIndex,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pvValue&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l01521"/>01521 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="_tasks_8c_1a7c95aced700fe8d9cc12326a3eb0e916">pvTaskGetThreadLocalStoragePointer</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTaskToQuery,&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xIndex&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l01522"/>01522 
<anchor xml:id="_task_8h_source_1l01523"/>01523 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_task_8h_source_1l01524"/>01524 
<anchor xml:id="_task_8h_source_1l01536"/><link linkend="_task_8h_1ab6607e5d8a9664e3aa9fe16efa694e83">01536</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_task_8h_1ab6607e5d8a9664e3aa9fe16efa694e83">xTaskCallApplicationTaskHook</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pvParameter&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l01537"/>01537 
<anchor xml:id="_task_8h_source_1l01545"/><link linkend="_task_8h_1a3d5446a4403457e855cb84b3bba5570a">01545</link> <link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;<link linkend="_task_8h_1a3d5446a4403457e855cb84b3bba5570a">xTaskGetIdleTaskHandle</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l01546"/>01546 
<anchor xml:id="_task_8h_source_1l01644"/>01644 <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_task_8h_1aa4603f3de3d809e9beb18d10fbac005d">uxTaskGetSystemState</link>(&#32;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s">TaskStatus_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxTaskStatusArray,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxArraySize,&#32;uint32_t&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pulTotalRunTime&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l01645"/>01645 
<anchor xml:id="_task_8h_source_1l01691"/><link linkend="_task_8h_1ab87abc717f34ddced76802d12588a93d">01691</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1ab87abc717f34ddced76802d12588a93d">vTaskList</link>(&#32;<emphasis role="keywordtype">char</emphasis>&#32;*&#32;pcWriteBuffer&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;&#32;<emphasis role="comment">/*lint&#32;!e971&#32;Unqualified&#32;char&#32;types&#32;are&#32;allowed&#32;for&#32;strings&#32;and&#32;single&#32;characters&#32;only.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l01692"/>01692 
<anchor xml:id="_task_8h_source_1l01745"/><link linkend="_task_8h_1a52da9b427041a48dc9f6802e10f151d4">01745</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1a52da9b427041a48dc9f6802e10f151d4">vTaskGetRunTimeStats</link>(&#32;<emphasis role="keywordtype">char</emphasis>&#32;*pcWriteBuffer&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;&#32;<emphasis role="comment">/*lint&#32;!e971&#32;Unqualified&#32;char&#32;types&#32;are&#32;allowed&#32;for&#32;strings&#32;and&#32;single&#32;characters&#32;only.&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l01746"/>01746 
<anchor xml:id="_task_8h_source_1l01775"/><link linkend="_task_8h_1adcf1216358a193db9dea4ccdccd85dfd">01775</link> <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;<link linkend="_task_8h_1adcf1216358a193db9dea4ccdccd85dfd">xTaskGetIdleRunTimeCounter</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l01776"/>01776 
<anchor xml:id="_task_8h_source_1l01856"/>01856 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_task_8h_1aa7bd3a4f3847b83900fd6a9f1bacfe9e">xTaskGenericNotify</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTaskToNotify,&#32;uint32_t&#32;ulValue,&#32;<link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233">eNotifyAction</link>&#32;eAction,&#32;uint32_t&#32;*pulPreviousNotificationValue&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l01857"/><link linkend="_task_8h_1a0d2d54fb8a64011dfbb54983e4ed06bd">01857</link> <emphasis role="preprocessor">#define&#32;xTaskNotify(&#32;xTaskToNotify,&#32;ulValue,&#32;eAction&#32;)&#32;xTaskGenericNotify(&#32;(&#32;xTaskToNotify&#32;),&#32;(&#32;ulValue&#32;),&#32;(&#32;eAction&#32;),&#32;NULL&#32;)</emphasis>
<anchor xml:id="_task_8h_source_1l01858"/><link linkend="_task_8h_1aaa80adec29a2eebbfe0a551684a0acca">01858</link> <emphasis role="preprocessor">#define&#32;xTaskNotifyAndQuery(&#32;xTaskToNotify,&#32;ulValue,&#32;eAction,&#32;pulPreviousNotifyValue&#32;)&#32;xTaskGenericNotify(&#32;(&#32;xTaskToNotify&#32;),&#32;(&#32;ulValue&#32;),&#32;(&#32;eAction&#32;),&#32;(&#32;pulPreviousNotifyValue&#32;)&#32;)</emphasis>
<anchor xml:id="_task_8h_source_1l01859"/>01859 
<anchor xml:id="_task_8h_source_1l01947"/>01947 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_task_8h_1a959c55f7950abffbc4107ce61ca52e97">xTaskGenericNotifyFromISR</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTaskToNotify,&#32;uint32_t&#32;ulValue,&#32;<link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233">eNotifyAction</link>&#32;eAction,&#32;uint32_t&#32;*pulPreviousNotificationValue,&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;*pxHigherPriorityTaskWoken&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l01948"/><link linkend="_task_8h_1a1ed9129068b96a909356bd0369c5ecb0">01948</link> <emphasis role="preprocessor">#define&#32;xTaskNotifyFromISR(&#32;xTaskToNotify,&#32;ulValue,&#32;eAction,&#32;pxHigherPriorityTaskWoken&#32;)&#32;xTaskGenericNotifyFromISR(&#32;(&#32;xTaskToNotify&#32;),&#32;(&#32;ulValue&#32;),&#32;(&#32;eAction&#32;),&#32;NULL,&#32;(&#32;pxHigherPriorityTaskWoken&#32;)&#32;)</emphasis>
<anchor xml:id="_task_8h_source_1l01949"/><link linkend="_task_8h_1a5c491b42e243a91c7473887d1fb96dd5">01949</link> <emphasis role="preprocessor">#define&#32;xTaskNotifyAndQueryFromISR(&#32;xTaskToNotify,&#32;ulValue,&#32;eAction,&#32;pulPreviousNotificationValue,&#32;pxHigherPriorityTaskWoken&#32;)&#32;xTaskGenericNotifyFromISR(&#32;(&#32;xTaskToNotify&#32;),&#32;(&#32;ulValue&#32;),&#32;(&#32;eAction&#32;),&#32;(&#32;pulPreviousNotificationValue&#32;),&#32;(&#32;pxHigherPriorityTaskWoken&#32;)&#32;)</emphasis>
<anchor xml:id="_task_8h_source_1l01950"/>01950 
<anchor xml:id="_task_8h_source_1l02024"/>02024 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_task_8h_1a0475fcda9718f403521c270a7270ff93">xTaskNotifyWait</link>(&#32;uint32_t&#32;ulBitsToClearOnEntry,&#32;uint32_t&#32;ulBitsToClearOnExit,&#32;uint32_t&#32;*pulNotificationValue,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l02025"/>02025 
<anchor xml:id="_task_8h_source_1l02070"/><link linkend="_task_8h_1ac60cbd05577a3e4f3c3587dd9b213930">02070</link> <emphasis role="preprocessor">#define&#32;xTaskNotifyGive(&#32;xTaskToNotify&#32;)&#32;xTaskGenericNotify(&#32;(&#32;xTaskToNotify&#32;),&#32;(&#32;0&#32;),&#32;eIncrement,&#32;NULL&#32;)</emphasis>
<anchor xml:id="_task_8h_source_1l02071"/>02071 
<anchor xml:id="_task_8h_source_1l02125"/>02125 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1a4a4bcf98ad282a596e13f3f30582a11b">vTaskNotifyGiveFromISR</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTaskToNotify,&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;*pxHigherPriorityTaskWoken&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l02126"/>02126 
<anchor xml:id="_task_8h_source_1l02194"/>02194 uint32_t&#32;<link linkend="_task_8h_1a66540bef602522a01a519f776e4c07d8">ulTaskNotifyTake</link>(&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xClearCountOnExit,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l02195"/>02195 
<anchor xml:id="_task_8h_source_1l02210"/>02210 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_task_8h_1a4cb6c908a9d2d733e9d519d7dc27bb34">xTaskNotifyStateClear</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask&#32;);
<anchor xml:id="_task_8h_source_1l02211"/>02211 
<anchor xml:id="_task_8h_source_1l02212"/>02212 <emphasis role="comment">/*-----------------------------------------------------------</emphasis>
<anchor xml:id="_task_8h_source_1l02213"/>02213 <emphasis role="comment">&#32;*&#32;SCHEDULER&#32;INTERNALS&#32;AVAILABLE&#32;FOR&#32;PORTING&#32;PURPOSES</emphasis>
<anchor xml:id="_task_8h_source_1l02214"/>02214 <emphasis role="comment">&#32;*----------------------------------------------------------*/</emphasis>
<anchor xml:id="_task_8h_source_1l02215"/>02215 
<anchor xml:id="_task_8h_source_1l02216"/>02216 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_task_8h_source_1l02217"/>02217 <emphasis role="comment">&#32;*&#32;THIS&#32;FUNCTION&#32;MUST&#32;NOT&#32;BE&#32;USED&#32;FROM&#32;APPLICATION&#32;CODE.&#32;&#32;IT&#32;IS&#32;ONLY</emphasis>
<anchor xml:id="_task_8h_source_1l02218"/>02218 <emphasis role="comment">&#32;*&#32;INTENDED&#32;FOR&#32;USE&#32;WHEN&#32;IMPLEMENTING&#32;A&#32;PORT&#32;OF&#32;THE&#32;SCHEDULER&#32;AND&#32;IS</emphasis>
<anchor xml:id="_task_8h_source_1l02219"/>02219 <emphasis role="comment">&#32;*&#32;AN&#32;INTERFACE&#32;WHICH&#32;IS&#32;FOR&#32;THE&#32;EXCLUSIVE&#32;USE&#32;OF&#32;THE&#32;SCHEDULER.</emphasis>
<anchor xml:id="_task_8h_source_1l02220"/>02220 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_task_8h_source_1l02221"/>02221 <emphasis role="comment">&#32;*&#32;Called&#32;from&#32;the&#32;real&#32;time&#32;kernel&#32;tick&#32;(either&#32;preemptive&#32;or&#32;cooperative),</emphasis>
<anchor xml:id="_task_8h_source_1l02222"/>02222 <emphasis role="comment">&#32;*&#32;this&#32;increments&#32;the&#32;tick&#32;count&#32;and&#32;checks&#32;if&#32;any&#32;tasks&#32;that&#32;are&#32;blocked</emphasis>
<anchor xml:id="_task_8h_source_1l02223"/>02223 <emphasis role="comment">&#32;*&#32;for&#32;a&#32;finite&#32;period&#32;required&#32;removing&#32;from&#32;a&#32;blocked&#32;list&#32;and&#32;placing&#32;on</emphasis>
<anchor xml:id="_task_8h_source_1l02224"/>02224 <emphasis role="comment">&#32;*&#32;a&#32;ready&#32;list.&#32;&#32;If&#32;a&#32;non-zero&#32;value&#32;is&#32;returned&#32;then&#32;a&#32;context&#32;switch&#32;is</emphasis>
<anchor xml:id="_task_8h_source_1l02225"/>02225 <emphasis role="comment">&#32;*&#32;required&#32;because&#32;either:</emphasis>
<anchor xml:id="_task_8h_source_1l02226"/>02226 <emphasis role="comment">&#32;*&#32;&#32;&#32;+&#32;A&#32;task&#32;was&#32;removed&#32;from&#32;a&#32;blocked&#32;list&#32;because&#32;its&#32;timeout&#32;had&#32;expired,</emphasis>
<anchor xml:id="_task_8h_source_1l02227"/>02227 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;or</emphasis>
<anchor xml:id="_task_8h_source_1l02228"/>02228 <emphasis role="comment">&#32;*&#32;&#32;&#32;+&#32;Time&#32;slicing&#32;is&#32;in&#32;use&#32;and&#32;there&#32;is&#32;a&#32;task&#32;of&#32;equal&#32;priority&#32;to&#32;the</emphasis>
<anchor xml:id="_task_8h_source_1l02229"/>02229 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;currently&#32;running&#32;task.</emphasis>
<anchor xml:id="_task_8h_source_1l02230"/>02230 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l02231"/>02231 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_task_8h_1a978e25460ac35706f9ad30b46d9403d8">xTaskIncrementTick</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l02232"/>02232 
<anchor xml:id="_task_8h_source_1l02233"/>02233 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_task_8h_source_1l02234"/>02234 <emphasis role="comment">&#32;*&#32;THIS&#32;FUNCTION&#32;MUST&#32;NOT&#32;BE&#32;USED&#32;FROM&#32;APPLICATION&#32;CODE.&#32;&#32;IT&#32;IS&#32;AN</emphasis>
<anchor xml:id="_task_8h_source_1l02235"/>02235 <emphasis role="comment">&#32;*&#32;INTERFACE&#32;WHICH&#32;IS&#32;FOR&#32;THE&#32;EXCLUSIVE&#32;USE&#32;OF&#32;THE&#32;SCHEDULER.</emphasis>
<anchor xml:id="_task_8h_source_1l02236"/>02236 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_task_8h_source_1l02237"/>02237 <emphasis role="comment">&#32;*&#32;THIS&#32;FUNCTION&#32;MUST&#32;BE&#32;CALLED&#32;WITH&#32;INTERRUPTS&#32;DISABLED.</emphasis>
<anchor xml:id="_task_8h_source_1l02238"/>02238 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_task_8h_source_1l02239"/>02239 <emphasis role="comment">&#32;*&#32;Removes&#32;the&#32;calling&#32;task&#32;from&#32;the&#32;ready&#32;list&#32;and&#32;places&#32;it&#32;both</emphasis>
<anchor xml:id="_task_8h_source_1l02240"/>02240 <emphasis role="comment">&#32;*&#32;on&#32;the&#32;list&#32;of&#32;tasks&#32;waiting&#32;for&#32;a&#32;particular&#32;event,&#32;and&#32;the</emphasis>
<anchor xml:id="_task_8h_source_1l02241"/>02241 <emphasis role="comment">&#32;*&#32;list&#32;of&#32;delayed&#32;tasks.&#32;&#32;The&#32;task&#32;will&#32;be&#32;removed&#32;from&#32;both&#32;lists</emphasis>
<anchor xml:id="_task_8h_source_1l02242"/>02242 <emphasis role="comment">&#32;*&#32;and&#32;replaced&#32;on&#32;the&#32;ready&#32;list&#32;should&#32;either&#32;the&#32;event&#32;occur&#32;(and</emphasis>
<anchor xml:id="_task_8h_source_1l02243"/>02243 <emphasis role="comment">&#32;*&#32;there&#32;be&#32;no&#32;higher&#32;priority&#32;tasks&#32;waiting&#32;on&#32;the&#32;same&#32;event)&#32;or</emphasis>
<anchor xml:id="_task_8h_source_1l02244"/>02244 <emphasis role="comment">&#32;*&#32;the&#32;delay&#32;period&#32;expires.</emphasis>
<anchor xml:id="_task_8h_source_1l02245"/>02245 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_task_8h_source_1l02246"/>02246 <emphasis role="comment">&#32;*&#32;The&#32;&apos;unordered&apos;&#32;version&#32;replaces&#32;the&#32;event&#32;list&#32;item&#32;value&#32;with&#32;the</emphasis>
<anchor xml:id="_task_8h_source_1l02247"/>02247 <emphasis role="comment">&#32;*&#32;xItemValue&#32;value,&#32;and&#32;inserts&#32;the&#32;list&#32;item&#32;at&#32;the&#32;end&#32;of&#32;the&#32;list.</emphasis>
<anchor xml:id="_task_8h_source_1l02248"/>02248 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_task_8h_source_1l02249"/>02249 <emphasis role="comment">&#32;*&#32;The&#32;&apos;ordered&apos;&#32;version&#32;uses&#32;the&#32;existing&#32;event&#32;list&#32;item&#32;value&#32;(which&#32;is&#32;the</emphasis>
<anchor xml:id="_task_8h_source_1l02250"/>02250 <emphasis role="comment">&#32;*&#32;owning&#32;tasks&#32;priority)&#32;to&#32;insert&#32;the&#32;list&#32;item&#32;into&#32;the&#32;event&#32;list&#32;is&#32;task</emphasis>
<anchor xml:id="_task_8h_source_1l02251"/>02251 <emphasis role="comment">&#32;*&#32;priority&#32;order.</emphasis>
<anchor xml:id="_task_8h_source_1l02252"/>02252 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_task_8h_source_1l02253"/>02253 <emphasis role="comment">&#32;*&#32;@param&#32;pxEventList&#32;The&#32;list&#32;containing&#32;tasks&#32;that&#32;are&#32;blocked&#32;waiting</emphasis>
<anchor xml:id="_task_8h_source_1l02254"/>02254 <emphasis role="comment">&#32;*&#32;for&#32;the&#32;event&#32;to&#32;occur.</emphasis>
<anchor xml:id="_task_8h_source_1l02255"/>02255 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_task_8h_source_1l02256"/>02256 <emphasis role="comment">&#32;*&#32;@param&#32;xItemValue&#32;The&#32;item&#32;value&#32;to&#32;use&#32;for&#32;the&#32;event&#32;list&#32;item&#32;when&#32;the</emphasis>
<anchor xml:id="_task_8h_source_1l02257"/>02257 <emphasis role="comment">&#32;*&#32;event&#32;list&#32;is&#32;not&#32;ordered&#32;by&#32;task&#32;priority.</emphasis>
<anchor xml:id="_task_8h_source_1l02258"/>02258 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_task_8h_source_1l02259"/>02259 <emphasis role="comment">&#32;*&#32;@param&#32;xTicksToWait&#32;The&#32;maximum&#32;amount&#32;of&#32;time&#32;that&#32;the&#32;task&#32;should&#32;wait</emphasis>
<anchor xml:id="_task_8h_source_1l02260"/>02260 <emphasis role="comment">&#32;*&#32;for&#32;the&#32;event&#32;to&#32;occur.&#32;&#32;This&#32;is&#32;specified&#32;in&#32;kernel&#32;ticks,the&#32;constant</emphasis>
<anchor xml:id="_task_8h_source_1l02261"/>02261 <emphasis role="comment">&#32;*&#32;portTICK_PERIOD_MS&#32;can&#32;be&#32;used&#32;to&#32;convert&#32;kernel&#32;ticks&#32;into&#32;a&#32;real&#32;time</emphasis>
<anchor xml:id="_task_8h_source_1l02262"/>02262 <emphasis role="comment">&#32;*&#32;period.</emphasis>
<anchor xml:id="_task_8h_source_1l02263"/>02263 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l02264"/>02264 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1a56ae23bc0dece4522d666959902221ca">vTaskPlaceOnEventList</link>(&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxEventList,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l02265"/>02265 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1a9d52fa7b60cc6a7b4fd0846700d7834c">vTaskPlaceOnUnorderedEventList</link>(&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;*&#32;pxEventList,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xItemValue,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l02266"/>02266 
<anchor xml:id="_task_8h_source_1l02267"/>02267 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_task_8h_source_1l02268"/>02268 <emphasis role="comment">&#32;*&#32;THIS&#32;FUNCTION&#32;MUST&#32;NOT&#32;BE&#32;USED&#32;FROM&#32;APPLICATION&#32;CODE.&#32;&#32;IT&#32;IS&#32;AN</emphasis>
<anchor xml:id="_task_8h_source_1l02269"/>02269 <emphasis role="comment">&#32;*&#32;INTERFACE&#32;WHICH&#32;IS&#32;FOR&#32;THE&#32;EXCLUSIVE&#32;USE&#32;OF&#32;THE&#32;SCHEDULER.</emphasis>
<anchor xml:id="_task_8h_source_1l02270"/>02270 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_task_8h_source_1l02271"/>02271 <emphasis role="comment">&#32;*&#32;THIS&#32;FUNCTION&#32;MUST&#32;BE&#32;CALLED&#32;WITH&#32;INTERRUPTS&#32;DISABLED.</emphasis>
<anchor xml:id="_task_8h_source_1l02272"/>02272 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_task_8h_source_1l02273"/>02273 <emphasis role="comment">&#32;*&#32;This&#32;function&#32;performs&#32;nearly&#32;the&#32;same&#32;function&#32;as&#32;vTaskPlaceOnEventList().</emphasis>
<anchor xml:id="_task_8h_source_1l02274"/>02274 <emphasis role="comment">&#32;*&#32;The&#32;difference&#32;being&#32;that&#32;this&#32;function&#32;does&#32;not&#32;permit&#32;tasks&#32;to&#32;block</emphasis>
<anchor xml:id="_task_8h_source_1l02275"/>02275 <emphasis role="comment">&#32;*&#32;indefinitely,&#32;whereas&#32;vTaskPlaceOnEventList()&#32;does.</emphasis>
<anchor xml:id="_task_8h_source_1l02276"/>02276 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_task_8h_source_1l02277"/>02277 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l02278"/>02278 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1ada3eb00e16241f5b648184a406a6a6fd">vTaskPlaceOnEventListRestricted</link>(&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxEventList,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xWaitIndefinitely&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l02279"/>02279 
<anchor xml:id="_task_8h_source_1l02280"/>02280 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_task_8h_source_1l02281"/>02281 <emphasis role="comment">&#32;*&#32;THIS&#32;FUNCTION&#32;MUST&#32;NOT&#32;BE&#32;USED&#32;FROM&#32;APPLICATION&#32;CODE.&#32;&#32;IT&#32;IS&#32;AN</emphasis>
<anchor xml:id="_task_8h_source_1l02282"/>02282 <emphasis role="comment">&#32;*&#32;INTERFACE&#32;WHICH&#32;IS&#32;FOR&#32;THE&#32;EXCLUSIVE&#32;USE&#32;OF&#32;THE&#32;SCHEDULER.</emphasis>
<anchor xml:id="_task_8h_source_1l02283"/>02283 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_task_8h_source_1l02284"/>02284 <emphasis role="comment">&#32;*&#32;THIS&#32;FUNCTION&#32;MUST&#32;BE&#32;CALLED&#32;WITH&#32;INTERRUPTS&#32;DISABLED.</emphasis>
<anchor xml:id="_task_8h_source_1l02285"/>02285 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_task_8h_source_1l02286"/>02286 <emphasis role="comment">&#32;*&#32;Removes&#32;a&#32;task&#32;from&#32;both&#32;the&#32;specified&#32;event&#32;list&#32;and&#32;the&#32;list&#32;of&#32;blocked</emphasis>
<anchor xml:id="_task_8h_source_1l02287"/>02287 <emphasis role="comment">&#32;*&#32;tasks,&#32;and&#32;places&#32;it&#32;on&#32;a&#32;ready&#32;queue.</emphasis>
<anchor xml:id="_task_8h_source_1l02288"/>02288 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_task_8h_source_1l02289"/>02289 <emphasis role="comment">&#32;*&#32;xTaskRemoveFromEventList()/vTaskRemoveFromUnorderedEventList()&#32;will&#32;be&#32;called</emphasis>
<anchor xml:id="_task_8h_source_1l02290"/>02290 <emphasis role="comment">&#32;*&#32;if&#32;either&#32;an&#32;event&#32;occurs&#32;to&#32;unblock&#32;a&#32;task,&#32;or&#32;the&#32;block&#32;timeout&#32;period</emphasis>
<anchor xml:id="_task_8h_source_1l02291"/>02291 <emphasis role="comment">&#32;*&#32;expires.</emphasis>
<anchor xml:id="_task_8h_source_1l02292"/>02292 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_task_8h_source_1l02293"/>02293 <emphasis role="comment">&#32;*&#32;xTaskRemoveFromEventList()&#32;is&#32;used&#32;when&#32;the&#32;event&#32;list&#32;is&#32;in&#32;task&#32;priority</emphasis>
<anchor xml:id="_task_8h_source_1l02294"/>02294 <emphasis role="comment">&#32;*&#32;order.&#32;&#32;It&#32;removes&#32;the&#32;list&#32;item&#32;from&#32;the&#32;head&#32;of&#32;the&#32;event&#32;list&#32;as&#32;that&#32;will</emphasis>
<anchor xml:id="_task_8h_source_1l02295"/>02295 <emphasis role="comment">&#32;*&#32;have&#32;the&#32;highest&#32;priority&#32;owning&#32;task&#32;of&#32;all&#32;the&#32;tasks&#32;on&#32;the&#32;event&#32;list.</emphasis>
<anchor xml:id="_task_8h_source_1l02296"/>02296 <emphasis role="comment">&#32;*&#32;vTaskRemoveFromUnorderedEventList()&#32;is&#32;used&#32;when&#32;the&#32;event&#32;list&#32;is&#32;not</emphasis>
<anchor xml:id="_task_8h_source_1l02297"/>02297 <emphasis role="comment">&#32;*&#32;ordered&#32;and&#32;the&#32;event&#32;list&#32;items&#32;hold&#32;something&#32;other&#32;than&#32;the&#32;owning&#32;tasks</emphasis>
<anchor xml:id="_task_8h_source_1l02298"/>02298 <emphasis role="comment">&#32;*&#32;priority.&#32;&#32;In&#32;this&#32;case&#32;the&#32;event&#32;list&#32;item&#32;value&#32;is&#32;updated&#32;to&#32;the&#32;value</emphasis>
<anchor xml:id="_task_8h_source_1l02299"/>02299 <emphasis role="comment">&#32;*&#32;passed&#32;in&#32;the&#32;xItemValue&#32;parameter.</emphasis>
<anchor xml:id="_task_8h_source_1l02300"/>02300 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_task_8h_source_1l02301"/>02301 <emphasis role="comment">&#32;*&#32;@return&#32;pdTRUE&#32;if&#32;the&#32;task&#32;being&#32;removed&#32;has&#32;a&#32;higher&#32;priority&#32;than&#32;the&#32;task</emphasis>
<anchor xml:id="_task_8h_source_1l02302"/>02302 <emphasis role="comment">&#32;*&#32;making&#32;the&#32;call,&#32;otherwise&#32;pdFALSE.</emphasis>
<anchor xml:id="_task_8h_source_1l02303"/>02303 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l02304"/>02304 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_task_8h_1a14513b7dd36055f73fba3c5ebbdc1b06">xTaskRemoveFromEventList</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxEventList&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l02305"/>02305 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1a340b9bc9f37c9d4d3fb6e303c3ef311b">vTaskRemoveFromUnorderedEventList</link>(&#32;<link linkend="_structx_l_i_s_t___i_t_e_m">ListItem_t</link>&#32;*&#32;pxEventListItem,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xItemValue&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l02306"/>02306 
<anchor xml:id="_task_8h_source_1l02307"/>02307 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_task_8h_source_1l02308"/>02308 <emphasis role="comment">&#32;*&#32;THIS&#32;FUNCTION&#32;MUST&#32;NOT&#32;BE&#32;USED&#32;FROM&#32;APPLICATION&#32;CODE.&#32;&#32;IT&#32;IS&#32;ONLY</emphasis>
<anchor xml:id="_task_8h_source_1l02309"/>02309 <emphasis role="comment">&#32;*&#32;INTENDED&#32;FOR&#32;USE&#32;WHEN&#32;IMPLEMENTING&#32;A&#32;PORT&#32;OF&#32;THE&#32;SCHEDULER&#32;AND&#32;IS</emphasis>
<anchor xml:id="_task_8h_source_1l02310"/>02310 <emphasis role="comment">&#32;*&#32;AN&#32;INTERFACE&#32;WHICH&#32;IS&#32;FOR&#32;THE&#32;EXCLUSIVE&#32;USE&#32;OF&#32;THE&#32;SCHEDULER.</emphasis>
<anchor xml:id="_task_8h_source_1l02311"/>02311 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_task_8h_source_1l02312"/>02312 <emphasis role="comment">&#32;*&#32;Sets&#32;the&#32;pointer&#32;to&#32;the&#32;current&#32;TCB&#32;to&#32;the&#32;TCB&#32;of&#32;the&#32;highest&#32;priority&#32;task</emphasis>
<anchor xml:id="_task_8h_source_1l02313"/>02313 <emphasis role="comment">&#32;*&#32;that&#32;is&#32;ready&#32;to&#32;run.</emphasis>
<anchor xml:id="_task_8h_source_1l02314"/>02314 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l02315"/>02315 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1a26df422f8d635d5191a3e106fbeeed68">vTaskSwitchContext</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l02316"/>02316 
<anchor xml:id="_task_8h_source_1l02317"/>02317 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_task_8h_source_1l02318"/>02318 <emphasis role="comment">&#32;*&#32;THESE&#32;FUNCTIONS&#32;MUST&#32;NOT&#32;BE&#32;USED&#32;FROM&#32;APPLICATION&#32;CODE.&#32;&#32;THEY&#32;ARE&#32;USED&#32;BY</emphasis>
<anchor xml:id="_task_8h_source_1l02319"/>02319 <emphasis role="comment">&#32;*&#32;THE&#32;EVENT&#32;BITS&#32;MODULE.</emphasis>
<anchor xml:id="_task_8h_source_1l02320"/>02320 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l02321"/>02321 <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;<link linkend="_task_8h_1a7793b4bbe45c10d4c5104c126b89e87c">uxTaskResetEventItemValue</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l02322"/>02322 
<anchor xml:id="_task_8h_source_1l02323"/>02323 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_task_8h_source_1l02324"/>02324 <emphasis role="comment">&#32;*&#32;Return&#32;the&#32;handle&#32;of&#32;the&#32;calling&#32;task.</emphasis>
<anchor xml:id="_task_8h_source_1l02325"/>02325 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l02326"/>02326 <link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;<link linkend="_task_8h_1a85a0f9c9f817b18686efbf8f37c72dfc">xTaskGetCurrentTaskHandle</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l02327"/>02327 
<anchor xml:id="_task_8h_source_1l02328"/>02328 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_task_8h_source_1l02329"/>02329 <emphasis role="comment">&#32;*&#32;Capture&#32;the&#32;current&#32;time&#32;status&#32;for&#32;future&#32;reference.</emphasis>
<anchor xml:id="_task_8h_source_1l02330"/>02330 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l02331"/>02331 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1a67155ad4ea2482b5f4597a69f2152be0">vTaskSetTimeOutState</link>(&#32;<link linkend="_structx_t_i_m_e___o_u_t">TimeOut_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxTimeOut&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l02332"/>02332 
<anchor xml:id="_task_8h_source_1l02333"/>02333 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_task_8h_source_1l02334"/>02334 <emphasis role="comment">&#32;*&#32;Compare&#32;the&#32;time&#32;status&#32;now&#32;with&#32;that&#32;previously&#32;captured&#32;to&#32;see&#32;if&#32;the</emphasis>
<anchor xml:id="_task_8h_source_1l02335"/>02335 <emphasis role="comment">&#32;*&#32;timeout&#32;has&#32;expired.</emphasis>
<anchor xml:id="_task_8h_source_1l02336"/>02336 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l02337"/>02337 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_task_8h_1a3b018a85d339e536a6c05748dd666a3a">xTaskCheckForTimeOut</link>(&#32;<link linkend="_structx_t_i_m_e___o_u_t">TimeOut_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxTimeOut,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxTicksToWait&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l02338"/>02338 
<anchor xml:id="_task_8h_source_1l02339"/>02339 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_task_8h_source_1l02340"/>02340 <emphasis role="comment">&#32;*&#32;Shortcut&#32;used&#32;by&#32;the&#32;queue&#32;implementation&#32;to&#32;prevent&#32;unnecessary&#32;call&#32;to</emphasis>
<anchor xml:id="_task_8h_source_1l02341"/>02341 <emphasis role="comment">&#32;*&#32;taskYIELD();</emphasis>
<anchor xml:id="_task_8h_source_1l02342"/>02342 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l02343"/>02343 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1a998c69e37431a3a32c637b31ff60089a">vTaskMissedYield</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l02344"/>02344 
<anchor xml:id="_task_8h_source_1l02345"/>02345 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_task_8h_source_1l02346"/>02346 <emphasis role="comment">&#32;*&#32;Returns&#32;the&#32;scheduler&#32;state&#32;as&#32;taskSCHEDULER_RUNNING,</emphasis>
<anchor xml:id="_task_8h_source_1l02347"/>02347 <emphasis role="comment">&#32;*&#32;taskSCHEDULER_NOT_STARTED&#32;or&#32;taskSCHEDULER_SUSPENDED.</emphasis>
<anchor xml:id="_task_8h_source_1l02348"/>02348 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l02349"/>02349 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_task_8h_1a0241000e08a261372186d34825a35979">xTaskGetSchedulerState</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l02350"/>02350 
<anchor xml:id="_task_8h_source_1l02351"/>02351 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_task_8h_source_1l02352"/>02352 <emphasis role="comment">&#32;*&#32;Raises&#32;the&#32;priority&#32;of&#32;the&#32;mutex&#32;holder&#32;to&#32;that&#32;of&#32;the&#32;calling&#32;task&#32;should</emphasis>
<anchor xml:id="_task_8h_source_1l02353"/>02353 <emphasis role="comment">&#32;*&#32;the&#32;mutex&#32;holder&#32;have&#32;a&#32;priority&#32;less&#32;than&#32;the&#32;calling&#32;task.</emphasis>
<anchor xml:id="_task_8h_source_1l02354"/>02354 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l02355"/>02355 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_task_8h_1aa715a488a6014df5a9393ca38c5938c0">xTaskPriorityInherit</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;<emphasis role="keyword">const</emphasis>&#32;pxMutexHolder&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l02356"/>02356 
<anchor xml:id="_task_8h_source_1l02357"/>02357 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_task_8h_source_1l02358"/>02358 <emphasis role="comment">&#32;*&#32;Set&#32;the&#32;priority&#32;of&#32;a&#32;task&#32;back&#32;to&#32;its&#32;proper&#32;priority&#32;in&#32;the&#32;case&#32;that&#32;it</emphasis>
<anchor xml:id="_task_8h_source_1l02359"/>02359 <emphasis role="comment">&#32;*&#32;inherited&#32;a&#32;higher&#32;priority&#32;while&#32;it&#32;was&#32;holding&#32;a&#32;semaphore.</emphasis>
<anchor xml:id="_task_8h_source_1l02360"/>02360 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l02361"/>02361 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_task_8h_1a02fe2e1419fd6c35f75a1357c5e5ce22">xTaskPriorityDisinherit</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;<emphasis role="keyword">const</emphasis>&#32;pxMutexHolder&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l02362"/>02362 
<anchor xml:id="_task_8h_source_1l02363"/>02363 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_task_8h_source_1l02364"/>02364 <emphasis role="comment">&#32;*&#32;If&#32;a&#32;higher&#32;priority&#32;task&#32;attempting&#32;to&#32;obtain&#32;a&#32;mutex&#32;caused&#32;a&#32;lower</emphasis>
<anchor xml:id="_task_8h_source_1l02365"/>02365 <emphasis role="comment">&#32;*&#32;priority&#32;task&#32;to&#32;inherit&#32;the&#32;higher&#32;priority&#32;task&apos;s&#32;priority&#32;-&#32;but&#32;the&#32;higher</emphasis>
<anchor xml:id="_task_8h_source_1l02366"/>02366 <emphasis role="comment">&#32;*&#32;priority&#32;task&#32;then&#32;timed&#32;out&#32;without&#32;obtaining&#32;the&#32;mutex,&#32;then&#32;the&#32;lower</emphasis>
<anchor xml:id="_task_8h_source_1l02367"/>02367 <emphasis role="comment">&#32;*&#32;priority&#32;task&#32;will&#32;disinherit&#32;the&#32;priority&#32;again&#32;-&#32;but&#32;only&#32;down&#32;as&#32;far&#32;as</emphasis>
<anchor xml:id="_task_8h_source_1l02368"/>02368 <emphasis role="comment">&#32;*&#32;the&#32;highest&#32;priority&#32;task&#32;that&#32;is&#32;still&#32;waiting&#32;for&#32;the&#32;mutex&#32;(if&#32;there&#32;were</emphasis>
<anchor xml:id="_task_8h_source_1l02369"/>02369 <emphasis role="comment">&#32;*&#32;more&#32;than&#32;one&#32;task&#32;waiting&#32;for&#32;the&#32;mutex).</emphasis>
<anchor xml:id="_task_8h_source_1l02370"/>02370 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l02371"/>02371 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1aa11e6a58d2534fe91ed8ee3a02c9b5e0">vTaskPriorityDisinheritAfterTimeout</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;<emphasis role="keyword">const</emphasis>&#32;pxMutexHolder,&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxHighestPriorityWaitingTask&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l02372"/>02372 
<anchor xml:id="_task_8h_source_1l02373"/>02373 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_task_8h_source_1l02374"/>02374 <emphasis role="comment">&#32;*&#32;Get&#32;the&#32;uxTCBNumber&#32;assigned&#32;to&#32;the&#32;task&#32;referenced&#32;by&#32;the&#32;xTask&#32;parameter.</emphasis>
<anchor xml:id="_task_8h_source_1l02375"/>02375 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l02376"/>02376 <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_task_8h_1ad8bb91e2267905f0069918802fa7f8b8">uxTaskGetTaskNumber</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l02377"/>02377 
<anchor xml:id="_task_8h_source_1l02378"/>02378 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_task_8h_source_1l02379"/>02379 <emphasis role="comment">&#32;*&#32;Set&#32;the&#32;uxTaskNumber&#32;of&#32;the&#32;task&#32;referenced&#32;by&#32;the&#32;xTask&#32;parameter&#32;to</emphasis>
<anchor xml:id="_task_8h_source_1l02380"/>02380 <emphasis role="comment">&#32;*&#32;uxHandle.</emphasis>
<anchor xml:id="_task_8h_source_1l02381"/>02381 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l02382"/>02382 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1ae48f006277815cb1c534284e29ca8f82">vTaskSetTaskNumber</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxHandle&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l02383"/>02383 
<anchor xml:id="_task_8h_source_1l02384"/>02384 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_task_8h_source_1l02385"/>02385 <emphasis role="comment">&#32;*&#32;Only&#32;available&#32;when&#32;configUSE_TICKLESS_IDLE&#32;is&#32;set&#32;to&#32;1.</emphasis>
<anchor xml:id="_task_8h_source_1l02386"/>02386 <emphasis role="comment">&#32;*&#32;If&#32;tickless&#32;mode&#32;is&#32;being&#32;used,&#32;or&#32;a&#32;low&#32;power&#32;mode&#32;is&#32;implemented,&#32;then</emphasis>
<anchor xml:id="_task_8h_source_1l02387"/>02387 <emphasis role="comment">&#32;*&#32;the&#32;tick&#32;interrupt&#32;will&#32;not&#32;execute&#32;during&#32;idle&#32;periods.&#32;&#32;When&#32;this&#32;is&#32;the</emphasis>
<anchor xml:id="_task_8h_source_1l02388"/>02388 <emphasis role="comment">&#32;*&#32;case,&#32;the&#32;tick&#32;count&#32;value&#32;maintained&#32;by&#32;the&#32;scheduler&#32;needs&#32;to&#32;be&#32;kept&#32;up</emphasis>
<anchor xml:id="_task_8h_source_1l02389"/>02389 <emphasis role="comment">&#32;*&#32;to&#32;date&#32;with&#32;the&#32;actual&#32;execution&#32;time&#32;by&#32;being&#32;skipped&#32;forward&#32;by&#32;a&#32;time</emphasis>
<anchor xml:id="_task_8h_source_1l02390"/>02390 <emphasis role="comment">&#32;*&#32;equal&#32;to&#32;the&#32;idle&#32;period.</emphasis>
<anchor xml:id="_task_8h_source_1l02391"/>02391 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l02392"/><link linkend="_task_8h_1a8dda6cb26bb158dd9636873135e63912">02392</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1a8dda6cb26bb158dd9636873135e63912">vTaskStepTick</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToJump&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l02393"/>02393 
<anchor xml:id="_task_8h_source_1l02394"/>02394 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_task_8h_source_1l02395"/>02395 <emphasis role="comment">&#32;*&#32;Only&#32;available&#32;when&#32;configUSE_TICKLESS_IDLE&#32;is&#32;set&#32;to&#32;1.</emphasis>
<anchor xml:id="_task_8h_source_1l02396"/>02396 <emphasis role="comment">&#32;*&#32;Provided&#32;for&#32;use&#32;within&#32;portSUPPRESS_TICKS_AND_SLEEP()&#32;to&#32;allow&#32;the&#32;port</emphasis>
<anchor xml:id="_task_8h_source_1l02397"/>02397 <emphasis role="comment">&#32;*&#32;specific&#32;sleep&#32;function&#32;to&#32;determine&#32;if&#32;it&#32;is&#32;ok&#32;to&#32;proceed&#32;with&#32;the&#32;sleep,</emphasis>
<anchor xml:id="_task_8h_source_1l02398"/>02398 <emphasis role="comment">&#32;*&#32;and&#32;if&#32;it&#32;is&#32;ok&#32;to&#32;proceed,&#32;if&#32;it&#32;is&#32;ok&#32;to&#32;sleep&#32;indefinitely.</emphasis>
<anchor xml:id="_task_8h_source_1l02399"/>02399 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_task_8h_source_1l02400"/>02400 <emphasis role="comment">&#32;*&#32;This&#32;function&#32;is&#32;necessary&#32;because&#32;portSUPPRESS_TICKS_AND_SLEEP()&#32;is&#32;only</emphasis>
<anchor xml:id="_task_8h_source_1l02401"/>02401 <emphasis role="comment">&#32;*&#32;called&#32;with&#32;the&#32;scheduler&#32;suspended,&#32;not&#32;from&#32;within&#32;a&#32;critical&#32;section.&#32;&#32;It</emphasis>
<anchor xml:id="_task_8h_source_1l02402"/>02402 <emphasis role="comment">&#32;*&#32;is&#32;therefore&#32;possible&#32;for&#32;an&#32;interrupt&#32;to&#32;request&#32;a&#32;context&#32;switch&#32;between</emphasis>
<anchor xml:id="_task_8h_source_1l02403"/>02403 <emphasis role="comment">&#32;*&#32;portSUPPRESS_TICKS_AND_SLEEP()&#32;and&#32;the&#32;low&#32;power&#32;mode&#32;actually&#32;being</emphasis>
<anchor xml:id="_task_8h_source_1l02404"/>02404 <emphasis role="comment">&#32;*&#32;entered.&#32;&#32;eTaskConfirmSleepModeStatus()&#32;should&#32;be&#32;called&#32;from&#32;a&#32;short</emphasis>
<anchor xml:id="_task_8h_source_1l02405"/>02405 <emphasis role="comment">&#32;*&#32;critical&#32;section&#32;between&#32;the&#32;timer&#32;being&#32;stopped&#32;and&#32;the&#32;sleep&#32;mode&#32;being</emphasis>
<anchor xml:id="_task_8h_source_1l02406"/>02406 <emphasis role="comment">&#32;*&#32;entered&#32;to&#32;ensure&#32;it&#32;is&#32;ok&#32;to&#32;proceed&#32;into&#32;the&#32;sleep&#32;mode.</emphasis>
<anchor xml:id="_task_8h_source_1l02407"/>02407 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l02408"/><link linkend="_task_8h_1ad185d5a451380c4040888620d9a92ec6">02408</link> <link linkend="_task_8h_1afd168a210ae0f2fb0fca242860a8178e">eSleepModeStatus</link>&#32;<link linkend="_task_8h_1ad185d5a451380c4040888620d9a92ec6">eTaskConfirmSleepModeStatus</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l02409"/>02409 
<anchor xml:id="_task_8h_source_1l02410"/>02410 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_task_8h_source_1l02411"/>02411 <emphasis role="comment">&#32;*&#32;For&#32;internal&#32;use&#32;only.&#32;&#32;Increment&#32;the&#32;mutex&#32;held&#32;count&#32;when&#32;a&#32;mutex&#32;is</emphasis>
<anchor xml:id="_task_8h_source_1l02412"/>02412 <emphasis role="comment">&#32;*&#32;taken&#32;and&#32;return&#32;the&#32;handle&#32;of&#32;the&#32;task&#32;that&#32;has&#32;taken&#32;the&#32;mutex.</emphasis>
<anchor xml:id="_task_8h_source_1l02413"/>02413 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l02414"/>02414 <link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;<link linkend="_task_8h_1a54430b124666d513049dcbf888e6935f">pvTaskIncrementMutexHeldCount</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l02415"/>02415 
<anchor xml:id="_task_8h_source_1l02416"/>02416 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_task_8h_source_1l02417"/>02417 <emphasis role="comment">&#32;*&#32;For&#32;internal&#32;use&#32;only.&#32;&#32;Same&#32;as&#32;vTaskSetTimeOutState(),&#32;but&#32;without&#32;a&#32;critial</emphasis>
<anchor xml:id="_task_8h_source_1l02418"/>02418 <emphasis role="comment">&#32;*&#32;section.</emphasis>
<anchor xml:id="_task_8h_source_1l02419"/>02419 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_task_8h_source_1l02420"/>02420 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1a9bff8681d5ed262e71b92805ca0da909">vTaskInternalSetTimeOutState</link>(&#32;<link linkend="_structx_t_i_m_e___o_u_t">TimeOut_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxTimeOut&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_task_8h_source_1l02421"/>02421 
<anchor xml:id="_task_8h_source_1l02422"/>02422 
<anchor xml:id="_task_8h_source_1l02423"/>02423 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
<anchor xml:id="_task_8h_source_1l02424"/>02424 }
<anchor xml:id="_task_8h_source_1l02425"/>02425 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_task_8h_source_1l02426"/>02426 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;INC_TASK_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_task_8h_source_1l02427"/>02427 
<anchor xml:id="_task_8h_source_1l02428"/>02428 
<anchor xml:id="_task_8h_source_1l02429"/>02429 
</programlisting></section>
