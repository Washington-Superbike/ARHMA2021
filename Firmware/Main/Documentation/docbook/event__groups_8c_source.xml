<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_event__groups_8c_source" xml:lang="en-US">
<title>event_groups.c</title>
<indexterm><primary>C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/event_groups.c</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_event__groups_8c_source_1l00001"/>00001 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00002"/>00002 <emphasis role="comment">&#32;*&#32;FreeRTOS&#32;Kernel&#32;V10.2.0</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00003"/>00003 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;2019&#32;Amazon.com,&#32;Inc.&#32;or&#32;its&#32;affiliates.&#32;&#32;All&#32;Rights&#32;Reserved.</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00004"/>00004 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00005"/>00005 <emphasis role="comment">&#32;*&#32;Permission&#32;is&#32;hereby&#32;granted,&#32;free&#32;of&#32;charge,&#32;to&#32;any&#32;person&#32;obtaining&#32;a&#32;copy&#32;of</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00006"/>00006 <emphasis role="comment">&#32;*&#32;this&#32;software&#32;and&#32;associated&#32;documentation&#32;files&#32;(the&#32;&quot;Software&quot;),&#32;to&#32;deal&#32;in</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00007"/>00007 <emphasis role="comment">&#32;*&#32;the&#32;Software&#32;without&#32;restriction,&#32;including&#32;without&#32;limitation&#32;the&#32;rights&#32;to</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00008"/>00008 <emphasis role="comment">&#32;*&#32;use,&#32;copy,&#32;modify,&#32;merge,&#32;publish,&#32;distribute,&#32;sublicense,&#32;and/or&#32;sell&#32;copies&#32;of</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00009"/>00009 <emphasis role="comment">&#32;*&#32;the&#32;Software,&#32;and&#32;to&#32;permit&#32;persons&#32;to&#32;whom&#32;the&#32;Software&#32;is&#32;furnished&#32;to&#32;do&#32;so,</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00010"/>00010 <emphasis role="comment">&#32;*&#32;subject&#32;to&#32;the&#32;following&#32;conditions:</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00011"/>00011 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00012"/>00012 <emphasis role="comment">&#32;*&#32;The&#32;above&#32;copyright&#32;notice&#32;and&#32;this&#32;permission&#32;notice&#32;shall&#32;be&#32;included&#32;in&#32;all</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00013"/>00013 <emphasis role="comment">&#32;*&#32;copies&#32;or&#32;substantial&#32;portions&#32;of&#32;the&#32;Software.</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00014"/>00014 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00015"/>00015 <emphasis role="comment">&#32;*&#32;THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;&quot;AS&#32;IS&quot;,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00016"/>00016 <emphasis role="comment">&#32;*&#32;IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,&#32;FITNESS</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00017"/>00017 <emphasis role="comment">&#32;*&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL&#32;THE&#32;AUTHORS&#32;OR</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00018"/>00018 <emphasis role="comment">&#32;*&#32;COPYRIGHT&#32;HOLDERS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER&#32;LIABILITY,&#32;WHETHER</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00019"/>00019 <emphasis role="comment">&#32;*&#32;IN&#32;AN&#32;ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING&#32;FROM,&#32;OUT&#32;OF&#32;OR&#32;IN</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00020"/>00020 <emphasis role="comment">&#32;*&#32;CONNECTION&#32;WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS&#32;IN&#32;THE&#32;SOFTWARE.</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00021"/>00021 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00022"/>00022 <emphasis role="comment">&#32;*&#32;http://www.FreeRTOS.org</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00023"/>00023 <emphasis role="comment">&#32;*&#32;http://aws.amazon.com/freertos</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00024"/>00024 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00025"/>00025 <emphasis role="comment">&#32;*&#32;1&#32;tab&#32;==&#32;4&#32;spaces!</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00026"/>00026 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00027"/>00027 
<anchor xml:id="_event__groups_8c_source_1l00028"/>00028 <emphasis role="comment">/*&#32;Standard&#32;includes.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00029"/>00029 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00030"/>00030 
<anchor xml:id="_event__groups_8c_source_1l00031"/>00031 <emphasis role="comment">/*&#32;Defining&#32;MPU_WRAPPERS_INCLUDED_FROM_API_FILE&#32;prevents&#32;task.h&#32;from&#32;redefining</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00032"/>00032 <emphasis role="comment">all&#32;the&#32;API&#32;functions&#32;to&#32;use&#32;the&#32;MPU&#32;wrappers.&#32;&#32;That&#32;should&#32;only&#32;be&#32;done&#32;when</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00033"/>00033 <emphasis role="comment">task.h&#32;is&#32;included&#32;from&#32;an&#32;application&#32;file.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00034"/><link linkend="_event__groups_8c_1ab622d8c674f2a417a666a7ed89109e79">00034</link> <emphasis role="preprocessor">#define&#32;MPU_WRAPPERS_INCLUDED_FROM_API_FILE</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00035"/>00035 
<anchor xml:id="_event__groups_8c_source_1l00036"/>00036 <emphasis role="comment">/*&#32;FreeRTOS&#32;includes.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00037"/>00037 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__free_r_t_o_s_8h">FreeRTOS.h</link>&quot;</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00038"/>00038 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_task_8h">task.h</link>&quot;</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00039"/>00039 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_timers_8h">timers.h</link>&quot;</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_event__groups_8h">event_groups.h</link>&quot;</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00041"/>00041 
<anchor xml:id="_event__groups_8c_source_1l00042"/>00042 <emphasis role="comment">/*&#32;Lint&#32;e961,&#32;e750&#32;and&#32;e9021&#32;are&#32;suppressed&#32;as&#32;a&#32;MISRA&#32;exception&#32;justified</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00043"/>00043 <emphasis role="comment">because&#32;the&#32;MPU&#32;ports&#32;require&#32;MPU_WRAPPERS_INCLUDED_FROM_API_FILE&#32;to&#32;be&#32;defined</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00044"/>00044 <emphasis role="comment">for&#32;the&#32;header&#32;files&#32;above,&#32;but&#32;not&#32;in&#32;this&#32;file,&#32;in&#32;order&#32;to&#32;generate&#32;the</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00045"/>00045 <emphasis role="comment">correct&#32;privileged&#32;Vs&#32;unprivileged&#32;linkage&#32;and&#32;placement.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00046"/>00046 <emphasis role="preprocessor">#undef&#32;MPU_WRAPPERS_INCLUDED_FROM_API_FILE&#32;</emphasis><emphasis role="comment">/*lint&#32;!e961&#32;!e750&#32;!e9021&#32;See&#32;comment&#32;above.&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_event__groups_8c_source_1l00047"/>00047 
<anchor xml:id="_event__groups_8c_source_1l00048"/>00048 <emphasis role="comment">/*&#32;The&#32;following&#32;bit&#32;fields&#32;convey&#32;control&#32;information&#32;in&#32;a&#32;task&apos;s&#32;event&#32;list</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00049"/>00049 <emphasis role="comment">item&#32;value.&#32;&#32;It&#32;is&#32;important&#32;they&#32;don&apos;t&#32;clash&#32;with&#32;the</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00050"/>00050 <emphasis role="comment">taskEVENT_LIST_ITEM_VALUE_IN_USE&#32;definition.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00051"/>00051 <emphasis role="preprocessor">#if&#32;configUSE_16_BIT_TICKS&#32;==&#32;1</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00052"/>00052 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;eventCLEAR_EVENTS_ON_EXIT_BIT&#32;&#32;&#32;0x0100U</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00053"/>00053 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;eventUNBLOCKED_DUE_TO_BIT_SET&#32;&#32;&#32;0x0200U</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00054"/>00054 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;eventWAIT_FOR_ALL_BITS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0400U</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00055"/>00055 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;eventEVENT_BITS_CONTROL_BYTES&#32;&#32;&#32;0xff00U</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00056"/>00056 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00057"/><link linkend="_event__groups_8c_1a1404686af7c8070fa57675707c817abc">00057</link> <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;eventCLEAR_EVENTS_ON_EXIT_BIT&#32;&#32;&#32;0x01000000UL</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00058"/><link linkend="_event__groups_8c_1ab451d5ad95813d5ec7ff1784d69e9ec3">00058</link> <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;eventUNBLOCKED_DUE_TO_BIT_SET&#32;&#32;&#32;0x02000000UL</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00059"/><link linkend="_event__groups_8c_1ae98d5f1271845ad42742aef9659e1568">00059</link> <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;eventWAIT_FOR_ALL_BITS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x04000000UL</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00060"/><link linkend="_event__groups_8c_1a46c8292a6ba88b017cca402f5baf670b">00060</link> <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;eventEVENT_BITS_CONTROL_BYTES&#32;&#32;&#32;0xff000000UL</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00061"/>00061 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00062"/>00062 
<anchor xml:id="_event__groups_8c_source_1l00063"/><link linkend="_struct_event_group_def__t">00063</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_event_group_def__t">EventGroupDef_t</link>
<anchor xml:id="_event__groups_8c_source_1l00064"/>00064 {
<anchor xml:id="_event__groups_8c_source_1l00065"/><link linkend="_struct_event_group_def__t_1ab1bcd95a3330b71c55198b2352926643">00065</link> &#32;&#32;&#32;&#32;<link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;<link linkend="_struct_event_group_def__t_1ab1bcd95a3330b71c55198b2352926643">uxEventBits</link>;
<anchor xml:id="_event__groups_8c_source_1l00066"/><link linkend="_struct_event_group_def__t_1a3dd347560456bfe452415efb52760dc3">00066</link> &#32;&#32;&#32;&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;<link linkend="_struct_event_group_def__t_1a3dd347560456bfe452415efb52760dc3">xTasksWaitingForBits</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;List&#32;of&#32;tasks&#32;waiting&#32;for&#32;a&#32;bit&#32;to&#32;be&#32;set.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00067"/>00067 
<anchor xml:id="_event__groups_8c_source_1l00068"/>00068 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00069"/><link linkend="_struct_event_group_def__t_1ac251eb462a51430b7691ba14e35c9ffc">00069</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_struct_event_group_def__t_1ac251eb462a51430b7691ba14e35c9ffc">uxEventGroupNumber</link>;
<anchor xml:id="_event__groups_8c_source_1l00070"/>00070 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00071"/>00071 
<anchor xml:id="_event__groups_8c_source_1l00072"/>00072 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if(&#32;(&#32;configSUPPORT_STATIC_ALLOCATION&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;ucStaticallyAllocated;&#32;<emphasis role="comment">/*&lt;&#32;Set&#32;to&#32;pdTRUE&#32;if&#32;the&#32;event&#32;group&#32;is&#32;statically&#32;allocated&#32;to&#32;ensure&#32;no&#32;attempt&#32;is&#32;made&#32;to&#32;free&#32;the&#32;memory.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00074"/>00074 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00075"/><link linkend="_event__groups_8c_1ae4fc9408a7fab90c6296379ff3cb0f11">00075</link> }&#32;<link linkend="_event__groups_8c_1ae4fc9408a7fab90c6296379ff3cb0f11">EventGroup_t</link>;
<anchor xml:id="_event__groups_8c_source_1l00076"/>00076 
<anchor xml:id="_event__groups_8c_source_1l00077"/>00077 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00078"/>00078 
<anchor xml:id="_event__groups_8c_source_1l00079"/>00079 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00080"/>00080 <emphasis role="comment">&#32;*&#32;Test&#32;the&#32;bits&#32;set&#32;in&#32;uxCurrentEventBits&#32;to&#32;see&#32;if&#32;the&#32;wait&#32;condition&#32;is&#32;met.</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00081"/>00081 <emphasis role="comment">&#32;*&#32;The&#32;wait&#32;condition&#32;is&#32;defined&#32;by&#32;xWaitForAllBits.&#32;&#32;If&#32;xWaitForAllBits&#32;is</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00082"/>00082 <emphasis role="comment">&#32;*&#32;pdTRUE&#32;then&#32;the&#32;wait&#32;condition&#32;is&#32;met&#32;if&#32;all&#32;the&#32;bits&#32;set&#32;in&#32;uxBitsToWaitFor</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00083"/>00083 <emphasis role="comment">&#32;*&#32;are&#32;also&#32;set&#32;in&#32;uxCurrentEventBits.&#32;&#32;If&#32;xWaitForAllBits&#32;is&#32;pdFALSE&#32;then&#32;the</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00084"/>00084 <emphasis role="comment">&#32;*&#32;wait&#32;condition&#32;is&#32;met&#32;if&#32;any&#32;of&#32;the&#32;bits&#32;set&#32;in&#32;uxBitsToWait&#32;for&#32;are&#32;also&#32;set</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00085"/>00085 <emphasis role="comment">&#32;*&#32;in&#32;uxCurrentEventBits.</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00086"/>00086 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00087"/>00087 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_event__groups_8c_1a0b39881dccfddfde543fb7181872fb5b">prvTestWaitCondition</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;uxCurrentEventBits,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;uxBitsToWaitFor,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xWaitForAllBits&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_event__groups_8c_source_1l00088"/>00088 
<anchor xml:id="_event__groups_8c_source_1l00089"/>00089 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00090"/>00090 
<anchor xml:id="_event__groups_8c_source_1l00091"/>00091 <emphasis role="preprocessor">#if(&#32;configSUPPORT_STATIC_ALLOCATION&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00092"/>00092 
<anchor xml:id="_event__groups_8c_source_1l00093"/>00093 &#32;&#32;&#32;&#32;<link linkend="_struct_event_group_def__t">EventGroupHandle_t</link>&#32;xEventGroupCreateStatic(&#32;<link linkend="_structx_s_t_a_t_i_c___e_v_e_n_t___g_r_o_u_p">StaticEventGroup_t</link>&#32;*pxEventGroupBuffer&#32;)
<anchor xml:id="_event__groups_8c_source_1l00094"/>00094 &#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00095"/>00095 &#32;&#32;&#32;&#32;<link linkend="_struct_event_group_def__t">EventGroup_t</link>&#32;*pxEventBits;
<anchor xml:id="_event__groups_8c_source_1l00096"/>00096 
<anchor xml:id="_event__groups_8c_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;StaticEventGroup_t&#32;object&#32;must&#32;be&#32;provided.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxEventGroupBuffer&#32;);
<anchor xml:id="_event__groups_8c_source_1l00099"/>00099 
<anchor xml:id="_event__groups_8c_source_1l00100"/>00100 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;configASSERT_DEFINED&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Sanity&#32;check&#32;that&#32;the&#32;size&#32;of&#32;the&#32;structure&#32;used&#32;to&#32;declare&#32;a</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00103"/>00103 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;variable&#32;of&#32;type&#32;StaticEventGroup_t&#32;equals&#32;the&#32;size&#32;of&#32;the&#32;real</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00104"/>00104 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;event&#32;group&#32;structure.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">volatile</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xSize&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<link linkend="__free_r_t_o_s_8h_1af87e218149130753afb4a7044e5569e6">StaticEventGroup_t</link>&#32;);
<anchor xml:id="_event__groups_8c_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xSize&#32;==&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<link linkend="_struct_event_group_def__t">EventGroup_t</link>&#32;)&#32;);
<anchor xml:id="_event__groups_8c_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">/*lint&#32;!e529&#32;xSize&#32;is&#32;referenced&#32;if&#32;configASSERT()&#32;is&#32;defined.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00108"/>00108 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configASSERT_DEFINED&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_event__groups_8c_source_1l00109"/>00109 
<anchor xml:id="_event__groups_8c_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;user&#32;has&#32;provided&#32;a&#32;statically&#32;allocated&#32;event&#32;group&#32;-&#32;use&#32;it.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxEventBits&#32;=&#32;(&#32;<link linkend="_struct_event_group_def__t">EventGroup_t</link>&#32;*&#32;)&#32;pxEventGroupBuffer;&#32;<emphasis role="comment">/*lint&#32;!e740&#32;!e9087&#32;EventGroup_t&#32;and&#32;StaticEventGroup_t&#32;are&#32;deliberately&#32;aliased&#32;for&#32;data&#32;hiding&#32;purposes&#32;and&#32;guaranteed&#32;to&#32;have&#32;the&#32;same&#32;size&#32;and&#32;alignment&#32;requirement&#32;-&#32;checked&#32;by&#32;configASSERT().&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00112"/>00112 
<anchor xml:id="_event__groups_8c_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxEventBits&#32;!=&#32;NULL&#32;)
<anchor xml:id="_event__groups_8c_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1ab1bcd95a3330b71c55198b2352926643">uxEventBits</link>&#32;=&#32;0;
<anchor xml:id="_event__groups_8c_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8c_1aa0831d347bba16bfbe524f4faa790b9d">vListInitialise</link>(&#32;&amp;(&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1a3dd347560456bfe452415efb52760dc3">xTasksWaitingForBits</link>&#32;)&#32;);
<anchor xml:id="_event__groups_8c_source_1l00117"/>00117 
<anchor xml:id="_event__groups_8c_source_1l00118"/>00118 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Both&#32;static&#32;and&#32;dynamic&#32;allocation&#32;can&#32;be&#32;used,&#32;so&#32;note&#32;that</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00121"/>00121 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this&#32;event&#32;group&#32;was&#32;created&#32;statically&#32;in&#32;case&#32;the&#32;event&#32;group</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00122"/>00122 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;later&#32;deleted.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxEventBits-&gt;ucStaticallyAllocated&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_event__groups_8c_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00125"/>00125 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_event__groups_8c_source_1l00126"/>00126 
<anchor xml:id="_event__groups_8c_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a0100fcbcc03e3c2f0cd7bc7071f9ab70">traceEVENT_GROUP_CREATE</link>(&#32;pxEventBits&#32;);
<anchor xml:id="_event__groups_8c_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;xEventGroupCreateStatic&#32;should&#32;only&#32;ever&#32;be&#32;called&#32;with</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00132"/>00132 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxEventGroupBuffer&#32;pointing&#32;to&#32;a&#32;pre-allocated&#32;(compile&#32;time</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00133"/>00133 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allocated)&#32;StaticEventGroup_t&#32;variable.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac6f6ea04ddbf43f62f1b0285622d4474">traceEVENT_GROUP_CREATE_FAILED</link>();
<anchor xml:id="_event__groups_8c_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00136"/>00136 
<anchor xml:id="_event__groups_8c_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pxEventBits;
<anchor xml:id="_event__groups_8c_source_1l00138"/>00138 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00139"/>00139 
<anchor xml:id="_event__groups_8c_source_1l00140"/>00140 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configSUPPORT_STATIC_ALLOCATION&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_event__groups_8c_source_1l00141"/>00141 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00142"/>00142 
<anchor xml:id="_event__groups_8c_source_1l00143"/>00143 <emphasis role="preprocessor">#if(&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00144"/>00144 
<anchor xml:id="_event__groups_8c_source_1l00145"/><link linkend="_event__groups_8c_1a2e8622ce280fff2f60ad867dff0a4519">00145</link> &#32;&#32;&#32;&#32;<link linkend="_struct_event_group_def__t">EventGroupHandle_t</link>&#32;<link linkend="_event__groups_8c_1a2e8622ce280fff2f60ad867dff0a4519">xEventGroupCreate</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)
<anchor xml:id="_event__groups_8c_source_1l00146"/>00146 &#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00147"/>00147 &#32;&#32;&#32;&#32;<link linkend="_struct_event_group_def__t">EventGroup_t</link>&#32;*pxEventBits;
<anchor xml:id="_event__groups_8c_source_1l00148"/>00148 
<anchor xml:id="_event__groups_8c_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Allocate&#32;the&#32;event&#32;group.&#32;&#32;Justification&#32;for&#32;MISRA&#32;deviation&#32;as</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00150"/>00150 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;follows:&#32;&#32;pvPortMalloc()&#32;always&#32;ensures&#32;returned&#32;memory&#32;blocks&#32;are</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00151"/>00151 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aligned&#32;per&#32;the&#32;requirements&#32;of&#32;the&#32;MCU&#32;stack.&#32;&#32;In&#32;this&#32;case</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00152"/>00152 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pvPortMalloc()&#32;must&#32;return&#32;a&#32;pointer&#32;that&#32;is&#32;guaranteed&#32;to&#32;meet&#32;the</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00153"/>00153 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;alignment&#32;requirements&#32;of&#32;the&#32;EventGroup_t&#32;structure&#32;-&#32;which&#32;(if&#32;you</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00154"/>00154 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;follow&#32;it&#32;through)&#32;is&#32;the&#32;alignment&#32;requirements&#32;of&#32;the&#32;TickType_t&#32;type</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00155"/>00155 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(EventBits_t&#32;being&#32;of&#32;TickType_t&#32;itself).&#32;&#32;Therefore,&#32;whenever&#32;the</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00156"/>00156 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stack&#32;alignment&#32;requirements&#32;are&#32;greater&#32;than&#32;or&#32;equal&#32;to&#32;the</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00157"/>00157 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TickType_t&#32;alignment&#32;requirements&#32;the&#32;cast&#32;is&#32;safe.&#32;&#32;In&#32;other&#32;cases,</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00158"/>00158 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;where&#32;the&#32;natural&#32;word&#32;size&#32;of&#32;the&#32;architecture&#32;is&#32;less&#32;than</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00159"/>00159 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sizeof(&#32;TickType_t&#32;),&#32;the&#32;TickType_t&#32;variables&#32;will&#32;be&#32;accessed&#32;in&#32;two</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00160"/>00160 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;or&#32;more&#32;reads&#32;operations,&#32;and&#32;the&#32;alignment&#32;requirements&#32;is&#32;only&#32;that</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00161"/>00161 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;of&#32;each&#32;individual&#32;read.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxEventBits&#32;=&#32;(&#32;<link linkend="_struct_event_group_def__t">EventGroup_t</link>&#32;*&#32;)&#32;<link linkend="_heap__3_8c_1ac56bcb7515f081a5b3df83935499fa4a">pvPortMalloc</link>(&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<link linkend="_struct_event_group_def__t">EventGroup_t</link>&#32;)&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9087&#32;!e9079&#32;see&#32;comment&#32;above.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00163"/>00163 
<anchor xml:id="_event__groups_8c_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxEventBits&#32;!=&#32;NULL&#32;)
<anchor xml:id="_event__groups_8c_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1ab1bcd95a3330b71c55198b2352926643">uxEventBits</link>&#32;=&#32;0;
<anchor xml:id="_event__groups_8c_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8c_1aa0831d347bba16bfbe524f4faa790b9d">vListInitialise</link>(&#32;&amp;(&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1a3dd347560456bfe452415efb52760dc3">xTasksWaitingForBits</link>&#32;)&#32;);
<anchor xml:id="_event__groups_8c_source_1l00168"/>00168 
<anchor xml:id="_event__groups_8c_source_1l00169"/>00169 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;configSUPPORT_STATIC_ALLOCATION&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Both&#32;static&#32;and&#32;dynamic&#32;allocation&#32;can&#32;be&#32;used,&#32;so&#32;note&#32;this</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00172"/>00172 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;event&#32;group&#32;was&#32;allocated&#32;statically&#32;in&#32;case&#32;the&#32;event&#32;group&#32;is</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00173"/>00173 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;later&#32;deleted.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxEventBits-&gt;ucStaticallyAllocated&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_event__groups_8c_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00176"/>00176 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configSUPPORT_STATIC_ALLOCATION&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_event__groups_8c_source_1l00177"/>00177 
<anchor xml:id="_event__groups_8c_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a0100fcbcc03e3c2f0cd7bc7071f9ab70">traceEVENT_GROUP_CREATE</link>(&#32;pxEventBits&#32;);
<anchor xml:id="_event__groups_8c_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac6f6ea04ddbf43f62f1b0285622d4474">traceEVENT_GROUP_CREATE_FAILED</link>();&#32;<emphasis role="comment">/*lint&#32;!e9063&#32;Else&#32;branch&#32;only&#32;exists&#32;to&#32;allow&#32;tracing&#32;and&#32;does&#32;not&#32;generate&#32;code&#32;if&#32;trace&#32;macros&#32;are&#32;not&#32;defined.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00184"/>00184 
<anchor xml:id="_event__groups_8c_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pxEventBits;
<anchor xml:id="_event__groups_8c_source_1l00186"/>00186 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00187"/>00187 
<anchor xml:id="_event__groups_8c_source_1l00188"/>00188 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_event__groups_8c_source_1l00189"/>00189 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00190"/>00190 
<anchor xml:id="_event__groups_8c_source_1l00191"/><link linkend="_event__groups_8c_1ac38db316f0928c7ddaacb677a75dbc03">00191</link> <link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;<link linkend="_event__groups_8c_1ac38db316f0928c7ddaacb677a75dbc03">xEventGroupSync</link>(&#32;<link linkend="_struct_event_group_def__t">EventGroupHandle_t</link>&#32;xEventGroup,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;uxBitsToSet,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;uxBitsToWaitFor,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait&#32;)
<anchor xml:id="_event__groups_8c_source_1l00192"/>00192 {
<anchor xml:id="_event__groups_8c_source_1l00193"/>00193 <link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;uxOriginalBitValue,&#32;uxReturn;
<anchor xml:id="_event__groups_8c_source_1l00194"/>00194 <link linkend="_struct_event_group_def__t">EventGroup_t</link>&#32;*pxEventBits&#32;=&#32;xEventGroup;
<anchor xml:id="_event__groups_8c_source_1l00195"/>00195 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xAlreadyYielded;
<anchor xml:id="_event__groups_8c_source_1l00196"/>00196 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xTimeoutOccurred&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_event__groups_8c_source_1l00197"/>00197 
<anchor xml:id="_event__groups_8c_source_1l00198"/>00198 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;(&#32;uxBitsToWaitFor&#32;&amp;&#32;<link linkend="_event__groups_8c_1a46c8292a6ba88b017cca402f5baf670b">eventEVENT_BITS_CONTROL_BYTES</link>&#32;)&#32;==&#32;0&#32;);
<anchor xml:id="_event__groups_8c_source_1l00199"/>00199 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;uxBitsToWaitFor&#32;!=&#32;0&#32;);
<anchor xml:id="_event__groups_8c_source_1l00200"/>00200 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;(&#32;INCLUDE_xTaskGetSchedulerState&#32;==&#32;1&#32;)&#32;||&#32;(&#32;configUSE_TIMERS&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00201"/>00201 &#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;!(&#32;(&#32;<link linkend="_task_8h_1a0241000e08a261372186d34825a35979">xTaskGetSchedulerState</link>()&#32;==&#32;<link linkend="_task_8h_1a0cad071ca127a35df93166e9ed5b6ada">taskSCHEDULER_SUSPENDED</link>&#32;)&#32;&amp;&amp;&#32;(&#32;xTicksToWait&#32;!=&#32;0&#32;)&#32;)&#32;);
<anchor xml:id="_event__groups_8c_source_1l00203"/>00203 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00204"/>00204 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00205"/>00205 
<anchor xml:id="_event__groups_8c_source_1l00206"/>00206 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1a366b302eba79d10b5ee2a3756f0fcc43">vTaskSuspendAll</link>();
<anchor xml:id="_event__groups_8c_source_1l00207"/>00207 &#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxOriginalBitValue&#32;=&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1ab1bcd95a3330b71c55198b2352926643">uxEventBits</link>;
<anchor xml:id="_event__groups_8c_source_1l00209"/>00209 
<anchor xml:id="_event__groups_8c_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_event__groups_8c_1a9ac7cd970f50e2e50a494b656e0eb239">xEventGroupSetBits</link>(&#32;xEventGroup,&#32;uxBitsToSet&#32;);
<anchor xml:id="_event__groups_8c_source_1l00211"/>00211 
<anchor xml:id="_event__groups_8c_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;(&#32;uxOriginalBitValue&#32;|&#32;uxBitsToSet&#32;)&#32;&amp;&#32;uxBitsToWaitFor&#32;)&#32;==&#32;uxBitsToWaitFor&#32;)
<anchor xml:id="_event__groups_8c_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;All&#32;the&#32;rendezvous&#32;bits&#32;are&#32;now&#32;set&#32;-&#32;no&#32;need&#32;to&#32;block.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxReturn&#32;=&#32;(&#32;uxOriginalBitValue&#32;|&#32;uxBitsToSet&#32;);
<anchor xml:id="_event__groups_8c_source_1l00216"/>00216 
<anchor xml:id="_event__groups_8c_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Rendezvous&#32;always&#32;clear&#32;the&#32;bits.&#32;&#32;They&#32;will&#32;have&#32;been&#32;cleared</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00218"/>00218 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;already&#32;unless&#32;this&#32;is&#32;the&#32;only&#32;task&#32;in&#32;the&#32;rendezvous.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1ab1bcd95a3330b71c55198b2352926643">uxEventBits</link>&#32;&amp;=&#32;~uxBitsToWaitFor;
<anchor xml:id="_event__groups_8c_source_1l00220"/>00220 
<anchor xml:id="_event__groups_8c_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xTicksToWait&#32;=&#32;0;
<anchor xml:id="_event__groups_8c_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTicksToWait&#32;!=&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_event__groups_8c_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a898ead658f344a0475a9f2ed3bf8f407">traceEVENT_GROUP_SYNC_BLOCK</link>(&#32;xEventGroup,&#32;uxBitsToSet,&#32;uxBitsToWaitFor&#32;);
<anchor xml:id="_event__groups_8c_source_1l00228"/>00228 
<anchor xml:id="_event__groups_8c_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Store&#32;the&#32;bits&#32;that&#32;the&#32;calling&#32;task&#32;is&#32;waiting&#32;for&#32;in&#32;the</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00230"/>00230 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;task&apos;s&#32;event&#32;list&#32;item&#32;so&#32;the&#32;kernel&#32;knows&#32;when&#32;a&#32;match&#32;is</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00231"/>00231 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;found.&#32;&#32;Then&#32;enter&#32;the&#32;blocked&#32;state.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1a9d52fa7b60cc6a7b4fd0846700d7834c">vTaskPlaceOnUnorderedEventList</link>(&#32;&amp;(&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1a3dd347560456bfe452415efb52760dc3">xTasksWaitingForBits</link>&#32;),&#32;(&#32;uxBitsToWaitFor&#32;|&#32;<link linkend="_event__groups_8c_1a1404686af7c8070fa57675707c817abc">eventCLEAR_EVENTS_ON_EXIT_BIT</link>&#32;|&#32;<link linkend="_event__groups_8c_1ae98d5f1271845ad42742aef9659e1568">eventWAIT_FOR_ALL_BITS</link>&#32;),&#32;xTicksToWait&#32;);
<anchor xml:id="_event__groups_8c_source_1l00233"/>00233 
<anchor xml:id="_event__groups_8c_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;assignment&#32;is&#32;obsolete&#32;as&#32;uxReturn&#32;will&#32;get&#32;set&#32;after</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00235"/>00235 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;task&#32;unblocks,&#32;but&#32;some&#32;compilers&#32;mistakenly&#32;generate&#32;a</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00236"/>00236 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;warning&#32;about&#32;uxReturn&#32;being&#32;returned&#32;without&#32;being&#32;set&#32;if&#32;the</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00237"/>00237 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assignment&#32;is&#32;omitted.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxReturn&#32;=&#32;0;
<anchor xml:id="_event__groups_8c_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;rendezvous&#32;bits&#32;were&#32;not&#32;set,&#32;but&#32;no&#32;block&#32;time&#32;was</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00243"/>00243 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;specified&#32;-&#32;just&#32;return&#32;the&#32;current&#32;event&#32;bit&#32;value.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxReturn&#32;=&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1ab1bcd95a3330b71c55198b2352926643">uxEventBits</link>;
<anchor xml:id="_event__groups_8c_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xTimeoutOccurred&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_event__groups_8c_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00248"/>00248 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00249"/>00249 &#32;&#32;&#32;&#32;xAlreadyYielded&#32;=&#32;<link linkend="_task_8h_1a003f8ae6d649225abd030cc76e1c7d0e">xTaskResumeAll</link>();
<anchor xml:id="_event__groups_8c_source_1l00250"/>00250 
<anchor xml:id="_event__groups_8c_source_1l00251"/>00251 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTicksToWait&#32;!=&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_event__groups_8c_source_1l00252"/>00252 &#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xAlreadyYielded&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_event__groups_8c_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1af4484fc07631a16e45ac5f29a3f0556e">portYIELD_WITHIN_API</link>();
<anchor xml:id="_event__groups_8c_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_event__groups_8c_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00261"/>00261 
<anchor xml:id="_event__groups_8c_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;blocked&#32;to&#32;wait&#32;for&#32;its&#32;required&#32;bits&#32;to&#32;be&#32;set&#32;-&#32;at&#32;this</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00263"/>00263 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point&#32;either&#32;the&#32;required&#32;bits&#32;were&#32;set&#32;or&#32;the&#32;block&#32;time&#32;expired.&#32;&#32;If</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00264"/>00264 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;required&#32;bits&#32;were&#32;set&#32;they&#32;will&#32;have&#32;been&#32;stored&#32;in&#32;the&#32;task&apos;s</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00265"/>00265 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;event&#32;list&#32;item,&#32;and&#32;they&#32;should&#32;now&#32;be&#32;retrieved&#32;then&#32;cleared.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxReturn&#32;=&#32;<link linkend="_task_8h_1a7793b4bbe45c10d4c5104c126b89e87c">uxTaskResetEventItemValue</link>();
<anchor xml:id="_event__groups_8c_source_1l00267"/>00267 
<anchor xml:id="_event__groups_8c_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;uxReturn&#32;&amp;&#32;<link linkend="_event__groups_8c_1ab451d5ad95813d5ec7ff1784d69e9ec3">eventUNBLOCKED_DUE_TO_BIT_SET</link>&#32;)&#32;==&#32;(&#32;<link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_event__groups_8c_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;timed&#32;out,&#32;just&#32;return&#32;the&#32;current&#32;event&#32;bit&#32;value.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_event__groups_8c_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxReturn&#32;=&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1ab1bcd95a3330b71c55198b2352926643">uxEventBits</link>;
<anchor xml:id="_event__groups_8c_source_1l00274"/>00274 
<anchor xml:id="_event__groups_8c_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Although&#32;the&#32;task&#32;got&#32;here&#32;because&#32;it&#32;timed&#32;out&#32;before&#32;the</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00276"/>00276 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bits&#32;it&#32;was&#32;waiting&#32;for&#32;were&#32;set,&#32;it&#32;is&#32;possible&#32;that&#32;since&#32;it</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00277"/>00277 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unblocked&#32;another&#32;task&#32;has&#32;set&#32;the&#32;bits.&#32;&#32;If&#32;this&#32;is&#32;the&#32;case</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00278"/>00278 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;then&#32;it&#32;needs&#32;to&#32;clear&#32;the&#32;bits&#32;before&#32;exiting.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;uxReturn&#32;&amp;&#32;uxBitsToWaitFor&#32;)&#32;==&#32;uxBitsToWaitFor&#32;)
<anchor xml:id="_event__groups_8c_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1ab1bcd95a3330b71c55198b2352926643">uxEventBits</link>&#32;&amp;=&#32;~uxBitsToWaitFor;
<anchor xml:id="_event__groups_8c_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_event__groups_8c_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_event__groups_8c_source_1l00289"/>00289 
<anchor xml:id="_event__groups_8c_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xTimeoutOccurred&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_event__groups_8c_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;unblocked&#32;because&#32;the&#32;bits&#32;were&#32;set.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00296"/>00296 
<anchor xml:id="_event__groups_8c_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Control&#32;bits&#32;might&#32;be&#32;set&#32;as&#32;the&#32;task&#32;had&#32;blocked&#32;should&#32;not&#32;be</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00298"/>00298 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;returned.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxReturn&#32;&amp;=&#32;~eventEVENT_BITS_CONTROL_BYTES;
<anchor xml:id="_event__groups_8c_source_1l00300"/>00300 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00301"/>00301 
<anchor xml:id="_event__groups_8c_source_1l00302"/>00302 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1af0cb50e5a1402163cd29e638c6140a2e">traceEVENT_GROUP_SYNC_END</link>(&#32;xEventGroup,&#32;uxBitsToSet,&#32;uxBitsToWaitFor,&#32;xTimeoutOccurred&#32;);
<anchor xml:id="_event__groups_8c_source_1l00303"/>00303 
<anchor xml:id="_event__groups_8c_source_1l00304"/>00304 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Prevent&#32;compiler&#32;warnings&#32;when&#32;trace&#32;macros&#32;are&#32;not&#32;used.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00305"/>00305 &#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;xTimeoutOccurred;
<anchor xml:id="_event__groups_8c_source_1l00306"/>00306 
<anchor xml:id="_event__groups_8c_source_1l00307"/>00307 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;uxReturn;
<anchor xml:id="_event__groups_8c_source_1l00308"/>00308 }
<anchor xml:id="_event__groups_8c_source_1l00309"/>00309 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00310"/>00310 
<anchor xml:id="_event__groups_8c_source_1l00311"/><link linkend="_event__groups_8c_1a379c5cca4552d3d8acd4c51e8220a6c3">00311</link> <link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;<link linkend="_event__groups_8c_1a379c5cca4552d3d8acd4c51e8220a6c3">xEventGroupWaitBits</link>(&#32;<link linkend="_struct_event_group_def__t">EventGroupHandle_t</link>&#32;xEventGroup,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;uxBitsToWaitFor,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xClearOnExit,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xWaitForAllBits,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait&#32;)
<anchor xml:id="_event__groups_8c_source_1l00312"/>00312 {
<anchor xml:id="_event__groups_8c_source_1l00313"/>00313 <link linkend="_struct_event_group_def__t">EventGroup_t</link>&#32;*pxEventBits&#32;=&#32;xEventGroup;
<anchor xml:id="_event__groups_8c_source_1l00314"/>00314 <link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;uxReturn,&#32;uxControlBits&#32;=&#32;0;
<anchor xml:id="_event__groups_8c_source_1l00315"/>00315 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xWaitConditionMet,&#32;xAlreadyYielded;
<anchor xml:id="_event__groups_8c_source_1l00316"/>00316 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xTimeoutOccurred&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_event__groups_8c_source_1l00317"/>00317 
<anchor xml:id="_event__groups_8c_source_1l00318"/>00318 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Check&#32;the&#32;user&#32;is&#32;not&#32;attempting&#32;to&#32;wait&#32;on&#32;the&#32;bits&#32;used&#32;by&#32;the&#32;kernel</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00319"/>00319 <emphasis role="comment">&#32;&#32;&#32;&#32;itself,&#32;and&#32;that&#32;at&#32;least&#32;one&#32;bit&#32;is&#32;being&#32;requested.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00320"/>00320 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xEventGroup&#32;);
<anchor xml:id="_event__groups_8c_source_1l00321"/>00321 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;(&#32;uxBitsToWaitFor&#32;&amp;&#32;<link linkend="_event__groups_8c_1a46c8292a6ba88b017cca402f5baf670b">eventEVENT_BITS_CONTROL_BYTES</link>&#32;)&#32;==&#32;0&#32;);
<anchor xml:id="_event__groups_8c_source_1l00322"/>00322 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;uxBitsToWaitFor&#32;!=&#32;0&#32;);
<anchor xml:id="_event__groups_8c_source_1l00323"/>00323 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;(&#32;INCLUDE_xTaskGetSchedulerState&#32;==&#32;1&#32;)&#32;||&#32;(&#32;configUSE_TIMERS&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00324"/>00324 &#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;!(&#32;(&#32;<link linkend="_task_8h_1a0241000e08a261372186d34825a35979">xTaskGetSchedulerState</link>()&#32;==&#32;<link linkend="_task_8h_1a0cad071ca127a35df93166e9ed5b6ada">taskSCHEDULER_SUSPENDED</link>&#32;)&#32;&amp;&amp;&#32;(&#32;xTicksToWait&#32;!=&#32;0&#32;)&#32;)&#32;);
<anchor xml:id="_event__groups_8c_source_1l00326"/>00326 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00327"/>00327 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00328"/>00328 
<anchor xml:id="_event__groups_8c_source_1l00329"/>00329 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1a366b302eba79d10b5ee2a3756f0fcc43">vTaskSuspendAll</link>();
<anchor xml:id="_event__groups_8c_source_1l00330"/>00330 &#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;uxCurrentEventBits&#32;=&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1ab1bcd95a3330b71c55198b2352926643">uxEventBits</link>;
<anchor xml:id="_event__groups_8c_source_1l00332"/>00332 
<anchor xml:id="_event__groups_8c_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Check&#32;to&#32;see&#32;if&#32;the&#32;wait&#32;condition&#32;is&#32;already&#32;met&#32;or&#32;not.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xWaitConditionMet&#32;=&#32;<link linkend="_event__groups_8c_1a0b39881dccfddfde543fb7181872fb5b">prvTestWaitCondition</link>(&#32;uxCurrentEventBits,&#32;uxBitsToWaitFor,&#32;xWaitForAllBits&#32;);
<anchor xml:id="_event__groups_8c_source_1l00335"/>00335 
<anchor xml:id="_event__groups_8c_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xWaitConditionMet&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_event__groups_8c_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;wait&#32;condition&#32;has&#32;already&#32;been&#32;met&#32;so&#32;there&#32;is&#32;no&#32;need&#32;to</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00339"/>00339 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;block.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxReturn&#32;=&#32;uxCurrentEventBits;
<anchor xml:id="_event__groups_8c_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xTicksToWait&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;0;
<anchor xml:id="_event__groups_8c_source_1l00342"/>00342 
<anchor xml:id="_event__groups_8c_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Clear&#32;the&#32;wait&#32;bits&#32;if&#32;requested&#32;to&#32;do&#32;so.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xClearOnExit&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_event__groups_8c_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1ab1bcd95a3330b71c55198b2352926643">uxEventBits</link>&#32;&amp;=&#32;~uxBitsToWaitFor;
<anchor xml:id="_event__groups_8c_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_event__groups_8c_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTicksToWait&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_event__groups_8c_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;wait&#32;condition&#32;has&#32;not&#32;been&#32;met,&#32;but&#32;no&#32;block&#32;time&#32;was</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00356"/>00356 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;specified,&#32;so&#32;just&#32;return&#32;the&#32;current&#32;value.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxReturn&#32;=&#32;uxCurrentEventBits;
<anchor xml:id="_event__groups_8c_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xTimeoutOccurred&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_event__groups_8c_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;is&#32;going&#32;to&#32;block&#32;to&#32;wait&#32;for&#32;its&#32;required&#32;bits&#32;to&#32;be</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00363"/>00363 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;set.&#32;&#32;uxControlBits&#32;are&#32;used&#32;to&#32;remember&#32;the&#32;specified&#32;behaviour&#32;of</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00364"/>00364 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this&#32;call&#32;to&#32;xEventGroupWaitBits()&#32;-&#32;for&#32;use&#32;when&#32;the&#32;event&#32;bits</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00365"/>00365 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unblock&#32;the&#32;task.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xClearOnExit&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_event__groups_8c_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxControlBits&#32;|=&#32;<link linkend="_event__groups_8c_1a1404686af7c8070fa57675707c817abc">eventCLEAR_EVENTS_ON_EXIT_BIT</link>;
<anchor xml:id="_event__groups_8c_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_event__groups_8c_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00374"/>00374 
<anchor xml:id="_event__groups_8c_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xWaitForAllBits&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_event__groups_8c_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxControlBits&#32;|=&#32;<link linkend="_event__groups_8c_1ae98d5f1271845ad42742aef9659e1568">eventWAIT_FOR_ALL_BITS</link>;
<anchor xml:id="_event__groups_8c_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_event__groups_8c_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00383"/>00383 
<anchor xml:id="_event__groups_8c_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Store&#32;the&#32;bits&#32;that&#32;the&#32;calling&#32;task&#32;is&#32;waiting&#32;for&#32;in&#32;the</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00385"/>00385 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;task&apos;s&#32;event&#32;list&#32;item&#32;so&#32;the&#32;kernel&#32;knows&#32;when&#32;a&#32;match&#32;is</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00386"/>00386 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;found.&#32;&#32;Then&#32;enter&#32;the&#32;blocked&#32;state.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1a9d52fa7b60cc6a7b4fd0846700d7834c">vTaskPlaceOnUnorderedEventList</link>(&#32;&amp;(&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1a3dd347560456bfe452415efb52760dc3">xTasksWaitingForBits</link>&#32;),&#32;(&#32;uxBitsToWaitFor&#32;|&#32;uxControlBits&#32;),&#32;xTicksToWait&#32;);
<anchor xml:id="_event__groups_8c_source_1l00388"/>00388 
<anchor xml:id="_event__groups_8c_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;is&#32;obsolete&#32;as&#32;it&#32;will&#32;get&#32;set&#32;after&#32;the&#32;task&#32;unblocks,&#32;but</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00390"/>00390 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;some&#32;compilers&#32;mistakenly&#32;generate&#32;a&#32;warning&#32;about&#32;the&#32;variable</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00391"/>00391 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;being&#32;returned&#32;without&#32;being&#32;set&#32;if&#32;it&#32;is&#32;not&#32;done.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxReturn&#32;=&#32;0;
<anchor xml:id="_event__groups_8c_source_1l00393"/>00393 
<anchor xml:id="_event__groups_8c_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1aeb8953a9be153986d0e830acdf60445a">traceEVENT_GROUP_WAIT_BITS_BLOCK</link>(&#32;xEventGroup,&#32;uxBitsToWaitFor&#32;);
<anchor xml:id="_event__groups_8c_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00396"/>00396 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00397"/>00397 &#32;&#32;&#32;&#32;xAlreadyYielded&#32;=&#32;<link linkend="_task_8h_1a003f8ae6d649225abd030cc76e1c7d0e">xTaskResumeAll</link>();
<anchor xml:id="_event__groups_8c_source_1l00398"/>00398 
<anchor xml:id="_event__groups_8c_source_1l00399"/>00399 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTicksToWait&#32;!=&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_event__groups_8c_source_1l00400"/>00400 &#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xAlreadyYielded&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_event__groups_8c_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1af4484fc07631a16e45ac5f29a3f0556e">portYIELD_WITHIN_API</link>();
<anchor xml:id="_event__groups_8c_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_event__groups_8c_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00409"/>00409 
<anchor xml:id="_event__groups_8c_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;blocked&#32;to&#32;wait&#32;for&#32;its&#32;required&#32;bits&#32;to&#32;be&#32;set&#32;-&#32;at&#32;this</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00411"/>00411 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;point&#32;either&#32;the&#32;required&#32;bits&#32;were&#32;set&#32;or&#32;the&#32;block&#32;time&#32;expired.&#32;&#32;If</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00412"/>00412 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;required&#32;bits&#32;were&#32;set&#32;they&#32;will&#32;have&#32;been&#32;stored&#32;in&#32;the&#32;task&apos;s</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00413"/>00413 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;event&#32;list&#32;item,&#32;and&#32;they&#32;should&#32;now&#32;be&#32;retrieved&#32;then&#32;cleared.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxReturn&#32;=&#32;<link linkend="_task_8h_1a7793b4bbe45c10d4c5104c126b89e87c">uxTaskResetEventItemValue</link>();
<anchor xml:id="_event__groups_8c_source_1l00415"/>00415 
<anchor xml:id="_event__groups_8c_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;uxReturn&#32;&amp;&#32;<link linkend="_event__groups_8c_1ab451d5ad95813d5ec7ff1784d69e9ec3">eventUNBLOCKED_DUE_TO_BIT_SET</link>&#32;)&#32;==&#32;(&#32;<link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_event__groups_8c_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_event__groups_8c_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;timed&#32;out,&#32;just&#32;return&#32;the&#32;current&#32;event&#32;bit&#32;value.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxReturn&#32;=&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1ab1bcd95a3330b71c55198b2352926643">uxEventBits</link>;
<anchor xml:id="_event__groups_8c_source_1l00422"/>00422 
<anchor xml:id="_event__groups_8c_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;It&#32;is&#32;possible&#32;that&#32;the&#32;event&#32;bits&#32;were&#32;updated&#32;between&#32;this</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00424"/>00424 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;task&#32;leaving&#32;the&#32;Blocked&#32;state&#32;and&#32;running&#32;again.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_event__groups_8c_1a0b39881dccfddfde543fb7181872fb5b">prvTestWaitCondition</link>(&#32;uxReturn,&#32;uxBitsToWaitFor,&#32;xWaitForAllBits&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_event__groups_8c_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xClearOnExit&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_event__groups_8c_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1ab1bcd95a3330b71c55198b2352926643">uxEventBits</link>&#32;&amp;=&#32;~uxBitsToWaitFor;
<anchor xml:id="_event__groups_8c_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_event__groups_8c_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_event__groups_8c_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xTimeoutOccurred&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_event__groups_8c_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_event__groups_8c_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;unblocked&#32;because&#32;the&#32;bits&#32;were&#32;set.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00448"/>00448 
<anchor xml:id="_event__groups_8c_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;blocked&#32;so&#32;control&#32;bits&#32;may&#32;have&#32;been&#32;set.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxReturn&#32;&amp;=&#32;~eventEVENT_BITS_CONTROL_BYTES;
<anchor xml:id="_event__groups_8c_source_1l00451"/>00451 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00452"/>00452 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ad7a6b7684053a41690cac487ccf4d927">traceEVENT_GROUP_WAIT_BITS_END</link>(&#32;xEventGroup,&#32;uxBitsToWaitFor,&#32;xTimeoutOccurred&#32;);
<anchor xml:id="_event__groups_8c_source_1l00453"/>00453 
<anchor xml:id="_event__groups_8c_source_1l00454"/>00454 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Prevent&#32;compiler&#32;warnings&#32;when&#32;trace&#32;macros&#32;are&#32;not&#32;used.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00455"/>00455 &#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;xTimeoutOccurred;
<anchor xml:id="_event__groups_8c_source_1l00456"/>00456 
<anchor xml:id="_event__groups_8c_source_1l00457"/>00457 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;uxReturn;
<anchor xml:id="_event__groups_8c_source_1l00458"/>00458 }
<anchor xml:id="_event__groups_8c_source_1l00459"/>00459 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00460"/>00460 
<anchor xml:id="_event__groups_8c_source_1l00461"/><link linkend="_event__groups_8c_1a71dd2680fdfbdde7d6b10db203e266ba">00461</link> <link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;<link linkend="_event__groups_8c_1a71dd2680fdfbdde7d6b10db203e266ba">xEventGroupClearBits</link>(&#32;<link linkend="_struct_event_group_def__t">EventGroupHandle_t</link>&#32;xEventGroup,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;uxBitsToClear&#32;)
<anchor xml:id="_event__groups_8c_source_1l00462"/>00462 {
<anchor xml:id="_event__groups_8c_source_1l00463"/>00463 <link linkend="_struct_event_group_def__t">EventGroup_t</link>&#32;*pxEventBits&#32;=&#32;xEventGroup;
<anchor xml:id="_event__groups_8c_source_1l00464"/>00464 <link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;uxReturn;
<anchor xml:id="_event__groups_8c_source_1l00465"/>00465 
<anchor xml:id="_event__groups_8c_source_1l00466"/>00466 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Check&#32;the&#32;user&#32;is&#32;not&#32;attempting&#32;to&#32;clear&#32;the&#32;bits&#32;used&#32;by&#32;the&#32;kernel</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00467"/>00467 <emphasis role="comment">&#32;&#32;&#32;&#32;itself.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00468"/>00468 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xEventGroup&#32;);
<anchor xml:id="_event__groups_8c_source_1l00469"/>00469 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;(&#32;uxBitsToClear&#32;&amp;&#32;<link linkend="_event__groups_8c_1a46c8292a6ba88b017cca402f5baf670b">eventEVENT_BITS_CONTROL_BYTES</link>&#32;)&#32;==&#32;0&#32;);
<anchor xml:id="_event__groups_8c_source_1l00470"/>00470 
<anchor xml:id="_event__groups_8c_source_1l00471"/>00471 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_event__groups_8c_source_1l00472"/>00472 &#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ad929200fa50e5a1ae2c5894ffeea2ef6">traceEVENT_GROUP_CLEAR_BITS</link>(&#32;xEventGroup,&#32;uxBitsToClear&#32;);
<anchor xml:id="_event__groups_8c_source_1l00474"/>00474 
<anchor xml:id="_event__groups_8c_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;value&#32;returned&#32;is&#32;the&#32;event&#32;group&#32;value&#32;prior&#32;to&#32;the&#32;bits&#32;being</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00476"/>00476 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cleared.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxReturn&#32;=&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1ab1bcd95a3330b71c55198b2352926643">uxEventBits</link>;
<anchor xml:id="_event__groups_8c_source_1l00478"/>00478 
<anchor xml:id="_event__groups_8c_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Clear&#32;the&#32;bits.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1ab1bcd95a3330b71c55198b2352926643">uxEventBits</link>&#32;&amp;=&#32;~uxBitsToClear;
<anchor xml:id="_event__groups_8c_source_1l00481"/>00481 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00482"/>00482 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_event__groups_8c_source_1l00483"/>00483 
<anchor xml:id="_event__groups_8c_source_1l00484"/>00484 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;uxReturn;
<anchor xml:id="_event__groups_8c_source_1l00485"/>00485 }
<anchor xml:id="_event__groups_8c_source_1l00486"/>00486 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00487"/>00487 
<anchor xml:id="_event__groups_8c_source_1l00488"/>00488 <emphasis role="preprocessor">#if&#32;(&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;INCLUDE_xTimerPendFunctionCall&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configUSE_TIMERS&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00489"/>00489 
<anchor xml:id="_event__groups_8c_source_1l00490"/><link linkend="_event__groups_8c_1ad3307f09bd0c4cd72ea21d84b4f4f33d">00490</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_event__groups_8h_1a3d7de214a697f33fe7b914e26a93f33a">xEventGroupClearBitsFromISR</link>(&#32;<link linkend="_struct_event_group_def__t">EventGroupHandle_t</link>&#32;xEventGroup,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;uxBitsToClear&#32;)
<anchor xml:id="_event__groups_8c_source_1l00491"/>00491 &#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_event__groups_8c_source_1l00493"/>00493 
<anchor xml:id="_event__groups_8c_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a9facfdc883aa503d2891c27c5c136d84">traceEVENT_GROUP_CLEAR_BITS_FROM_ISR</link>(&#32;xEventGroup,&#32;uxBitsToClear&#32;);
<anchor xml:id="_event__groups_8c_source_1l00495"/>00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_timers_8c_1af4444b6b1a4e8d7db156e6aaccdf66fa">xTimerPendFunctionCallFromISR</link>(&#32;<link linkend="_event__groups_8c_1a3bce459038e87064109c8462b1174c29">vEventGroupClearBitsCallback</link>,&#32;(&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;)&#32;xEventGroup,&#32;(&#32;uint32_t&#32;)&#32;uxBitsToClear,&#32;NULL&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9087&#32;Can&apos;t&#32;avoid&#32;cast&#32;to&#32;void*&#32;as&#32;a&#32;generic&#32;callback&#32;function&#32;not&#32;specific&#32;to&#32;this&#32;use&#32;case.&#32;Callback&#32;casts&#32;back&#32;to&#32;original&#32;type&#32;so&#32;safe.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00496"/>00496 
<anchor xml:id="_event__groups_8c_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_event__groups_8c_source_1l00498"/>00498 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00499"/>00499 
<anchor xml:id="_event__groups_8c_source_1l00500"/>00500 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00501"/>00501 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00502"/>00502 
<anchor xml:id="_event__groups_8c_source_1l00503"/><link linkend="_event__groups_8c_1adcb3d3f7dded9fa372bb1ee405c36b8d">00503</link> <link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;<link linkend="_event__groups_8c_1adcb3d3f7dded9fa372bb1ee405c36b8d">xEventGroupGetBitsFromISR</link>(&#32;<link linkend="_struct_event_group_def__t">EventGroupHandle_t</link>&#32;xEventGroup&#32;)
<anchor xml:id="_event__groups_8c_source_1l00504"/>00504 {
<anchor xml:id="_event__groups_8c_source_1l00505"/>00505 <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxSavedInterruptStatus;
<anchor xml:id="_event__groups_8c_source_1l00506"/>00506 <link linkend="_struct_event_group_def__t">EventGroup_t</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxEventBits&#32;=&#32;xEventGroup;
<anchor xml:id="_event__groups_8c_source_1l00507"/>00507 <link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;uxReturn;
<anchor xml:id="_event__groups_8c_source_1l00508"/>00508 
<anchor xml:id="_event__groups_8c_source_1l00509"/>00509 &#32;&#32;&#32;&#32;uxSavedInterruptStatus&#32;=&#32;<link linkend="_portmacro_8h_1a31b4260dbc1823ba80b578f86eb15a98">portSET_INTERRUPT_MASK_FROM_ISR</link>();
<anchor xml:id="_event__groups_8c_source_1l00510"/>00510 &#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00511"/>00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxReturn&#32;=&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1ab1bcd95a3330b71c55198b2352926643">uxEventBits</link>;
<anchor xml:id="_event__groups_8c_source_1l00512"/>00512 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00513"/>00513 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a79d65a5d0f6f9133a0739832e9d8367e">portCLEAR_INTERRUPT_MASK_FROM_ISR</link>(&#32;uxSavedInterruptStatus&#32;);
<anchor xml:id="_event__groups_8c_source_1l00514"/>00514 
<anchor xml:id="_event__groups_8c_source_1l00515"/>00515 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;uxReturn;
<anchor xml:id="_event__groups_8c_source_1l00516"/>00516 }&#32;<emphasis role="comment">/*lint&#32;!e818&#32;EventGroupHandle_t&#32;is&#32;a&#32;typedef&#32;used&#32;in&#32;other&#32;functions&#32;to&#32;so&#32;can&apos;t&#32;be&#32;pointer&#32;to&#32;const.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00517"/>00517 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00518"/>00518 
<anchor xml:id="_event__groups_8c_source_1l00519"/><link linkend="_event__groups_8c_1a9ac7cd970f50e2e50a494b656e0eb239">00519</link> <link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;<link linkend="_event__groups_8c_1a9ac7cd970f50e2e50a494b656e0eb239">xEventGroupSetBits</link>(&#32;<link linkend="_struct_event_group_def__t">EventGroupHandle_t</link>&#32;xEventGroup,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;uxBitsToSet&#32;)
<anchor xml:id="_event__groups_8c_source_1l00520"/>00520 {
<anchor xml:id="_event__groups_8c_source_1l00521"/>00521 <link linkend="_structx_l_i_s_t___i_t_e_m">ListItem_t</link>&#32;*pxListItem,&#32;*pxNext;
<anchor xml:id="_event__groups_8c_source_1l00522"/>00522 <link linkend="_structx_l_i_s_t___i_t_e_m">ListItem_t</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*pxListEnd;
<anchor xml:id="_event__groups_8c_source_1l00523"/>00523 <link linkend="_structx_l_i_s_t">List_t</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*&#32;pxList;
<anchor xml:id="_event__groups_8c_source_1l00524"/>00524 <link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;uxBitsToClear&#32;=&#32;0,&#32;uxBitsWaitedFor,&#32;uxControlBits;
<anchor xml:id="_event__groups_8c_source_1l00525"/>00525 <link linkend="_struct_event_group_def__t">EventGroup_t</link>&#32;*pxEventBits&#32;=&#32;xEventGroup;
<anchor xml:id="_event__groups_8c_source_1l00526"/>00526 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xMatchFound&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_event__groups_8c_source_1l00527"/>00527 
<anchor xml:id="_event__groups_8c_source_1l00528"/>00528 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Check&#32;the&#32;user&#32;is&#32;not&#32;attempting&#32;to&#32;set&#32;the&#32;bits&#32;used&#32;by&#32;the&#32;kernel</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00529"/>00529 <emphasis role="comment">&#32;&#32;&#32;&#32;itself.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00530"/>00530 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xEventGroup&#32;);
<anchor xml:id="_event__groups_8c_source_1l00531"/>00531 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;(&#32;uxBitsToSet&#32;&amp;&#32;<link linkend="_event__groups_8c_1a46c8292a6ba88b017cca402f5baf670b">eventEVENT_BITS_CONTROL_BYTES</link>&#32;)&#32;==&#32;0&#32;);
<anchor xml:id="_event__groups_8c_source_1l00532"/>00532 
<anchor xml:id="_event__groups_8c_source_1l00533"/>00533 &#32;&#32;&#32;&#32;pxList&#32;=&#32;&amp;(&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1a3dd347560456bfe452415efb52760dc3">xTasksWaitingForBits</link>&#32;);
<anchor xml:id="_event__groups_8c_source_1l00534"/>00534 &#32;&#32;&#32;&#32;pxListEnd&#32;=&#32;<link linkend="_list_8h_1a96cb0919f02e5c0d8e41ded0e65197a3">listGET_END_MARKER</link>(&#32;pxList&#32;);&#32;<emphasis role="comment">/*lint&#32;!e826&#32;!e740&#32;!e9087&#32;The&#32;mini&#32;list&#32;structure&#32;is&#32;used&#32;as&#32;the&#32;list&#32;end&#32;to&#32;save&#32;RAM.&#32;&#32;This&#32;is&#32;checked&#32;and&#32;valid.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00535"/>00535 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1a366b302eba79d10b5ee2a3756f0fcc43">vTaskSuspendAll</link>();
<anchor xml:id="_event__groups_8c_source_1l00536"/>00536 &#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a56eb08eb12a36c99a32729a518d5b3fd">traceEVENT_GROUP_SET_BITS</link>(&#32;xEventGroup,&#32;uxBitsToSet&#32;);
<anchor xml:id="_event__groups_8c_source_1l00538"/>00538 
<anchor xml:id="_event__groups_8c_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxListItem&#32;=&#32;<link linkend="_list_8h_1a987cb2766e509022c23b654907cea199">listGET_HEAD_ENTRY</link>(&#32;pxList&#32;);
<anchor xml:id="_event__groups_8c_source_1l00540"/>00540 
<anchor xml:id="_event__groups_8c_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Set&#32;the&#32;bits.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1ab1bcd95a3330b71c55198b2352926643">uxEventBits</link>&#32;|=&#32;uxBitsToSet;
<anchor xml:id="_event__groups_8c_source_1l00543"/>00543 
<anchor xml:id="_event__groups_8c_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;See&#32;if&#32;the&#32;new&#32;bit&#32;value&#32;should&#32;unblock&#32;any&#32;tasks.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00545"/>00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(&#32;pxListItem&#32;!=&#32;pxListEnd&#32;)
<anchor xml:id="_event__groups_8c_source_1l00546"/>00546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00547"/>00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNext&#32;=&#32;<link linkend="_list_8h_1aabf78d3f24ba56ac1d0bf0179438b960">listGET_NEXT</link>(&#32;pxListItem&#32;);
<anchor xml:id="_event__groups_8c_source_1l00548"/>00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxBitsWaitedFor&#32;=&#32;<link linkend="_list_8h_1aa50d09950abc602741d7ebe8387f4e1a">listGET_LIST_ITEM_VALUE</link>(&#32;pxListItem&#32;);
<anchor xml:id="_event__groups_8c_source_1l00549"/>00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xMatchFound&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_event__groups_8c_source_1l00550"/>00550 
<anchor xml:id="_event__groups_8c_source_1l00551"/>00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Split&#32;the&#32;bits&#32;waited&#32;for&#32;from&#32;the&#32;control&#32;bits.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00552"/>00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxControlBits&#32;=&#32;uxBitsWaitedFor&#32;&amp;&#32;<link linkend="_event__groups_8c_1a46c8292a6ba88b017cca402f5baf670b">eventEVENT_BITS_CONTROL_BYTES</link>;
<anchor xml:id="_event__groups_8c_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxBitsWaitedFor&#32;&amp;=&#32;~eventEVENT_BITS_CONTROL_BYTES;
<anchor xml:id="_event__groups_8c_source_1l00554"/>00554 
<anchor xml:id="_event__groups_8c_source_1l00555"/>00555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;uxControlBits&#32;&amp;&#32;<link linkend="_event__groups_8c_1ae98d5f1271845ad42742aef9659e1568">eventWAIT_FOR_ALL_BITS</link>&#32;)&#32;==&#32;(&#32;<link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_event__groups_8c_source_1l00556"/>00556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00557"/>00557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Just&#32;looking&#32;for&#32;single&#32;bit&#32;being&#32;set.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00558"/>00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;uxBitsWaitedFor&#32;&amp;&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1ab1bcd95a3330b71c55198b2352926643">uxEventBits</link>&#32;)&#32;!=&#32;(&#32;<link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_event__groups_8c_source_1l00559"/>00559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00560"/>00560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xMatchFound&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_event__groups_8c_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00563"/>00563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00564"/>00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_event__groups_8c_source_1l00565"/>00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00566"/>00566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00567"/>00567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;uxBitsWaitedFor&#32;&amp;&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1ab1bcd95a3330b71c55198b2352926643">uxEventBits</link>&#32;)&#32;==&#32;uxBitsWaitedFor&#32;)
<anchor xml:id="_event__groups_8c_source_1l00568"/>00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00569"/>00569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;All&#32;bits&#32;are&#32;set.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00570"/>00570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xMatchFound&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_event__groups_8c_source_1l00571"/>00571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Need&#32;all&#32;bits&#32;to&#32;be&#32;set,&#32;but&#32;not&#32;all&#32;the&#32;bits&#32;were&#32;set.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00575"/>00575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00576"/>00576 
<anchor xml:id="_event__groups_8c_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xMatchFound&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_event__groups_8c_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00579"/>00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;bits&#32;match.&#32;&#32;Should&#32;the&#32;bits&#32;be&#32;cleared&#32;on&#32;exit?&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00580"/>00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;uxControlBits&#32;&amp;&#32;<link linkend="_event__groups_8c_1a1404686af7c8070fa57675707c817abc">eventCLEAR_EVENTS_ON_EXIT_BIT</link>&#32;)&#32;!=&#32;(&#32;<link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_event__groups_8c_source_1l00581"/>00581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00582"/>00582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxBitsToClear&#32;|=&#32;uxBitsWaitedFor;
<anchor xml:id="_event__groups_8c_source_1l00583"/>00583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00584"/>00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00585"/>00585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00586"/>00586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_event__groups_8c_source_1l00587"/>00587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00588"/>00588 
<anchor xml:id="_event__groups_8c_source_1l00589"/>00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Store&#32;the&#32;actual&#32;event&#32;flag&#32;value&#32;in&#32;the&#32;task&apos;s&#32;event&#32;list</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00590"/>00590 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;item&#32;before&#32;removing&#32;the&#32;task&#32;from&#32;the&#32;event&#32;list.&#32;&#32;The</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00591"/>00591 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eventUNBLOCKED_DUE_TO_BIT_SET&#32;bit&#32;is&#32;set&#32;so&#32;the&#32;task&#32;knows</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00592"/>00592 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;that&#32;is&#32;was&#32;unblocked&#32;due&#32;to&#32;its&#32;required&#32;bits&#32;matching,&#32;rather</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00593"/>00593 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;than&#32;because&#32;it&#32;timed&#32;out.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00594"/>00594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1a340b9bc9f37c9d4d3fb6e303c3ef311b">vTaskRemoveFromUnorderedEventList</link>(&#32;pxListItem,&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1ab1bcd95a3330b71c55198b2352926643">uxEventBits</link>&#32;|&#32;<link linkend="_event__groups_8c_1ab451d5ad95813d5ec7ff1784d69e9ec3">eventUNBLOCKED_DUE_TO_BIT_SET</link>&#32;);
<anchor xml:id="_event__groups_8c_source_1l00595"/>00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00596"/>00596 
<anchor xml:id="_event__groups_8c_source_1l00597"/>00597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Move&#32;onto&#32;the&#32;next&#32;list&#32;item.&#32;&#32;Note&#32;pxListItem-&gt;pxNext&#32;is&#32;not</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00598"/>00598 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;used&#32;here&#32;as&#32;the&#32;list&#32;item&#32;may&#32;have&#32;been&#32;removed&#32;from&#32;the&#32;event&#32;list</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00599"/>00599 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;inserted&#32;into&#32;the&#32;ready/pending&#32;reading&#32;list.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxListItem&#32;=&#32;pxNext;
<anchor xml:id="_event__groups_8c_source_1l00601"/>00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00602"/>00602 
<anchor xml:id="_event__groups_8c_source_1l00603"/>00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Clear&#32;any&#32;bits&#32;that&#32;matched&#32;when&#32;the&#32;eventCLEAR_EVENTS_ON_EXIT_BIT</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00604"/>00604 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bit&#32;was&#32;set&#32;in&#32;the&#32;control&#32;word.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00605"/>00605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1ab1bcd95a3330b71c55198b2352926643">uxEventBits</link>&#32;&amp;=&#32;~uxBitsToClear;
<anchor xml:id="_event__groups_8c_source_1l00606"/>00606 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00607"/>00607 &#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_task_8h_1a003f8ae6d649225abd030cc76e1c7d0e">xTaskResumeAll</link>();
<anchor xml:id="_event__groups_8c_source_1l00608"/>00608 
<anchor xml:id="_event__groups_8c_source_1l00609"/>00609 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1ab1bcd95a3330b71c55198b2352926643">uxEventBits</link>;
<anchor xml:id="_event__groups_8c_source_1l00610"/>00610 }
<anchor xml:id="_event__groups_8c_source_1l00611"/>00611 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00612"/>00612 
<anchor xml:id="_event__groups_8c_source_1l00613"/><link linkend="_event__groups_8c_1a6939faca89fc4ba52fa8288527042464">00613</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_event__groups_8c_1a6939faca89fc4ba52fa8288527042464">vEventGroupDelete</link>(&#32;<link linkend="_struct_event_group_def__t">EventGroupHandle_t</link>&#32;xEventGroup&#32;)
<anchor xml:id="_event__groups_8c_source_1l00614"/>00614 {
<anchor xml:id="_event__groups_8c_source_1l00615"/>00615 <link linkend="_struct_event_group_def__t">EventGroup_t</link>&#32;*pxEventBits&#32;=&#32;xEventGroup;
<anchor xml:id="_event__groups_8c_source_1l00616"/>00616 <emphasis role="keyword">const</emphasis>&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;*pxTasksWaitingForBits&#32;=&#32;&amp;(&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1a3dd347560456bfe452415efb52760dc3">xTasksWaitingForBits</link>&#32;);
<anchor xml:id="_event__groups_8c_source_1l00617"/>00617 
<anchor xml:id="_event__groups_8c_source_1l00618"/>00618 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1a366b302eba79d10b5ee2a3756f0fcc43">vTaskSuspendAll</link>();
<anchor xml:id="_event__groups_8c_source_1l00619"/>00619 &#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1abf48364a72dd38af47bf7203c06ee832">traceEVENT_GROUP_DELETE</link>(&#32;xEventGroup&#32;);
<anchor xml:id="_event__groups_8c_source_1l00621"/>00621 
<anchor xml:id="_event__groups_8c_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(&#32;<link linkend="_list_8h_1a18b4aded515bdc512017ea6e677a13bb">listCURRENT_LIST_LENGTH</link>(&#32;pxTasksWaitingForBits&#32;)&#32;&gt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_event__groups_8c_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Unblock&#32;the&#32;task,&#32;returning&#32;0&#32;as&#32;the&#32;event&#32;list&#32;is&#32;being&#32;deleted</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00625"/>00625 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;cannot&#32;therefore&#32;have&#32;any&#32;bits&#32;set.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00626"/>00626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxTasksWaitingForBits-&gt;<link linkend="_structx_l_i_s_t_1a49ad62fa153126e27e273811167b336a">xListEnd</link>.<link linkend="_structx_m_i_n_i___l_i_s_t___i_t_e_m_1aa297f3eba16856d00d0d3a6cea5e9df6">pxNext</link>&#32;!=&#32;(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structx_l_i_s_t___i_t_e_m">ListItem_t</link>&#32;*&#32;)&#32;&amp;(&#32;pxTasksWaitingForBits-&gt;<link linkend="_structx_l_i_s_t_1a49ad62fa153126e27e273811167b336a">xListEnd</link>&#32;)&#32;);
<anchor xml:id="_event__groups_8c_source_1l00627"/>00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1a340b9bc9f37c9d4d3fb6e303c3ef311b">vTaskRemoveFromUnorderedEventList</link>(&#32;pxTasksWaitingForBits-&gt;<link linkend="_structx_l_i_s_t_1a49ad62fa153126e27e273811167b336a">xListEnd</link>.<link linkend="_structx_m_i_n_i___l_i_s_t___i_t_e_m_1aa297f3eba16856d00d0d3a6cea5e9df6">pxNext</link>,&#32;<link linkend="_event__groups_8c_1ab451d5ad95813d5ec7ff1784d69e9ec3">eventUNBLOCKED_DUE_TO_BIT_SET</link>&#32;);
<anchor xml:id="_event__groups_8c_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00629"/>00629 
<anchor xml:id="_event__groups_8c_source_1l00630"/>00630 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;(&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configSUPPORT_STATIC_ALLOCATION&#32;==&#32;0&#32;)&#32;)</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;event&#32;group&#32;can&#32;only&#32;have&#32;been&#32;allocated&#32;dynamically&#32;-&#32;free</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00633"/>00633 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it&#32;again.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00634"/>00634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_heap__3_8c_1a1e7cea2fd1bc894ea3b5f5e8179d259b">vPortFree</link>(&#32;pxEventBits&#32;);
<anchor xml:id="_event__groups_8c_source_1l00635"/>00635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00636"/>00636 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#elif(&#32;(&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configSUPPORT_STATIC_ALLOCATION&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00637"/>00637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;event&#32;group&#32;could&#32;have&#32;been&#32;allocated&#32;statically&#32;or</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00639"/>00639 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dynamically,&#32;so&#32;check&#32;before&#32;attempting&#32;to&#32;free&#32;the&#32;memory.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxEventBits-&gt;ucStaticallyAllocated&#32;==&#32;(&#32;uint8_t&#32;)&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_event__groups_8c_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_heap__3_8c_1a1e7cea2fd1bc894ea3b5f5e8179d259b">vPortFree</link>(&#32;pxEventBits&#32;);
<anchor xml:id="_event__groups_8c_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00646"/>00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_event__groups_8c_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00649"/>00649 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_event__groups_8c_source_1l00650"/>00650 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00651"/>00651 &#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_task_8h_1a003f8ae6d649225abd030cc76e1c7d0e">xTaskResumeAll</link>();
<anchor xml:id="_event__groups_8c_source_1l00652"/>00652 }
<anchor xml:id="_event__groups_8c_source_1l00653"/>00653 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00654"/>00654 
<anchor xml:id="_event__groups_8c_source_1l00655"/>00655 <emphasis role="comment">/*&#32;For&#32;internal&#32;use&#32;only&#32;-&#32;execute&#32;a&#32;&apos;set&#32;bits&apos;&#32;command&#32;that&#32;was&#32;pended&#32;from</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00656"/>00656 <emphasis role="comment">an&#32;interrupt.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00657"/><link linkend="_event__groups_8c_1a54db6cc97bbb926aa4b78d5affc257d9">00657</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_event__groups_8c_1a54db6cc97bbb926aa4b78d5affc257d9">vEventGroupSetBitsCallback</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pvEventGroup,&#32;<emphasis role="keyword">const</emphasis>&#32;uint32_t&#32;ulBitsToSet&#32;)
<anchor xml:id="_event__groups_8c_source_1l00658"/>00658 {
<anchor xml:id="_event__groups_8c_source_1l00659"/>00659 &#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_event__groups_8c_1a9ac7cd970f50e2e50a494b656e0eb239">xEventGroupSetBits</link>(&#32;pvEventGroup,&#32;(&#32;<link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;)&#32;ulBitsToSet&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9079&#32;Can&apos;t&#32;avoid&#32;cast&#32;to&#32;void*&#32;as&#32;a&#32;generic&#32;timer&#32;callback&#32;prototype.&#32;Callback&#32;casts&#32;back&#32;to&#32;original&#32;type&#32;so&#32;safe.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00660"/>00660 }
<anchor xml:id="_event__groups_8c_source_1l00661"/>00661 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00662"/>00662 
<anchor xml:id="_event__groups_8c_source_1l00663"/>00663 <emphasis role="comment">/*&#32;For&#32;internal&#32;use&#32;only&#32;-&#32;execute&#32;a&#32;&apos;clear&#32;bits&apos;&#32;command&#32;that&#32;was&#32;pended&#32;from</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00664"/>00664 <emphasis role="comment">an&#32;interrupt.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00665"/><link linkend="_event__groups_8c_1a3bce459038e87064109c8462b1174c29">00665</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_event__groups_8c_1a3bce459038e87064109c8462b1174c29">vEventGroupClearBitsCallback</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pvEventGroup,&#32;<emphasis role="keyword">const</emphasis>&#32;uint32_t&#32;ulBitsToClear&#32;)
<anchor xml:id="_event__groups_8c_source_1l00666"/>00666 {
<anchor xml:id="_event__groups_8c_source_1l00667"/>00667 &#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_event__groups_8c_1a71dd2680fdfbdde7d6b10db203e266ba">xEventGroupClearBits</link>(&#32;pvEventGroup,&#32;(&#32;<link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;)&#32;ulBitsToClear&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9079&#32;Can&apos;t&#32;avoid&#32;cast&#32;to&#32;void*&#32;as&#32;a&#32;generic&#32;timer&#32;callback&#32;prototype.&#32;Callback&#32;casts&#32;back&#32;to&#32;original&#32;type&#32;so&#32;safe.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00668"/>00668 }
<anchor xml:id="_event__groups_8c_source_1l00669"/>00669 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00670"/>00670 
<anchor xml:id="_event__groups_8c_source_1l00671"/><link linkend="_event__groups_8c_1a0b39881dccfddfde543fb7181872fb5b">00671</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_event__groups_8c_1a0b39881dccfddfde543fb7181872fb5b">prvTestWaitCondition</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;uxCurrentEventBits,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;uxBitsToWaitFor,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xWaitForAllBits&#32;)
<anchor xml:id="_event__groups_8c_source_1l00672"/>00672 {
<anchor xml:id="_event__groups_8c_source_1l00673"/>00673 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xWaitConditionMet&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_event__groups_8c_source_1l00674"/>00674 
<anchor xml:id="_event__groups_8c_source_1l00675"/>00675 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xWaitForAllBits&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_event__groups_8c_source_1l00676"/>00676 &#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00677"/>00677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Task&#32;only&#32;has&#32;to&#32;wait&#32;for&#32;one&#32;bit&#32;within&#32;uxBitsToWaitFor&#32;to&#32;be</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00678"/>00678 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;set.&#32;&#32;Is&#32;one&#32;already&#32;set?&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00679"/>00679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;uxCurrentEventBits&#32;&amp;&#32;uxBitsToWaitFor&#32;)&#32;!=&#32;(&#32;<link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_event__groups_8c_source_1l00680"/>00680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00681"/>00681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xWaitConditionMet&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_event__groups_8c_source_1l00682"/>00682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00683"/>00683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00684"/>00684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00685"/>00685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_event__groups_8c_source_1l00686"/>00686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00687"/>00687 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00688"/>00688 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00689"/>00689 &#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00690"/>00690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Task&#32;has&#32;to&#32;wait&#32;for&#32;all&#32;the&#32;bits&#32;in&#32;uxBitsToWaitFor&#32;to&#32;be&#32;set.</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00691"/>00691 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Are&#32;they&#32;set&#32;already?&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00692"/>00692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;uxCurrentEventBits&#32;&amp;&#32;uxBitsToWaitFor&#32;)&#32;==&#32;uxBitsToWaitFor&#32;)
<anchor xml:id="_event__groups_8c_source_1l00693"/>00693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00694"/>00694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xWaitConditionMet&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_event__groups_8c_source_1l00695"/>00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00696"/>00696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00697"/>00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00698"/>00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_event__groups_8c_source_1l00699"/>00699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00700"/>00700 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00701"/>00701 
<anchor xml:id="_event__groups_8c_source_1l00702"/>00702 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xWaitConditionMet;
<anchor xml:id="_event__groups_8c_source_1l00703"/>00703 }
<anchor xml:id="_event__groups_8c_source_1l00704"/>00704 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00705"/>00705 
<anchor xml:id="_event__groups_8c_source_1l00706"/>00706 <emphasis role="preprocessor">#if&#32;(&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;INCLUDE_xTimerPendFunctionCall&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configUSE_TIMERS&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00707"/>00707 
<anchor xml:id="_event__groups_8c_source_1l00708"/><link linkend="_event__groups_8c_1adf701822b780cba9cd5976288aae5a07">00708</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_event__groups_8h_1a62b68278abac6358369ae8e390988a02">xEventGroupSetBitsFromISR</link>(&#32;<link linkend="_struct_event_group_def__t">EventGroupHandle_t</link>&#32;xEventGroup,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link>&#32;uxBitsToSet,&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;*pxHigherPriorityTaskWoken&#32;)
<anchor xml:id="_event__groups_8c_source_1l00709"/>00709 &#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00710"/>00710 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_event__groups_8c_source_1l00711"/>00711 
<anchor xml:id="_event__groups_8c_source_1l00712"/>00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ae11a37557005c2660326e9874d5d3155">traceEVENT_GROUP_SET_BITS_FROM_ISR</link>(&#32;xEventGroup,&#32;uxBitsToSet&#32;);
<anchor xml:id="_event__groups_8c_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_timers_8c_1af4444b6b1a4e8d7db156e6aaccdf66fa">xTimerPendFunctionCallFromISR</link>(&#32;<link linkend="_event__groups_8c_1a54db6cc97bbb926aa4b78d5affc257d9">vEventGroupSetBitsCallback</link>,&#32;(&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;)&#32;xEventGroup,&#32;(&#32;uint32_t&#32;)&#32;uxBitsToSet,&#32;pxHigherPriorityTaskWoken&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9087&#32;Can&apos;t&#32;avoid&#32;cast&#32;to&#32;void*&#32;as&#32;a&#32;generic&#32;callback&#32;function&#32;not&#32;specific&#32;to&#32;this&#32;use&#32;case.&#32;Callback&#32;casts&#32;back&#32;to&#32;original&#32;type&#32;so&#32;safe.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00714"/>00714 
<anchor xml:id="_event__groups_8c_source_1l00715"/>00715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_event__groups_8c_source_1l00716"/>00716 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00717"/>00717 
<anchor xml:id="_event__groups_8c_source_1l00718"/>00718 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00719"/>00719 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00720"/>00720 
<anchor xml:id="_event__groups_8c_source_1l00721"/>00721 <emphasis role="preprocessor">#if&#32;(configUSE_TRACE_FACILITY&#32;==&#32;1)</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00722"/>00722 
<anchor xml:id="_event__groups_8c_source_1l00723"/><link linkend="_event__groups_8c_1ae78a16e547898198965c2d1119269c8b">00723</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_event__groups_8c_1ae78a16e547898198965c2d1119269c8b">uxEventGroupGetNumber</link>(&#32;<emphasis role="keywordtype">void</emphasis>*&#32;xEventGroup&#32;)
<anchor xml:id="_event__groups_8c_source_1l00724"/>00724 &#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00725"/>00725 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;xReturn;
<anchor xml:id="_event__groups_8c_source_1l00726"/>00726 &#32;&#32;&#32;&#32;<link linkend="_struct_event_group_def__t">EventGroup_t</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*pxEventBits&#32;=&#32;(&#32;<link linkend="_struct_event_group_def__t">EventGroup_t</link>&#32;*&#32;)&#32;xEventGroup;&#32;<emphasis role="comment">/*lint&#32;!e9087&#32;!e9079&#32;EventGroupHandle_t&#32;is&#32;a&#32;pointer&#32;to&#32;an&#32;EventGroup_t,&#32;but&#32;EventGroupHandle_t&#32;is&#32;kept&#32;opaque&#32;outside&#32;of&#32;this&#32;file&#32;for&#32;data&#32;hiding&#32;purposes.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00727"/>00727 
<anchor xml:id="_event__groups_8c_source_1l00728"/>00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xEventGroup&#32;==&#32;NULL&#32;)
<anchor xml:id="_event__groups_8c_source_1l00729"/>00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00730"/>00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;0;
<anchor xml:id="_event__groups_8c_source_1l00731"/>00731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00732"/>00732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00733"/>00733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00734"/>00734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;pxEventBits-&gt;<link linkend="_struct_event_group_def__t_1ac251eb462a51430b7691ba14e35c9ffc">uxEventGroupNumber</link>;
<anchor xml:id="_event__groups_8c_source_1l00735"/>00735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00736"/>00736 
<anchor xml:id="_event__groups_8c_source_1l00737"/>00737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_event__groups_8c_source_1l00738"/>00738 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00739"/>00739 
<anchor xml:id="_event__groups_8c_source_1l00740"/>00740 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TRACE_FACILITY&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_event__groups_8c_source_1l00741"/>00741 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00742"/>00742 
<anchor xml:id="_event__groups_8c_source_1l00743"/>00743 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00744"/>00744 
<anchor xml:id="_event__groups_8c_source_1l00745"/><link linkend="_event__groups_8c_1a27b522f2ab57b7438df588bd15e5e90a">00745</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_event__groups_8c_1a27b522f2ab57b7438df588bd15e5e90a">vEventGroupSetNumber</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;xEventGroup,&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxEventGroupNumber&#32;)
<anchor xml:id="_event__groups_8c_source_1l00746"/>00746 &#32;&#32;&#32;&#32;{
<anchor xml:id="_event__groups_8c_source_1l00747"/>00747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(&#32;<link linkend="_struct_event_group_def__t">EventGroup_t</link>&#32;*&#32;)&#32;xEventGroup&#32;)-&gt;uxEventGroupNumber&#32;=&#32;uxEventGroupNumber;&#32;<emphasis role="comment">/*lint&#32;!e9087&#32;!e9079&#32;EventGroupHandle_t&#32;is&#32;a&#32;pointer&#32;to&#32;an&#32;EventGroup_t,&#32;but&#32;EventGroupHandle_t&#32;is&#32;kept&#32;opaque&#32;outside&#32;of&#32;this&#32;file&#32;for&#32;data&#32;hiding&#32;purposes.&#32;*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00748"/>00748 &#32;&#32;&#32;&#32;}
<anchor xml:id="_event__groups_8c_source_1l00749"/>00749 
<anchor xml:id="_event__groups_8c_source_1l00750"/>00750 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TRACE_FACILITY&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_event__groups_8c_source_1l00751"/>00751 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_event__groups_8c_source_1l00752"/>00752 
<anchor xml:id="_event__groups_8c_source_1l00753"/>00753 
</programlisting></section>
