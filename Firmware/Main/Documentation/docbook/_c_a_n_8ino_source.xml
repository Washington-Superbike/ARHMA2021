<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__c_a_n_8ino_source" xml:lang="en-US">
<title>C:/Users/ponym/ARHMA2021/Firmware/Main/CAN.ino</title>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__c_a_n_8ino_source_1l00001"/>00001 
<anchor xml:id="__c_a_n_8ino_source_1l00028"/>00028 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__c_a_n_8h">CAN.h</link>&quot;</emphasis>
<anchor xml:id="__c_a_n_8ino_source_1l00029"/>00029 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8h">FreeRTOS_TEENSY4.h</link>&quot;</emphasis>
<anchor xml:id="__c_a_n_8ino_source_1l00030"/>00030 
<anchor xml:id="__c_a_n_8ino_source_1l00031"/><link linkend="__c_a_n_8h_1a785e095da30ce4993a186804102bf2ea">00031</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__c_a_n_8ino_1a785e095da30ce4993a186804102bf2ea">canTask</link>(<emphasis role="keywordtype">void</emphasis>&#32;*canData)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00032"/>00032 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;iter&#32;=&#32;0;
<anchor xml:id="__c_a_n_8ino_source_1l00033"/>00033 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;requestCells&#32;=&#32;1;
<anchor xml:id="__c_a_n_8ino_source_1l00034"/>00034 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(1)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00036"/>00036 
<anchor xml:id="__c_a_n_8ino_source_1l00040"/>00040 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_config_8h_1a9d09068130671d9ca6bf3c9b6fac6e34">CAN_NODES</link>&#32;!=0)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__c_a_n_8ino_1ab92f5f7e74cba4411e9f1c6f32a720a5">checkCAN</link>(*(<link linkend="_struct_c_a_n_task_data">CANTaskData</link>&#32;*)canData);
<anchor xml:id="__c_a_n_8ino_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(iter&#32;==&#32;(1000&#32;/&#32;20)&#32;*&#32;2)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__c_a_n_8ino_1a0953b2f37f0e637d3f5fba2148109d2a">requestCellVoltages</link>(requestCells);
<anchor xml:id="__c_a_n_8ino_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;requestCells&#32;*=&#32;-1;
<anchor xml:id="__c_a_n_8ino_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iter&#32;=&#32;0;
<anchor xml:id="__c_a_n_8ino_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__c_a_n_8ino_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iter++;
<anchor xml:id="__c_a_n_8ino_source_1l00049"/>00049 &#32;&#32;&#32;&#32;}
<anchor xml:id="__c_a_n_8ino_source_1l00050"/>00050 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;delay&#32;20ms</emphasis>
<anchor xml:id="__c_a_n_8ino_source_1l00051"/>00051 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1aa154068cecd7f31446a7a84af44ab1a3">vTaskDelay</link>((20&#32;*&#32;<link linkend="__free_r_t_o_s_config__default_8h_1a2f0258dd1e3b877e5bc013be54c2db6a">configTICK_RATE_HZ</link>)&#32;/&#32;1000);
<anchor xml:id="__c_a_n_8ino_source_1l00052"/>00052 &#32;&#32;}
<anchor xml:id="__c_a_n_8ino_source_1l00053"/>00053 }
<anchor xml:id="__c_a_n_8ino_source_1l00054"/>00054 
<anchor xml:id="__c_a_n_8ino_source_1l00055"/><link linkend="__c_a_n_8h_1a833ae6516ecb5cb3f8a7bd5adbf2bd9b">00055</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__c_a_n_8ino_1a833ae6516ecb5cb3f8a7bd5adbf2bd9b">setupCAN</link>()&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00056"/>00056 &#32;&#32;<link linkend="__c_a_n_8h_1aa4303f5a4b2f41108b988f850270b2d1">CAN_bus</link>.begin();
<anchor xml:id="__c_a_n_8ino_source_1l00057"/>00057 &#32;&#32;<link linkend="__c_a_n_8h_1aa4303f5a4b2f41108b988f850270b2d1">CAN_bus</link>.setBaudRate(250000);
<anchor xml:id="__c_a_n_8ino_source_1l00058"/>00058 }
<anchor xml:id="__c_a_n_8ino_source_1l00059"/>00059 
<anchor xml:id="__c_a_n_8ino_source_1l00060"/><link linkend="__c_a_n_8h_1acc8ad6a9a2388c904e5c2a81e263c59d">00060</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__c_a_n_8ino_1acc8ad6a9a2388c904e5c2a81e263c59d">decipherEVCCStats</link>(CAN_message_t&#32;msg,&#32;<link linkend="_struct_charge_controller_stats">ChargeControllerStats</link>&#32;evccStats)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00061"/>00061 &#32;&#32;*(evccStats.<link linkend="_struct_charge_controller_stats_1a16a3123ac01bcd73faa3a97e6ec4a774">en</link>)&#32;=&#32;(msg.buf[0]);
<anchor xml:id="__c_a_n_8ino_source_1l00062"/>00062 &#32;&#32;*(evccStats.<link linkend="_struct_charge_controller_stats_1a928012799250fc25ea8510f4b5a3f873">chargeVoltage</link>)&#32;=&#32;((msg.buf[2]&#32;&lt;&lt;&#32;8)&#32;|&#32;msg.buf[1])&#32;/&#32;10.0;
<anchor xml:id="__c_a_n_8ino_source_1l00063"/>00063 &#32;&#32;*(evccStats.<link linkend="_struct_charge_controller_stats_1ae130510a45203d35d88f44253b5837cb">chargeCurrent</link>)&#32;=&#32;(3200&#32;-&#32;((msg.buf[4]&#32;&lt;&lt;&#32;8)&#32;|&#32;msg.buf[3]))&#32;/&#32;10.0;
<anchor xml:id="__c_a_n_8ino_source_1l00064"/>00064 }
<anchor xml:id="__c_a_n_8ino_source_1l00065"/>00065 
<anchor xml:id="__c_a_n_8ino_source_1l00066"/><link linkend="__c_a_n_8h_1a3e5ce0cee4895bc07047a515ac2fa8ea">00066</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__c_a_n_8ino_1a3e5ce0cee4895bc07047a515ac2fa8ea">decipherChargerStats</link>(CAN_message_t&#32;msg,&#32;<link linkend="_struct_charger_stats">ChargerStats</link>&#32;<link linkend="__main_8h_1aa249f1d073086c27682168bbd7dc77ee">chargerStats</link>)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00067"/>00067 &#32;&#32;*(<link linkend="__main_8h_1aa249f1d073086c27682168bbd7dc77ee">chargerStats</link>.<link linkend="_struct_charger_stats_1ace07d9acd921d4f06f44ff347591d32b">statusFlag</link>)&#32;=&#32;msg.buf[0];
<anchor xml:id="__c_a_n_8ino_source_1l00068"/>00068 &#32;&#32;*(<link linkend="__main_8h_1aa249f1d073086c27682168bbd7dc77ee">chargerStats</link>.<link linkend="_struct_charger_stats_1a35334daccd006a7cdbb635e1ac8bed14">chargeFlag</link>)&#32;=&#32;msg.buf[1];
<anchor xml:id="__c_a_n_8ino_source_1l00069"/>00069 &#32;&#32;*(<link linkend="__main_8h_1aa249f1d073086c27682168bbd7dc77ee">chargerStats</link>.<link linkend="_struct_charger_stats_1aae5124f4063e787f9d7b838235f66d79">outputVoltage</link>)&#32;=&#32;((msg.buf[3]&#32;&lt;&lt;&#32;8)&#32;|&#32;msg.buf[2])&#32;/&#32;10.0;
<anchor xml:id="__c_a_n_8ino_source_1l00070"/>00070 &#32;&#32;*(<link linkend="__main_8h_1aa249f1d073086c27682168bbd7dc77ee">chargerStats</link>.<link linkend="_struct_charger_stats_1a0bafa595413f23895c8e4c55a64da3aa">outputCurrent</link>)&#32;=&#32;(3200&#32;-&#32;((msg.buf[5]&#32;&lt;&lt;&#32;8)&#32;|&#32;msg.buf[4]))&#32;/&#32;10.0;
<anchor xml:id="__c_a_n_8ino_source_1l00071"/>00071 &#32;&#32;*(<link linkend="__main_8h_1aa249f1d073086c27682168bbd7dc77ee">chargerStats</link>.<link linkend="_struct_charger_stats_1a404624494d0facf36c3928f337eb4e87">chargerTemp</link>)&#32;=&#32;msg.buf[6]&#32;-&#32;40;
<anchor xml:id="__c_a_n_8ino_source_1l00072"/>00072 }
<anchor xml:id="__c_a_n_8ino_source_1l00073"/>00073 
<anchor xml:id="__c_a_n_8ino_source_1l00074"/><link linkend="__c_a_n_8h_1abd98b0e43fb7330bf8964d8da390810f">00074</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__c_a_n_8ino_1abd98b0e43fb7330bf8964d8da390810f">decodeMotorStats</link>(CAN_message_t&#32;msg,&#32;<link linkend="_struct_motor_stats">MotorStats</link>&#32;<link linkend="__main_8h_1a9eeb128a9907154869e9ffa78e065039">motorStats</link>&#32;)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00075"/>00075 &#32;&#32;*(<link linkend="__main_8h_1a9eeb128a9907154869e9ffa78e065039">motorStats</link>.<link linkend="_struct_motor_stats_1a7e3450d33d8be341dea374a2fcafd257">RPM</link>)&#32;=&#32;(<emphasis role="keywordtype">float</emphasis>)&#32;((msg.buf[1]&#32;&lt;&lt;&#32;8)&#32;|&#32;msg.buf[0]);
<anchor xml:id="__c_a_n_8ino_source_1l00076"/>00076 &#32;&#32;*(<link linkend="__main_8h_1a9eeb128a9907154869e9ffa78e065039">motorStats</link>.<link linkend="_struct_motor_stats_1ab207f3db0daa47cabc8644495bca6d4e">motorCurrent</link>)&#32;=&#32;((msg.buf[3]&#32;&lt;&lt;&#32;8)&#32;|&#32;msg.buf[2])&#32;/&#32;10.0;
<anchor xml:id="__c_a_n_8ino_source_1l00077"/>00077 &#32;&#32;*(<link linkend="__main_8h_1a9eeb128a9907154869e9ffa78e065039">motorStats</link>.<link linkend="_struct_motor_stats_1acf61562c6e2b1fdcdb548a04bff1f0aa">motorControllerBatteryVoltage</link>)&#32;=&#32;((msg.buf[5]&#32;&lt;&lt;&#32;8)&#32;|&#32;msg.buf[4])&#32;/&#32;10.0;
<anchor xml:id="__c_a_n_8ino_source_1l00078"/>00078 &#32;&#32;*(<link linkend="__main_8h_1a9eeb128a9907154869e9ffa78e065039">motorStats</link>.<link linkend="_struct_motor_stats_1af51eb591d7b6b57838499e55d5f2828b">errorMessage</link>)&#32;=&#32;((msg.buf[7]&#32;&lt;&lt;&#32;8)&#32;|&#32;msg.buf[6]);
<anchor xml:id="__c_a_n_8ino_source_1l00079"/>00079 }
<anchor xml:id="__c_a_n_8ino_source_1l00080"/>00080 
<anchor xml:id="__c_a_n_8ino_source_1l00081"/><link linkend="__c_a_n_8h_1a950c51dd93e1585b49156c52113ab832">00081</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__c_a_n_8ino_1a950c51dd93e1585b49156c52113ab832">decodeMotorTemps</link>(CAN_message_t&#32;msg,&#32;<link linkend="_struct_motor_temps">MotorTemps</link>&#32;<link linkend="__main_8h_1abb61c6dc61d12b31aad7bdadd495b70a">motorTemps</link>)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00082"/>00082 &#32;&#32;*(<link linkend="__main_8h_1abb61c6dc61d12b31aad7bdadd495b70a">motorTemps</link>.<link linkend="_struct_motor_temps_1acd9280e84ed18ff75d285e1377c01443">throttle</link>)&#32;=&#32;msg.buf[0]&#32;/&#32;255.0;
<anchor xml:id="__c_a_n_8ino_source_1l00083"/>00083 &#32;&#32;*(<link linkend="__main_8h_1abb61c6dc61d12b31aad7bdadd495b70a">motorTemps</link>.<link linkend="_struct_motor_temps_1a1c8b1bb77f968573fe2d1af0a0815d35">motorControllerTemperature</link>)&#32;=&#32;msg.buf[1]&#32;-&#32;40;
<anchor xml:id="__c_a_n_8ino_source_1l00084"/>00084 &#32;&#32;*(<link linkend="__main_8h_1abb61c6dc61d12b31aad7bdadd495b70a">motorTemps</link>.<link linkend="_struct_motor_temps_1ad9864aa48ce76c5965919c459cc6e9b7">motorTemperature</link>)&#32;=&#32;msg.buf[2]&#32;-&#32;30;
<anchor xml:id="__c_a_n_8ino_source_1l00085"/>00085 &#32;&#32;*(<link linkend="__main_8h_1abb61c6dc61d12b31aad7bdadd495b70a">motorTemps</link>.<link linkend="_struct_motor_temps_1aeb45f993f33820d44f9f4d1f02cf0f13">controllerStatus</link>)&#32;=&#32;msg.buf[4];
<anchor xml:id="__c_a_n_8ino_source_1l00086"/>00086 }
<anchor xml:id="__c_a_n_8ino_source_1l00087"/>00087 
<anchor xml:id="__c_a_n_8ino_source_1l00088"/><link linkend="__c_a_n_8h_1ac7f58797b08a603835f0488b5fe3fb7c">00088</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__c_a_n_8ino_1ac7f58797b08a603835f0488b5fe3fb7c">decipherBMSStatus</link>(CAN_message_t&#32;msg,&#32;<link linkend="_struct_b_m_s_status">BMSStatus</link>&#32;<link linkend="__main_8h_1ae0522609134711f92c96ffa8ed05e582">bmsStatus</link>)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00089"/>00089 &#32;&#32;*(<link linkend="__main_8h_1ae0522609134711f92c96ffa8ed05e582">bmsStatus</link>.<link linkend="_struct_b_m_s_status_1acab09ac12be3be24bce0abc90862dacd">bms_status_flag</link>)&#32;=&#32;msg.buf[0];
<anchor xml:id="__c_a_n_8ino_source_1l00090"/>00090 &#32;&#32;*(<link linkend="__main_8h_1ae0522609134711f92c96ffa8ed05e582">bmsStatus</link>.<link linkend="_struct_b_m_s_status_1a02b6f2e9d6f9655e47184007195c7265">bms_c_id</link>)&#32;=&#32;msg.buf[1];
<anchor xml:id="__c_a_n_8ino_source_1l00091"/>00091 &#32;&#32;*(<link linkend="__main_8h_1ae0522609134711f92c96ffa8ed05e582">bmsStatus</link>.<link linkend="_struct_b_m_s_status_1a8b316c1509dc351897db5b5726026e3e">bms_c_fault</link>)&#32;=&#32;msg.buf[2];
<anchor xml:id="__c_a_n_8ino_source_1l00092"/>00092 &#32;&#32;*(<link linkend="__main_8h_1ae0522609134711f92c96ffa8ed05e582">bmsStatus</link>.<link linkend="_struct_b_m_s_status_1a53663d5549fc358f1f06927c9b2c3676">ltc_fault</link>)&#32;=&#32;msg.buf[3];
<anchor xml:id="__c_a_n_8ino_source_1l00093"/>00093 &#32;&#32;*(<link linkend="__main_8h_1ae0522609134711f92c96ffa8ed05e582">bmsStatus</link>.<link linkend="_struct_b_m_s_status_1aafe89416c934c33489db12fdce4d6f6e">ltc_count</link>)&#32;=&#32;msg.buf[4];
<anchor xml:id="__c_a_n_8ino_source_1l00094"/>00094 }
<anchor xml:id="__c_a_n_8ino_source_1l00095"/>00095 
<anchor xml:id="__c_a_n_8ino_source_1l00096"/><link linkend="__c_a_n_8h_1ac7f0128ba5279b58ce4917ff6d80264e">00096</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__c_a_n_8ino_1ac7f0128ba5279b58ce4917ff6d80264e">decipherCellsVoltage</link>(CAN_message_t&#32;msg,&#32;<link linkend="_struct_cell_voltages">CellVoltages</link>&#32;<link linkend="__main_8h_1afca6798677cebeeb7599ea00e1e243dd">cellVoltages</link>)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00097"/>00097 &#32;&#32;<emphasis role="comment">//&#32;THE&#32;FOLLOWING&#32;DATATYPE&#32;NEEDS&#32;TO&#32;BE&#32;CHANGED</emphasis>
<anchor xml:id="__c_a_n_8ino_source_1l00098"/>00098 &#32;&#32;uint32_t&#32;msgID&#32;=&#32;msg.id;
<anchor xml:id="__c_a_n_8ino_source_1l00099"/>00099 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;totalOffset&#32;=&#32;0;&#32;<emphasis role="comment">//&#32;totalOffset&#32;equals&#32;the&#32;index&#32;of&#32;array&#32;cellVoltages</emphasis>
<anchor xml:id="__c_a_n_8ino_source_1l00100"/>00100 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cellOffset&#32;=&#32;(((msgID&#32;&gt;&gt;&#32;8)&#32;&amp;&#32;0xF)&#32;-&#32;0x9);
<anchor xml:id="__c_a_n_8ino_source_1l00101"/>00101 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ltcOffset&#32;=&#32;(msgID&#32;&amp;&#32;0x1);
<anchor xml:id="__c_a_n_8ino_source_1l00102"/>00102 &#32;&#32;totalOffset&#32;=&#32;(cellOffset&#32;*&#32;4)&#32;+&#32;(ltcOffset&#32;*&#32;12);
<anchor xml:id="__c_a_n_8ino_source_1l00103"/>00103 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;cellIndex;
<anchor xml:id="__c_a_n_8ino_source_1l00104"/>00104 
<anchor xml:id="__c_a_n_8ino_source_1l00105"/>00105 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(cellIndex&#32;=&#32;0;&#32;cellIndex&#32;&lt;&#32;8;&#32;cellIndex&#32;+=&#32;2)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00106"/>00106 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;analyze&#32;this&#32;line&#32;and&#32;find&#32;a&#32;better&#32;way&#32;to&#32;do&#32;it</emphasis>
<anchor xml:id="__c_a_n_8ino_source_1l00107"/>00107 &#32;&#32;&#32;&#32;*(<link linkend="__main_8h_1afca6798677cebeeb7599ea00e1e243dd">cellVoltages</link>.<link linkend="_struct_cell_voltages_1a6af0d6a1dbf317365e4fa56be6c595fc">cellVoltages</link>&#32;+&#32;(cellIndex&#32;/&#32;2&#32;+&#32;totalOffset))&#32;=&#32;((((float)(msg.buf[cellIndex&#32;+&#32;1]&#32;&lt;&lt;&#32;8)&#32;+&#32;(float)(msg.buf[cellIndex])&#32;/&#32;10000))&#32;/&#32;10000)&#32;;
<anchor xml:id="__c_a_n_8ino_source_1l00108"/>00108 &#32;&#32;&#32;&#32;<link linkend="__c_a_n_8h_1af798cac38f8c00111b4be880f47d8020">cellVoltagesReady</link>[cellIndex&#32;/&#32;2&#32;+&#32;totalOffset]&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__c_a_n_8ino_source_1l00109"/>00109 &#32;&#32;}
<anchor xml:id="__c_a_n_8ino_source_1l00110"/>00110 
<anchor xml:id="__c_a_n_8ino_source_1l00111"/>00111 &#32;&#32;<link linkend="__c_a_n_8ino_1afd1fb5329197c4478969008e0ee42f90">calculateSeriesVoltage</link>(<link linkend="__main_8h_1afca6798677cebeeb7599ea00e1e243dd">cellVoltages</link>);
<anchor xml:id="__c_a_n_8ino_source_1l00112"/>00112 
<anchor xml:id="__c_a_n_8ino_source_1l00113"/>00113 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!*<link linkend="__main_8h_1afca6798677cebeeb7599ea00e1e243dd">cellVoltages</link>.<link linkend="_struct_cell_voltages_1a844b5b2d0bd58e1147076ab8aacc420a">ready</link>)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00114"/>00114 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="__c_a_n_8h_1aedb50849ed846717c3096b10fb75d537">BMS_CELLS</link>;&#32;i++&#32;)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__c_a_n_8h_1af798cac38f8c00111b4be880f47d8020">cellVoltagesReady</link>[i])&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__c_a_n_8ino_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__c_a_n_8ino_source_1l00118"/>00118 &#32;&#32;&#32;&#32;}
<anchor xml:id="__c_a_n_8ino_source_1l00119"/>00119 &#32;&#32;&#32;&#32;*<link linkend="__main_8h_1afca6798677cebeeb7599ea00e1e243dd">cellVoltages</link>.<link linkend="_struct_cell_voltages_1a844b5b2d0bd58e1147076ab8aacc420a">ready</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__c_a_n_8ino_source_1l00120"/>00120 &#32;&#32;}
<anchor xml:id="__c_a_n_8ino_source_1l00121"/>00121 }
<anchor xml:id="__c_a_n_8ino_source_1l00122"/>00122 
<anchor xml:id="__c_a_n_8ino_source_1l00123"/><link linkend="__c_a_n_8h_1a11cd027f4ad6ca2a6b9a860a07fb8e41">00123</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__c_a_n_8ino_1a11cd027f4ad6ca2a6b9a860a07fb8e41">decipherThermistors</link>(CAN_message_t&#32;msg,&#32;<link linkend="_struct_thermistor_temps">ThermistorTemps</link>&#32;<link linkend="__main_8h_1a18571448b101f12a60457d717dc4f953">thermistorTemps</link>)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00124"/>00124 &#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;ltcID&#32;=&#32;msg.buf[0];
<anchor xml:id="__c_a_n_8ino_source_1l00125"/>00125 &#32;&#32;<link linkend="__main_8h_1aefa2152d1586505d2d271edc7e9c4187">thermistorEnabled</link>&#32;=&#32;msg.buf[1];
<anchor xml:id="__c_a_n_8ino_source_1l00126"/>00126 &#32;&#32;<link linkend="__main_8h_1ad2bc733f382fc4bf0379382e3a15a94e">thermistorPresent</link>&#32;=&#32;msg.buf[2];
<anchor xml:id="__c_a_n_8ino_source_1l00127"/>00127 &#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;*currentThermistor&#32;=&#32;&amp;msg.buf[3];
<anchor xml:id="__c_a_n_8ino_source_1l00128"/>00128 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;thermistor;
<anchor xml:id="__c_a_n_8ino_source_1l00129"/>00129 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(thermistor&#32;=&#32;0;&#32;thermistor&#32;&lt;&#32;5;&#32;thermistor++)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00130"/>00130 &#32;&#32;&#32;&#32;<link linkend="__main_8h_1a18571448b101f12a60457d717dc4f953">thermistorTemps</link>.<link linkend="_struct_thermistor_temps_1a586a85cf3b40e573c835319024d7eb5b">temps</link>[thermistor&#32;+&#32;5&#32;*&#32;ltcID]&#32;=&#32;currentThermistor[thermistor];
<anchor xml:id="__c_a_n_8ino_source_1l00131"/>00131 &#32;&#32;}
<anchor xml:id="__c_a_n_8ino_source_1l00132"/>00132 }
<anchor xml:id="__c_a_n_8ino_source_1l00133"/>00133 
<anchor xml:id="__c_a_n_8ino_source_1l00134"/>00134 <emphasis role="comment">//&#32;sums&#32;the&#32;voltage&#32;of&#32;each&#32;cell&#32;in&#32;main&#32;accumulator</emphasis>
<anchor xml:id="__c_a_n_8ino_source_1l00135"/><link linkend="__c_a_n_8h_1afd1fb5329197c4478969008e0ee42f90">00135</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__c_a_n_8ino_1afd1fb5329197c4478969008e0ee42f90">calculateSeriesVoltage</link>(<link linkend="_struct_cell_voltages">CellVoltages</link>&#32;cellVs)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00136"/>00136 &#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;partialSeriesVoltage&#32;=&#32;0;
<anchor xml:id="__c_a_n_8ino_source_1l00137"/>00137 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;currentCell;
<anchor xml:id="__c_a_n_8ino_source_1l00138"/>00138 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(currentCell&#32;=&#32;0;&#32;currentCell&#32;&lt;&#32;<link linkend="__c_a_n_8h_1aedb50849ed846717c3096b10fb75d537">BMS_CELLS</link>;&#32;currentCell++)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00139"/>00139 &#32;&#32;&#32;&#32;partialSeriesVoltage&#32;+=&#32;*(cellVs.<link linkend="_struct_cell_voltages_1a6af0d6a1dbf317365e4fa56be6c595fc">cellVoltages</link>&#32;+&#32;currentCell);
<anchor xml:id="__c_a_n_8ino_source_1l00140"/>00140 &#32;&#32;}
<anchor xml:id="__c_a_n_8ino_source_1l00141"/>00141 &#32;&#32;*cellVs.<link linkend="_struct_cell_voltages_1a739cccc4cfe6c366e7474ae1c71097bf">seriesVoltage</link>&#32;=&#32;partialSeriesVoltage;
<anchor xml:id="__c_a_n_8ino_source_1l00142"/>00142 }
<anchor xml:id="__c_a_n_8ino_source_1l00143"/>00143 
<anchor xml:id="__c_a_n_8ino_source_1l00144"/>00144 <emphasis role="comment">//&#32;checks&#32;the&#32;can&#32;bus&#32;for&#32;any&#32;new&#32;data</emphasis>
<anchor xml:id="__c_a_n_8ino_source_1l00145"/><link linkend="__c_a_n_8h_1ab92f5f7e74cba4411e9f1c6f32a720a5">00145</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__c_a_n_8ino_1ab92f5f7e74cba4411e9f1c6f32a720a5">checkCAN</link>(<link linkend="_struct_c_a_n_task_data">CANTaskData</link>&#32;canData)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00146"/>00146 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;readValue&#32;=&#32;<link linkend="__c_a_n_8h_1aa4303f5a4b2f41108b988f850270b2d1">CAN_bus</link>.read(<link linkend="__c_a_n_8h_1afef5641c16f897cbe9fc00682fb749ed">CAN_msg</link>);
<anchor xml:id="__c_a_n_8ino_source_1l00147"/>00147 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(readValue&#32;!=&#32;0)&#32;{&#32;<emphasis role="comment">//&#32;if&#32;we&#32;read&#32;a&#32;message</emphasis>
<anchor xml:id="__c_a_n_8ino_source_1l00148"/>00148 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="__c_a_n_8h_1afef5641c16f897cbe9fc00682fb749ed">CAN_msg</link>.id)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__c_a_n_8h_1a1b593ffe62c4590fa197331661393984">MOTOR_STATS_MSG</link>:
<anchor xml:id="__c_a_n_8ino_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__c_a_n_8ino_1abd98b0e43fb7330bf8964d8da390810f">decodeMotorStats</link>(<link linkend="__c_a_n_8h_1afef5641c16f897cbe9fc00682fb749ed">CAN_msg</link>,&#32;canData.<link linkend="_struct_c_a_n_task_data_1a47d2113927a00ff554160b7fabfc6471">motorStats</link>);
<anchor xml:id="__c_a_n_8ino_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__c_a_n_8ino_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__c_a_n_8h_1a464be4036d5c85f472f461fc987eb2da">MOTOR_TEMPS_MSG</link>:
<anchor xml:id="__c_a_n_8ino_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__c_a_n_8ino_1a950c51dd93e1585b49156c52113ab832">decodeMotorTemps</link>(<link linkend="__c_a_n_8h_1afef5641c16f897cbe9fc00682fb749ed">CAN_msg</link>,&#32;canData.<link linkend="_struct_c_a_n_task_data_1a28c4ff53f540fa92e730acfd0def5d88">motorTemps</link>);
<anchor xml:id="__c_a_n_8ino_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__c_a_n_8ino_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__c_a_n_8h_1a44d631b0f4e7e294bc26dd9c77d3dcb9">DD_BMS_STATUS_IND</link>:
<anchor xml:id="__c_a_n_8ino_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__c_a_n_8ino_1ac7f58797b08a603835f0488b5fe3fb7c">decipherBMSStatus</link>(<link linkend="__c_a_n_8h_1afef5641c16f897cbe9fc00682fb749ed">CAN_msg</link>,&#32;canData.<link linkend="_struct_c_a_n_task_data_1a02b8e7f2fddd541dfd7b42efb7a1bbf3">bmsStatus</link>);
<anchor xml:id="__c_a_n_8ino_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//printBMSStatus();</emphasis>
<anchor xml:id="__c_a_n_8ino_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__c_a_n_8ino_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__c_a_n_8h_1ac7e658bcd09f49f37c7732ddc1c80fe2">EVCC_STATS</link>:
<anchor xml:id="__c_a_n_8ino_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__c_a_n_8ino_1acc8ad6a9a2388c904e5c2a81e263c59d">decipherEVCCStats</link>(<link linkend="__c_a_n_8h_1afef5641c16f897cbe9fc00682fb749ed">CAN_msg</link>,&#32;canData.<link linkend="_struct_c_a_n_task_data_1a541dfccdee9cf36b2252abfffbbdda41">chargeControllerStats</link>);
<anchor xml:id="__c_a_n_8ino_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__c_a_n_8ino_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__c_a_n_8h_1aaa765e2d2381f199ed620b8d6962f60d">CHARGER_STATS</link>:
<anchor xml:id="__c_a_n_8ino_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__c_a_n_8ino_1a3e5ce0cee4895bc07047a515ac2fa8ea">decipherChargerStats</link>(<link linkend="__c_a_n_8h_1afef5641c16f897cbe9fc00682fb749ed">CAN_msg</link>,&#32;canData.<link linkend="_struct_c_a_n_task_data_1a173c0fd4a49d1c2c1d01225b28d04f19">chargerStats</link>);
<anchor xml:id="__c_a_n_8ino_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__c_a_n_8h_1a366031af35039c965b2bb3ac07dd702a">BMSC1_LTC1_CELLS_04</link>:
<anchor xml:id="__c_a_n_8ino_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__c_a_n_8ino_1ac7f0128ba5279b58ce4917ff6d80264e">decipherCellsVoltage</link>(<link linkend="__c_a_n_8h_1afef5641c16f897cbe9fc00682fb749ed">CAN_msg</link>,&#32;&#32;canData.<link linkend="_struct_c_a_n_task_data_1a3d198d3fdb7daa5117a01954825e30ad">cellVoltages</link>);
<anchor xml:id="__c_a_n_8ino_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__c_a_n_8ino_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__c_a_n_8h_1a2da14593c5f2bdd4bc417f9e66bc2a75">BMSC1_LTC1_CELLS_58</link>:
<anchor xml:id="__c_a_n_8ino_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__c_a_n_8ino_1ac7f0128ba5279b58ce4917ff6d80264e">decipherCellsVoltage</link>(<link linkend="__c_a_n_8h_1afef5641c16f897cbe9fc00682fb749ed">CAN_msg</link>,&#32;&#32;canData.<link linkend="_struct_c_a_n_task_data_1a3d198d3fdb7daa5117a01954825e30ad">cellVoltages</link>);
<anchor xml:id="__c_a_n_8ino_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__c_a_n_8ino_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__c_a_n_8h_1ac1908e8612424d72ae778e43759f077f">BMSC1_LTC1_CELLS_912</link>:
<anchor xml:id="__c_a_n_8ino_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__c_a_n_8ino_1ac7f0128ba5279b58ce4917ff6d80264e">decipherCellsVoltage</link>(<link linkend="__c_a_n_8h_1afef5641c16f897cbe9fc00682fb749ed">CAN_msg</link>,&#32;&#32;canData.<link linkend="_struct_c_a_n_task_data_1a3d198d3fdb7daa5117a01954825e30ad">cellVoltages</link>);
<anchor xml:id="__c_a_n_8ino_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__c_a_n_8ino_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__c_a_n_8h_1a76c8bda430a00f369aed9309100c3107">BMSC1_LTC2_CELLS_04</link>:
<anchor xml:id="__c_a_n_8ino_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__c_a_n_8ino_1ac7f0128ba5279b58ce4917ff6d80264e">decipherCellsVoltage</link>(<link linkend="__c_a_n_8h_1afef5641c16f897cbe9fc00682fb749ed">CAN_msg</link>,&#32;&#32;canData.<link linkend="_struct_c_a_n_task_data_1a3d198d3fdb7daa5117a01954825e30ad">cellVoltages</link>);
<anchor xml:id="__c_a_n_8ino_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__c_a_n_8ino_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__c_a_n_8h_1aa605748f6dfeb5f3ba7b8b473a2f41b5">BMSC1_LTC2_CELLS_58</link>:
<anchor xml:id="__c_a_n_8ino_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__c_a_n_8ino_1ac7f0128ba5279b58ce4917ff6d80264e">decipherCellsVoltage</link>(<link linkend="__c_a_n_8h_1afef5641c16f897cbe9fc00682fb749ed">CAN_msg</link>,&#32;&#32;canData.<link linkend="_struct_c_a_n_task_data_1a3d198d3fdb7daa5117a01954825e30ad">cellVoltages</link>);
<anchor xml:id="__c_a_n_8ino_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__c_a_n_8ino_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__c_a_n_8h_1af80d69aa4a06cbc8b1137773336f74ec">BMSC1_LTC2_CELLS_912</link>:
<anchor xml:id="__c_a_n_8ino_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__c_a_n_8ino_1ac7f0128ba5279b58ce4917ff6d80264e">decipherCellsVoltage</link>(<link linkend="__c_a_n_8h_1afef5641c16f897cbe9fc00682fb749ed">CAN_msg</link>,&#32;&#32;canData.<link linkend="_struct_c_a_n_task_data_1a3d198d3fdb7daa5117a01954825e30ad">cellVoltages</link>);
<anchor xml:id="__c_a_n_8ino_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__c_a_n_8ino_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__c_a_n_8h_1a5a71b982a71be6bc19546f4c8fecadd7">DD_BMSC_TH_STATUS_IND</link>:
<anchor xml:id="__c_a_n_8ino_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__c_a_n_8ino_1a11cd027f4ad6ca2a6b9a860a07fb8e41">decipherThermistors</link>(<link linkend="__c_a_n_8h_1afef5641c16f897cbe9fc00682fb749ed">CAN_msg</link>,&#32;canData.<link linkend="_struct_c_a_n_task_data_1a1f1f9a7c959359030e8ab98d5ecf6a57">thermistorTemps</link>);
<anchor xml:id="__c_a_n_8ino_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__c_a_n_8ino_source_1l00185"/>00185 &#32;&#32;&#32;&#32;}
<anchor xml:id="__c_a_n_8ino_source_1l00186"/>00186 &#32;&#32;}
<anchor xml:id="__c_a_n_8ino_source_1l00187"/>00187 }
<anchor xml:id="__c_a_n_8ino_source_1l00188"/>00188 
<anchor xml:id="__c_a_n_8ino_source_1l00189"/>00189 <emphasis role="comment">//&#32;unused&#32;currently&#32;but&#32;should&#32;be&#32;implemented&#32;into&#32;the&#32;current&#32;firmware</emphasis>
<anchor xml:id="__c_a_n_8ino_source_1l00190"/><link linkend="__c_a_n_8h_1a317708f05ea5de4b748e27c49e2a85e8">00190</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__c_a_n_8ino_1a317708f05ea5de4b748e27c49e2a85e8">printBMSStatus</link>()&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00191"/>00191 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="__main_8h_1a04c234659b28f92e2eab7998b586bb4c">bms_status_flag</link>)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00192"/>00192 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:
<anchor xml:id="__c_a_n_8ino_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;Serial.printf(<emphasis role="stringliteral">&quot;at&#32;least&#32;one&#32;cell&#32;V&#32;is&#32;&gt;&#32;High&#32;Voltage&#32;Cutoff\n&quot;</emphasis>);
<anchor xml:id="__c_a_n_8ino_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__c_a_n_8ino_source_1l00195"/>00195 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;2:
<anchor xml:id="__c_a_n_8ino_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;Serial.printf(<emphasis role="stringliteral">&quot;at&#32;least&#32;one&#32;cell&#32;V&#32;is&#32;&lt;&#32;Low&#32;Voltage&#32;Cutoff\n&quot;</emphasis>);
<anchor xml:id="__c_a_n_8ino_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__c_a_n_8ino_source_1l00198"/>00198 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;4:
<anchor xml:id="__c_a_n_8ino_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;Serial.printf(<emphasis role="stringliteral">&quot;at&#32;least&#32;one&#32;cell&#32;V&#32;is&#32;&gt;&#32;Balance&#32;Voltage&#32;Cutoff\n&quot;</emphasis>);
<anchor xml:id="__c_a_n_8ino_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__c_a_n_8ino_source_1l00201"/>00201 &#32;&#32;}
<anchor xml:id="__c_a_n_8ino_source_1l00202"/>00202 &#32;&#32;Serial.printf(<emphasis role="stringliteral">&quot;The&#32;BMSC&#32;ID&#32;is&#32;%d\n&quot;</emphasis>,&#32;<link linkend="__main_8h_1a54619d6c6a00d3268f764c33bd352ebf">bms_c_id</link>);
<anchor xml:id="__c_a_n_8ino_source_1l00203"/>00203 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="__main_8h_1a668e87eca74f2126136ee32a6964005e">bms_c_fault</link>)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00204"/>00204 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:
<anchor xml:id="__c_a_n_8ino_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;Serial.printf(<emphasis role="stringliteral">&quot;BMS&#32;Fault:&#32;configuration&#32;not&#32;locked\n&quot;</emphasis>);
<anchor xml:id="__c_a_n_8ino_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__c_a_n_8ino_source_1l00207"/>00207 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;2:
<anchor xml:id="__c_a_n_8ino_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;Serial.printf(<emphasis role="stringliteral">&quot;BMS&#32;Fault:&#32;not&#32;all&#32;cells&#32;present\n&quot;</emphasis>);
<anchor xml:id="__c_a_n_8ino_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__c_a_n_8ino_source_1l00210"/>00210 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;4:
<anchor xml:id="__c_a_n_8ino_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;Serial.printf(<emphasis role="stringliteral">&quot;BMS&#32;Fault:&#32;thermistor&#32;overtemp\n&quot;</emphasis>);
<anchor xml:id="__c_a_n_8ino_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__c_a_n_8ino_source_1l00213"/>00213 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;8:
<anchor xml:id="__c_a_n_8ino_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;Serial.printf(<emphasis role="stringliteral">&quot;BMS&#32;Fault:&#32;not&#32;all&#32;thermistors&#32;present\n&quot;</emphasis>);
<anchor xml:id="__c_a_n_8ino_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__c_a_n_8ino_source_1l00216"/>00216 &#32;&#32;}
<anchor xml:id="__c_a_n_8ino_source_1l00217"/>00217 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__main_8h_1ae21e58b785392a0951862c107609d059">ltc_fault</link>&#32;==&#32;1)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00218"/>00218 &#32;&#32;&#32;&#32;Serial.printf(<emphasis role="stringliteral">&quot;LTC&#32;fault&#32;detected\n&quot;</emphasis>);
<anchor xml:id="__c_a_n_8ino_source_1l00219"/>00219 &#32;&#32;}
<anchor xml:id="__c_a_n_8ino_source_1l00220"/>00220 &#32;&#32;Serial.printf(<emphasis role="stringliteral">&quot;%d&#32;LTCs&#32;detected\n&quot;</emphasis>);
<anchor xml:id="__c_a_n_8ino_source_1l00221"/>00221 }
<anchor xml:id="__c_a_n_8ino_source_1l00222"/>00222 
<anchor xml:id="__c_a_n_8ino_source_1l00223"/>00223 <emphasis role="comment">//&#32;used&#32;to&#32;print&#32;the&#32;contents&#32;of&#32;a&#32;CAN&#32;msg</emphasis>
<anchor xml:id="__c_a_n_8ino_source_1l00224"/><link linkend="__c_a_n_8h_1ad899aaa07def0c8757bea6e9a75f878d">00224</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__c_a_n_8ino_1ad899aaa07def0c8757bea6e9a75f878d">printMessage</link>(CAN_message_t&#32;msg)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00225"/>00225 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;msg.len;&#32;i++)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00226"/>00226 &#32;&#32;&#32;&#32;Serial.print(msg.buf[i]);
<anchor xml:id="__c_a_n_8ino_source_1l00227"/>00227 &#32;&#32;&#32;&#32;Serial.print(<emphasis role="stringliteral">&quot;:&quot;</emphasis>);
<anchor xml:id="__c_a_n_8ino_source_1l00228"/>00228 &#32;&#32;}
<anchor xml:id="__c_a_n_8ino_source_1l00229"/>00229 &#32;&#32;Serial.println();
<anchor xml:id="__c_a_n_8ino_source_1l00230"/>00230 }
<anchor xml:id="__c_a_n_8ino_source_1l00231"/>00231 
<anchor xml:id="__c_a_n_8ino_source_1l00232"/>00232 <emphasis role="comment">//&#32;should&#32;only&#32;be&#32;called&#32;if&#32;there&#32;is&#32;at&#32;least&#32;one&#32;other&#32;CAN&#32;node&#32;on&#32;the&#32;bus</emphasis>
<anchor xml:id="__c_a_n_8ino_source_1l00233"/>00233 <emphasis role="comment">//&#32;if&#32;none&#32;are&#32;on&#32;the&#32;bus&#32;when&#32;CAN_bus.write()&#32;occurs,&#32;the&#32;Teensy&#32;will&#32;reset</emphasis>
<anchor xml:id="__c_a_n_8ino_source_1l00234"/><link linkend="__c_a_n_8h_1a0953b2f37f0e637d3f5fba2148109d2a">00234</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__c_a_n_8ino_1a0953b2f37f0e637d3f5fba2148109d2a">requestCellVoltages</link>(<emphasis role="keywordtype">int</emphasis>&#32;LTC)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00235"/>00235 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(LTC&#32;==&#32;-1)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00236"/>00236 &#32;&#32;&#32;&#32;<link linkend="__c_a_n_8h_1afef5641c16f897cbe9fc00682fb749ed">CAN_msg</link>.id&#32;=&#32;0x01de0800;
<anchor xml:id="__c_a_n_8ino_source_1l00237"/>00237 &#32;&#32;&#32;&#32;<link linkend="__c_a_n_8h_1aa4303f5a4b2f41108b988f850270b2d1">CAN_bus</link>.write(<link linkend="__c_a_n_8h_1afef5641c16f897cbe9fc00682fb749ed">CAN_msg</link>);
<anchor xml:id="__c_a_n_8ino_source_1l00238"/>00238 &#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(LTC&#32;==&#32;1)&#32;{
<anchor xml:id="__c_a_n_8ino_source_1l00239"/>00239 &#32;&#32;&#32;&#32;<link linkend="__c_a_n_8h_1afef5641c16f897cbe9fc00682fb749ed">CAN_msg</link>.id&#32;=&#32;0x01de0801;
<anchor xml:id="__c_a_n_8ino_source_1l00240"/>00240 &#32;&#32;&#32;&#32;<link linkend="__c_a_n_8h_1aa4303f5a4b2f41108b988f850270b2d1">CAN_bus</link>.write(<link linkend="__c_a_n_8h_1afef5641c16f897cbe9fc00682fb749ed">CAN_msg</link>);
<anchor xml:id="__c_a_n_8ino_source_1l00241"/>00241 &#32;&#32;}
<anchor xml:id="__c_a_n_8ino_source_1l00242"/>00242 }
</programlisting></section>
