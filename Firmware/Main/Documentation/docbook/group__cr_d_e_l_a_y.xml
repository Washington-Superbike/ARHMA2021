<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group__cr_d_e_l_a_y" xml:lang="en-US">
<title>crDELAY</title>
<indexterm><primary>crDELAY</primary></indexterm>

<para>croutine. h <literallayout>
<link linkend="_croutine_8h_1a05a06feb11028f2d1d440ea335f562ba">crDELAY( CoRoutineHandle_t xHandle, TickType_t xTicksToDelay )</link>;</literallayout></para>

<para>Delay a co-routine for a fixed period of time.</para>

<para>crDELAY can only be called from the co-routine function itself - not from within a function called by the co-routine function. This is because co-routines do not maintain their own stack.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>xHandle</entry><entry>
<para>The handle of the co-routine to delay. This is the xHandle parameter of the co-routine function.</para>
</entry>
                            </row>
                            <row>
<entry>xTickToDelay</entry><entry>
<para>The number of ticks that the co-routine should delay for. The actual amount of time this equates to is defined by configTICK_RATE_HZ (set in <link linkend="__free_r_t_o_s_config_8h">FreeRTOSConfig.h</link>). The constant portTICK_PERIOD_MS can be used to convert ticks to milliseconds.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                Example usage: <literallayout>
// Co-routine to be created.
void vACoRoutine( CoRoutineHandle_t xHandle, UBaseType_t uxIndex )
{
// Variables in co-routines must be declared static if they must maintain value across a blocking call.
// This may not be necessary for const variables.
// We are to delay for 200ms.
static const xTickType xDelayTime = 200 / portTICK_PERIOD_MS;

    // Must start every co-routine with a call to <link linkend="_croutine_8h_1a19a57a201a325e8af1207ed68c4aedde">crSTART()</link>;
    <link linkend="_croutine_8h_1a19a57a201a325e8af1207ed68c4aedde">crSTART( xHandle )</link>;

    for( ;; )
    {
       // Delay for 200ms.
       <link linkend="_croutine_8h_1a05a06feb11028f2d1d440ea335f562ba">crDELAY( xHandle, xDelayTime )</link>;

       // Do something here.
    }

    // Must end every co-routine with a call to <link linkend="_croutine_8h_1ae6038cc976689b50000475ebfc4e2f23">crEND()</link>;
    <link linkend="_croutine_8h_1ae6038cc976689b50000475ebfc4e2f23">crEND()</link>;
}</literallayout> </para>
</section>
