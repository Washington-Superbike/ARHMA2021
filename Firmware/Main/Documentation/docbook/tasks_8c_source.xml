<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_tasks_8c_source" xml:lang="en-US">
<title>tasks.c</title>
<indexterm><primary>C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/tasks.c</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_tasks_8c_source_1l00001"/>00001 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00002"/>00002 <emphasis role="comment">&#32;*&#32;FreeRTOS&#32;Kernel&#32;V10.2.0</emphasis>
<anchor xml:id="_tasks_8c_source_1l00003"/>00003 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;2019&#32;Amazon.com,&#32;Inc.&#32;or&#32;its&#32;affiliates.&#32;&#32;All&#32;Rights&#32;Reserved.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00004"/>00004 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00005"/>00005 <emphasis role="comment">&#32;*&#32;Permission&#32;is&#32;hereby&#32;granted,&#32;free&#32;of&#32;charge,&#32;to&#32;any&#32;person&#32;obtaining&#32;a&#32;copy&#32;of</emphasis>
<anchor xml:id="_tasks_8c_source_1l00006"/>00006 <emphasis role="comment">&#32;*&#32;this&#32;software&#32;and&#32;associated&#32;documentation&#32;files&#32;(the&#32;&quot;Software&quot;),&#32;to&#32;deal&#32;in</emphasis>
<anchor xml:id="_tasks_8c_source_1l00007"/>00007 <emphasis role="comment">&#32;*&#32;the&#32;Software&#32;without&#32;restriction,&#32;including&#32;without&#32;limitation&#32;the&#32;rights&#32;to</emphasis>
<anchor xml:id="_tasks_8c_source_1l00008"/>00008 <emphasis role="comment">&#32;*&#32;use,&#32;copy,&#32;modify,&#32;merge,&#32;publish,&#32;distribute,&#32;sublicense,&#32;and/or&#32;sell&#32;copies&#32;of</emphasis>
<anchor xml:id="_tasks_8c_source_1l00009"/>00009 <emphasis role="comment">&#32;*&#32;the&#32;Software,&#32;and&#32;to&#32;permit&#32;persons&#32;to&#32;whom&#32;the&#32;Software&#32;is&#32;furnished&#32;to&#32;do&#32;so,</emphasis>
<anchor xml:id="_tasks_8c_source_1l00010"/>00010 <emphasis role="comment">&#32;*&#32;subject&#32;to&#32;the&#32;following&#32;conditions:</emphasis>
<anchor xml:id="_tasks_8c_source_1l00011"/>00011 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00012"/>00012 <emphasis role="comment">&#32;*&#32;The&#32;above&#32;copyright&#32;notice&#32;and&#32;this&#32;permission&#32;notice&#32;shall&#32;be&#32;included&#32;in&#32;all</emphasis>
<anchor xml:id="_tasks_8c_source_1l00013"/>00013 <emphasis role="comment">&#32;*&#32;copies&#32;or&#32;substantial&#32;portions&#32;of&#32;the&#32;Software.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00014"/>00014 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00015"/>00015 <emphasis role="comment">&#32;*&#32;THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;&quot;AS&#32;IS&quot;,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
<anchor xml:id="_tasks_8c_source_1l00016"/>00016 <emphasis role="comment">&#32;*&#32;IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,&#32;FITNESS</emphasis>
<anchor xml:id="_tasks_8c_source_1l00017"/>00017 <emphasis role="comment">&#32;*&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL&#32;THE&#32;AUTHORS&#32;OR</emphasis>
<anchor xml:id="_tasks_8c_source_1l00018"/>00018 <emphasis role="comment">&#32;*&#32;COPYRIGHT&#32;HOLDERS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER&#32;LIABILITY,&#32;WHETHER</emphasis>
<anchor xml:id="_tasks_8c_source_1l00019"/>00019 <emphasis role="comment">&#32;*&#32;IN&#32;AN&#32;ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING&#32;FROM,&#32;OUT&#32;OF&#32;OR&#32;IN</emphasis>
<anchor xml:id="_tasks_8c_source_1l00020"/>00020 <emphasis role="comment">&#32;*&#32;CONNECTION&#32;WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS&#32;IN&#32;THE&#32;SOFTWARE.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00021"/>00021 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00022"/>00022 <emphasis role="comment">&#32;*&#32;http://www.FreeRTOS.org</emphasis>
<anchor xml:id="_tasks_8c_source_1l00023"/>00023 <emphasis role="comment">&#32;*&#32;http://aws.amazon.com/freertos</emphasis>
<anchor xml:id="_tasks_8c_source_1l00024"/>00024 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00025"/>00025 <emphasis role="comment">&#32;*&#32;1&#32;tab&#32;==&#32;4&#32;spaces!</emphasis>
<anchor xml:id="_tasks_8c_source_1l00026"/>00026 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00027"/>00027 
<anchor xml:id="_tasks_8c_source_1l00028"/>00028 <emphasis role="comment">/*&#32;Standard&#32;includes.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00029"/>00029 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
<anchor xml:id="_tasks_8c_source_1l00030"/>00030 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
<anchor xml:id="_tasks_8c_source_1l00031"/>00031 
<anchor xml:id="_tasks_8c_source_1l00032"/>00032 <emphasis role="comment">/*&#32;Defining&#32;MPU_WRAPPERS_INCLUDED_FROM_API_FILE&#32;prevents&#32;task.h&#32;from&#32;redefining</emphasis>
<anchor xml:id="_tasks_8c_source_1l00033"/>00033 <emphasis role="comment">all&#32;the&#32;API&#32;functions&#32;to&#32;use&#32;the&#32;MPU&#32;wrappers.&#32;&#32;That&#32;should&#32;only&#32;be&#32;done&#32;when</emphasis>
<anchor xml:id="_tasks_8c_source_1l00034"/>00034 <emphasis role="comment">task.h&#32;is&#32;included&#32;from&#32;an&#32;application&#32;file.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00035"/><link linkend="_tasks_8c_1ab622d8c674f2a417a666a7ed89109e79">00035</link> <emphasis role="preprocessor">#define&#32;MPU_WRAPPERS_INCLUDED_FROM_API_FILE</emphasis>
<anchor xml:id="_tasks_8c_source_1l00036"/>00036 
<anchor xml:id="_tasks_8c_source_1l00037"/>00037 <emphasis role="comment">/*&#32;FreeRTOS&#32;includes.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00038"/>00038 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__free_r_t_o_s_8h">FreeRTOS.h</link>&quot;</emphasis>
<anchor xml:id="_tasks_8c_source_1l00039"/>00039 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_task_8h">task.h</link>&quot;</emphasis>
<anchor xml:id="_tasks_8c_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_timers_8h">timers.h</link>&quot;</emphasis>
<anchor xml:id="_tasks_8c_source_1l00041"/>00041 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_stack__macros_8h">stack_macros.h</link>&quot;</emphasis>
<anchor xml:id="_tasks_8c_source_1l00042"/>00042 
<anchor xml:id="_tasks_8c_source_1l00043"/>00043 <emphasis role="comment">/*&#32;Lint&#32;e9021,&#32;e961&#32;and&#32;e750&#32;are&#32;suppressed&#32;as&#32;a&#32;MISRA&#32;exception&#32;justified</emphasis>
<anchor xml:id="_tasks_8c_source_1l00044"/>00044 <emphasis role="comment">because&#32;the&#32;MPU&#32;ports&#32;require&#32;MPU_WRAPPERS_INCLUDED_FROM_API_FILE&#32;to&#32;be&#32;defined</emphasis>
<anchor xml:id="_tasks_8c_source_1l00045"/>00045 <emphasis role="comment">for&#32;the&#32;header&#32;files&#32;above,&#32;but&#32;not&#32;in&#32;this&#32;file,&#32;in&#32;order&#32;to&#32;generate&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l00046"/>00046 <emphasis role="comment">correct&#32;privileged&#32;Vs&#32;unprivileged&#32;linkage&#32;and&#32;placement.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00047"/>00047 <emphasis role="preprocessor">#undef&#32;MPU_WRAPPERS_INCLUDED_FROM_API_FILE&#32;</emphasis><emphasis role="comment">/*lint&#32;!e961&#32;!e750&#32;!e9021.&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00048"/>00048 
<anchor xml:id="_tasks_8c_source_1l00049"/>00049 <emphasis role="comment">/*&#32;Set&#32;configUSE_STATS_FORMATTING_FUNCTIONS&#32;to&#32;2&#32;to&#32;include&#32;the&#32;stats&#32;formatting</emphasis>
<anchor xml:id="_tasks_8c_source_1l00050"/>00050 <emphasis role="comment">functions&#32;but&#32;without&#32;including&#32;stdio.h&#32;here.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00051"/>00051 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_STATS_FORMATTING_FUNCTIONS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00052"/>00052 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;At&#32;the&#32;bottom&#32;of&#32;this&#32;file&#32;are&#32;two&#32;optional&#32;functions&#32;that&#32;can&#32;be&#32;used</emphasis>
<anchor xml:id="_tasks_8c_source_1l00053"/>00053 <emphasis role="comment">&#32;&#32;&#32;&#32;to&#32;generate&#32;human&#32;readable&#32;text&#32;from&#32;the&#32;raw&#32;data&#32;generated&#32;by&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l00054"/>00054 <emphasis role="comment">&#32;&#32;&#32;&#32;uxTaskGetSystemState()&#32;function.&#32;&#32;Note&#32;the&#32;formatting&#32;functions&#32;are&#32;provided</emphasis>
<anchor xml:id="_tasks_8c_source_1l00055"/>00055 <emphasis role="comment">&#32;&#32;&#32;&#32;for&#32;convenience&#32;only,&#32;and&#32;are&#32;NOT&#32;considered&#32;part&#32;of&#32;the&#32;kernel.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00056"/>00056 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#include&#32;&lt;stdio.h&gt;</emphasis>
<anchor xml:id="_tasks_8c_source_1l00057"/>00057 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_STATS_FORMATTING_FUNCTIONS&#32;==&#32;1&#32;)&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00058"/>00058 
<anchor xml:id="_tasks_8c_source_1l00059"/>00059 <emphasis role="preprocessor">#if(&#32;configUSE_PREEMPTION&#32;==&#32;0&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;cooperative&#32;scheduler&#32;is&#32;being&#32;used&#32;then&#32;a&#32;yield&#32;should&#32;not&#32;be</emphasis>
<anchor xml:id="_tasks_8c_source_1l00061"/>00061 <emphasis role="comment">&#32;&#32;&#32;&#32;performed&#32;just&#32;because&#32;a&#32;higher&#32;priority&#32;task&#32;has&#32;been&#32;woken.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00062"/>00062 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;taskYIELD_IF_USING_PREEMPTION()</emphasis>
<anchor xml:id="_tasks_8c_source_1l00063"/>00063 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="_tasks_8c_source_1l00064"/><link linkend="_tasks_8c_1acd0c920e40647de517ac633965b52273">00064</link> <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;taskYIELD_IF_USING_PREEMPTION()&#32;portYIELD_WITHIN_API()</emphasis>
<anchor xml:id="_tasks_8c_source_1l00065"/>00065 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00066"/>00066 
<anchor xml:id="_tasks_8c_source_1l00067"/>00067 <emphasis role="comment">/*&#32;Values&#32;that&#32;can&#32;be&#32;assigned&#32;to&#32;the&#32;ucNotifyState&#32;member&#32;of&#32;the&#32;TCB.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00068"/><link linkend="_tasks_8c_1a4f2f023143b2cd2367a441e104f8cf2c">00068</link> <emphasis role="preprocessor">#define&#32;taskNOT_WAITING_NOTIFICATION&#32;&#32;&#32;&#32;(&#32;(&#32;uint8_t&#32;)&#32;0&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00069"/><link linkend="_tasks_8c_1acee66205293e253c13626e74798a0cf0">00069</link> <emphasis role="preprocessor">#define&#32;taskWAITING_NOTIFICATION&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(&#32;uint8_t&#32;)&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00070"/><link linkend="_tasks_8c_1aa62ac91d5f644c98b5459c28ae4f689e">00070</link> <emphasis role="preprocessor">#define&#32;taskNOTIFICATION_RECEIVED&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(&#32;uint8_t&#32;)&#32;2&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00071"/>00071 
<anchor xml:id="_tasks_8c_source_1l00072"/>00072 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00073"/>00073 <emphasis role="comment">&#32;*&#32;The&#32;value&#32;used&#32;to&#32;fill&#32;the&#32;stack&#32;of&#32;a&#32;task&#32;when&#32;the&#32;task&#32;is&#32;created.&#32;&#32;This</emphasis>
<anchor xml:id="_tasks_8c_source_1l00074"/>00074 <emphasis role="comment">&#32;*&#32;is&#32;used&#32;purely&#32;for&#32;checking&#32;the&#32;high&#32;water&#32;mark&#32;for&#32;tasks.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00075"/>00075 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00076"/><link linkend="_tasks_8c_1ad3b1c99066f14855be098ccca1685fac">00076</link> <emphasis role="preprocessor">#define&#32;tskSTACK_FILL_BYTE&#32;&#32;(&#32;0xa5U&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00077"/>00077 
<anchor xml:id="_tasks_8c_source_1l00078"/>00078 <emphasis role="comment">/*&#32;Bits&#32;used&#32;to&#32;recored&#32;how&#32;a&#32;task&apos;s&#32;stack&#32;and&#32;TCB&#32;were&#32;allocated.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00079"/><link linkend="_tasks_8c_1af06a1633d2fb92f67712e62f3d1c3777">00079</link> <emphasis role="preprocessor">#define&#32;tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(&#32;uint8_t&#32;)&#32;0&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00080"/><link linkend="_tasks_8c_1ad65be2320d426aca4e0e72d29ccd04de">00080</link> <emphasis role="preprocessor">#define&#32;tskSTATICALLY_ALLOCATED_STACK_ONLY&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(&#32;uint8_t&#32;)&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00081"/><link linkend="_tasks_8c_1a9851e50775136d536fed623e1ac598aa">00081</link> <emphasis role="preprocessor">#define&#32;tskSTATICALLY_ALLOCATED_STACK_AND_TCB&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(&#32;uint8_t&#32;)&#32;2&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00082"/>00082 
<anchor xml:id="_tasks_8c_source_1l00083"/>00083 <emphasis role="comment">/*&#32;If&#32;any&#32;of&#32;the&#32;following&#32;are&#32;set&#32;then&#32;task&#32;stacks&#32;are&#32;filled&#32;with&#32;a&#32;known</emphasis>
<anchor xml:id="_tasks_8c_source_1l00084"/>00084 <emphasis role="comment">value&#32;so&#32;the&#32;high&#32;water&#32;mark&#32;can&#32;be&#32;determined.&#32;&#32;If&#32;none&#32;of&#32;the&#32;following&#32;are</emphasis>
<anchor xml:id="_tasks_8c_source_1l00085"/>00085 <emphasis role="comment">set&#32;then&#32;don&apos;t&#32;fill&#32;the&#32;stack&#32;so&#32;there&#32;is&#32;no&#32;unnecessary&#32;dependency&#32;on&#32;memset.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00086"/>00086 <emphasis role="preprocessor">#if(&#32;(&#32;configCHECK_FOR_STACK_OVERFLOW&#32;&gt;&#32;1&#32;)&#32;||&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)&#32;||&#32;(&#32;INCLUDE_uxTaskGetStackHighWaterMark&#32;==&#32;1&#32;)&#32;||&#32;(&#32;INCLUDE_uxTaskGetStackHighWaterMark2&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00087"/><link linkend="_tasks_8c_1a95d95c8702f95db8a8a446e1d083245a">00087</link> <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;tskSET_NEW_STACKS_TO_KNOWN_VALUE&#32;&#32;&#32;&#32;1</emphasis>
<anchor xml:id="_tasks_8c_source_1l00088"/>00088 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="_tasks_8c_source_1l00089"/>00089 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;tskSET_NEW_STACKS_TO_KNOWN_VALUE&#32;&#32;&#32;&#32;0</emphasis>
<anchor xml:id="_tasks_8c_source_1l00090"/>00090 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00091"/>00091 
<anchor xml:id="_tasks_8c_source_1l00092"/>00092 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00093"/>00093 <emphasis role="comment">&#32;*&#32;Macros&#32;used&#32;by&#32;vListTask&#32;to&#32;indicate&#32;which&#32;state&#32;a&#32;task&#32;is&#32;in.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00094"/>00094 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00095"/><link linkend="_tasks_8c_1a13f2f32dab5dee7a9b2c848c88ef9bcc">00095</link> <emphasis role="preprocessor">#define&#32;tskRUNNING_CHAR&#32;&#32;&#32;&#32;&#32;(&#32;&apos;X&apos;&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00096"/><link linkend="_tasks_8c_1a4cd87df39bdffff557d06f4ff15a30b0">00096</link> <emphasis role="preprocessor">#define&#32;tskBLOCKED_CHAR&#32;&#32;&#32;&#32;&#32;(&#32;&apos;B&apos;&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00097"/><link linkend="_tasks_8c_1a2fd6c7a58ad28dd1f2c1e322b1ab3fcb">00097</link> <emphasis role="preprocessor">#define&#32;tskREADY_CHAR&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;&apos;R&apos;&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00098"/><link linkend="_tasks_8c_1a9aba572191d065741f5a3e94c416d455">00098</link> <emphasis role="preprocessor">#define&#32;tskDELETED_CHAR&#32;&#32;&#32;&#32;&#32;(&#32;&apos;D&apos;&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00099"/><link linkend="_tasks_8c_1a3613b4b66406c8f6cc73e5c3e9f208db">00099</link> <emphasis role="preprocessor">#define&#32;tskSUSPENDED_CHAR&#32;&#32;&#32;(&#32;&apos;S&apos;&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00100"/>00100 
<anchor xml:id="_tasks_8c_source_1l00101"/>00101 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00102"/>00102 <emphasis role="comment">&#32;*&#32;Some&#32;kernel&#32;aware&#32;debuggers&#32;require&#32;the&#32;data&#32;the&#32;debugger&#32;needs&#32;access&#32;to&#32;be</emphasis>
<anchor xml:id="_tasks_8c_source_1l00103"/>00103 <emphasis role="comment">&#32;*&#32;global,&#32;rather&#32;than&#32;file&#32;scope.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00104"/>00104 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00105"/>00105 <emphasis role="preprocessor">#ifdef&#32;portREMOVE_STATIC_QUALIFIER</emphasis>
<anchor xml:id="_tasks_8c_source_1l00106"/>00106 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;static</emphasis>
<anchor xml:id="_tasks_8c_source_1l00107"/>00107 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00108"/>00108 
<anchor xml:id="_tasks_8c_source_1l00109"/>00109 <emphasis role="comment">/*&#32;The&#32;name&#32;allocated&#32;to&#32;the&#32;Idle&#32;task.&#32;&#32;This&#32;can&#32;be&#32;overridden&#32;by&#32;defining</emphasis>
<anchor xml:id="_tasks_8c_source_1l00110"/>00110 <emphasis role="comment">configIDLE_TASK_NAME&#32;in&#32;FreeRTOSConfig.h.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00111"/>00111 <emphasis role="preprocessor">#ifndef&#32;configIDLE_TASK_NAME</emphasis>
<anchor xml:id="_tasks_8c_source_1l00112"/><link linkend="_tasks_8c_1aa637612832bcdd420acc9e6cc4361071">00112</link> <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;configIDLE_TASK_NAME&#32;&quot;IDLE&quot;</emphasis>
<anchor xml:id="_tasks_8c_source_1l00113"/>00113 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00114"/>00114 
<anchor xml:id="_tasks_8c_source_1l00115"/>00115 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_PORT_OPTIMISED_TASK_SELECTION&#32;==&#32;0&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00116"/>00116 
<anchor xml:id="_tasks_8c_source_1l00117"/>00117 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;configUSE_PORT_OPTIMISED_TASK_SELECTION&#32;is&#32;0&#32;then&#32;task&#32;selection&#32;is</emphasis>
<anchor xml:id="_tasks_8c_source_1l00118"/>00118 <emphasis role="comment">&#32;&#32;&#32;&#32;performed&#32;in&#32;a&#32;generic&#32;way&#32;that&#32;is&#32;not&#32;optimised&#32;to&#32;any&#32;particular</emphasis>
<anchor xml:id="_tasks_8c_source_1l00119"/>00119 <emphasis role="comment">&#32;&#32;&#32;&#32;microcontroller&#32;architecture.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00120"/>00120 
<anchor xml:id="_tasks_8c_source_1l00121"/>00121 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;uxTopReadyPriority&#32;holds&#32;the&#32;priority&#32;of&#32;the&#32;highest&#32;priority&#32;ready</emphasis>
<anchor xml:id="_tasks_8c_source_1l00122"/>00122 <emphasis role="comment">&#32;&#32;&#32;&#32;state&#32;task.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00123"/>00123 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;taskRECORD_READY_PRIORITY(&#32;uxPriority&#32;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00124"/>00124 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00125"/>00125 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(&#32;(&#32;uxPriority&#32;)&#32;&gt;&#32;uxTopReadyPriority&#32;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00126"/>00126 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00127"/>00127 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxTopReadyPriority&#32;=&#32;(&#32;uxPriority&#32;);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00128"/>00128 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00129"/>00129 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}&#32;</emphasis><emphasis role="comment">/*&#32;taskRECORD_READY_PRIORITY&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00130"/>00130 
<anchor xml:id="_tasks_8c_source_1l00131"/>00131 &#32;&#32;&#32;&#32;<emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00132"/>00132 
<anchor xml:id="_tasks_8c_source_1l00133"/>00133 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;taskSELECT_HIGHEST_PRIORITY_TASK()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00134"/>00134 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00135"/>00135 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;UBaseType_t&#32;uxTopPriority&#32;=&#32;uxTopReadyPriority;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00136"/>00136 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00137"/>00137 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;Find&#32;the&#32;highest&#32;priority&#32;queue&#32;that&#32;contains&#32;ready&#32;tasks.&#32;*/</emphasis><emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00138"/>00138 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;while(&#32;listLIST_IS_EMPTY(&#32;&amp;(&#32;pxReadyTasksLists[&#32;uxTopPriority&#32;]&#32;)&#32;)&#32;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00139"/>00139 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00140"/>00140 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;configASSERT(&#32;uxTopPriority&#32;);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00141"/>00141 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--uxTopPriority;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00142"/>00142 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00143"/>00143 <emphasis role="preprocessoremphasis>
<anchor xml:id="_tasks_8c_source_1l00144"/>00144 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;listGET_OWNER_OF_NEXT_ENTRY&#32;indexes&#32;through&#32;the&#32;list,&#32;so&#32;the&#32;tasks&#32;of&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00145"/>00145 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;same&#32;priority&#32;get&#32;an&#32;equal&#32;share&#32;of&#32;the&#32;processor&#32;time.&#32;*/</emphasis><emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00146"/>00146 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;listGET_OWNER_OF_NEXT_ENTRY(&#32;pxCurrentTCB,&#32;&amp;(&#32;pxReadyTasksLists[&#32;uxTopPriority&#32;]&#32;)&#32;);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00147"/>00147 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxTopReadyPriority&#32;=&#32;uxTopPriority;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00148"/>00148 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}&#32;</emphasis><emphasis role="comment">/*&#32;taskSELECT_HIGHEST_PRIORITY_TASK&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00149"/>00149 
<anchor xml:id="_tasks_8c_source_1l00150"/>00150 &#32;&#32;&#32;&#32;<emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00151"/>00151 
<anchor xml:id="_tasks_8c_source_1l00152"/>00152 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Define&#32;away&#32;taskRESET_READY_PRIORITY()&#32;and&#32;portRESET_READY_PRIORITY()&#32;as</emphasis>
<anchor xml:id="_tasks_8c_source_1l00153"/>00153 <emphasis role="comment">&#32;&#32;&#32;&#32;they&#32;are&#32;only&#32;required&#32;when&#32;a&#32;port&#32;optimised&#32;method&#32;of&#32;task&#32;selection&#32;is</emphasis>
<anchor xml:id="_tasks_8c_source_1l00154"/>00154 <emphasis role="comment">&#32;&#32;&#32;&#32;being&#32;used.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00155"/>00155 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;taskRESET_READY_PRIORITY(&#32;uxPriority&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00156"/>00156 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;portRESET_READY_PRIORITY(&#32;uxPriority,&#32;uxTopReadyPriority&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00157"/>00157 
<anchor xml:id="_tasks_8c_source_1l00158"/>00158 <emphasis role="preprocessor">#else&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_PORT_OPTIMISED_TASK_SELECTION&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00159"/>00159 
<anchor xml:id="_tasks_8c_source_1l00160"/>00160 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;configUSE_PORT_OPTIMISED_TASK_SELECTION&#32;is&#32;1&#32;then&#32;task&#32;selection&#32;is</emphasis>
<anchor xml:id="_tasks_8c_source_1l00161"/>00161 <emphasis role="comment">&#32;&#32;&#32;&#32;performed&#32;in&#32;a&#32;way&#32;that&#32;is&#32;tailored&#32;to&#32;the&#32;particular&#32;microcontroller</emphasis>
<anchor xml:id="_tasks_8c_source_1l00162"/>00162 <emphasis role="comment">&#32;&#32;&#32;&#32;architecture&#32;being&#32;used.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00163"/>00163 
<anchor xml:id="_tasks_8c_source_1l00164"/>00164 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;port&#32;optimised&#32;version&#32;is&#32;provided.&#32;&#32;Call&#32;the&#32;port&#32;defined&#32;macros.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00165"/><link linkend="_tasks_8c_1a80c883536b1faef436fcd47b16a10f98">00165</link> <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;taskRECORD_READY_PRIORITY(&#32;uxPriority&#32;)&#32;portRECORD_READY_PRIORITY(&#32;uxPriority,&#32;uxTopReadyPriority&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00166"/>00166 
<anchor xml:id="_tasks_8c_source_1l00167"/>00167 &#32;&#32;&#32;&#32;<emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00168"/>00168 
<anchor xml:id="_tasks_8c_source_1l00169"/><link linkend="_tasks_8c_1adace394d56a7fe7a8f8ee83edba3537c">00169</link> <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;taskSELECT_HIGHEST_PRIORITY_TASK()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00170"/>00170 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00171"/>00171 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;UBaseType_t&#32;uxTopPriority;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00172"/>00172 <emphasis role="preprocessoremphasis>
<anchor xml:id="_tasks_8c_source_1l00173"/>00173 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;Find&#32;the&#32;highest&#32;priority&#32;list&#32;that&#32;contains&#32;ready&#32;tasks.&#32;*/</emphasis><emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00174"/>00174 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;portGET_HIGHEST_PRIORITY(&#32;uxTopPriority,&#32;uxTopReadyPriority&#32;);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00175"/>00175 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;configASSERT(&#32;listCURRENT_LIST_LENGTH(&#32;&amp;(&#32;pxReadyTasksLists[&#32;uxTopPriority&#32;]&#32;)&#32;)&#32;&gt;&#32;0&#32;);&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00176"/>00176 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;listGET_OWNER_OF_NEXT_ENTRY(&#32;pxCurrentTCB,&#32;&amp;(&#32;pxReadyTasksLists[&#32;uxTopPriority&#32;]&#32;)&#32;);&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00177"/>00177 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}&#32;</emphasis><emphasis role="comment">/*&#32;taskSELECT_HIGHEST_PRIORITY_TASK()&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00178"/>00178 
<anchor xml:id="_tasks_8c_source_1l00179"/>00179 &#32;&#32;&#32;&#32;<emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00180"/>00180 
<anchor xml:id="_tasks_8c_source_1l00181"/>00181 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;port&#32;optimised&#32;version&#32;is&#32;provided,&#32;call&#32;it&#32;only&#32;if&#32;the&#32;TCB&#32;being&#32;reset</emphasis>
<anchor xml:id="_tasks_8c_source_1l00182"/>00182 <emphasis role="comment">&#32;&#32;&#32;&#32;is&#32;being&#32;referenced&#32;from&#32;a&#32;ready&#32;list.&#32;&#32;If&#32;it&#32;is&#32;referenced&#32;from&#32;a&#32;delayed</emphasis>
<anchor xml:id="_tasks_8c_source_1l00183"/>00183 <emphasis role="comment">&#32;&#32;&#32;&#32;or&#32;suspended&#32;list&#32;then&#32;it&#32;won&apos;t&#32;be&#32;in&#32;a&#32;ready&#32;list.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00184"/><link linkend="_tasks_8c_1a9517fc40d713aff9dd8182223948f9c8">00184</link> <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;taskRESET_READY_PRIORITY(&#32;uxPriority&#32;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00185"/>00185 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00186"/>00186 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(&#32;listCURRENT_LIST_LENGTH(&#32;&amp;(&#32;pxReadyTasksLists[&#32;(&#32;uxPriority&#32;)&#32;]&#32;)&#32;)&#32;==&#32;(&#32;UBaseType_t&#32;)&#32;0&#32;)&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00187"/>00187 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00188"/>00188 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;portRESET_READY_PRIORITY(&#32;(&#32;uxPriority&#32;),&#32;(&#32;uxTopReadyPriority&#32;)&#32;);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00189"/>00189 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00190"/>00190 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="_tasks_8c_source_1l00191"/>00191 
<anchor xml:id="_tasks_8c_source_1l00192"/>00192 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_PORT_OPTIMISED_TASK_SELECTION&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00193"/>00193 
<anchor xml:id="_tasks_8c_source_1l00194"/>00194 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00195"/>00195 
<anchor xml:id="_tasks_8c_source_1l00196"/>00196 <emphasis role="comment">/*&#32;pxDelayedTaskList&#32;and&#32;pxOverflowDelayedTaskList&#32;are&#32;switched&#32;when&#32;the&#32;tick</emphasis>
<anchor xml:id="_tasks_8c_source_1l00197"/>00197 <emphasis role="comment">count&#32;overflows.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00198"/><link linkend="_tasks_8c_1aa604b7713b82e63154a290e21ecf700c">00198</link> <emphasis role="preprocessor">#define&#32;taskSWITCH_DELAYED_LISTS()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00199"/>00199 <emphasis role="preprocessor">{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00200"/>00200 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;List_t&#32;*pxTemp;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00201"/>00201 <emphasis role="preprocessoremphasis>
<anchor xml:id="_tasks_8c_source_1l00202"/>00202 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;The&#32;delayed&#32;tasks&#32;list&#32;should&#32;be&#32;empty&#32;when&#32;the&#32;lists&#32;are&#32;switched.&#32;*/</emphasis><emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00203"/>00203 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;configASSERT(&#32;(&#32;listLIST_IS_EMPTY(&#32;pxDelayedTaskList&#32;)&#32;)&#32;);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00204"/>00204 <emphasis role="preprocessoremphasis>
<anchor xml:id="_tasks_8c_source_1l00205"/>00205 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;pxTemp&#32;=&#32;pxDelayedTaskList;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00206"/>00206 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;pxDelayedTaskList&#32;=&#32;pxOverflowDelayedTaskList;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00207"/>00207 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;pxOverflowDelayedTaskList&#32;=&#32;pxTemp;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00208"/>00208 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;xNumOfOverflows++;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00209"/>00209 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;prvResetNextTaskUnblockTime();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00210"/>00210 <emphasis role="preprocessor">}</emphasis>
<anchor xml:id="_tasks_8c_source_1l00211"/>00211 
<anchor xml:id="_tasks_8c_source_1l00212"/>00212 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00213"/>00213 
<anchor xml:id="_tasks_8c_source_1l00214"/>00214 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00215"/>00215 <emphasis role="comment">&#32;*&#32;Place&#32;the&#32;task&#32;represented&#32;by&#32;pxTCB&#32;into&#32;the&#32;appropriate&#32;ready&#32;list&#32;for</emphasis>
<anchor xml:id="_tasks_8c_source_1l00216"/>00216 <emphasis role="comment">&#32;*&#32;the&#32;task.&#32;&#32;It&#32;is&#32;inserted&#32;at&#32;the&#32;end&#32;of&#32;the&#32;list.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00217"/>00217 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00218"/><link linkend="_tasks_8c_1a94afc7269fff7c906c5eb0d9d315624b">00218</link> <emphasis role="preprocessor">#define&#32;prvAddTaskToReadyList(&#32;pxTCB&#32;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00219"/>00219 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;traceMOVED_TASK_TO_READY_STATE(&#32;pxTCB&#32;);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00220"/>00220 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;taskRECORD_READY_PRIORITY(&#32;(&#32;pxTCB&#32;)-&gt;uxPriority&#32;);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00221"/>00221 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;vListInsertEnd(&#32;&amp;(&#32;pxReadyTasksLists[&#32;(&#32;pxTCB&#32;)-&gt;uxPriority&#32;]&#32;),&#32;&amp;(&#32;(&#32;pxTCB&#32;)-&gt;xStateListItem&#32;)&#32;);&#32;\</emphasis>
<anchor xml:id="_tasks_8c_source_1l00222"/>00222 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;tracePOST_MOVED_TASK_TO_READY_STATE(&#32;pxTCB&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00223"/>00223 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00224"/>00224 
<anchor xml:id="_tasks_8c_source_1l00225"/>00225 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00226"/>00226 <emphasis role="comment">&#32;*&#32;Several&#32;functions&#32;take&#32;an&#32;TaskHandle_t&#32;parameter&#32;that&#32;can&#32;optionally&#32;be&#32;NULL,</emphasis>
<anchor xml:id="_tasks_8c_source_1l00227"/>00227 <emphasis role="comment">&#32;*&#32;where&#32;NULL&#32;is&#32;used&#32;to&#32;indicate&#32;that&#32;the&#32;handle&#32;of&#32;the&#32;currently&#32;executing</emphasis>
<anchor xml:id="_tasks_8c_source_1l00228"/>00228 <emphasis role="comment">&#32;*&#32;task&#32;should&#32;be&#32;used&#32;in&#32;place&#32;of&#32;the&#32;parameter.&#32;&#32;This&#32;macro&#32;simply&#32;checks&#32;to</emphasis>
<anchor xml:id="_tasks_8c_source_1l00229"/>00229 <emphasis role="comment">&#32;*&#32;see&#32;if&#32;the&#32;parameter&#32;is&#32;NULL&#32;and&#32;returns&#32;a&#32;pointer&#32;to&#32;the&#32;appropriate&#32;TCB.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00230"/>00230 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00231"/><link linkend="_tasks_8c_1ad910f5e908283f1dfabd642fe1b11c6b">00231</link> <emphasis role="preprocessor">#define&#32;prvGetTCBFromHandle(&#32;pxHandle&#32;)&#32;(&#32;(&#32;(&#32;pxHandle&#32;)&#32;==&#32;NULL&#32;)&#32;?&#32;pxCurrentTCB&#32;:&#32;(&#32;pxHandle&#32;)&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00232"/>00232 
<anchor xml:id="_tasks_8c_source_1l00233"/>00233 <emphasis role="comment">/*&#32;The&#32;item&#32;value&#32;of&#32;the&#32;event&#32;list&#32;item&#32;is&#32;normally&#32;used&#32;to&#32;hold&#32;the&#32;priority</emphasis>
<anchor xml:id="_tasks_8c_source_1l00234"/>00234 <emphasis role="comment">of&#32;the&#32;task&#32;to&#32;which&#32;it&#32;belongs&#32;(coded&#32;to&#32;allow&#32;it&#32;to&#32;be&#32;held&#32;in&#32;reverse</emphasis>
<anchor xml:id="_tasks_8c_source_1l00235"/>00235 <emphasis role="comment">priority&#32;order).&#32;&#32;However,&#32;it&#32;is&#32;occasionally&#32;borrowed&#32;for&#32;other&#32;purposes.&#32;&#32;It</emphasis>
<anchor xml:id="_tasks_8c_source_1l00236"/>00236 <emphasis role="comment">is&#32;important&#32;its&#32;value&#32;is&#32;not&#32;updated&#32;due&#32;to&#32;a&#32;task&#32;priority&#32;change&#32;while&#32;it&#32;is</emphasis>
<anchor xml:id="_tasks_8c_source_1l00237"/>00237 <emphasis role="comment">being&#32;used&#32;for&#32;another&#32;purpose.&#32;&#32;The&#32;following&#32;bit&#32;definition&#32;is&#32;used&#32;to&#32;inform</emphasis>
<anchor xml:id="_tasks_8c_source_1l00238"/>00238 <emphasis role="comment">the&#32;scheduler&#32;that&#32;the&#32;value&#32;should&#32;not&#32;be&#32;changed&#32;-&#32;in&#32;which&#32;case&#32;it&#32;is&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l00239"/>00239 <emphasis role="comment">responsibility&#32;of&#32;whichever&#32;module&#32;is&#32;using&#32;the&#32;value&#32;to&#32;ensure&#32;it&#32;gets&#32;set&#32;back</emphasis>
<anchor xml:id="_tasks_8c_source_1l00240"/>00240 <emphasis role="comment">to&#32;its&#32;original&#32;value&#32;when&#32;it&#32;is&#32;released.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00241"/>00241 <emphasis role="preprocessor">#if(&#32;configUSE_16_BIT_TICKS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00242"/>00242 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;taskEVENT_LIST_ITEM_VALUE_IN_USE&#32;&#32;&#32;&#32;0x8000U</emphasis>
<anchor xml:id="_tasks_8c_source_1l00243"/>00243 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="_tasks_8c_source_1l00244"/><link linkend="_tasks_8c_1a3e36f3eda563e810a24ab36ee7c978d4">00244</link> <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;taskEVENT_LIST_ITEM_VALUE_IN_USE&#32;&#32;&#32;&#32;0x80000000UL</emphasis>
<anchor xml:id="_tasks_8c_source_1l00245"/>00245 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00246"/>00246 
<anchor xml:id="_tasks_8c_source_1l00247"/>00247 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00248"/>00248 <emphasis role="comment">&#32;*&#32;Task&#32;control&#32;block.&#32;&#32;A&#32;task&#32;control&#32;block&#32;(TCB)&#32;is&#32;allocated&#32;for&#32;each&#32;task,</emphasis>
<anchor xml:id="_tasks_8c_source_1l00249"/>00249 <emphasis role="comment">&#32;*&#32;and&#32;stores&#32;task&#32;state&#32;information,&#32;including&#32;a&#32;pointer&#32;to&#32;the&#32;task&apos;s&#32;context</emphasis>
<anchor xml:id="_tasks_8c_source_1l00250"/>00250 <emphasis role="comment">&#32;*&#32;(the&#32;task&apos;s&#32;run&#32;time&#32;environment,&#32;including&#32;register&#32;values)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00251"/>00251 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00252"/><link linkend="_structtsk_task_control_block">00252</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structtsk_task_control_block">tskTaskControlBlock</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;old&#32;naming&#32;convention&#32;is&#32;used&#32;to&#32;prevent&#32;breaking&#32;kernel&#32;aware&#32;debuggers.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00253"/>00253 {
<anchor xml:id="_tasks_8c_source_1l00254"/><link linkend="_structtsk_task_control_block_1a429a186c7f8e34aba1eef5e12d215b90">00254</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">volatile</emphasis>&#32;<link linkend="_portmacro_8h_1aa73b01e0200940d619095fb74fb3030b">StackType_t</link>&#32;&#32;&#32;&#32;*<link linkend="_structtsk_task_control_block_1a429a186c7f8e34aba1eef5e12d215b90">pxTopOfStack</link>;&#32;&#32;<emphasis role="comment">/*&lt;&#32;Points&#32;to&#32;the&#32;location&#32;of&#32;the&#32;last&#32;item&#32;placed&#32;on&#32;the&#32;tasks&#32;stack.&#32;&#32;THIS&#32;MUST&#32;BE&#32;THE&#32;FIRST&#32;MEMBER&#32;OF&#32;THE&#32;TCB&#32;STRUCT.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00255"/>00255 
<anchor xml:id="_tasks_8c_source_1l00256"/>00256 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;portUSING_MPU_WRAPPERS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xMPU_SETTINGS&#32;&#32;&#32;xMPUSettings;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;The&#32;MPU&#32;settings&#32;are&#32;defined&#32;as&#32;part&#32;of&#32;the&#32;port&#32;layer.&#32;&#32;THIS&#32;MUST&#32;BE&#32;THE&#32;SECOND&#32;MEMBER&#32;OF&#32;THE&#32;TCB&#32;STRUCT.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00258"/>00258 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00259"/>00259 
<anchor xml:id="_tasks_8c_source_1l00260"/><link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">00260</link> &#32;&#32;&#32;&#32;<link linkend="_structx_l_i_s_t___i_t_e_m">ListItem_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>;&#32;<emphasis role="comment">/*&lt;&#32;The&#32;list&#32;that&#32;the&#32;state&#32;list&#32;item&#32;of&#32;a&#32;task&#32;is&#32;reference&#32;from&#32;denotes&#32;the&#32;state&#32;of&#32;that&#32;task&#32;(Ready,&#32;Blocked,&#32;Suspended&#32;).&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00261"/><link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">00261</link> &#32;&#32;&#32;&#32;<link linkend="_structx_l_i_s_t___i_t_e_m">ListItem_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;Used&#32;to&#32;reference&#32;a&#32;task&#32;from&#32;an&#32;event&#32;list.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00262"/><link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">00262</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;The&#32;priority&#32;of&#32;the&#32;task.&#32;&#32;0&#32;is&#32;the&#32;lowest&#32;priority.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00263"/><link linkend="_structtsk_task_control_block_1a9a0d71a9f95dd0609f9911d9efd79134">00263</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1aa73b01e0200940d619095fb74fb3030b">StackType_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_structtsk_task_control_block_1a9a0d71a9f95dd0609f9911d9efd79134">pxStack</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;Points&#32;to&#32;the&#32;start&#32;of&#32;the&#32;stack.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00264"/><link linkend="_structtsk_task_control_block_1affa468d3857e94ddeeea03b1d454778b">00264</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block_1affa468d3857e94ddeeea03b1d454778b">pcTaskName</link>[&#32;<link linkend="__free_r_t_o_s_config__default_8h_1ac388dc4041aab6997348828eb27fc1a8">configMAX_TASK_NAME_LEN</link>&#32;];<emphasis role="comment">/*&lt;&#32;Descriptive&#32;name&#32;given&#32;to&#32;the&#32;task&#32;when&#32;created.&#32;&#32;Facilitates&#32;debugging&#32;only.&#32;*/</emphasis>&#32;<emphasis role="comment">/*lint&#32;!e971&#32;Unqualified&#32;char&#32;types&#32;are&#32;allowed&#32;for&#32;strings&#32;and&#32;single&#32;characters&#32;only.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00265"/>00265 
<anchor xml:id="_tasks_8c_source_1l00266"/>00266 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;(&#32;portSTACK_GROWTH&#32;&gt;&#32;0&#32;)&#32;||&#32;(&#32;configRECORD_STACK_HIGH_ADDRESS&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1aa73b01e0200940d619095fb74fb3030b">StackType_t</link>&#32;&#32;&#32;&#32;&#32;*pxEndOfStack;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;Points&#32;to&#32;the&#32;highest&#32;valid&#32;address&#32;for&#32;the&#32;stack.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00268"/>00268 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00269"/>00269 
<anchor xml:id="_tasks_8c_source_1l00270"/>00270 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;portCRITICAL_NESTING_IN_TCB&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;&#32;&#32;&#32;&#32;uxCriticalNesting;&#32;&#32;<emphasis role="comment">/*&lt;&#32;Holds&#32;the&#32;critical&#32;section&#32;nesting&#32;depth&#32;for&#32;ports&#32;that&#32;do&#32;not&#32;maintain&#32;their&#32;own&#32;count&#32;in&#32;the&#32;port&#32;layer.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00272"/>00272 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00273"/>00273 
<anchor xml:id="_tasks_8c_source_1l00274"/>00274 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00275"/><link linkend="_structtsk_task_control_block_1a3f3169fa5667af8ee542304f8dd48553">00275</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;&#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block_1a3f3169fa5667af8ee542304f8dd48553">uxTCBNumber</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;Stores&#32;a&#32;number&#32;that&#32;increments&#32;each&#32;time&#32;a&#32;TCB&#32;is&#32;created.&#32;&#32;It&#32;allows&#32;debuggers&#32;to&#32;determine&#32;when&#32;a&#32;task&#32;has&#32;been&#32;deleted&#32;and&#32;then&#32;recreated.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00276"/><link linkend="_structtsk_task_control_block_1a46894d7d546d614cc881212dc8039f41">00276</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;&#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block_1a46894d7d546d614cc881212dc8039f41">uxTaskNumber</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;Stores&#32;a&#32;number&#32;specifically&#32;for&#32;use&#32;by&#32;third&#32;party&#32;trace&#32;code.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00277"/>00277 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00278"/>00278 
<anchor xml:id="_tasks_8c_source_1l00279"/>00279 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_MUTEXES&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00280"/><link linkend="_structtsk_task_control_block_1a3ce2f9306ee315873114616fb49a0ed2">00280</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;&#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block_1a3ce2f9306ee315873114616fb49a0ed2">uxBasePriority</link>;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;The&#32;priority&#32;last&#32;assigned&#32;to&#32;the&#32;task&#32;-&#32;used&#32;by&#32;the&#32;priority&#32;inheritance&#32;mechanism.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00281"/><link linkend="_structtsk_task_control_block_1a405a8451e393290ef92337cd77a3bf1f">00281</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;&#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block_1a405a8451e393290ef92337cd77a3bf1f">uxMutexesHeld</link>;
<anchor xml:id="_tasks_8c_source_1l00282"/>00282 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00283"/>00283 
<anchor xml:id="_tasks_8c_source_1l00284"/>00284 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_APPLICATION_TASK_TAG&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1af984026250bf8fece2e0068874d4661d">TaskHookFunction_t</link>&#32;pxTaskTag;
<anchor xml:id="_tasks_8c_source_1l00286"/>00286 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00287"/>00287 
<anchor xml:id="_tasks_8c_source_1l00288"/>00288 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if(&#32;configNUM_THREAD_LOCAL_STORAGE_POINTERS&#32;&gt;&#32;0&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00289"/><link linkend="_structtsk_task_control_block_1afa9621ce7433273ee2842a637cccb69e">00289</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_structtsk_task_control_block_1afa9621ce7433273ee2842a637cccb69e">pvThreadLocalStoragePointers</link>[&#32;<link linkend="__free_r_t_o_s_config__default_8h_1a8d32b5f74e55dfd12c5aa3415e16d75e">configNUM_THREAD_LOCAL_STORAGE_POINTERS</link>&#32;];
<anchor xml:id="_tasks_8c_source_1l00290"/>00290 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00291"/>00291 
<anchor xml:id="_tasks_8c_source_1l00292"/>00292 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if(&#32;configGENERATE_RUN_TIME_STATS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint32_t&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulRunTimeCounter;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;Stores&#32;the&#32;amount&#32;of&#32;time&#32;the&#32;task&#32;has&#32;spent&#32;in&#32;the&#32;Running&#32;state.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00294"/>00294 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00295"/>00295 
<anchor xml:id="_tasks_8c_source_1l00296"/>00296 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_NEWLIB_REENTRANT&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Allocate&#32;a&#32;Newlib&#32;reent&#32;structure&#32;that&#32;is&#32;specific&#32;to&#32;this&#32;task.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00298"/>00298 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Note&#32;Newlib&#32;support&#32;has&#32;been&#32;included&#32;by&#32;popular&#32;demand,&#32;but&#32;is&#32;not</emphasis>
<anchor xml:id="_tasks_8c_source_1l00299"/>00299 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;used&#32;by&#32;the&#32;FreeRTOS&#32;maintainers&#32;themselves.&#32;&#32;FreeRTOS&#32;is&#32;not</emphasis>
<anchor xml:id="_tasks_8c_source_1l00300"/>00300 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;responsible&#32;for&#32;resulting&#32;newlib&#32;operation.&#32;&#32;User&#32;must&#32;be&#32;familiar&#32;with</emphasis>
<anchor xml:id="_tasks_8c_source_1l00301"/>00301 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newlib&#32;and&#32;must&#32;provide&#32;system-wide&#32;implementations&#32;of&#32;the&#32;necessary</emphasis>
<anchor xml:id="_tasks_8c_source_1l00302"/>00302 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stubs.&#32;Be&#32;warned&#32;that&#32;(at&#32;the&#32;time&#32;of&#32;writing)&#32;the&#32;current&#32;newlib&#32;design</emphasis>
<anchor xml:id="_tasks_8c_source_1l00303"/>00303 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;implements&#32;a&#32;system-wide&#32;malloc()&#32;that&#32;must&#32;be&#32;provided&#32;with&#32;locks.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;&#32;</emphasis>_reent&#32;xNewLib_reent;
<anchor xml:id="_tasks_8c_source_1l00305"/>00305 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00306"/>00306 
<anchor xml:id="_tasks_8c_source_1l00307"/>00307 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if(&#32;configUSE_TASK_NOTIFICATIONS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00308"/><link linkend="_structtsk_task_control_block_1a7c571b992f90bfe77414cab060ca2af8">00308</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">volatile</emphasis>&#32;uint32_t&#32;<link linkend="_structtsk_task_control_block_1a7c571b992f90bfe77414cab060ca2af8">ulNotifiedValue</link>;
<anchor xml:id="_tasks_8c_source_1l00309"/><link linkend="_structtsk_task_control_block_1adab5291f06b774ed8f5bb6f76a77496f">00309</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">volatile</emphasis>&#32;uint8_t&#32;<link linkend="_structtsk_task_control_block_1adab5291f06b774ed8f5bb6f76a77496f">ucNotifyState</link>;
<anchor xml:id="_tasks_8c_source_1l00310"/>00310 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00311"/>00311 
<anchor xml:id="_tasks_8c_source_1l00312"/>00312 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;See&#32;the&#32;comments&#32;in&#32;FreeRTOS.h&#32;with&#32;the&#32;definition&#32;of</emphasis>
<anchor xml:id="_tasks_8c_source_1l00313"/>00313 <emphasis role="comment">&#32;&#32;&#32;&#32;tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00314"/>00314 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if(&#32;tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE&#32;!=&#32;0&#32;)&#32;</emphasis><emphasis role="comment">/*lint&#32;!e731&#32;!e9029&#32;Macro&#32;has&#32;been&#32;consolidated&#32;for&#32;readability&#32;reasons.&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;ucStaticallyAllocated;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;Set&#32;to&#32;pdTRUE&#32;if&#32;the&#32;task&#32;is&#32;a&#32;statically&#32;allocated&#32;to&#32;ensure&#32;no&#32;attempt&#32;is&#32;made&#32;to&#32;free&#32;the&#32;memory.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00316"/>00316 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00317"/>00317 
<anchor xml:id="_tasks_8c_source_1l00318"/>00318 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if(&#32;INCLUDE_xTaskAbortDelay&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;ucDelayAborted;
<anchor xml:id="_tasks_8c_source_1l00320"/>00320 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00321"/>00321 
<anchor xml:id="_tasks_8c_source_1l00322"/>00322 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if(&#32;configUSE_POSIX_ERRNO&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;iTaskErrno;
<anchor xml:id="_tasks_8c_source_1l00324"/>00324 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00325"/>00325 
<anchor xml:id="_tasks_8c_source_1l00326"/><link linkend="_tasks_8c_1a67b1ddede4e49c946dd720d83c5838a5">00326</link> }&#32;<link linkend="_tasks_8c_1a67b1ddede4e49c946dd720d83c5838a5">tskTCB</link>;
<anchor xml:id="_tasks_8c_source_1l00327"/>00327 
<anchor xml:id="_tasks_8c_source_1l00328"/>00328 <emphasis role="comment">/*&#32;The&#32;old&#32;tskTCB&#32;name&#32;is&#32;maintained&#32;above&#32;then&#32;typedefed&#32;to&#32;the&#32;new&#32;TCB_t&#32;name</emphasis>
<anchor xml:id="_tasks_8c_source_1l00329"/>00329 <emphasis role="comment">below&#32;to&#32;enable&#32;the&#32;use&#32;of&#32;older&#32;kernel&#32;aware&#32;debuggers.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00330"/><link linkend="_tasks_8c_1aa3c2dda92a6dc22860bbdb36e42a0453">00330</link> <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_structtsk_task_control_block">tskTCB</link>&#32;<link linkend="_tasks_8c_1aa3c2dda92a6dc22860bbdb36e42a0453">TCB_t</link>;
<anchor xml:id="_tasks_8c_source_1l00331"/>00331 
<anchor xml:id="_tasks_8c_source_1l00332"/>00332 <emphasis role="comment">/*lint&#32;-save&#32;-e956&#32;A&#32;manual&#32;analysis&#32;and&#32;inspection&#32;has&#32;been&#32;used&#32;to&#32;determine</emphasis>
<anchor xml:id="_tasks_8c_source_1l00333"/>00333 <emphasis role="comment">which&#32;static&#32;variables&#32;must&#32;be&#32;declared&#32;volatile.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00334"/><link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">00334</link> <link linkend="_mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5">PRIVILEGED_DATA</link>&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*&#32;<emphasis role="keyword">volatile</emphasis>&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>&#32;=&#32;NULL;
<anchor xml:id="_tasks_8c_source_1l00335"/>00335 
<anchor xml:id="_tasks_8c_source_1l00336"/>00336 <emphasis role="comment">/*&#32;Lists&#32;for&#32;ready&#32;and&#32;blocked&#32;tasks.&#32;--------------------</emphasis>
<anchor xml:id="_tasks_8c_source_1l00337"/>00337 <emphasis role="comment">xDelayedTaskList1&#32;and&#32;xDelayedTaskList2&#32;could&#32;be&#32;move&#32;to&#32;function&#32;scople&#32;but</emphasis>
<anchor xml:id="_tasks_8c_source_1l00338"/>00338 <emphasis role="comment">doing&#32;so&#32;breaks&#32;some&#32;kernel&#32;aware&#32;debuggers&#32;and&#32;debuggers&#32;that&#32;rely&#32;on&#32;removing</emphasis>
<anchor xml:id="_tasks_8c_source_1l00339"/>00339 <emphasis role="comment">the&#32;static&#32;qualifier.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00340"/><link linkend="_tasks_8c_1ab4a8345f8c340d07086342c0dd92c972">00340</link> <link linkend="_mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5">PRIVILEGED_DATA</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;<link linkend="_tasks_8c_1ab4a8345f8c340d07086342c0dd92c972">pxReadyTasksLists</link>[&#32;<link linkend="__free_r_t_o_s_config__default_8h_1a9a78f5ac61e6cb172dadf2a51f11db38">configMAX_PRIORITIES</link>&#32;];<emphasis role="comment">/*&lt;&#32;Prioritised&#32;ready&#32;tasks.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00341"/><link linkend="_tasks_8c_1a07888d97f0712ee0b671b295c03ad19d">00341</link> <link linkend="_mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5">PRIVILEGED_DATA</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;<link linkend="_tasks_8c_1a07888d97f0712ee0b671b295c03ad19d">xDelayedTaskList1</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;Delayed&#32;tasks.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00342"/><link linkend="_tasks_8c_1aa53d90340a8a11b958e385cd170b8c6d">00342</link> <link linkend="_mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5">PRIVILEGED_DATA</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;<link linkend="_tasks_8c_1aa53d90340a8a11b958e385cd170b8c6d">xDelayedTaskList2</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;Delayed&#32;tasks&#32;(two&#32;lists&#32;are&#32;used&#32;-&#32;one&#32;for&#32;delays&#32;that&#32;have&#32;overflowed&#32;the&#32;current&#32;tick&#32;count.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00343"/><link linkend="_tasks_8c_1a30b4b716a99940e93fc9d4a13c1f81db">00343</link> <link linkend="_mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5">PRIVILEGED_DATA</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;*&#32;<emphasis role="keyword">volatile</emphasis>&#32;<link linkend="_tasks_8c_1a30b4b716a99940e93fc9d4a13c1f81db">pxDelayedTaskList</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;Points&#32;to&#32;the&#32;delayed&#32;task&#32;list&#32;currently&#32;being&#32;used.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00344"/><link linkend="_tasks_8c_1aae5cac9860aec54036f49920561a9705">00344</link> <link linkend="_mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5">PRIVILEGED_DATA</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;*&#32;<emphasis role="keyword">volatile</emphasis>&#32;<link linkend="_tasks_8c_1aae5cac9860aec54036f49920561a9705">pxOverflowDelayedTaskList</link>;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;Points&#32;to&#32;the&#32;delayed&#32;task&#32;list&#32;currently&#32;being&#32;used&#32;to&#32;hold&#32;tasks&#32;that&#32;have&#32;overflowed&#32;the&#32;current&#32;tick&#32;count.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00345"/><link linkend="_tasks_8c_1a73880e71e7ed72242d1a078685107421">00345</link> <link linkend="_mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5">PRIVILEGED_DATA</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;<link linkend="_tasks_8c_1a73880e71e7ed72242d1a078685107421">xPendingReadyList</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;Tasks&#32;that&#32;have&#32;been&#32;readied&#32;while&#32;the&#32;scheduler&#32;was&#32;suspended.&#32;&#32;They&#32;will&#32;be&#32;moved&#32;to&#32;the&#32;ready&#32;list&#32;when&#32;the&#32;scheduler&#32;is&#32;resumed.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00346"/>00346 
<anchor xml:id="_tasks_8c_source_1l00347"/>00347 <emphasis role="preprocessor">#if(&#32;INCLUDE_vTaskDelete&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00348"/>00348 
<anchor xml:id="_tasks_8c_source_1l00349"/><link linkend="_tasks_8c_1a9d5346b64d3da2ce013224df5f403005">00349</link> &#32;&#32;&#32;&#32;<link linkend="_mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5">PRIVILEGED_DATA</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;<link linkend="_tasks_8c_1a9d5346b64d3da2ce013224df5f403005">xTasksWaitingTermination</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;Tasks&#32;that&#32;have&#32;been&#32;deleted&#32;-&#32;but&#32;their&#32;memory&#32;not&#32;yet&#32;freed.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00350"/><link linkend="_tasks_8c_1ad31bb9fd9a09cc9045861dd458f54615">00350</link> &#32;&#32;&#32;&#32;<link linkend="_mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5">PRIVILEGED_DATA</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">volatile</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_tasks_8c_1ad31bb9fd9a09cc9045861dd458f54615">uxDeletedTasksWaitingCleanUp</link>&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0U;
<anchor xml:id="_tasks_8c_source_1l00351"/>00351 
<anchor xml:id="_tasks_8c_source_1l00352"/>00352 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00353"/>00353 
<anchor xml:id="_tasks_8c_source_1l00354"/>00354 <emphasis role="preprocessor">#if&#32;(&#32;INCLUDE_vTaskSuspend&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00355"/>00355 
<anchor xml:id="_tasks_8c_source_1l00356"/><link linkend="_tasks_8c_1aeeff59d101a1407ffc42f81fda83baca">00356</link> &#32;&#32;&#32;&#32;<link linkend="_mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5">PRIVILEGED_DATA</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;<link linkend="_tasks_8c_1aeeff59d101a1407ffc42f81fda83baca">xSuspendedTaskList</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;Tasks&#32;that&#32;are&#32;currently&#32;suspended.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00357"/>00357 
<anchor xml:id="_tasks_8c_source_1l00358"/>00358 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00359"/>00359 
<anchor xml:id="_tasks_8c_source_1l00360"/>00360 <emphasis role="comment">/*&#32;Global&#32;POSIX&#32;errno.&#32;Its&#32;value&#32;is&#32;changed&#32;upon&#32;context&#32;switching&#32;to&#32;match</emphasis>
<anchor xml:id="_tasks_8c_source_1l00361"/>00361 <emphasis role="comment">the&#32;errno&#32;of&#32;the&#32;currently&#32;running&#32;task.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00362"/>00362 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_POSIX_ERRNO&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00363"/>00363 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;FreeRTOS_errno&#32;=&#32;0;
<anchor xml:id="_tasks_8c_source_1l00364"/>00364 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00365"/>00365 
<anchor xml:id="_tasks_8c_source_1l00366"/>00366 <emphasis role="comment">/*&#32;Other&#32;file&#32;private&#32;variables.&#32;--------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00367"/><link linkend="_tasks_8c_1a54edd210c179ef9d185f5ebb020eaa5a">00367</link> <link linkend="_mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5">PRIVILEGED_DATA</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">volatile</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_tasks_8c_1a54edd210c179ef9d185f5ebb020eaa5a">uxCurrentNumberOfTasks</link>&#32;&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0U;
<anchor xml:id="_tasks_8c_source_1l00368"/><link linkend="_tasks_8c_1aaa88969a9b48aea401dbb1ff2b0ef4de">00368</link> <link linkend="_mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5">PRIVILEGED_DATA</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">volatile</emphasis>&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;<link linkend="_tasks_8c_1aaa88969a9b48aea401dbb1ff2b0ef4de">xTickCount</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;<link linkend="__free_r_t_o_s_8h_1ae52c1acd13b26e8758dc66b60b0e3417">configINITIAL_TICK_COUNT</link>;
<anchor xml:id="_tasks_8c_source_1l00369"/><link linkend="_tasks_8c_1a3fffd96ac9ae0d8b352ae10896ed4531">00369</link> <link linkend="_mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5">PRIVILEGED_DATA</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">volatile</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_tasks_8c_1a3fffd96ac9ae0d8b352ae10896ed4531">uxTopReadyPriority</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_task_8h_1a94ed0b9b3b4e8ccc859c322f18583e67">tskIDLE_PRIORITY</link>;
<anchor xml:id="_tasks_8c_source_1l00370"/><link linkend="_tasks_8c_1a1799bfbb95c907794761d18bd75faff5">00370</link> <link linkend="_mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5">PRIVILEGED_DATA</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">volatile</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_tasks_8c_1a1799bfbb95c907794761d18bd75faff5">xSchedulerRunning</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_tasks_8c_source_1l00371"/><link linkend="_tasks_8c_1a476a5b10aeb0bf39d29d6baccbc26f56">00371</link> <link linkend="_mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5">PRIVILEGED_DATA</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">volatile</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_tasks_8c_1a476a5b10aeb0bf39d29d6baccbc26f56">uxPendedTicks</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0U;
<anchor xml:id="_tasks_8c_source_1l00372"/><link linkend="_tasks_8c_1a25abc99b92e910c1602028081e13b1b0">00372</link> <link linkend="_mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5">PRIVILEGED_DATA</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">volatile</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_tasks_8c_1a25abc99b92e910c1602028081e13b1b0">xYieldPending</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_tasks_8c_source_1l00373"/><link linkend="_tasks_8c_1ab278ffe04bd2e0cdf4acdabdd7692306">00373</link> <link linkend="_mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5">PRIVILEGED_DATA</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">volatile</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_tasks_8c_1ab278ffe04bd2e0cdf4acdabdd7692306">xNumOfOverflows</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;)&#32;0;
<anchor xml:id="_tasks_8c_source_1l00374"/><link linkend="_tasks_8c_1a47256f539ed98e54c6e5b025ccc68279">00374</link> <link linkend="_mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5">PRIVILEGED_DATA</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_tasks_8c_1a47256f539ed98e54c6e5b025ccc68279">uxTaskNumber</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0U;
<anchor xml:id="_tasks_8c_source_1l00375"/><link linkend="_tasks_8c_1ac27aa725d8922f33f880005e72edec68">00375</link> <link linkend="_mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5">PRIVILEGED_DATA</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">volatile</emphasis>&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;<link linkend="_tasks_8c_1ac27aa725d8922f33f880005e72edec68">xNextTaskUnblockTime</link>&#32;&#32;&#32;&#32;&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;0U;&#32;<emphasis role="comment">/*&#32;Initialised&#32;to&#32;portMAX_DELAY&#32;before&#32;the&#32;scheduler&#32;starts.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00376"/><link linkend="_tasks_8c_1ab1afeb7ccc3b00411775f107e31134ad">00376</link> <link linkend="_mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5">PRIVILEGED_DATA</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;<link linkend="_tasks_8c_1ab1afeb7ccc3b00411775f107e31134ad">xIdleTaskHandle</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;NULL;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;Holds&#32;the&#32;handle&#32;of&#32;the&#32;idle&#32;task.&#32;&#32;The&#32;idle&#32;task&#32;is&#32;created&#32;automatically&#32;when&#32;the&#32;scheduler&#32;is&#32;started.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00377"/>00377 
<anchor xml:id="_tasks_8c_source_1l00378"/>00378 <emphasis role="comment">/*&#32;Context&#32;switches&#32;are&#32;held&#32;pending&#32;while&#32;the&#32;scheduler&#32;is&#32;suspended.&#32;&#32;Also,</emphasis>
<anchor xml:id="_tasks_8c_source_1l00379"/>00379 <emphasis role="comment">interrupts&#32;must&#32;not&#32;manipulate&#32;the&#32;xStateListItem&#32;of&#32;a&#32;TCB,&#32;or&#32;any&#32;of&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l00380"/>00380 <emphasis role="comment">lists&#32;the&#32;xStateListItem&#32;can&#32;be&#32;referenced&#32;from,&#32;if&#32;the&#32;scheduler&#32;is&#32;suspended.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00381"/>00381 <emphasis role="comment">If&#32;an&#32;interrupt&#32;needs&#32;to&#32;unblock&#32;a&#32;task&#32;while&#32;the&#32;scheduler&#32;is&#32;suspended&#32;then&#32;it</emphasis>
<anchor xml:id="_tasks_8c_source_1l00382"/>00382 <emphasis role="comment">moves&#32;the&#32;task&apos;s&#32;event&#32;list&#32;item&#32;into&#32;the&#32;xPendingReadyList,&#32;ready&#32;for&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l00383"/>00383 <emphasis role="comment">kernel&#32;to&#32;move&#32;the&#32;task&#32;from&#32;the&#32;pending&#32;ready&#32;list&#32;into&#32;the&#32;real&#32;ready&#32;list</emphasis>
<anchor xml:id="_tasks_8c_source_1l00384"/>00384 <emphasis role="comment">when&#32;the&#32;scheduler&#32;is&#32;unsuspended.&#32;&#32;The&#32;pending&#32;ready&#32;list&#32;itself&#32;can&#32;only&#32;be</emphasis>
<anchor xml:id="_tasks_8c_source_1l00385"/>00385 <emphasis role="comment">accessed&#32;from&#32;a&#32;critical&#32;section.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00386"/><link linkend="_tasks_8c_1a7522707fcf80b216e3a5b25ba464ec85">00386</link> <link linkend="_mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5">PRIVILEGED_DATA</link>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">volatile</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_tasks_8c_1a7522707fcf80b216e3a5b25ba464ec85">uxSchedulerSuspended</link>&#32;&#32;&#32;&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_tasks_8c_source_1l00387"/>00387 
<anchor xml:id="_tasks_8c_source_1l00388"/>00388 <emphasis role="preprocessor">#if&#32;(&#32;configGENERATE_RUN_TIME_STATS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00389"/>00389 
<anchor xml:id="_tasks_8c_source_1l00390"/>00390 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Do&#32;not&#32;move&#32;these&#32;variables&#32;to&#32;function&#32;scope&#32;as&#32;doing&#32;so&#32;prevents&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l00391"/>00391 <emphasis role="comment">&#32;&#32;&#32;&#32;code&#32;working&#32;with&#32;debuggers&#32;that&#32;need&#32;to&#32;remove&#32;the&#32;static&#32;qualifier.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00392"/>00392 &#32;&#32;&#32;&#32;<link linkend="_mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5">PRIVILEGED_DATA</link>&#32;<emphasis role="keyword">static</emphasis>&#32;uint32_t&#32;ulTaskSwitchedInTime&#32;=&#32;0UL;&#32;<emphasis role="comment">/*&lt;&#32;Holds&#32;the&#32;value&#32;of&#32;a&#32;timer/counter&#32;the&#32;last&#32;time&#32;a&#32;task&#32;was&#32;switched&#32;in.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00393"/>00393 &#32;&#32;&#32;&#32;<link linkend="_mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5">PRIVILEGED_DATA</link>&#32;<emphasis role="keyword">static</emphasis>&#32;uint32_t&#32;ulTotalRunTime&#32;=&#32;0UL;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;Holds&#32;the&#32;total&#32;amount&#32;of&#32;execution&#32;time&#32;as&#32;defined&#32;by&#32;the&#32;run&#32;time&#32;counter&#32;clock.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00394"/>00394 
<anchor xml:id="_tasks_8c_source_1l00395"/>00395 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00396"/>00396 
<anchor xml:id="_tasks_8c_source_1l00397"/>00397 <emphasis role="comment">/*lint&#32;-restore&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00398"/>00398 
<anchor xml:id="_tasks_8c_source_1l00399"/>00399 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00400"/>00400 
<anchor xml:id="_tasks_8c_source_1l00401"/>00401 <emphasis role="comment">/*&#32;Callback&#32;function&#32;prototypes.&#32;--------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00402"/>00402 <emphasis role="preprocessor">#if(&#32;&#32;configCHECK_FOR_STACK_OVERFLOW&#32;&gt;&#32;0&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00403"/>00403 
<anchor xml:id="_tasks_8c_source_1l00404"/>00404 &#32;&#32;&#32;&#32;<emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_1a306672a74bdd13ce210c05fca3385c59">vApplicationStackOverflowHook</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask,&#32;<emphasis role="keywordtype">char</emphasis>&#32;*pcTaskName&#32;);
<anchor xml:id="_tasks_8c_source_1l00405"/>00405 
<anchor xml:id="_tasks_8c_source_1l00406"/>00406 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00407"/>00407 
<anchor xml:id="_tasks_8c_source_1l00408"/>00408 <emphasis role="preprocessor">#if(&#32;configUSE_TICK_HOOK&#32;&gt;&#32;0&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00409"/>00409 
<anchor xml:id="_tasks_8c_source_1l00410"/>00410 &#32;&#32;&#32;&#32;<emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;vApplicationTickHook(&#32;<emphasis role="keywordtype">void</emphasis>&#32;);&#32;<emphasis role="comment">/*lint&#32;!e526&#32;Symbol&#32;not&#32;defined&#32;as&#32;it&#32;is&#32;an&#32;application&#32;callback.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00411"/>00411 
<anchor xml:id="_tasks_8c_source_1l00412"/>00412 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00413"/>00413 
<anchor xml:id="_tasks_8c_source_1l00414"/>00414 <emphasis role="preprocessor">#if(&#32;configSUPPORT_STATIC_ALLOCATION&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00415"/>00415 
<anchor xml:id="_tasks_8c_source_1l00416"/>00416 &#32;&#32;&#32;&#32;<emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;vApplicationGetIdleTaskMemory(&#32;<link linkend="_structx_s_t_a_t_i_c___t_c_b">StaticTask_t</link>&#32;**ppxIdleTaskTCBBuffer,&#32;<link linkend="_portmacro_8h_1aa73b01e0200940d619095fb74fb3030b">StackType_t</link>&#32;**ppxIdleTaskStackBuffer,&#32;uint32_t&#32;*pulIdleTaskStackSize&#32;);&#32;<emphasis role="comment">/*lint&#32;!e526&#32;Symbol&#32;not&#32;defined&#32;as&#32;it&#32;is&#32;an&#32;application&#32;callback.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00417"/>00417 
<anchor xml:id="_tasks_8c_source_1l00418"/>00418 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00419"/>00419 
<anchor xml:id="_tasks_8c_source_1l00420"/>00420 <emphasis role="comment">/*&#32;File&#32;private&#32;functions.&#32;--------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00421"/>00421 
<anchor xml:id="_tasks_8c_source_1l00427"/>00427 <emphasis role="preprocessor">#if&#32;(&#32;INCLUDE_vTaskSuspend&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00428"/>00428 
<anchor xml:id="_tasks_8c_source_1l00429"/>00429 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_tasks_8c_1abefde0f5ca141ae3d6e25f66a5234082">prvTaskIsTaskSuspended</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_tasks_8c_source_1l00430"/>00430 
<anchor xml:id="_tasks_8c_source_1l00431"/>00431 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;INCLUDE_vTaskSuspend&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00432"/>00432 
<anchor xml:id="_tasks_8c_source_1l00433"/>00433 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00434"/>00434 <emphasis role="comment">&#32;*&#32;Utility&#32;to&#32;ready&#32;all&#32;the&#32;lists&#32;used&#32;by&#32;the&#32;scheduler.&#32;&#32;This&#32;is&#32;called</emphasis>
<anchor xml:id="_tasks_8c_source_1l00435"/>00435 <emphasis role="comment">&#32;*&#32;automatically&#32;upon&#32;the&#32;creation&#32;of&#32;the&#32;first&#32;task.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00436"/>00436 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00437"/>00437 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1af4a1bd397cb871d893fc24e5f86e4f19">prvInitialiseTaskLists</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_tasks_8c_source_1l00438"/>00438 
<anchor xml:id="_tasks_8c_source_1l00439"/>00439 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00440"/>00440 <emphasis role="comment">&#32;*&#32;The&#32;idle&#32;task,&#32;which&#32;as&#32;all&#32;tasks&#32;is&#32;implemented&#32;as&#32;a&#32;never&#32;ending&#32;loop.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00441"/>00441 <emphasis role="comment">&#32;*&#32;The&#32;idle&#32;task&#32;is&#32;automatically&#32;created&#32;and&#32;added&#32;to&#32;the&#32;ready&#32;lists&#32;upon</emphasis>
<anchor xml:id="_tasks_8c_source_1l00442"/>00442 <emphasis role="comment">&#32;*&#32;creation&#32;of&#32;the&#32;first&#32;user&#32;task.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00443"/>00443 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00444"/>00444 <emphasis role="comment">&#32;*&#32;The&#32;portTASK_FUNCTION_PROTO()&#32;macro&#32;is&#32;used&#32;to&#32;allow&#32;port/compiler&#32;specific</emphasis>
<anchor xml:id="_tasks_8c_source_1l00445"/>00445 <emphasis role="comment">&#32;*&#32;language&#32;extensions.&#32;&#32;The&#32;equivalent&#32;prototype&#32;for&#32;this&#32;function&#32;is:</emphasis>
<anchor xml:id="_tasks_8c_source_1l00446"/>00446 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00447"/>00447 <emphasis role="comment">&#32;*&#32;void&#32;prvIdleTask(&#32;void&#32;*pvParameters&#32;);</emphasis>
<anchor xml:id="_tasks_8c_source_1l00448"/>00448 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00449"/>00449 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00450"/>00450 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_portmacro_8h_1a2921e1c5a1f974dfa01ae44d1f665f14">portTASK_FUNCTION_PROTO</link>(&#32;<link linkend="_tasks_8c_1af0212702c981e5413a318c0346ac37b2">prvIdleTask</link>,&#32;pvParameters&#32;);
<anchor xml:id="_tasks_8c_source_1l00451"/>00451 
<anchor xml:id="_tasks_8c_source_1l00452"/>00452 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00453"/>00453 <emphasis role="comment">&#32;*&#32;Utility&#32;to&#32;free&#32;all&#32;memory&#32;allocated&#32;by&#32;the&#32;scheduler&#32;to&#32;hold&#32;a&#32;TCB,</emphasis>
<anchor xml:id="_tasks_8c_source_1l00454"/>00454 <emphasis role="comment">&#32;*&#32;including&#32;the&#32;stack&#32;pointed&#32;to&#32;by&#32;the&#32;TCB.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00455"/>00455 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00456"/>00456 <emphasis role="comment">&#32;*&#32;This&#32;does&#32;not&#32;free&#32;memory&#32;allocated&#32;by&#32;the&#32;task&#32;itself&#32;(i.e.&#32;memory</emphasis>
<anchor xml:id="_tasks_8c_source_1l00457"/>00457 <emphasis role="comment">&#32;*&#32;allocated&#32;by&#32;calls&#32;to&#32;pvPortMalloc&#32;from&#32;within&#32;the&#32;tasks&#32;application&#32;code).</emphasis>
<anchor xml:id="_tasks_8c_source_1l00458"/>00458 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00459"/>00459 <emphasis role="preprocessor">#if&#32;(&#32;INCLUDE_vTaskDelete&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00460"/>00460 
<anchor xml:id="_tasks_8c_source_1l00461"/>00461 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1ad538c599036f7914942471780230ffa6">prvDeleteTCB</link>(&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxTCB&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_tasks_8c_source_1l00462"/>00462 
<anchor xml:id="_tasks_8c_source_1l00463"/>00463 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00464"/>00464 
<anchor xml:id="_tasks_8c_source_1l00465"/>00465 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00466"/>00466 <emphasis role="comment">&#32;*&#32;Used&#32;only&#32;by&#32;the&#32;idle&#32;task.&#32;&#32;This&#32;checks&#32;to&#32;see&#32;if&#32;anything&#32;has&#32;been&#32;placed</emphasis>
<anchor xml:id="_tasks_8c_source_1l00467"/>00467 <emphasis role="comment">&#32;*&#32;in&#32;the&#32;list&#32;of&#32;tasks&#32;waiting&#32;to&#32;be&#32;deleted.&#32;&#32;If&#32;so&#32;the&#32;task&#32;is&#32;cleaned&#32;up</emphasis>
<anchor xml:id="_tasks_8c_source_1l00468"/>00468 <emphasis role="comment">&#32;*&#32;and&#32;its&#32;TCB&#32;deleted.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00469"/>00469 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00470"/>00470 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1a903096c962a2bc907f4b902a7d42302a">prvCheckTasksWaitingTermination</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_tasks_8c_source_1l00471"/>00471 
<anchor xml:id="_tasks_8c_source_1l00472"/>00472 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00473"/>00473 <emphasis role="comment">&#32;*&#32;The&#32;currently&#32;executing&#32;task&#32;is&#32;entering&#32;the&#32;Blocked&#32;state.&#32;&#32;Add&#32;the&#32;task&#32;to</emphasis>
<anchor xml:id="_tasks_8c_source_1l00474"/>00474 <emphasis role="comment">&#32;*&#32;either&#32;the&#32;current&#32;or&#32;the&#32;overflow&#32;delayed&#32;task&#32;list.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00475"/>00475 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00476"/>00476 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1ab4574e77d9aea876272e563c68f639da">prvAddCurrentTaskToDelayedList</link>(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xCanBlockIndefinitely&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_tasks_8c_source_1l00477"/>00477 
<anchor xml:id="_tasks_8c_source_1l00478"/>00478 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00479"/>00479 <emphasis role="comment">&#32;*&#32;Fills&#32;an&#32;TaskStatus_t&#32;structure&#32;with&#32;information&#32;on&#32;each&#32;task&#32;that&#32;is</emphasis>
<anchor xml:id="_tasks_8c_source_1l00480"/>00480 <emphasis role="comment">&#32;*&#32;referenced&#32;from&#32;the&#32;pxList&#32;list&#32;(which&#32;may&#32;be&#32;a&#32;ready&#32;list,&#32;a&#32;delayed&#32;list,</emphasis>
<anchor xml:id="_tasks_8c_source_1l00481"/>00481 <emphasis role="comment">&#32;*&#32;a&#32;suspended&#32;list,&#32;etc.).</emphasis>
<anchor xml:id="_tasks_8c_source_1l00482"/>00482 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00483"/>00483 <emphasis role="comment">&#32;*&#32;THIS&#32;FUNCTION&#32;IS&#32;INTENDED&#32;FOR&#32;DEBUGGING&#32;ONLY,&#32;AND&#32;SHOULD&#32;NOT&#32;BE&#32;CALLED&#32;FROM</emphasis>
<anchor xml:id="_tasks_8c_source_1l00484"/>00484 <emphasis role="comment">&#32;*&#32;NORMAL&#32;APPLICATION&#32;CODE.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00485"/>00485 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00486"/>00486 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00487"/>00487 
<anchor xml:id="_tasks_8c_source_1l00488"/>00488 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_tasks_8c_1a76a09ef72cff5e96bdfb4f9e882f4cfe">prvListTasksWithinSingleList</link>(&#32;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s">TaskStatus_t</link>&#32;*pxTaskStatusArray,&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;*pxList,&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892c">eTaskState</link>&#32;eState&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_tasks_8c_source_1l00489"/>00489 
<anchor xml:id="_tasks_8c_source_1l00490"/>00490 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00491"/>00491 
<anchor xml:id="_tasks_8c_source_1l00492"/>00492 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00493"/>00493 <emphasis role="comment">&#32;*&#32;Searches&#32;pxList&#32;for&#32;a&#32;task&#32;with&#32;name&#32;pcNameToQuery&#32;-&#32;returning&#32;a&#32;handle&#32;to</emphasis>
<anchor xml:id="_tasks_8c_source_1l00494"/>00494 <emphasis role="comment">&#32;*&#32;the&#32;task&#32;if&#32;it&#32;is&#32;found,&#32;or&#32;NULL&#32;if&#32;the&#32;task&#32;is&#32;not&#32;found.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00495"/>00495 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00496"/>00496 <emphasis role="preprocessor">#if&#32;(&#32;INCLUDE_xTaskGetHandle&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00497"/>00497 
<anchor xml:id="_tasks_8c_source_1l00498"/>00498 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*<link linkend="_tasks_8c_1a2a2eca63c8d866fff6851e2096881382">prvSearchForNameWithinSingleList</link>(&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;*pxList,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;pcNameToQuery[]&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_tasks_8c_source_1l00499"/>00499 
<anchor xml:id="_tasks_8c_source_1l00500"/>00500 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00501"/>00501 
<anchor xml:id="_tasks_8c_source_1l00502"/>00502 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00503"/>00503 <emphasis role="comment">&#32;*&#32;When&#32;a&#32;task&#32;is&#32;created,&#32;the&#32;stack&#32;of&#32;the&#32;task&#32;is&#32;filled&#32;with&#32;a&#32;known&#32;value.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00504"/>00504 <emphasis role="comment">&#32;*&#32;This&#32;function&#32;determines&#32;the&#32;&apos;high&#32;water&#32;mark&apos;&#32;of&#32;the&#32;task&#32;stack&#32;by</emphasis>
<anchor xml:id="_tasks_8c_source_1l00505"/>00505 <emphasis role="comment">&#32;*&#32;determining&#32;how&#32;much&#32;of&#32;the&#32;stack&#32;remains&#32;at&#32;the&#32;original&#32;preset&#32;value.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00506"/>00506 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00507"/>00507 <emphasis role="preprocessor">#if&#32;(&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)&#32;||&#32;(&#32;INCLUDE_uxTaskGetStackHighWaterMark&#32;==&#32;1&#32;)&#32;||&#32;(&#32;INCLUDE_uxTaskGetStackHighWaterMark2&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00508"/>00508 
<anchor xml:id="_tasks_8c_source_1l00509"/>00509 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="__free_r_t_o_s_8h_1ae4e85bffd36d76cf2796092f0ccd784a">configSTACK_DEPTH_TYPE</link>&#32;<link linkend="_tasks_8c_1aaba9e72c97964b8d9496e8dbdd40aa60">prvTaskCheckFreeStackSpace</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;*&#32;pucStackByte&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_tasks_8c_source_1l00510"/>00510 
<anchor xml:id="_tasks_8c_source_1l00511"/>00511 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00512"/>00512 
<anchor xml:id="_tasks_8c_source_1l00513"/>00513 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00514"/>00514 <emphasis role="comment">&#32;*&#32;Return&#32;the&#32;amount&#32;of&#32;time,&#32;in&#32;ticks,&#32;that&#32;will&#32;pass&#32;before&#32;the&#32;kernel&#32;will</emphasis>
<anchor xml:id="_tasks_8c_source_1l00515"/>00515 <emphasis role="comment">&#32;*&#32;next&#32;move&#32;a&#32;task&#32;from&#32;the&#32;Blocked&#32;state&#32;to&#32;the&#32;Running&#32;state.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00516"/>00516 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00517"/>00517 <emphasis role="comment">&#32;*&#32;This&#32;conditional&#32;compilation&#32;should&#32;use&#32;inequality&#32;to&#32;0,&#32;not&#32;equality&#32;to&#32;1.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00518"/>00518 <emphasis role="comment">&#32;*&#32;This&#32;is&#32;to&#32;ensure&#32;portSUPPRESS_TICKS_AND_SLEEP()&#32;can&#32;be&#32;called&#32;when&#32;user</emphasis>
<anchor xml:id="_tasks_8c_source_1l00519"/>00519 <emphasis role="comment">&#32;*&#32;defined&#32;low&#32;power&#32;mode&#32;implementations&#32;require&#32;configUSE_TICKLESS_IDLE&#32;to&#32;be</emphasis>
<anchor xml:id="_tasks_8c_source_1l00520"/>00520 <emphasis role="comment">&#32;*&#32;set&#32;to&#32;a&#32;value&#32;other&#32;than&#32;1.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00521"/>00521 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00522"/>00522 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_TICKLESS_IDLE&#32;!=&#32;0&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00523"/>00523 
<anchor xml:id="_tasks_8c_source_1l00524"/>00524 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;prvGetExpectedIdleTime(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_tasks_8c_source_1l00525"/>00525 
<anchor xml:id="_tasks_8c_source_1l00526"/>00526 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00527"/>00527 
<anchor xml:id="_tasks_8c_source_1l00528"/>00528 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00529"/>00529 <emphasis role="comment">&#32;*&#32;Set&#32;xNextTaskUnblockTime&#32;to&#32;the&#32;time&#32;at&#32;which&#32;the&#32;next&#32;Blocked&#32;state&#32;task</emphasis>
<anchor xml:id="_tasks_8c_source_1l00530"/>00530 <emphasis role="comment">&#32;*&#32;will&#32;exit&#32;the&#32;Blocked&#32;state.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00531"/>00531 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00532"/>00532 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1ad1b2e4995f863a99cf980836efe330d7">prvResetNextTaskUnblockTime</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;);
<anchor xml:id="_tasks_8c_source_1l00533"/>00533 
<anchor xml:id="_tasks_8c_source_1l00534"/>00534 <emphasis role="preprocessor">#if&#32;(&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configUSE_STATS_FORMATTING_FUNCTIONS&#32;&gt;&#32;0&#32;)&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00535"/>00535 
<anchor xml:id="_tasks_8c_source_1l00536"/>00536 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00537"/>00537 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;Helper&#32;function&#32;used&#32;to&#32;pad&#32;task&#32;names&#32;with&#32;spaces&#32;when&#32;printing&#32;out</emphasis>
<anchor xml:id="_tasks_8c_source_1l00538"/>00538 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;human&#32;readable&#32;tables&#32;of&#32;task&#32;information.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00539"/>00539 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00540"/>00540 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*prvWriteNameToBuffer(&#32;<emphasis role="keywordtype">char</emphasis>&#32;*pcBuffer,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*pcTaskName&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_tasks_8c_source_1l00541"/>00541 
<anchor xml:id="_tasks_8c_source_1l00542"/>00542 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00543"/>00543 
<anchor xml:id="_tasks_8c_source_1l00544"/>00544 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00545"/>00545 <emphasis role="comment">&#32;*&#32;Called&#32;after&#32;a&#32;Task_t&#32;structure&#32;has&#32;been&#32;allocated&#32;either&#32;statically&#32;or</emphasis>
<anchor xml:id="_tasks_8c_source_1l00546"/>00546 <emphasis role="comment">&#32;*&#32;dynamically&#32;to&#32;fill&#32;in&#32;the&#32;structure&apos;s&#32;members.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00547"/>00547 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00548"/>00548 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1a6c4d7ca7b68c92ae0d62edd7ecdd8e31">prvInitialiseNewTask</link>(&#32;&#32;&#32;<link linkend="_projdefs_8h_1a9b32502ff92c255c686dacde53c1cba0">TaskFunction_t</link>&#32;pxTaskCode,
<anchor xml:id="_tasks_8c_source_1l00549"/>00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pcName,&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*lint&#32;!e971&#32;Unqualified&#32;char&#32;types&#32;are&#32;allowed&#32;for&#32;strings&#32;and&#32;single&#32;characters&#32;only.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00550"/>00550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint32_t&#32;ulStackDepth,
<anchor xml:id="_tasks_8c_source_1l00551"/>00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pvParameters,
<anchor xml:id="_tasks_8c_source_1l00552"/>00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxPriority,
<anchor xml:id="_tasks_8c_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxCreatedTask,
<anchor xml:id="_tasks_8c_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxNewTCB,
<anchor xml:id="_tasks_8c_source_1l00555"/>00555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structx_m_e_m_o_r_y___r_e_g_i_o_n">MemoryRegion_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;xRegions&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_tasks_8c_source_1l00556"/>00556 
<anchor xml:id="_tasks_8c_source_1l00557"/>00557 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00558"/>00558 <emphasis role="comment">&#32;*&#32;Called&#32;after&#32;a&#32;new&#32;task&#32;has&#32;been&#32;created&#32;and&#32;initialised&#32;to&#32;place&#32;the&#32;task</emphasis>
<anchor xml:id="_tasks_8c_source_1l00559"/>00559 <emphasis role="comment">&#32;*&#32;under&#32;the&#32;control&#32;of&#32;the&#32;scheduler.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00560"/>00560 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00561"/>00561 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1a132d136b8d2586e0778ce369e5cb8a1e">prvAddNewTaskToReadyList</link>(&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxNewTCB&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_tasks_8c_source_1l00562"/>00562 
<anchor xml:id="_tasks_8c_source_1l00563"/>00563 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_tasks_8c_source_1l00564"/>00564 <emphasis role="comment">&#32;*&#32;freertos_tasks_c_additions_init()&#32;should&#32;only&#32;be&#32;called&#32;if&#32;the&#32;user&#32;definable</emphasis>
<anchor xml:id="_tasks_8c_source_1l00565"/>00565 <emphasis role="comment">&#32;*&#32;macro&#32;FREERTOS_TASKS_C_ADDITIONS_INIT()&#32;is&#32;defined,&#32;as&#32;that&#32;is&#32;the&#32;only&#32;macro</emphasis>
<anchor xml:id="_tasks_8c_source_1l00566"/>00566 <emphasis role="comment">&#32;*&#32;called&#32;by&#32;the&#32;function.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00567"/>00567 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00568"/>00568 <emphasis role="preprocessor">#ifdef&#32;FREERTOS_TASKS_C_ADDITIONS_INIT</emphasis>
<anchor xml:id="_tasks_8c_source_1l00569"/>00569 
<anchor xml:id="_tasks_8c_source_1l00570"/>00570 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;freertos_tasks_c_additions_init(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_tasks_8c_source_1l00571"/>00571 
<anchor xml:id="_tasks_8c_source_1l00572"/>00572 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00573"/>00573 
<anchor xml:id="_tasks_8c_source_1l00574"/>00574 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00575"/>00575 
<anchor xml:id="_tasks_8c_source_1l00576"/>00576 <emphasis role="preprocessor">#if(&#32;configSUPPORT_STATIC_ALLOCATION&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00577"/>00577 
<anchor xml:id="_tasks_8c_source_1l00578"/>00578 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTaskCreateStatic(&#32;<link linkend="_projdefs_8h_1a9b32502ff92c255c686dacde53c1cba0">TaskFunction_t</link>&#32;pxTaskCode,
<anchor xml:id="_tasks_8c_source_1l00579"/>00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pcName,&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*lint&#32;!e971&#32;Unqualified&#32;char&#32;types&#32;are&#32;allowed&#32;for&#32;strings&#32;and&#32;single&#32;characters&#32;only.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00580"/>00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint32_t&#32;ulStackDepth,
<anchor xml:id="_tasks_8c_source_1l00581"/>00581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pvParameters,
<anchor xml:id="_tasks_8c_source_1l00582"/>00582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxPriority,
<anchor xml:id="_tasks_8c_source_1l00583"/>00583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1aa73b01e0200940d619095fb74fb3030b">StackType_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;puxStackBuffer,
<anchor xml:id="_tasks_8c_source_1l00584"/>00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structx_s_t_a_t_i_c___t_c_b">StaticTask_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxTaskBuffer&#32;)
<anchor xml:id="_tasks_8c_source_1l00585"/>00585 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00586"/>00586 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxNewTCB;
<anchor xml:id="_tasks_8c_source_1l00587"/>00587 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l00588"/>00588 
<anchor xml:id="_tasks_8c_source_1l00589"/>00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;puxStackBuffer&#32;!=&#32;NULL&#32;);
<anchor xml:id="_tasks_8c_source_1l00590"/>00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxTaskBuffer&#32;!=&#32;NULL&#32;);
<anchor xml:id="_tasks_8c_source_1l00591"/>00591 
<anchor xml:id="_tasks_8c_source_1l00592"/>00592 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;configASSERT_DEFINED&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00594"/>00594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Sanity&#32;check&#32;that&#32;the&#32;size&#32;of&#32;the&#32;structure&#32;used&#32;to&#32;declare&#32;a</emphasis>
<anchor xml:id="_tasks_8c_source_1l00595"/>00595 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;variable&#32;of&#32;type&#32;StaticTask_t&#32;equals&#32;the&#32;size&#32;of&#32;the&#32;real&#32;task</emphasis>
<anchor xml:id="_tasks_8c_source_1l00596"/>00596 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;structure.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00597"/>00597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">volatile</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xSize&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<link linkend="__free_r_t_o_s_8h_1af0002e4ad72220b34b95fcdf43bcd82d">StaticTask_t</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xSize&#32;==&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l00599"/>00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;xSize;&#32;<emphasis role="comment">/*&#32;Prevent&#32;lint&#32;warning&#32;when&#32;configASSERT()&#32;is&#32;not&#32;used.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00601"/>00601 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configASSERT_DEFINED&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00602"/>00602 
<anchor xml:id="_tasks_8c_source_1l00603"/>00603 
<anchor xml:id="_tasks_8c_source_1l00604"/>00604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;pxTaskBuffer&#32;!=&#32;NULL&#32;)&#32;&amp;&amp;&#32;(&#32;puxStackBuffer&#32;!=&#32;NULL&#32;)&#32;)
<anchor xml:id="_tasks_8c_source_1l00605"/>00605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00606"/>00606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;memory&#32;used&#32;for&#32;the&#32;task&apos;s&#32;TCB&#32;and&#32;stack&#32;are&#32;passed&#32;into&#32;this</emphasis>
<anchor xml:id="_tasks_8c_source_1l00607"/>00607 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&#32;-&#32;use&#32;them.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00608"/>00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB&#32;=&#32;(&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*&#32;)&#32;pxTaskBuffer;&#32;<emphasis role="comment">/*lint&#32;!e740&#32;!e9087&#32;Unusual&#32;cast&#32;is&#32;ok&#32;as&#32;the&#32;structures&#32;are&#32;designed&#32;to&#32;have&#32;the&#32;same&#32;alignment,&#32;and&#32;the&#32;size&#32;is&#32;checked&#32;by&#32;an&#32;assert.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a9a0d71a9f95dd0609f9911d9efd79134">pxStack</link>&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1aa73b01e0200940d619095fb74fb3030b">StackType_t</link>&#32;*&#32;)&#32;puxStackBuffer;
<anchor xml:id="_tasks_8c_source_1l00610"/>00610 
<anchor xml:id="_tasks_8c_source_1l00611"/>00611 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE&#32;!=&#32;0&#32;)&#32;</emphasis><emphasis role="comment">/*lint&#32;!e731&#32;!e9029&#32;Macro&#32;has&#32;been&#32;consolidated&#32;for&#32;readability&#32;reasons.&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00612"/>00612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Tasks&#32;can&#32;be&#32;created&#32;statically&#32;or&#32;dynamically,&#32;so&#32;note&#32;this</emphasis>
<anchor xml:id="_tasks_8c_source_1l00614"/>00614 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;task&#32;was&#32;created&#32;statically&#32;in&#32;case&#32;the&#32;task&#32;is&#32;later&#32;deleted.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00615"/>00615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;ucStaticallyAllocated&#32;=&#32;<link linkend="_tasks_8c_1a9851e50775136d536fed623e1ac598aa">tskSTATICALLY_ALLOCATED_STACK_AND_TCB</link>;
<anchor xml:id="_tasks_8c_source_1l00616"/>00616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00617"/>00617 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00618"/>00618 
<anchor xml:id="_tasks_8c_source_1l00619"/>00619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a6c4d7ca7b68c92ae0d62edd7ecdd8e31">prvInitialiseNewTask</link>(&#32;pxTaskCode,&#32;pcName,&#32;ulStackDepth,&#32;pvParameters,&#32;uxPriority,&#32;&amp;xReturn,&#32;pxNewTCB,&#32;NULL&#32;);
<anchor xml:id="_tasks_8c_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a132d136b8d2586e0778ce369e5cb8a1e">prvAddNewTaskToReadyList</link>(&#32;pxNewTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;NULL;
<anchor xml:id="_tasks_8c_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00626"/>00626 
<anchor xml:id="_tasks_8c_source_1l00627"/>00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l00628"/>00628 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00629"/>00629 
<anchor xml:id="_tasks_8c_source_1l00630"/>00630 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;SUPPORT_STATIC_ALLOCATION&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00631"/>00631 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00632"/>00632 
<anchor xml:id="_tasks_8c_source_1l00633"/>00633 <emphasis role="preprocessor">#if(&#32;(&#32;portUSING_MPU_WRAPPERS&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configSUPPORT_STATIC_ALLOCATION&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00634"/>00634 
<anchor xml:id="_tasks_8c_source_1l00635"/>00635 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xTaskCreateRestrictedStatic(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s">TaskParameters_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxTaskDefinition,&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;*pxCreatedTask&#32;)
<anchor xml:id="_tasks_8c_source_1l00636"/>00636 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00637"/>00637 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxNewTCB;
<anchor xml:id="_tasks_8c_source_1l00638"/>00638 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a0b024e12cbca6f5018f5f1a43818b03d">errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY</link>;
<anchor xml:id="_tasks_8c_source_1l00639"/>00639 
<anchor xml:id="_tasks_8c_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxTaskDefinition-&gt;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1a946c525d3765369780538f9bc3f3586d">puxStackBuffer</link>&#32;!=&#32;NULL&#32;);
<anchor xml:id="_tasks_8c_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxTaskDefinition-&gt;pxTaskBuffer&#32;!=&#32;NULL&#32;);
<anchor xml:id="_tasks_8c_source_1l00642"/>00642 
<anchor xml:id="_tasks_8c_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;pxTaskDefinition-&gt;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1a946c525d3765369780538f9bc3f3586d">puxStackBuffer</link>&#32;!=&#32;NULL&#32;)&#32;&amp;&amp;&#32;(&#32;pxTaskDefinition-&gt;pxTaskBuffer&#32;!=&#32;NULL&#32;)&#32;)
<anchor xml:id="_tasks_8c_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Allocate&#32;space&#32;for&#32;the&#32;TCB.&#32;&#32;Where&#32;the&#32;memory&#32;comes&#32;from&#32;depends</emphasis>
<anchor xml:id="_tasks_8c_source_1l00646"/>00646 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;on&#32;the&#32;implementation&#32;of&#32;the&#32;port&#32;malloc&#32;function&#32;and&#32;whether&#32;or</emphasis>
<anchor xml:id="_tasks_8c_source_1l00647"/>00647 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;not&#32;static&#32;allocation&#32;is&#32;being&#32;used.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB&#32;=&#32;(&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*&#32;)&#32;pxTaskDefinition-&gt;pxTaskBuffer;
<anchor xml:id="_tasks_8c_source_1l00649"/>00649 
<anchor xml:id="_tasks_8c_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Store&#32;the&#32;stack&#32;location&#32;in&#32;the&#32;TCB.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00651"/>00651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a9a0d71a9f95dd0609f9911d9efd79134">pxStack</link>&#32;=&#32;pxTaskDefinition-&gt;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1a946c525d3765369780538f9bc3f3586d">puxStackBuffer</link>;
<anchor xml:id="_tasks_8c_source_1l00652"/>00652 
<anchor xml:id="_tasks_8c_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#<emphasis role="keywordflow">if</emphasis>(&#32;tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE&#32;!=&#32;0&#32;)
<anchor xml:id="_tasks_8c_source_1l00654"/>00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00655"/>00655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Tasks&#32;can&#32;be&#32;created&#32;statically&#32;or&#32;dynamically,&#32;so&#32;note&#32;this</emphasis>
<anchor xml:id="_tasks_8c_source_1l00656"/>00656 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;task&#32;was&#32;created&#32;statically&#32;in&#32;case&#32;the&#32;task&#32;is&#32;later&#32;deleted.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00657"/>00657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;ucStaticallyAllocated&#32;=&#32;<link linkend="_tasks_8c_1a9851e50775136d536fed623e1ac598aa">tskSTATICALLY_ALLOCATED_STACK_AND_TCB</link>;
<anchor xml:id="_tasks_8c_source_1l00658"/>00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00659"/>00659 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00660"/>00660 
<anchor xml:id="_tasks_8c_source_1l00661"/>00661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a6c4d7ca7b68c92ae0d62edd7ecdd8e31">prvInitialiseNewTask</link>(&#32;&#32;&#32;pxTaskDefinition-&gt;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1a7527993402054565cda38251c8922880">pvTaskCode</link>,
<anchor xml:id="_tasks_8c_source_1l00662"/>00662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskDefinition-&gt;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1a7b3e5583acf9de8bacac572a42246459">pcName</link>,
<anchor xml:id="_tasks_8c_source_1l00663"/>00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;uint32_t&#32;)&#32;pxTaskDefinition-&gt;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1ac2edb442cd1a9dc5435c7735ed99c83e">usStackDepth</link>,
<anchor xml:id="_tasks_8c_source_1l00664"/>00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskDefinition-&gt;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1accbb9f4de75b5b5be750198b52390c7f">pvParameters</link>,
<anchor xml:id="_tasks_8c_source_1l00665"/>00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskDefinition-&gt;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1aa1aff14035db645e2bdcc85b3cdc9bab">uxPriority</link>,
<anchor xml:id="_tasks_8c_source_1l00666"/>00666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxCreatedTask,&#32;pxNewTCB,
<anchor xml:id="_tasks_8c_source_1l00667"/>00667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskDefinition-&gt;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1ae8b97c6b7a344bf09b066b0844844d66">xRegions</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l00668"/>00668 
<anchor xml:id="_tasks_8c_source_1l00669"/>00669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a132d136b8d2586e0778ce369e5cb8a1e">prvAddNewTaskToReadyList</link>(&#32;pxNewTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l00670"/>00670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>;
<anchor xml:id="_tasks_8c_source_1l00671"/>00671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00672"/>00672 
<anchor xml:id="_tasks_8c_source_1l00673"/>00673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l00674"/>00674 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00675"/>00675 
<anchor xml:id="_tasks_8c_source_1l00676"/>00676 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;(&#32;portUSING_MPU_WRAPPERS&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configSUPPORT_STATIC_ALLOCATION&#32;==&#32;1&#32;)&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00677"/>00677 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00678"/>00678 
<anchor xml:id="_tasks_8c_source_1l00679"/>00679 <emphasis role="preprocessor">#if(&#32;(&#32;portUSING_MPU_WRAPPERS&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00680"/>00680 
<anchor xml:id="_tasks_8c_source_1l00681"/>00681 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xTaskCreateRestricted(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s">TaskParameters_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxTaskDefinition,&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;*pxCreatedTask&#32;)
<anchor xml:id="_tasks_8c_source_1l00682"/>00682 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00683"/>00683 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxNewTCB;
<anchor xml:id="_tasks_8c_source_1l00684"/>00684 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a0b024e12cbca6f5018f5f1a43818b03d">errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY</link>;
<anchor xml:id="_tasks_8c_source_1l00685"/>00685 
<anchor xml:id="_tasks_8c_source_1l00686"/>00686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxTaskDefinition-&gt;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1a946c525d3765369780538f9bc3f3586d">puxStackBuffer</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l00687"/>00687 
<anchor xml:id="_tasks_8c_source_1l00688"/>00688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTaskDefinition-&gt;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1a946c525d3765369780538f9bc3f3586d">puxStackBuffer</link>&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l00689"/>00689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00690"/>00690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Allocate&#32;space&#32;for&#32;the&#32;TCB.&#32;&#32;Where&#32;the&#32;memory&#32;comes&#32;from&#32;depends</emphasis>
<anchor xml:id="_tasks_8c_source_1l00691"/>00691 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;on&#32;the&#32;implementation&#32;of&#32;the&#32;port&#32;malloc&#32;function&#32;and&#32;whether&#32;or</emphasis>
<anchor xml:id="_tasks_8c_source_1l00692"/>00692 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;not&#32;static&#32;allocation&#32;is&#32;being&#32;used.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00693"/>00693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB&#32;=&#32;(&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*&#32;)&#32;<link linkend="_heap__3_8c_1ac56bcb7515f081a5b3df83935499fa4a">pvPortMalloc</link>(&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l00694"/>00694 
<anchor xml:id="_tasks_8c_source_1l00695"/>00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxNewTCB&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l00696"/>00696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00697"/>00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Store&#32;the&#32;stack&#32;location&#32;in&#32;the&#32;TCB.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00698"/>00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a9a0d71a9f95dd0609f9911d9efd79134">pxStack</link>&#32;=&#32;pxTaskDefinition-&gt;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1a946c525d3765369780538f9bc3f3586d">puxStackBuffer</link>;
<anchor xml:id="_tasks_8c_source_1l00699"/>00699 
<anchor xml:id="_tasks_8c_source_1l00700"/>00700 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE&#32;!=&#32;0&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00701"/>00701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00702"/>00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Tasks&#32;can&#32;be&#32;created&#32;statically&#32;or&#32;dynamically,&#32;so&#32;note</emphasis>
<anchor xml:id="_tasks_8c_source_1l00703"/>00703 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this&#32;task&#32;had&#32;a&#32;statically&#32;allocated&#32;stack&#32;in&#32;case&#32;it&#32;is</emphasis>
<anchor xml:id="_tasks_8c_source_1l00704"/>00704 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;later&#32;deleted.&#32;&#32;The&#32;TCB&#32;was&#32;allocated&#32;dynamically.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00705"/>00705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;ucStaticallyAllocated&#32;=&#32;<link linkend="_tasks_8c_1ad65be2320d426aca4e0e72d29ccd04de">tskSTATICALLY_ALLOCATED_STACK_ONLY</link>;
<anchor xml:id="_tasks_8c_source_1l00706"/>00706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00707"/>00707 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00708"/>00708 
<anchor xml:id="_tasks_8c_source_1l00709"/>00709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a6c4d7ca7b68c92ae0d62edd7ecdd8e31">prvInitialiseNewTask</link>(&#32;&#32;&#32;pxTaskDefinition-&gt;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1a7527993402054565cda38251c8922880">pvTaskCode</link>,
<anchor xml:id="_tasks_8c_source_1l00710"/>00710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskDefinition-&gt;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1a7b3e5583acf9de8bacac572a42246459">pcName</link>,
<anchor xml:id="_tasks_8c_source_1l00711"/>00711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;uint32_t&#32;)&#32;pxTaskDefinition-&gt;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1ac2edb442cd1a9dc5435c7735ed99c83e">usStackDepth</link>,
<anchor xml:id="_tasks_8c_source_1l00712"/>00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskDefinition-&gt;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1accbb9f4de75b5b5be750198b52390c7f">pvParameters</link>,
<anchor xml:id="_tasks_8c_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskDefinition-&gt;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1aa1aff14035db645e2bdcc85b3cdc9bab">uxPriority</link>,
<anchor xml:id="_tasks_8c_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxCreatedTask,&#32;pxNewTCB,
<anchor xml:id="_tasks_8c_source_1l00715"/>00715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskDefinition-&gt;<link linkend="_structx_t_a_s_k___p_a_r_a_m_e_t_e_r_s_1ae8b97c6b7a344bf09b066b0844844d66">xRegions</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l00716"/>00716 
<anchor xml:id="_tasks_8c_source_1l00717"/>00717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a132d136b8d2586e0778ce369e5cb8a1e">prvAddNewTaskToReadyList</link>(&#32;pxNewTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l00718"/>00718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>;
<anchor xml:id="_tasks_8c_source_1l00719"/>00719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00720"/>00720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00721"/>00721 
<anchor xml:id="_tasks_8c_source_1l00722"/>00722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l00723"/>00723 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00724"/>00724 
<anchor xml:id="_tasks_8c_source_1l00725"/>00725 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;portUSING_MPU_WRAPPERS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00726"/>00726 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00727"/>00727 
<anchor xml:id="_tasks_8c_source_1l00728"/>00728 <emphasis role="preprocessor">#if(&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00729"/>00729 
<anchor xml:id="_tasks_8c_source_1l00730"/><link linkend="_tasks_8c_1ad138d9dda4709b10d711775fa40eb1a1">00730</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_tasks_8c_1ad138d9dda4709b10d711775fa40eb1a1">xTaskCreate</link>(&#32;<link linkend="_projdefs_8h_1a9b32502ff92c255c686dacde53c1cba0">TaskFunction_t</link>&#32;pxTaskCode,
<anchor xml:id="_tasks_8c_source_1l00731"/>00731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pcName,&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*lint&#32;!e971&#32;Unqualified&#32;char&#32;types&#32;are&#32;allowed&#32;for&#32;strings&#32;and&#32;single&#32;characters&#32;only.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00732"/>00732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__free_r_t_o_s_8h_1ae4e85bffd36d76cf2796092f0ccd784a">configSTACK_DEPTH_TYPE</link>&#32;usStackDepth,
<anchor xml:id="_tasks_8c_source_1l00733"/>00733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pvParameters,
<anchor xml:id="_tasks_8c_source_1l00734"/>00734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxPriority,
<anchor xml:id="_tasks_8c_source_1l00735"/>00735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxCreatedTask&#32;)
<anchor xml:id="_tasks_8c_source_1l00736"/>00736 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00737"/>00737 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxNewTCB;
<anchor xml:id="_tasks_8c_source_1l00738"/>00738 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l00739"/>00739 
<anchor xml:id="_tasks_8c_source_1l00740"/>00740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;stack&#32;grows&#32;down&#32;then&#32;allocate&#32;the&#32;stack&#32;then&#32;the&#32;TCB&#32;so&#32;the&#32;stack</emphasis>
<anchor xml:id="_tasks_8c_source_1l00741"/>00741 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;does&#32;not&#32;grow&#32;into&#32;the&#32;TCB.&#32;&#32;Likewise&#32;if&#32;the&#32;stack&#32;grows&#32;up&#32;then&#32;allocate</emphasis>
<anchor xml:id="_tasks_8c_source_1l00742"/>00742 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;TCB&#32;then&#32;the&#32;stack.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00743"/>00743 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;portSTACK_GROWTH&#32;&gt;&#32;0&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00744"/>00744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00745"/>00745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Allocate&#32;space&#32;for&#32;the&#32;TCB.&#32;&#32;Where&#32;the&#32;memory&#32;comes&#32;from&#32;depends&#32;on</emphasis>
<anchor xml:id="_tasks_8c_source_1l00746"/>00746 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;implementation&#32;of&#32;the&#32;port&#32;malloc&#32;function&#32;and&#32;whether&#32;or&#32;not&#32;static</emphasis>
<anchor xml:id="_tasks_8c_source_1l00747"/>00747 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allocation&#32;is&#32;being&#32;used.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00748"/>00748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB&#32;=&#32;(&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*&#32;)&#32;<link linkend="_heap__3_8c_1ac56bcb7515f081a5b3df83935499fa4a">pvPortMalloc</link>(&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l00749"/>00749 
<anchor xml:id="_tasks_8c_source_1l00750"/>00750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxNewTCB&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l00751"/>00751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00752"/>00752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Allocate&#32;space&#32;for&#32;the&#32;stack&#32;used&#32;by&#32;the&#32;task&#32;being&#32;created.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00753"/>00753 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;base&#32;of&#32;the&#32;stack&#32;memory&#32;stored&#32;in&#32;the&#32;TCB&#32;so&#32;the&#32;task&#32;can</emphasis>
<anchor xml:id="_tasks_8c_source_1l00754"/>00754 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;be&#32;deleted&#32;later&#32;if&#32;required.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00755"/>00755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a9a0d71a9f95dd0609f9911d9efd79134">pxStack</link>&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1aa73b01e0200940d619095fb74fb3030b">StackType_t</link>&#32;*&#32;)&#32;<link linkend="_heap__3_8c_1ac56bcb7515f081a5b3df83935499fa4a">pvPortMalloc</link>(&#32;(&#32;(&#32;(&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;)&#32;usStackDepth&#32;)&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<link linkend="_portmacro_8h_1aa73b01e0200940d619095fb74fb3030b">StackType_t</link>&#32;)&#32;)&#32;);&#32;<emphasis role="comment">/*lint&#32;!e961&#32;MISRA&#32;exception&#32;as&#32;the&#32;casts&#32;are&#32;only&#32;redundant&#32;for&#32;some&#32;ports.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00756"/>00756 
<anchor xml:id="_tasks_8c_source_1l00757"/>00757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a9a0d71a9f95dd0609f9911d9efd79134">pxStack</link>&#32;==&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l00758"/>00758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00759"/>00759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Could&#32;not&#32;allocate&#32;the&#32;stack.&#32;&#32;Delete&#32;the&#32;allocated&#32;TCB.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00760"/>00760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_heap__3_8c_1a1e7cea2fd1bc894ea3b5f5e8179d259b">vPortFree</link>(&#32;pxNewTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l00761"/>00761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB&#32;=&#32;NULL;
<anchor xml:id="_tasks_8c_source_1l00762"/>00762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00763"/>00763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00764"/>00764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00765"/>00765 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else&#32;</emphasis><emphasis role="comment">/*&#32;portSTACK_GROWTH&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00766"/>00766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00767"/>00767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1aa73b01e0200940d619095fb74fb3030b">StackType_t</link>&#32;*pxStack;
<anchor xml:id="_tasks_8c_source_1l00768"/>00768 
<anchor xml:id="_tasks_8c_source_1l00769"/>00769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Allocate&#32;space&#32;for&#32;the&#32;stack&#32;used&#32;by&#32;the&#32;task&#32;being&#32;created.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00770"/>00770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxStack&#32;=&#32;<link linkend="_heap__3_8c_1ac56bcb7515f081a5b3df83935499fa4a">pvPortMalloc</link>(&#32;(&#32;(&#32;(&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;)&#32;usStackDepth&#32;)&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<link linkend="_portmacro_8h_1aa73b01e0200940d619095fb74fb3030b">StackType_t</link>&#32;)&#32;)&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9079&#32;All&#32;values&#32;returned&#32;by&#32;pvPortMalloc()&#32;have&#32;at&#32;least&#32;the&#32;alignment&#32;required&#32;by&#32;the&#32;MCU&apos;s&#32;stack&#32;and&#32;this&#32;allocation&#32;is&#32;the&#32;stack.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00771"/>00771 
<anchor xml:id="_tasks_8c_source_1l00772"/>00772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxStack&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l00773"/>00773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00774"/>00774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Allocate&#32;space&#32;for&#32;the&#32;TCB.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00775"/>00775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB&#32;=&#32;(&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*&#32;)&#32;<link linkend="_heap__3_8c_1ac56bcb7515f081a5b3df83935499fa4a">pvPortMalloc</link>(&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;)&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9087&#32;!e9079&#32;All&#32;values&#32;returned&#32;by&#32;pvPortMalloc()&#32;have&#32;at&#32;least&#32;the&#32;alignment&#32;required&#32;by&#32;the&#32;MCU&apos;s&#32;stack,&#32;and&#32;the&#32;first&#32;member&#32;of&#32;TCB_t&#32;is&#32;always&#32;a&#32;pointer&#32;to&#32;the&#32;task&apos;s&#32;stack.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00776"/>00776 
<anchor xml:id="_tasks_8c_source_1l00777"/>00777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxNewTCB&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l00778"/>00778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00779"/>00779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Store&#32;the&#32;stack&#32;location&#32;in&#32;the&#32;TCB.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00780"/>00780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a9a0d71a9f95dd0609f9911d9efd79134">pxStack</link>&#32;=&#32;pxStack;
<anchor xml:id="_tasks_8c_source_1l00781"/>00781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00782"/>00782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l00783"/>00783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00784"/>00784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;stack&#32;cannot&#32;be&#32;used&#32;as&#32;the&#32;TCB&#32;was&#32;not&#32;created.&#32;&#32;Free</emphasis>
<anchor xml:id="_tasks_8c_source_1l00785"/>00785 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it&#32;again.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00786"/>00786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_heap__3_8c_1a1e7cea2fd1bc894ea3b5f5e8179d259b">vPortFree</link>(&#32;pxStack&#32;);
<anchor xml:id="_tasks_8c_source_1l00787"/>00787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00788"/>00788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00789"/>00789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l00790"/>00790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00791"/>00791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB&#32;=&#32;NULL;
<anchor xml:id="_tasks_8c_source_1l00792"/>00792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00793"/>00793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00794"/>00794 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;portSTACK_GROWTH&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00795"/>00795 
<anchor xml:id="_tasks_8c_source_1l00796"/>00796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxNewTCB&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l00797"/>00797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00798"/>00798 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE&#32;!=&#32;0&#32;)&#32;</emphasis><emphasis role="comment">/*lint&#32;!e9029&#32;!e731&#32;Macro&#32;has&#32;been&#32;consolidated&#32;for&#32;readability&#32;reasons.&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00799"/>00799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00800"/>00800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Tasks&#32;can&#32;be&#32;created&#32;statically&#32;or&#32;dynamically,&#32;so&#32;note&#32;this</emphasis>
<anchor xml:id="_tasks_8c_source_1l00801"/>00801 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;task&#32;was&#32;created&#32;dynamically&#32;in&#32;case&#32;it&#32;is&#32;later&#32;deleted.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00802"/>00802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;ucStaticallyAllocated&#32;=&#32;<link linkend="_tasks_8c_1af06a1633d2fb92f67712e62f3d1c3777">tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB</link>;
<anchor xml:id="_tasks_8c_source_1l00803"/>00803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00804"/>00804 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00805"/>00805 
<anchor xml:id="_tasks_8c_source_1l00806"/>00806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a6c4d7ca7b68c92ae0d62edd7ecdd8e31">prvInitialiseNewTask</link>(&#32;pxTaskCode,&#32;pcName,&#32;(&#32;uint32_t&#32;)&#32;usStackDepth,&#32;pvParameters,&#32;uxPriority,&#32;pxCreatedTask,&#32;pxNewTCB,&#32;NULL&#32;);
<anchor xml:id="_tasks_8c_source_1l00807"/>00807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a132d136b8d2586e0778ce369e5cb8a1e">prvAddNewTaskToReadyList</link>(&#32;pxNewTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l00808"/>00808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>;
<anchor xml:id="_tasks_8c_source_1l00809"/>00809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00810"/>00810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l00811"/>00811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00812"/>00812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a0b024e12cbca6f5018f5f1a43818b03d">errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY</link>;
<anchor xml:id="_tasks_8c_source_1l00813"/>00813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00814"/>00814 
<anchor xml:id="_tasks_8c_source_1l00815"/>00815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l00816"/>00816 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00817"/>00817 
<anchor xml:id="_tasks_8c_source_1l00818"/>00818 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00819"/>00819 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00820"/>00820 
<anchor xml:id="_tasks_8c_source_1l00821"/><link linkend="_tasks_8c_1a6c4d7ca7b68c92ae0d62edd7ecdd8e31">00821</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1a6c4d7ca7b68c92ae0d62edd7ecdd8e31">prvInitialiseNewTask</link>(&#32;&#32;&#32;<link linkend="_projdefs_8h_1a9b32502ff92c255c686dacde53c1cba0">TaskFunction_t</link>&#32;pxTaskCode,
<anchor xml:id="_tasks_8c_source_1l00822"/>00822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pcName,&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*lint&#32;!e971&#32;Unqualified&#32;char&#32;types&#32;are&#32;allowed&#32;for&#32;strings&#32;and&#32;single&#32;characters&#32;only.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00823"/>00823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint32_t&#32;ulStackDepth,
<anchor xml:id="_tasks_8c_source_1l00824"/>00824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pvParameters,
<anchor xml:id="_tasks_8c_source_1l00825"/>00825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxPriority,
<anchor xml:id="_tasks_8c_source_1l00826"/>00826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxCreatedTask,
<anchor xml:id="_tasks_8c_source_1l00827"/>00827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxNewTCB,
<anchor xml:id="_tasks_8c_source_1l00828"/>00828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structx_m_e_m_o_r_y___r_e_g_i_o_n">MemoryRegion_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;xRegions&#32;)
<anchor xml:id="_tasks_8c_source_1l00829"/>00829 {
<anchor xml:id="_tasks_8c_source_1l00830"/>00830 <link linkend="_portmacro_8h_1aa73b01e0200940d619095fb74fb3030b">StackType_t</link>&#32;*pxTopOfStack;
<anchor xml:id="_tasks_8c_source_1l00831"/>00831 <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;x;
<anchor xml:id="_tasks_8c_source_1l00832"/>00832 
<anchor xml:id="_tasks_8c_source_1l00833"/>00833 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if(&#32;portUSING_MPU_WRAPPERS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00834"/>00834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Should&#32;the&#32;task&#32;be&#32;created&#32;in&#32;privileged&#32;mode?&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00835"/>00835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xRunPrivileged;
<anchor xml:id="_tasks_8c_source_1l00836"/>00836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;uxPriority&#32;&amp;&#32;<link linkend="__free_r_t_o_s_8h_1a27b7e11718b2ec5b5217e60f3b9e8aec">portPRIVILEGE_BIT</link>&#32;)&#32;!=&#32;0U&#32;)
<anchor xml:id="_tasks_8c_source_1l00837"/>00837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00838"/>00838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xRunPrivileged&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l00839"/>00839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00840"/>00840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l00841"/>00841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00842"/>00842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xRunPrivileged&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_tasks_8c_source_1l00843"/>00843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00844"/>00844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxPriority&#32;&amp;=&#32;~portPRIVILEGE_BIT;
<anchor xml:id="_tasks_8c_source_1l00845"/>00845 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;portUSING_MPU_WRAPPERS&#32;==&#32;1&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00846"/>00846 
<anchor xml:id="_tasks_8c_source_1l00847"/>00847 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Avoid&#32;dependency&#32;on&#32;memset()&#32;if&#32;it&#32;is&#32;not&#32;required.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00848"/>00848 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if(&#32;tskSET_NEW_STACKS_TO_KNOWN_VALUE&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00849"/>00849 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00850"/>00850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Fill&#32;the&#32;stack&#32;with&#32;a&#32;known&#32;value&#32;to&#32;assist&#32;debugging.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00851"/>00851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;memset(&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a9a0d71a9f95dd0609f9911d9efd79134">pxStack</link>,&#32;(&#32;<emphasis role="keywordtype">int</emphasis>&#32;)&#32;<link linkend="_tasks_8c_1ad3b1c99066f14855be098ccca1685fac">tskSTACK_FILL_BYTE</link>,&#32;(&#32;size_t&#32;)&#32;ulStackDepth&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<link linkend="_portmacro_8h_1aa73b01e0200940d619095fb74fb3030b">StackType_t</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l00852"/>00852 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00853"/>00853 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;tskSET_NEW_STACKS_TO_KNOWN_VALUE&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00854"/>00854 
<anchor xml:id="_tasks_8c_source_1l00855"/>00855 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Calculate&#32;the&#32;top&#32;of&#32;stack&#32;address.&#32;&#32;This&#32;depends&#32;on&#32;whether&#32;the&#32;stack</emphasis>
<anchor xml:id="_tasks_8c_source_1l00856"/>00856 <emphasis role="comment">&#32;&#32;&#32;&#32;grows&#32;from&#32;high&#32;memory&#32;to&#32;low&#32;(as&#32;per&#32;the&#32;80x86)&#32;or&#32;vice&#32;versa.</emphasis>
<anchor xml:id="_tasks_8c_source_1l00857"/>00857 <emphasis role="comment">&#32;&#32;&#32;&#32;portSTACK_GROWTH&#32;is&#32;used&#32;to&#32;make&#32;the&#32;result&#32;positive&#32;or&#32;negative&#32;as&#32;required</emphasis>
<anchor xml:id="_tasks_8c_source_1l00858"/>00858 <emphasis role="comment">&#32;&#32;&#32;&#32;by&#32;the&#32;port.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00859"/>00859 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if(&#32;portSTACK_GROWTH&#32;&lt;&#32;0&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00860"/>00860 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00861"/>00861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTopOfStack&#32;=&#32;&amp;(&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a9a0d71a9f95dd0609f9911d9efd79134">pxStack</link>[&#32;ulStackDepth&#32;-&#32;(&#32;uint32_t&#32;)&#32;1&#32;]&#32;);
<anchor xml:id="_tasks_8c_source_1l00862"/>00862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTopOfStack&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1aa73b01e0200940d619095fb74fb3030b">StackType_t</link>&#32;*&#32;)&#32;(&#32;(&#32;(&#32;<link linkend="__free_r_t_o_s_8h_1a53bae25f223b7156dce0fc6e6b1b2295">portPOINTER_SIZE_TYPE</link>&#32;)&#32;pxTopOfStack&#32;)&#32;&amp;&#32;(&#32;~(&#32;(&#32;<link linkend="__free_r_t_o_s_8h_1a53bae25f223b7156dce0fc6e6b1b2295">portPOINTER_SIZE_TYPE</link>&#32;)&#32;<link linkend="_portable_8h_1a92f6cfc08bf7459db3227a18ae8b6b59">portBYTE_ALIGNMENT_MASK</link>&#32;)&#32;)&#32;);&#32;<emphasis role="comment">/*lint&#32;!e923&#32;!e9033&#32;!e9078&#32;MISRA&#32;exception.&#32;&#32;Avoiding&#32;casts&#32;between&#32;pointers&#32;and&#32;integers&#32;is&#32;not&#32;practical.&#32;&#32;Size&#32;differences&#32;accounted&#32;for&#32;using&#32;portPOINTER_SIZE_TYPE&#32;type.&#32;&#32;Checked&#32;by&#32;assert().&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00863"/>00863 
<anchor xml:id="_tasks_8c_source_1l00864"/>00864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Check&#32;the&#32;alignment&#32;of&#32;the&#32;calculated&#32;top&#32;of&#32;stack&#32;is&#32;correct.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00865"/>00865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;(&#32;(&#32;(&#32;<link linkend="__free_r_t_o_s_8h_1a53bae25f223b7156dce0fc6e6b1b2295">portPOINTER_SIZE_TYPE</link>&#32;)&#32;pxTopOfStack&#32;&amp;&#32;(&#32;<link linkend="__free_r_t_o_s_8h_1a53bae25f223b7156dce0fc6e6b1b2295">portPOINTER_SIZE_TYPE</link>&#32;)&#32;<link linkend="_portable_8h_1a92f6cfc08bf7459db3227a18ae8b6b59">portBYTE_ALIGNMENT_MASK</link>&#32;)&#32;==&#32;0UL&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l00866"/>00866 
<anchor xml:id="_tasks_8c_source_1l00867"/>00867 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;configRECORD_STACK_HIGH_ADDRESS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00868"/>00868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00869"/>00869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Also&#32;record&#32;the&#32;stack&apos;s&#32;high&#32;address,&#32;which&#32;may&#32;assist</emphasis>
<anchor xml:id="_tasks_8c_source_1l00870"/>00870 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debugging.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00871"/>00871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;pxEndOfStack&#32;=&#32;pxTopOfStack;
<anchor xml:id="_tasks_8c_source_1l00872"/>00872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00873"/>00873 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configRECORD_STACK_HIGH_ADDRESS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00874"/>00874 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00875"/>00875 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#else&#32;</emphasis><emphasis role="comment">/*&#32;portSTACK_GROWTH&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00876"/>00876 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00877"/>00877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTopOfStack&#32;=&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a9a0d71a9f95dd0609f9911d9efd79134">pxStack</link>;
<anchor xml:id="_tasks_8c_source_1l00878"/>00878 
<anchor xml:id="_tasks_8c_source_1l00879"/>00879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Check&#32;the&#32;alignment&#32;of&#32;the&#32;stack&#32;buffer&#32;is&#32;correct.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00880"/>00880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;(&#32;(&#32;(&#32;<link linkend="__free_r_t_o_s_8h_1a53bae25f223b7156dce0fc6e6b1b2295">portPOINTER_SIZE_TYPE</link>&#32;)&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a9a0d71a9f95dd0609f9911d9efd79134">pxStack</link>&#32;&amp;&#32;(&#32;<link linkend="__free_r_t_o_s_8h_1a53bae25f223b7156dce0fc6e6b1b2295">portPOINTER_SIZE_TYPE</link>&#32;)&#32;<link linkend="_portable_8h_1a92f6cfc08bf7459db3227a18ae8b6b59">portBYTE_ALIGNMENT_MASK</link>&#32;)&#32;==&#32;0UL&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l00881"/>00881 
<anchor xml:id="_tasks_8c_source_1l00882"/>00882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;other&#32;extreme&#32;of&#32;the&#32;stack&#32;space&#32;is&#32;required&#32;if&#32;stack&#32;checking&#32;is</emphasis>
<anchor xml:id="_tasks_8c_source_1l00883"/>00883 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;performed.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00884"/>00884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;pxEndOfStack&#32;=&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a9a0d71a9f95dd0609f9911d9efd79134">pxStack</link>&#32;+&#32;(&#32;ulStackDepth&#32;-&#32;(&#32;uint32_t&#32;)&#32;1&#32;);
<anchor xml:id="_tasks_8c_source_1l00885"/>00885 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00886"/>00886 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;portSTACK_GROWTH&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00887"/>00887 
<anchor xml:id="_tasks_8c_source_1l00888"/>00888 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Store&#32;the&#32;task&#32;name&#32;in&#32;the&#32;TCB.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00889"/>00889 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pcName&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l00890"/>00890 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00891"/>00891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;x&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0;&#32;x&#32;&lt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="__free_r_t_o_s_config__default_8h_1ac388dc4041aab6997348828eb27fc1a8">configMAX_TASK_NAME_LEN</link>;&#32;x++&#32;)
<anchor xml:id="_tasks_8c_source_1l00892"/>00892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00893"/>00893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1affa468d3857e94ddeeea03b1d454778b">pcTaskName</link>[&#32;x&#32;]&#32;=&#32;pcName[&#32;x&#32;];
<anchor xml:id="_tasks_8c_source_1l00894"/>00894 
<anchor xml:id="_tasks_8c_source_1l00895"/>00895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Don&apos;t&#32;copy&#32;all&#32;configMAX_TASK_NAME_LEN&#32;if&#32;the&#32;string&#32;is&#32;shorter&#32;than</emphasis>
<anchor xml:id="_tasks_8c_source_1l00896"/>00896 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;configMAX_TASK_NAME_LEN&#32;characters&#32;just&#32;in&#32;case&#32;the&#32;memory&#32;after&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l00897"/>00897 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;string&#32;is&#32;not&#32;accessible&#32;(extremely&#32;unlikely).&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00898"/>00898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pcName[&#32;x&#32;]&#32;==&#32;(&#32;<emphasis role="keywordtype">char</emphasis>&#32;)&#32;0x00&#32;)
<anchor xml:id="_tasks_8c_source_1l00899"/>00899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00900"/>00900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_tasks_8c_source_1l00901"/>00901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00902"/>00902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l00903"/>00903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00904"/>00904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l00905"/>00905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00906"/>00906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00907"/>00907 
<anchor xml:id="_tasks_8c_source_1l00908"/>00908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Ensure&#32;the&#32;name&#32;string&#32;is&#32;terminated&#32;in&#32;the&#32;case&#32;that&#32;the&#32;string&#32;length</emphasis>
<anchor xml:id="_tasks_8c_source_1l00909"/>00909 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;was&#32;greater&#32;or&#32;equal&#32;to&#32;configMAX_TASK_NAME_LEN.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00910"/>00910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1affa468d3857e94ddeeea03b1d454778b">pcTaskName</link>[&#32;<link linkend="__free_r_t_o_s_config__default_8h_1ac388dc4041aab6997348828eb27fc1a8">configMAX_TASK_NAME_LEN</link>&#32;-&#32;1&#32;]&#32;=&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>;
<anchor xml:id="_tasks_8c_source_1l00911"/>00911 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00912"/>00912 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l00913"/>00913 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00914"/>00914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;has&#32;not&#32;been&#32;given&#32;a&#32;name,&#32;so&#32;just&#32;ensure&#32;there&#32;is&#32;a&#32;NULL</emphasis>
<anchor xml:id="_tasks_8c_source_1l00915"/>00915 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;terminator&#32;when&#32;it&#32;is&#32;read&#32;out.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00916"/>00916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1affa468d3857e94ddeeea03b1d454778b">pcTaskName</link>[&#32;0&#32;]&#32;=&#32;0x00;
<anchor xml:id="_tasks_8c_source_1l00917"/>00917 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00918"/>00918 
<anchor xml:id="_tasks_8c_source_1l00919"/>00919 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;is&#32;used&#32;as&#32;an&#32;array&#32;index&#32;so&#32;must&#32;ensure&#32;it&apos;s&#32;not&#32;too&#32;large.&#32;&#32;First</emphasis>
<anchor xml:id="_tasks_8c_source_1l00920"/>00920 <emphasis role="comment">&#32;&#32;&#32;&#32;remove&#32;the&#32;privilege&#32;bit&#32;if&#32;one&#32;is&#32;present.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00921"/>00921 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;uxPriority&#32;&gt;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="__free_r_t_o_s_config__default_8h_1a9a78f5ac61e6cb172dadf2a51f11db38">configMAX_PRIORITIES</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l00922"/>00922 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00923"/>00923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxPriority&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="__free_r_t_o_s_config__default_8h_1a9a78f5ac61e6cb172dadf2a51f11db38">configMAX_PRIORITIES</link>&#32;-&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;1U;
<anchor xml:id="_tasks_8c_source_1l00924"/>00924 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00925"/>00925 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l00926"/>00926 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00927"/>00927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l00928"/>00928 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00929"/>00929 
<anchor xml:id="_tasks_8c_source_1l00930"/>00930 &#32;&#32;&#32;&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;=&#32;uxPriority;
<anchor xml:id="_tasks_8c_source_1l00931"/>00931 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_MUTEXES&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00932"/>00932 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00933"/>00933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a3ce2f9306ee315873114616fb49a0ed2">uxBasePriority</link>&#32;=&#32;uxPriority;
<anchor xml:id="_tasks_8c_source_1l00934"/>00934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a405a8451e393290ef92337cd77a3bf1f">uxMutexesHeld</link>&#32;=&#32;0;
<anchor xml:id="_tasks_8c_source_1l00935"/>00935 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00936"/>00936 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_MUTEXES&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00937"/>00937 
<anchor xml:id="_tasks_8c_source_1l00938"/>00938 &#32;&#32;&#32;&#32;<link linkend="_list_8c_1a43e37223a86f5d0688ac4470d3106e87">vListInitialiseItem</link>(&#32;&amp;(&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l00939"/>00939 &#32;&#32;&#32;&#32;<link linkend="_list_8c_1a43e37223a86f5d0688ac4470d3106e87">vListInitialiseItem</link>(&#32;&amp;(&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l00940"/>00940 
<anchor xml:id="_tasks_8c_source_1l00941"/>00941 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Set&#32;the&#32;pxNewTCB&#32;as&#32;a&#32;link&#32;back&#32;from&#32;the&#32;ListItem_t.&#32;&#32;This&#32;is&#32;so&#32;we&#32;can&#32;get</emphasis>
<anchor xml:id="_tasks_8c_source_1l00942"/>00942 <emphasis role="comment">&#32;&#32;&#32;&#32;back&#32;to&#32;the&#32;containing&#32;TCB&#32;from&#32;a&#32;generic&#32;item&#32;in&#32;a&#32;list.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00943"/>00943 &#32;&#32;&#32;&#32;<link linkend="_list_8h_1acc01a08e534b54fe438847ef02e5060a">listSET_LIST_ITEM_OWNER</link>(&#32;&amp;(&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;),&#32;pxNewTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l00944"/>00944 
<anchor xml:id="_tasks_8c_source_1l00945"/>00945 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Event&#32;lists&#32;are&#32;always&#32;in&#32;priority&#32;order.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00946"/>00946 &#32;&#32;&#32;&#32;<link linkend="_list_8h_1a83e95e61652f032fdc26aa622f5e2610">listSET_LIST_ITEM_VALUE</link>(&#32;&amp;(&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;),&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;<link linkend="__free_r_t_o_s_config__default_8h_1a9a78f5ac61e6cb172dadf2a51f11db38">configMAX_PRIORITIES</link>&#32;-&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;uxPriority&#32;);&#32;<emphasis role="comment">/*lint&#32;!e961&#32;MISRA&#32;exception&#32;as&#32;the&#32;casts&#32;are&#32;only&#32;redundant&#32;for&#32;some&#32;ports.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00947"/>00947 &#32;&#32;&#32;&#32;<link linkend="_list_8h_1acc01a08e534b54fe438847ef02e5060a">listSET_LIST_ITEM_OWNER</link>(&#32;&amp;(&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;),&#32;pxNewTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l00948"/>00948 
<anchor xml:id="_tasks_8c_source_1l00949"/>00949 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;portCRITICAL_NESTING_IN_TCB&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00950"/>00950 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00951"/>00951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;uxCriticalNesting&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0U;
<anchor xml:id="_tasks_8c_source_1l00952"/>00952 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00953"/>00953 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;portCRITICAL_NESTING_IN_TCB&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00954"/>00954 
<anchor xml:id="_tasks_8c_source_1l00955"/>00955 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_APPLICATION_TASK_TAG&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00956"/>00956 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00957"/>00957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;pxTaskTag&#32;=&#32;NULL;
<anchor xml:id="_tasks_8c_source_1l00958"/>00958 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00959"/>00959 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_APPLICATION_TASK_TAG&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00960"/>00960 
<anchor xml:id="_tasks_8c_source_1l00961"/>00961 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;configGENERATE_RUN_TIME_STATS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00962"/>00962 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00963"/>00963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;ulRunTimeCounter&#32;=&#32;0UL;
<anchor xml:id="_tasks_8c_source_1l00964"/>00964 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00965"/>00965 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configGENERATE_RUN_TIME_STATS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l00966"/>00966 
<anchor xml:id="_tasks_8c_source_1l00967"/>00967 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;portUSING_MPU_WRAPPERS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00968"/>00968 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00969"/>00969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vPortStoreTaskMPUSettings(&#32;&amp;(&#32;pxNewTCB-&gt;xMPUSettings&#32;),&#32;xRegions,&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a9a0d71a9f95dd0609f9911d9efd79134">pxStack</link>,&#32;ulStackDepth&#32;);
<anchor xml:id="_tasks_8c_source_1l00970"/>00970 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00971"/>00971 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="_tasks_8c_source_1l00972"/>00972 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00973"/>00973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Avoid&#32;compiler&#32;warning&#32;about&#32;unreferenced&#32;parameter.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00974"/>00974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;xRegions;
<anchor xml:id="_tasks_8c_source_1l00975"/>00975 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00976"/>00976 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00977"/>00977 
<anchor xml:id="_tasks_8c_source_1l00978"/>00978 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if(&#32;configNUM_THREAD_LOCAL_STORAGE_POINTERS&#32;!=&#32;0&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00979"/>00979 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00980"/>00980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;x&#32;=&#32;0;&#32;x&#32;&lt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="__free_r_t_o_s_config__default_8h_1a8d32b5f74e55dfd12c5aa3415e16d75e">configNUM_THREAD_LOCAL_STORAGE_POINTERS</link>;&#32;x++&#32;)
<anchor xml:id="_tasks_8c_source_1l00981"/>00981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00982"/>00982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1afa9621ce7433273ee2842a637cccb69e">pvThreadLocalStoragePointers</link>[&#32;x&#32;]&#32;=&#32;NULL;
<anchor xml:id="_tasks_8c_source_1l00983"/>00983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00984"/>00984 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00985"/>00985 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00986"/>00986 
<anchor xml:id="_tasks_8c_source_1l00987"/>00987 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_TASK_NOTIFICATIONS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00988"/>00988 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00989"/>00989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a7c571b992f90bfe77414cab060ca2af8">ulNotifiedValue</link>&#32;=&#32;0;
<anchor xml:id="_tasks_8c_source_1l00990"/>00990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1adab5291f06b774ed8f5bb6f76a77496f">ucNotifyState</link>&#32;=&#32;<link linkend="_tasks_8c_1a4f2f023143b2cd2367a441e104f8cf2c">taskNOT_WAITING_NOTIFICATION</link>;
<anchor xml:id="_tasks_8c_source_1l00991"/>00991 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00992"/>00992 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l00993"/>00993 
<anchor xml:id="_tasks_8c_source_1l00994"/>00994 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_NEWLIB_REENTRANT&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l00995"/>00995 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l00996"/>00996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Initialise&#32;this&#32;task&apos;s&#32;Newlib&#32;reent&#32;structure.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l00997"/>00997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_REENT_INIT_PTR(&#32;(&#32;&amp;(&#32;pxNewTCB-&gt;xNewLib_reent&#32;)&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l00998"/>00998 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l00999"/>00999 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l01000"/>01000 
<anchor xml:id="_tasks_8c_source_1l01001"/>01001 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if(&#32;INCLUDE_xTaskAbortDelay&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01002"/>01002 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01003"/>01003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;ucDelayAborted&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_tasks_8c_source_1l01004"/>01004 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01005"/>01005 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l01006"/>01006 
<anchor xml:id="_tasks_8c_source_1l01007"/>01007 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Initialize&#32;the&#32;TCB&#32;stack&#32;to&#32;look&#32;as&#32;if&#32;the&#32;task&#32;was&#32;already&#32;running,</emphasis>
<anchor xml:id="_tasks_8c_source_1l01008"/>01008 <emphasis role="comment">&#32;&#32;&#32;&#32;but&#32;had&#32;been&#32;interrupted&#32;by&#32;the&#32;scheduler.&#32;&#32;The&#32;return&#32;address&#32;is&#32;set</emphasis>
<anchor xml:id="_tasks_8c_source_1l01009"/>01009 <emphasis role="comment">&#32;&#32;&#32;&#32;to&#32;the&#32;start&#32;of&#32;the&#32;task&#32;function.&#32;Once&#32;the&#32;stack&#32;has&#32;been&#32;initialised</emphasis>
<anchor xml:id="_tasks_8c_source_1l01010"/>01010 <emphasis role="comment">&#32;&#32;&#32;&#32;the&#32;top&#32;of&#32;stack&#32;variable&#32;is&#32;updated.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01011"/>01011 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if(&#32;portUSING_MPU_WRAPPERS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01012"/>01012 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01013"/>01013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;port&#32;has&#32;capability&#32;to&#32;detect&#32;stack&#32;overflow,</emphasis>
<anchor xml:id="_tasks_8c_source_1l01014"/>01014 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pass&#32;the&#32;stack&#32;end&#32;address&#32;to&#32;the&#32;stack&#32;initialization</emphasis>
<anchor xml:id="_tasks_8c_source_1l01015"/>01015 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&#32;as&#32;well.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01016"/>01016 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;portHAS_STACK_OVERFLOW_CHECKING&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01017"/>01017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01018"/>01018 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;portSTACK_GROWTH&#32;&lt;&#32;0&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01019"/>01019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01020"/>01020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a429a186c7f8e34aba1eef5e12d215b90">pxTopOfStack</link>&#32;=&#32;<link linkend="_portable_8h_1aec89de59377079f7dc6a71dfbefd9a6f">pxPortInitialiseStack</link>(&#32;pxTopOfStack,&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a9a0d71a9f95dd0609f9911d9efd79134">pxStack</link>,&#32;pxTaskCode,&#32;pvParameters,&#32;xRunPrivileged&#32;);
<anchor xml:id="_tasks_8c_source_1l01021"/>01021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01022"/>01022 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else&#32;</emphasis><emphasis role="comment">/*&#32;portSTACK_GROWTH&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l01023"/>01023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01024"/>01024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a429a186c7f8e34aba1eef5e12d215b90">pxTopOfStack</link>&#32;=&#32;<link linkend="_portable_8h_1aec89de59377079f7dc6a71dfbefd9a6f">pxPortInitialiseStack</link>(&#32;pxTopOfStack,&#32;pxNewTCB-&gt;pxEndOfStack,&#32;pxTaskCode,&#32;pvParameters,&#32;xRunPrivileged&#32;);
<anchor xml:id="_tasks_8c_source_1l01025"/>01025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01026"/>01026 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;portSTACK_GROWTH&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l01027"/>01027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01028"/>01028 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else&#32;</emphasis><emphasis role="comment">/*&#32;portHAS_STACK_OVERFLOW_CHECKING&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l01029"/>01029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01030"/>01030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a429a186c7f8e34aba1eef5e12d215b90">pxTopOfStack</link>&#32;=&#32;<link linkend="_portable_8h_1aec89de59377079f7dc6a71dfbefd9a6f">pxPortInitialiseStack</link>(&#32;pxTopOfStack,&#32;pxTaskCode,&#32;pvParameters,&#32;xRunPrivileged&#32;);
<anchor xml:id="_tasks_8c_source_1l01031"/>01031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01032"/>01032 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;portHAS_STACK_OVERFLOW_CHECKING&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l01033"/>01033 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01034"/>01034 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#else&#32;</emphasis><emphasis role="comment">/*&#32;portUSING_MPU_WRAPPERS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l01035"/>01035 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01036"/>01036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;port&#32;has&#32;capability&#32;to&#32;detect&#32;stack&#32;overflow,</emphasis>
<anchor xml:id="_tasks_8c_source_1l01037"/>01037 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pass&#32;the&#32;stack&#32;end&#32;address&#32;to&#32;the&#32;stack&#32;initialization</emphasis>
<anchor xml:id="_tasks_8c_source_1l01038"/>01038 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&#32;as&#32;well.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01039"/>01039 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;portHAS_STACK_OVERFLOW_CHECKING&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01040"/>01040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01041"/>01041 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;portSTACK_GROWTH&#32;&lt;&#32;0&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01042"/>01042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01043"/>01043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a429a186c7f8e34aba1eef5e12d215b90">pxTopOfStack</link>&#32;=&#32;<link linkend="_portable_8h_1aec89de59377079f7dc6a71dfbefd9a6f">pxPortInitialiseStack</link>(&#32;pxTopOfStack,&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a9a0d71a9f95dd0609f9911d9efd79134">pxStack</link>,&#32;pxTaskCode,&#32;pvParameters&#32;);
<anchor xml:id="_tasks_8c_source_1l01044"/>01044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01045"/>01045 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else&#32;</emphasis><emphasis role="comment">/*&#32;portSTACK_GROWTH&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l01046"/>01046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01047"/>01047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a429a186c7f8e34aba1eef5e12d215b90">pxTopOfStack</link>&#32;=&#32;<link linkend="_portable_8h_1aec89de59377079f7dc6a71dfbefd9a6f">pxPortInitialiseStack</link>(&#32;pxTopOfStack,&#32;pxNewTCB-&gt;pxEndOfStack,&#32;pxTaskCode,&#32;pvParameters&#32;);
<anchor xml:id="_tasks_8c_source_1l01048"/>01048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01049"/>01049 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;portSTACK_GROWTH&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l01050"/>01050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01051"/>01051 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else&#32;</emphasis><emphasis role="comment">/*&#32;portHAS_STACK_OVERFLOW_CHECKING&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l01052"/>01052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01053"/>01053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a429a186c7f8e34aba1eef5e12d215b90">pxTopOfStack</link>&#32;=&#32;<link linkend="_portable_8h_1aec89de59377079f7dc6a71dfbefd9a6f">pxPortInitialiseStack</link>(&#32;pxTopOfStack,&#32;pxTaskCode,&#32;pvParameters&#32;);
<anchor xml:id="_tasks_8c_source_1l01054"/>01054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01055"/>01055 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;portHAS_STACK_OVERFLOW_CHECKING&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l01056"/>01056 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01057"/>01057 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;portUSING_MPU_WRAPPERS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l01058"/>01058 
<anchor xml:id="_tasks_8c_source_1l01059"/>01059 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxCreatedTask&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l01060"/>01060 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01061"/>01061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Pass&#32;the&#32;handle&#32;out&#32;in&#32;an&#32;anonymous&#32;way.&#32;&#32;The&#32;handle&#32;can&#32;be&#32;used&#32;to</emphasis>
<anchor xml:id="_tasks_8c_source_1l01062"/>01062 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;change&#32;the&#32;created&#32;task&apos;s&#32;priority,&#32;delete&#32;the&#32;created&#32;task,&#32;etc.*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01063"/>01063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pxCreatedTask&#32;=&#32;(&#32;<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link>&#32;)&#32;pxNewTCB;
<anchor xml:id="_tasks_8c_source_1l01064"/>01064 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01065"/>01065 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01066"/>01066 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01067"/>01067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01068"/>01068 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01069"/>01069 }
<anchor xml:id="_tasks_8c_source_1l01070"/>01070 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01071"/>01071 
<anchor xml:id="_tasks_8c_source_1l01072"/><link linkend="_tasks_8c_1a132d136b8d2586e0778ce369e5cb8a1e">01072</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1a132d136b8d2586e0778ce369e5cb8a1e">prvAddNewTaskToReadyList</link>(&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxNewTCB&#32;)
<anchor xml:id="_tasks_8c_source_1l01073"/>01073 {
<anchor xml:id="_tasks_8c_source_1l01074"/>01074 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Ensure&#32;interrupts&#32;don&apos;t&#32;access&#32;the&#32;task&#32;lists&#32;while&#32;the&#32;lists&#32;are&#32;being</emphasis>
<anchor xml:id="_tasks_8c_source_1l01075"/>01075 <emphasis role="comment">&#32;&#32;&#32;&#32;updated.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01076"/>01076 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l01077"/>01077 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01078"/>01078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a54edd210c179ef9d185f5ebb020eaa5a">uxCurrentNumberOfTasks</link>++;
<anchor xml:id="_tasks_8c_source_1l01079"/>01079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>&#32;==&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l01080"/>01080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01081"/>01081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;There&#32;are&#32;no&#32;other&#32;tasks,&#32;or&#32;all&#32;the&#32;other&#32;tasks&#32;are&#32;in</emphasis>
<anchor xml:id="_tasks_8c_source_1l01082"/>01082 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;suspended&#32;state&#32;-&#32;make&#32;this&#32;the&#32;current&#32;task.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01083"/>01083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>&#32;=&#32;pxNewTCB;
<anchor xml:id="_tasks_8c_source_1l01084"/>01084 
<anchor xml:id="_tasks_8c_source_1l01085"/>01085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a54edd210c179ef9d185f5ebb020eaa5a">uxCurrentNumberOfTasks</link>&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;1&#32;)
<anchor xml:id="_tasks_8c_source_1l01086"/>01086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01087"/>01087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;is&#32;the&#32;first&#32;task&#32;to&#32;be&#32;created&#32;so&#32;do&#32;the&#32;preliminary</emphasis>
<anchor xml:id="_tasks_8c_source_1l01088"/>01088 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;initialisation&#32;required.&#32;&#32;We&#32;will&#32;not&#32;recover&#32;if&#32;this&#32;call</emphasis>
<anchor xml:id="_tasks_8c_source_1l01089"/>01089 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fails,&#32;but&#32;we&#32;will&#32;report&#32;the&#32;failure.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01090"/>01090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1af4a1bd397cb871d893fc24e5f86e4f19">prvInitialiseTaskLists</link>();
<anchor xml:id="_tasks_8c_source_1l01091"/>01091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01092"/>01092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01093"/>01093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01094"/>01094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01095"/>01095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01096"/>01096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01097"/>01097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01098"/>01098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01099"/>01099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;scheduler&#32;is&#32;not&#32;already&#32;running,&#32;make&#32;this&#32;task&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l01100"/>01100 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;current&#32;task&#32;if&#32;it&#32;is&#32;the&#32;highest&#32;priority&#32;task&#32;to&#32;be&#32;created</emphasis>
<anchor xml:id="_tasks_8c_source_1l01101"/>01101 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;so&#32;far.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01102"/>01102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a1799bfbb95c907794761d18bd75faff5">xSchedulerRunning</link>&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01103"/>01103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01104"/>01104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;&lt;=&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01105"/>01105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01106"/>01106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>&#32;=&#32;pxNewTCB;
<anchor xml:id="_tasks_8c_source_1l01107"/>01107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01108"/>01108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01109"/>01109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01110"/>01110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01111"/>01111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01112"/>01112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01113"/>01113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01114"/>01114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01115"/>01115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01116"/>01116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01117"/>01117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01118"/>01118 
<anchor xml:id="_tasks_8c_source_1l01119"/>01119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a47256f539ed98e54c6e5b025ccc68279">uxTaskNumber</link>++;
<anchor xml:id="_tasks_8c_source_1l01120"/>01120 
<anchor xml:id="_tasks_8c_source_1l01121"/>01121 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01122"/>01122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01123"/>01123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Add&#32;a&#32;counter&#32;into&#32;the&#32;TCB&#32;for&#32;tracing&#32;only.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01124"/>01124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a3f3169fa5667af8ee542304f8dd48553">uxTCBNumber</link>&#32;=&#32;<link linkend="_tasks_8c_1a47256f539ed98e54c6e5b025ccc68279">uxTaskNumber</link>;
<anchor xml:id="_tasks_8c_source_1l01125"/>01125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01126"/>01126 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TRACE_FACILITY&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l01127"/>01127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a453dc678632734505187c453da598172">traceTASK_CREATE</link>(&#32;pxNewTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l01128"/>01128 
<anchor xml:id="_tasks_8c_source_1l01129"/>01129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a94afc7269fff7c906c5eb0d9d315624b">prvAddTaskToReadyList</link>(&#32;pxNewTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l01130"/>01130 
<anchor xml:id="_tasks_8c_source_1l01131"/>01131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1aca0e7403a160318f5c216fc40c95e294">portSETUP_TCB</link>(&#32;pxNewTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l01132"/>01132 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01133"/>01133 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l01134"/>01134 
<anchor xml:id="_tasks_8c_source_1l01135"/>01135 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a1799bfbb95c907794761d18bd75faff5">xSchedulerRunning</link>&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01136"/>01136 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01137"/>01137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;created&#32;task&#32;is&#32;of&#32;a&#32;higher&#32;priority&#32;than&#32;the&#32;current&#32;task</emphasis>
<anchor xml:id="_tasks_8c_source_1l01138"/>01138 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;then&#32;it&#32;should&#32;run&#32;now.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01139"/>01139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;&lt;&#32;pxNewTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01140"/>01140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01141"/>01141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1acd0c920e40647de517ac633965b52273">taskYIELD_IF_USING_PREEMPTION</link>();
<anchor xml:id="_tasks_8c_source_1l01142"/>01142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01143"/>01143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01144"/>01144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01145"/>01145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01146"/>01146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01147"/>01147 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01148"/>01148 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01149"/>01149 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01150"/>01150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01151"/>01151 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01152"/>01152 }
<anchor xml:id="_tasks_8c_source_1l01153"/>01153 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01154"/>01154 
<anchor xml:id="_tasks_8c_source_1l01155"/>01155 <emphasis role="preprocessor">#if&#32;(&#32;INCLUDE_vTaskDelete&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01156"/>01156 
<anchor xml:id="_tasks_8c_source_1l01157"/><link linkend="_task_8h_1a27ff4ebce26565bef136bda84201ff80">01157</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1af9cf8dedc1248f4351d3cb5910e33d7a">vTaskDelete</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTaskToDelete&#32;)
<anchor xml:id="_tasks_8c_source_1l01158"/>01158 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01159"/>01159 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxTCB;
<anchor xml:id="_tasks_8c_source_1l01160"/>01160 
<anchor xml:id="_tasks_8c_source_1l01161"/>01161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l01162"/>01162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01163"/>01163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;null&#32;is&#32;passed&#32;in&#32;here&#32;then&#32;it&#32;is&#32;the&#32;calling&#32;task&#32;that&#32;is</emphasis>
<anchor xml:id="_tasks_8c_source_1l01164"/>01164 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;being&#32;deleted.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01165"/>01165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;<link linkend="_tasks_8c_1ad910f5e908283f1dfabd642fe1b11c6b">prvGetTCBFromHandle</link>(&#32;xTaskToDelete&#32;);
<anchor xml:id="_tasks_8c_source_1l01166"/>01166 
<anchor xml:id="_tasks_8c_source_1l01167"/>01167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Remove&#32;task&#32;from&#32;the&#32;ready&#32;list.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01168"/>01168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8c_1a274fdced76bbdd9d8a4c4840ded2920c">uxListRemove</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;)&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_tasks_8c_source_1l01169"/>01169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01170"/>01170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a9517fc40d713aff9dd8182223948f9c8">taskRESET_READY_PRIORITY</link>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l01171"/>01171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01172"/>01172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01173"/>01173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01174"/>01174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01175"/>01175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01176"/>01176 
<anchor xml:id="_tasks_8c_source_1l01177"/>01177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Is&#32;the&#32;task&#32;waiting&#32;on&#32;an&#32;event&#32;also?&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01178"/>01178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1a7c4dff11380cd843ed0b6a8dc065916b">listLIST_ITEM_CONTAINER</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;)&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l01179"/>01179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01180"/>01180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_list_8c_1a274fdced76bbdd9d8a4c4840ded2920c">uxListRemove</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l01181"/>01181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01182"/>01182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01183"/>01183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01184"/>01184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01185"/>01185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01186"/>01186 
<anchor xml:id="_tasks_8c_source_1l01187"/>01187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Increment&#32;the&#32;uxTaskNumber&#32;also&#32;so&#32;kernel&#32;aware&#32;debuggers&#32;can</emphasis>
<anchor xml:id="_tasks_8c_source_1l01188"/>01188 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;detect&#32;that&#32;the&#32;task&#32;lists&#32;need&#32;re-generating.&#32;&#32;This&#32;is&#32;done&#32;before</emphasis>
<anchor xml:id="_tasks_8c_source_1l01189"/>01189 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;portPRE_TASK_DELETE_HOOK()&#32;as&#32;in&#32;the&#32;Windows&#32;port&#32;that&#32;macro&#32;will</emphasis>
<anchor xml:id="_tasks_8c_source_1l01190"/>01190 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;not&#32;return.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01191"/>01191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a47256f539ed98e54c6e5b025ccc68279">uxTaskNumber</link>++;
<anchor xml:id="_tasks_8c_source_1l01192"/>01192 
<anchor xml:id="_tasks_8c_source_1l01193"/>01193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB&#32;==&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01194"/>01194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01195"/>01195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;task&#32;is&#32;deleting&#32;itself.&#32;&#32;This&#32;cannot&#32;complete&#32;within&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l01196"/>01196 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;task&#32;itself,&#32;as&#32;a&#32;context&#32;switch&#32;to&#32;another&#32;task&#32;is&#32;required.</emphasis>
<anchor xml:id="_tasks_8c_source_1l01197"/>01197 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Place&#32;the&#32;task&#32;in&#32;the&#32;termination&#32;list.&#32;&#32;The&#32;idle&#32;task&#32;will</emphasis>
<anchor xml:id="_tasks_8c_source_1l01198"/>01198 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;check&#32;the&#32;termination&#32;list&#32;and&#32;free&#32;up&#32;any&#32;memory&#32;allocated&#32;by</emphasis>
<anchor xml:id="_tasks_8c_source_1l01199"/>01199 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;scheduler&#32;for&#32;the&#32;TCB&#32;and&#32;stack&#32;of&#32;the&#32;deleted&#32;task.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01200"/>01200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8c_1a3240bc0f43fcf755be02bfc6de7dc6ef">vListInsertEnd</link>(&#32;&amp;<link linkend="_tasks_8c_1a9d5346b64d3da2ce013224df5f403005">xTasksWaitingTermination</link>,&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l01201"/>01201 
<anchor xml:id="_tasks_8c_source_1l01202"/>01202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Increment&#32;the&#32;ucTasksDeleted&#32;variable&#32;so&#32;the&#32;idle&#32;task&#32;knows</emphasis>
<anchor xml:id="_tasks_8c_source_1l01203"/>01203 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;there&#32;is&#32;a&#32;task&#32;that&#32;has&#32;been&#32;deleted&#32;and&#32;that&#32;it&#32;should&#32;therefore</emphasis>
<anchor xml:id="_tasks_8c_source_1l01204"/>01204 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;check&#32;the&#32;xTasksWaitingTermination&#32;list.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01205"/>01205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++<link linkend="_tasks_8c_1ad31bb9fd9a09cc9045861dd458f54615">uxDeletedTasksWaitingCleanUp</link>;
<anchor xml:id="_tasks_8c_source_1l01206"/>01206 
<anchor xml:id="_tasks_8c_source_1l01207"/>01207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;pre-delete&#32;hook&#32;is&#32;primarily&#32;for&#32;the&#32;Windows&#32;simulator,</emphasis>
<anchor xml:id="_tasks_8c_source_1l01208"/>01208 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in&#32;which&#32;Windows&#32;specific&#32;clean&#32;up&#32;operations&#32;are&#32;performed,</emphasis>
<anchor xml:id="_tasks_8c_source_1l01209"/>01209 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;after&#32;which&#32;it&#32;is&#32;not&#32;possible&#32;to&#32;yield&#32;away&#32;from&#32;this&#32;task&#32;-</emphasis>
<anchor xml:id="_tasks_8c_source_1l01210"/>01210 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hence&#32;xYieldPending&#32;is&#32;used&#32;to&#32;latch&#32;that&#32;a&#32;context&#32;switch&#32;is</emphasis>
<anchor xml:id="_tasks_8c_source_1l01211"/>01211 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;required.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01212"/>01212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a712f8cbd5ce7b049ef6a92dbb0da0215">portPRE_TASK_DELETE_HOOK</link>(&#32;pxTCB,&#32;&amp;<link linkend="_tasks_8c_1a25abc99b92e910c1602028081e13b1b0">xYieldPending</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l01213"/>01213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01214"/>01214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01215"/>01215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01216"/>01216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--<link linkend="_tasks_8c_1a54edd210c179ef9d185f5ebb020eaa5a">uxCurrentNumberOfTasks</link>;
<anchor xml:id="_tasks_8c_source_1l01217"/>01217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1ad538c599036f7914942471780230ffa6">prvDeleteTCB</link>(&#32;pxTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l01218"/>01218 
<anchor xml:id="_tasks_8c_source_1l01219"/>01219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Reset&#32;the&#32;next&#32;expected&#32;unblock&#32;time&#32;in&#32;case&#32;it&#32;referred&#32;to</emphasis>
<anchor xml:id="_tasks_8c_source_1l01220"/>01220 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;task&#32;that&#32;has&#32;just&#32;been&#32;deleted.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01221"/>01221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1ad1b2e4995f863a99cf980836efe330d7">prvResetNextTaskUnblockTime</link>();
<anchor xml:id="_tasks_8c_source_1l01222"/>01222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01223"/>01223 
<anchor xml:id="_tasks_8c_source_1l01224"/>01224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1af3f9bb780241cc663247908a22defa65">traceTASK_DELETE</link>(&#32;pxTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l01225"/>01225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01226"/>01226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l01227"/>01227 
<anchor xml:id="_tasks_8c_source_1l01228"/>01228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Force&#32;a&#32;reschedule&#32;if&#32;it&#32;is&#32;the&#32;currently&#32;running&#32;task&#32;that&#32;has&#32;just</emphasis>
<anchor xml:id="_tasks_8c_source_1l01229"/>01229 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;been&#32;deleted.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01230"/>01230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a1799bfbb95c907794761d18bd75faff5">xSchedulerRunning</link>&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01231"/>01231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01232"/>01232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB&#32;==&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01233"/>01233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01234"/>01234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;<link linkend="_tasks_8c_1a7522707fcf80b216e3a5b25ba464ec85">uxSchedulerSuspended</link>&#32;==&#32;0&#32;);
<anchor xml:id="_tasks_8c_source_1l01235"/>01235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1af4484fc07631a16e45ac5f29a3f0556e">portYIELD_WITHIN_API</link>();
<anchor xml:id="_tasks_8c_source_1l01236"/>01236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01237"/>01237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01238"/>01238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01239"/>01239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01240"/>01240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01241"/>01241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01242"/>01242 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01243"/>01243 
<anchor xml:id="_tasks_8c_source_1l01244"/>01244 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;INCLUDE_vTaskDelete&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l01245"/>01245 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01246"/>01246 
<anchor xml:id="_tasks_8c_source_1l01247"/>01247 <emphasis role="preprocessor">#if&#32;(&#32;INCLUDE_vTaskDelayUntil&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01248"/>01248 
<anchor xml:id="_tasks_8c_source_1l01249"/><link linkend="_task_8h_1a067da3e949e248096ec6c01f9cb75a47">01249</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1abbc32467f223c78ba36f577b56a32897">vTaskDelayUntil</link>(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxPreviousWakeTime,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTimeIncrement&#32;)
<anchor xml:id="_tasks_8c_source_1l01250"/>01250 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01251"/>01251 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTimeToWake;
<anchor xml:id="_tasks_8c_source_1l01252"/>01252 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xAlreadyYielded,&#32;xShouldDelay&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_tasks_8c_source_1l01253"/>01253 
<anchor xml:id="_tasks_8c_source_1l01254"/>01254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxPreviousWakeTime&#32;);
<anchor xml:id="_tasks_8c_source_1l01255"/>01255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;(&#32;xTimeIncrement&#32;&gt;&#32;0U&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l01256"/>01256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;<link linkend="_tasks_8c_1a7522707fcf80b216e3a5b25ba464ec85">uxSchedulerSuspended</link>&#32;==&#32;0&#32;);
<anchor xml:id="_tasks_8c_source_1l01257"/>01257 
<anchor xml:id="_tasks_8c_source_1l01258"/>01258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a084d232640bd1d04bcac0b8784417015">vTaskSuspendAll</link>();
<anchor xml:id="_tasks_8c_source_1l01259"/>01259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01260"/>01260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Minor&#32;optimisation.&#32;&#32;The&#32;tick&#32;count&#32;cannot&#32;change&#32;in&#32;this</emphasis>
<anchor xml:id="_tasks_8c_source_1l01261"/>01261 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;block.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01262"/>01262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xConstTickCount&#32;=&#32;<link linkend="_tasks_8c_1aaa88969a9b48aea401dbb1ff2b0ef4de">xTickCount</link>;
<anchor xml:id="_tasks_8c_source_1l01263"/>01263 
<anchor xml:id="_tasks_8c_source_1l01264"/>01264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Generate&#32;the&#32;tick&#32;time&#32;at&#32;which&#32;the&#32;task&#32;wants&#32;to&#32;wake.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01265"/>01265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xTimeToWake&#32;=&#32;*pxPreviousWakeTime&#32;+&#32;xTimeIncrement;
<anchor xml:id="_tasks_8c_source_1l01266"/>01266 
<anchor xml:id="_tasks_8c_source_1l01267"/>01267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xConstTickCount&#32;&lt;&#32;*pxPreviousWakeTime&#32;)
<anchor xml:id="_tasks_8c_source_1l01268"/>01268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01269"/>01269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;tick&#32;count&#32;has&#32;overflowed&#32;since&#32;this&#32;function&#32;was</emphasis>
<anchor xml:id="_tasks_8c_source_1l01270"/>01270 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lasted&#32;called.&#32;&#32;In&#32;this&#32;case&#32;the&#32;only&#32;time&#32;we&#32;should&#32;ever</emphasis>
<anchor xml:id="_tasks_8c_source_1l01271"/>01271 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;actually&#32;delay&#32;is&#32;if&#32;the&#32;wake&#32;time&#32;has&#32;also&#32;overflowed,</emphasis>
<anchor xml:id="_tasks_8c_source_1l01272"/>01272 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;the&#32;wake&#32;time&#32;is&#32;greater&#32;than&#32;the&#32;tick&#32;time.&#32;&#32;When&#32;this</emphasis>
<anchor xml:id="_tasks_8c_source_1l01273"/>01273 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;the&#32;case&#32;it&#32;is&#32;as&#32;if&#32;neither&#32;time&#32;had&#32;overflowed.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01274"/>01274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;xTimeToWake&#32;&lt;&#32;*pxPreviousWakeTime&#32;)&#32;&amp;&amp;&#32;(&#32;xTimeToWake&#32;&gt;&#32;xConstTickCount&#32;)&#32;)
<anchor xml:id="_tasks_8c_source_1l01275"/>01275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01276"/>01276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xShouldDelay&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l01277"/>01277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01278"/>01278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01279"/>01279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01280"/>01280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01281"/>01281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01282"/>01282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01283"/>01283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01284"/>01284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01285"/>01285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;tick&#32;time&#32;has&#32;not&#32;overflowed.&#32;&#32;In&#32;this&#32;case&#32;we&#32;will</emphasis>
<anchor xml:id="_tasks_8c_source_1l01286"/>01286 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;delay&#32;if&#32;either&#32;the&#32;wake&#32;time&#32;has&#32;overflowed,&#32;and/or&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l01287"/>01287 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tick&#32;time&#32;is&#32;less&#32;than&#32;the&#32;wake&#32;time.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01288"/>01288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;xTimeToWake&#32;&lt;&#32;*pxPreviousWakeTime&#32;)&#32;||&#32;(&#32;xTimeToWake&#32;&gt;&#32;xConstTickCount&#32;)&#32;)
<anchor xml:id="_tasks_8c_source_1l01289"/>01289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01290"/>01290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xShouldDelay&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l01291"/>01291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01292"/>01292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01293"/>01293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01294"/>01294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01295"/>01295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01296"/>01296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01297"/>01297 
<anchor xml:id="_tasks_8c_source_1l01298"/>01298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Update&#32;the&#32;wake&#32;time&#32;ready&#32;for&#32;the&#32;next&#32;call.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01299"/>01299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pxPreviousWakeTime&#32;=&#32;xTimeToWake;
<anchor xml:id="_tasks_8c_source_1l01300"/>01300 
<anchor xml:id="_tasks_8c_source_1l01301"/>01301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xShouldDelay&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01302"/>01302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01303"/>01303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac7bba9e806376061522f5cb2eef261c4">traceTASK_DELAY_UNTIL</link>(&#32;xTimeToWake&#32;);
<anchor xml:id="_tasks_8c_source_1l01304"/>01304 
<anchor xml:id="_tasks_8c_source_1l01305"/>01305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;prvAddCurrentTaskToDelayedList()&#32;needs&#32;the&#32;block&#32;time,&#32;not</emphasis>
<anchor xml:id="_tasks_8c_source_1l01306"/>01306 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;time&#32;to&#32;wake,&#32;so&#32;subtract&#32;the&#32;current&#32;tick&#32;count.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01307"/>01307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1ab4574e77d9aea876272e563c68f639da">prvAddCurrentTaskToDelayedList</link>(&#32;xTimeToWake&#32;-&#32;xConstTickCount,&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l01308"/>01308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01309"/>01309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01310"/>01310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01311"/>01311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01312"/>01312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01313"/>01313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01314"/>01314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xAlreadyYielded&#32;=&#32;<link linkend="_tasks_8c_1adf830ea0f150fcdfdaa944667137f080">xTaskResumeAll</link>();
<anchor xml:id="_tasks_8c_source_1l01315"/>01315 
<anchor xml:id="_tasks_8c_source_1l01316"/>01316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Force&#32;a&#32;reschedule&#32;if&#32;xTaskResumeAll&#32;has&#32;not&#32;already&#32;done&#32;so,&#32;we&#32;may</emphasis>
<anchor xml:id="_tasks_8c_source_1l01317"/>01317 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;have&#32;put&#32;ourselves&#32;to&#32;sleep.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01318"/>01318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xAlreadyYielded&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01319"/>01319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01320"/>01320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1af4484fc07631a16e45ac5f29a3f0556e">portYIELD_WITHIN_API</link>();
<anchor xml:id="_tasks_8c_source_1l01321"/>01321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01322"/>01322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01323"/>01323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01324"/>01324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01325"/>01325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01326"/>01326 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01327"/>01327 
<anchor xml:id="_tasks_8c_source_1l01328"/>01328 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;INCLUDE_vTaskDelayUntil&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l01329"/>01329 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01330"/>01330 
<anchor xml:id="_tasks_8c_source_1l01331"/>01331 <emphasis role="preprocessor">#if&#32;(&#32;INCLUDE_vTaskDelay&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01332"/>01332 
<anchor xml:id="_tasks_8c_source_1l01333"/><link linkend="_task_8h_1aa154068cecd7f31446a7a84af44ab1a3">01333</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1a9917b05abb77e75e959151ae67065dce">vTaskDelay</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToDelay&#32;)
<anchor xml:id="_tasks_8c_source_1l01334"/>01334 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01335"/>01335 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xAlreadyYielded&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_tasks_8c_source_1l01336"/>01336 
<anchor xml:id="_tasks_8c_source_1l01337"/>01337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;delay&#32;time&#32;of&#32;zero&#32;just&#32;forces&#32;a&#32;reschedule.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01338"/>01338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTicksToDelay&#32;&gt;&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;0U&#32;)
<anchor xml:id="_tasks_8c_source_1l01339"/>01339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01340"/>01340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;<link linkend="_tasks_8c_1a7522707fcf80b216e3a5b25ba464ec85">uxSchedulerSuspended</link>&#32;==&#32;0&#32;);
<anchor xml:id="_tasks_8c_source_1l01341"/>01341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a084d232640bd1d04bcac0b8784417015">vTaskSuspendAll</link>();
<anchor xml:id="_tasks_8c_source_1l01342"/>01342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01343"/>01343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1adb0c71969f4eed7a92f0f398dffb443d">traceTASK_DELAY</link>();
<anchor xml:id="_tasks_8c_source_1l01344"/>01344 
<anchor xml:id="_tasks_8c_source_1l01345"/>01345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;task&#32;that&#32;is&#32;removed&#32;from&#32;the&#32;event&#32;list&#32;while&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l01346"/>01346 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scheduler&#32;is&#32;suspended&#32;will&#32;not&#32;get&#32;placed&#32;in&#32;the&#32;ready</emphasis>
<anchor xml:id="_tasks_8c_source_1l01347"/>01347 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list&#32;or&#32;removed&#32;from&#32;the&#32;blocked&#32;list&#32;until&#32;the&#32;scheduler</emphasis>
<anchor xml:id="_tasks_8c_source_1l01348"/>01348 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;resumed.</emphasis>
<anchor xml:id="_tasks_8c_source_1l01349"/>01349 <emphasis role="comment"></emphasis>
<anchor xml:id="_tasks_8c_source_1l01350"/>01350 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;task&#32;cannot&#32;be&#32;in&#32;an&#32;event&#32;list&#32;as&#32;it&#32;is&#32;the&#32;currently</emphasis>
<anchor xml:id="_tasks_8c_source_1l01351"/>01351 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;executing&#32;task.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01352"/>01352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1ab4574e77d9aea876272e563c68f639da">prvAddCurrentTaskToDelayedList</link>(&#32;xTicksToDelay,&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l01353"/>01353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01354"/>01354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xAlreadyYielded&#32;=&#32;<link linkend="_tasks_8c_1adf830ea0f150fcdfdaa944667137f080">xTaskResumeAll</link>();
<anchor xml:id="_tasks_8c_source_1l01355"/>01355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01356"/>01356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01357"/>01357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01358"/>01358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01359"/>01359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01360"/>01360 
<anchor xml:id="_tasks_8c_source_1l01361"/>01361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Force&#32;a&#32;reschedule&#32;if&#32;xTaskResumeAll&#32;has&#32;not&#32;already&#32;done&#32;so,&#32;we&#32;may</emphasis>
<anchor xml:id="_tasks_8c_source_1l01362"/>01362 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;have&#32;put&#32;ourselves&#32;to&#32;sleep.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01363"/>01363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xAlreadyYielded&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01364"/>01364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01365"/>01365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1af4484fc07631a16e45ac5f29a3f0556e">portYIELD_WITHIN_API</link>();
<anchor xml:id="_tasks_8c_source_1l01366"/>01366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01367"/>01367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01368"/>01368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01369"/>01369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01370"/>01370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01371"/>01371 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01372"/>01372 
<anchor xml:id="_tasks_8c_source_1l01373"/>01373 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;INCLUDE_vTaskDelay&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l01374"/>01374 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01375"/>01375 
<anchor xml:id="_tasks_8c_source_1l01376"/>01376 <emphasis role="preprocessor">#if(&#32;(&#32;INCLUDE_eTaskGetState&#32;==&#32;1&#32;)&#32;||&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)&#32;||&#32;(&#32;INCLUDE_xTaskAbortDelay&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01377"/>01377 
<anchor xml:id="_tasks_8c_source_1l01378"/><link linkend="_task_8h_1a954df77397d616484edb7c58c7760b10">01378</link> &#32;&#32;&#32;&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892c">eTaskState</link>&#32;<link linkend="_tasks_8c_1aab948efa7e3b657465cd06196b259ed7">eTaskGetState</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask&#32;)
<anchor xml:id="_tasks_8c_source_1l01379"/>01379 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01380"/>01380 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892c">eTaskState</link>&#32;eReturn;
<anchor xml:id="_tasks_8c_source_1l01381"/>01381 &#32;&#32;&#32;&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*&#32;pxStateList,&#32;*pxDelayedList,&#32;*pxOverflowedDelayedList;
<anchor xml:id="_tasks_8c_source_1l01382"/>01382 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxTCB&#32;=&#32;xTask;
<anchor xml:id="_tasks_8c_source_1l01383"/>01383 
<anchor xml:id="_tasks_8c_source_1l01384"/>01384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l01385"/>01385 
<anchor xml:id="_tasks_8c_source_1l01386"/>01386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB&#32;==&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01387"/>01387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01388"/>01388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;calling&#32;this&#32;function&#32;is&#32;querying&#32;its&#32;own&#32;state.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01389"/>01389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eReturn&#32;=&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892ca83318c0d58e6b2bafaefa1be597fb8b6">eRunning</link>;
<anchor xml:id="_tasks_8c_source_1l01390"/>01390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01391"/>01391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01392"/>01392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01393"/>01393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l01394"/>01394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01395"/>01395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxStateList&#32;=&#32;<link linkend="_list_8h_1a7c4dff11380cd843ed0b6a8dc065916b">listLIST_ITEM_CONTAINER</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l01396"/>01396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxDelayedList&#32;=&#32;<link linkend="_tasks_8c_1a30b4b716a99940e93fc9d4a13c1f81db">pxDelayedTaskList</link>;
<anchor xml:id="_tasks_8c_source_1l01397"/>01397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxOverflowedDelayedList&#32;=&#32;<link linkend="_tasks_8c_1aae5cac9860aec54036f49920561a9705">pxOverflowDelayedTaskList</link>;
<anchor xml:id="_tasks_8c_source_1l01398"/>01398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01399"/>01399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l01400"/>01400 
<anchor xml:id="_tasks_8c_source_1l01401"/>01401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;pxStateList&#32;==&#32;pxDelayedList&#32;)&#32;||&#32;(&#32;pxStateList&#32;==&#32;pxOverflowedDelayedList&#32;)&#32;)
<anchor xml:id="_tasks_8c_source_1l01402"/>01402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01403"/>01403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;being&#32;queried&#32;is&#32;referenced&#32;from&#32;one&#32;of&#32;the&#32;Blocked</emphasis>
<anchor xml:id="_tasks_8c_source_1l01404"/>01404 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lists.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01405"/>01405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eReturn&#32;=&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892cad23d72c68f43b6fff4962ad4154766af">eBlocked</link>;
<anchor xml:id="_tasks_8c_source_1l01406"/>01406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01407"/>01407 
<anchor xml:id="_tasks_8c_source_1l01408"/>01408 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;INCLUDE_vTaskSuspend&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01409"/>01409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxStateList&#32;==&#32;&amp;<link linkend="_tasks_8c_1aeeff59d101a1407ffc42f81fda83baca">xSuspendedTaskList</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01410"/>01410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01411"/>01411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;being&#32;queried&#32;is&#32;referenced&#32;from&#32;the&#32;suspended</emphasis>
<anchor xml:id="_tasks_8c_source_1l01412"/>01412 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.&#32;&#32;Is&#32;it&#32;genuinely&#32;suspended&#32;or&#32;is&#32;it&#32;blocked</emphasis>
<anchor xml:id="_tasks_8c_source_1l01413"/>01413 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;indefinitely?&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01414"/>01414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1a7c4dff11380cd843ed0b6a8dc065916b">listLIST_ITEM_CONTAINER</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;)&#32;==&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l01415"/>01415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01416"/>01416 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;configUSE_TASK_NOTIFICATIONS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01417"/>01417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01418"/>01418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;does&#32;not&#32;appear&#32;on&#32;the&#32;event&#32;list&#32;item&#32;of</emphasis>
<anchor xml:id="_tasks_8c_source_1l01419"/>01419 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;of&#32;the&#32;RTOS&#32;objects,&#32;but&#32;could&#32;still&#32;be&#32;in&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l01420"/>01420 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;blocked&#32;state&#32;if&#32;it&#32;is&#32;waiting&#32;on&#32;its&#32;notification</emphasis>
<anchor xml:id="_tasks_8c_source_1l01421"/>01421 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rather&#32;than&#32;waiting&#32;on&#32;an&#32;object.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01422"/>01422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1adab5291f06b774ed8f5bb6f76a77496f">ucNotifyState</link>&#32;==&#32;<link linkend="_tasks_8c_1acee66205293e253c13626e74798a0cf0">taskWAITING_NOTIFICATION</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01423"/>01423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01424"/>01424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eReturn&#32;=&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892cad23d72c68f43b6fff4962ad4154766af">eBlocked</link>;
<anchor xml:id="_tasks_8c_source_1l01425"/>01425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01426"/>01426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01427"/>01427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01428"/>01428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eReturn&#32;=&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892caf35a900d49fdfc2502eefc68fdb70f72">eSuspended</link>;
<anchor xml:id="_tasks_8c_source_1l01429"/>01429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01430"/>01430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01431"/>01431 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01432"/>01432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01433"/>01433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eReturn&#32;=&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892caf35a900d49fdfc2502eefc68fdb70f72">eSuspended</link>;
<anchor xml:id="_tasks_8c_source_1l01434"/>01434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01435"/>01435 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l01436"/>01436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01437"/>01437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01438"/>01438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01439"/>01439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eReturn&#32;=&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892cad23d72c68f43b6fff4962ad4154766af">eBlocked</link>;
<anchor xml:id="_tasks_8c_source_1l01440"/>01440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01441"/>01441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01442"/>01442 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l01443"/>01443 
<anchor xml:id="_tasks_8c_source_1l01444"/>01444 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;INCLUDE_vTaskDelete&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01445"/>01445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;pxStateList&#32;==&#32;&amp;<link linkend="_tasks_8c_1a9d5346b64d3da2ce013224df5f403005">xTasksWaitingTermination</link>&#32;)&#32;||&#32;(&#32;pxStateList&#32;==&#32;NULL&#32;)&#32;)
<anchor xml:id="_tasks_8c_source_1l01446"/>01446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01447"/>01447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;being&#32;queried&#32;is&#32;referenced&#32;from&#32;the&#32;deleted</emphasis>
<anchor xml:id="_tasks_8c_source_1l01448"/>01448 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tasks&#32;list,&#32;or&#32;it&#32;is&#32;not&#32;referenced&#32;from&#32;any&#32;lists&#32;at</emphasis>
<anchor xml:id="_tasks_8c_source_1l01449"/>01449 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;all.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01450"/>01450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eReturn&#32;=&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892cacef5c6e771d3a07f656e07a13a20ba35">eDeleted</link>;
<anchor xml:id="_tasks_8c_source_1l01451"/>01451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01452"/>01452 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l01453"/>01453 
<anchor xml:id="_tasks_8c_source_1l01454"/>01454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="comment">/*lint&#32;!e525&#32;Negative&#32;indentation&#32;is&#32;intended&#32;to&#32;make&#32;use&#32;of&#32;pre-processor&#32;clearer.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01455"/>01455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01456"/>01456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;task&#32;is&#32;not&#32;in&#32;any&#32;other&#32;state,&#32;it&#32;must&#32;be&#32;in&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l01457"/>01457 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ready&#32;(including&#32;pending&#32;ready)&#32;state.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01458"/>01458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eReturn&#32;=&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892ca8570b65f331057b2cf92c504f0a2bc83">eReady</link>;
<anchor xml:id="_tasks_8c_source_1l01459"/>01459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01460"/>01460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01461"/>01461 
<anchor xml:id="_tasks_8c_source_1l01462"/>01462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;eReturn;
<anchor xml:id="_tasks_8c_source_1l01463"/>01463 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">/*lint&#32;!e818&#32;xTask&#32;cannot&#32;be&#32;a&#32;pointer&#32;to&#32;const&#32;because&#32;it&#32;is&#32;a&#32;typedef.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01464"/>01464 
<anchor xml:id="_tasks_8c_source_1l01465"/>01465 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;INCLUDE_eTaskGetState&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l01466"/>01466 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01467"/>01467 
<anchor xml:id="_tasks_8c_source_1l01468"/>01468 <emphasis role="preprocessor">#if&#32;(&#32;INCLUDE_uxTaskPriorityGet&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01469"/>01469 
<anchor xml:id="_tasks_8c_source_1l01470"/><link linkend="_task_8h_1a18d1148c845f5c4bff3b9e5b2077e058">01470</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_tasks_8c_1a30334556d57da4f2bc8faf60dfa5b63b">uxTaskPriorityGet</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask&#32;)
<anchor xml:id="_tasks_8c_source_1l01471"/>01471 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01472"/>01472 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*pxTCB;
<anchor xml:id="_tasks_8c_source_1l01473"/>01473 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxReturn;
<anchor xml:id="_tasks_8c_source_1l01474"/>01474 
<anchor xml:id="_tasks_8c_source_1l01475"/>01475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l01476"/>01476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01477"/>01477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;null&#32;is&#32;passed&#32;in&#32;here&#32;then&#32;it&#32;is&#32;the&#32;priority&#32;of&#32;the&#32;task</emphasis>
<anchor xml:id="_tasks_8c_source_1l01478"/>01478 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;that&#32;called&#32;uxTaskPriorityGet()&#32;that&#32;is&#32;being&#32;queried.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01479"/>01479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;<link linkend="_tasks_8c_1ad910f5e908283f1dfabd642fe1b11c6b">prvGetTCBFromHandle</link>(&#32;xTask&#32;);
<anchor xml:id="_tasks_8c_source_1l01480"/>01480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxReturn&#32;=&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>;
<anchor xml:id="_tasks_8c_source_1l01481"/>01481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01482"/>01482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l01483"/>01483 
<anchor xml:id="_tasks_8c_source_1l01484"/>01484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;uxReturn;
<anchor xml:id="_tasks_8c_source_1l01485"/>01485 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01486"/>01486 
<anchor xml:id="_tasks_8c_source_1l01487"/>01487 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;INCLUDE_uxTaskPriorityGet&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l01488"/>01488 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01489"/>01489 
<anchor xml:id="_tasks_8c_source_1l01490"/>01490 <emphasis role="preprocessor">#if&#32;(&#32;INCLUDE_uxTaskPriorityGet&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01491"/>01491 
<anchor xml:id="_tasks_8c_source_1l01492"/><link linkend="_task_8h_1a772bdcb1ae3cb58b0f12a172357f4a06">01492</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_tasks_8c_1af4197dbd93e7f8c4a715c9d9829d4d60">uxTaskPriorityGetFromISR</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask&#32;)
<anchor xml:id="_tasks_8c_source_1l01493"/>01493 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01494"/>01494 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*pxTCB;
<anchor xml:id="_tasks_8c_source_1l01495"/>01495 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxReturn,&#32;uxSavedInterruptState;
<anchor xml:id="_tasks_8c_source_1l01496"/>01496 
<anchor xml:id="_tasks_8c_source_1l01497"/>01497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;RTOS&#32;ports&#32;that&#32;support&#32;interrupt&#32;nesting&#32;have&#32;the&#32;concept&#32;of&#32;a</emphasis>
<anchor xml:id="_tasks_8c_source_1l01498"/>01498 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maximum&#32;system&#32;call&#32;(or&#32;maximum&#32;API&#32;call)&#32;interrupt&#32;priority.</emphasis>
<anchor xml:id="_tasks_8c_source_1l01499"/>01499 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Interrupts&#32;that&#32;are&#32;above&#32;the&#32;maximum&#32;system&#32;call&#32;priority&#32;are&#32;keep</emphasis>
<anchor xml:id="_tasks_8c_source_1l01500"/>01500 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;permanently&#32;enabled,&#32;even&#32;when&#32;the&#32;RTOS&#32;kernel&#32;is&#32;in&#32;a&#32;critical&#32;section,</emphasis>
<anchor xml:id="_tasks_8c_source_1l01501"/>01501 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;but&#32;cannot&#32;make&#32;any&#32;calls&#32;to&#32;FreeRTOS&#32;API&#32;functions.&#32;&#32;If&#32;configASSERT()</emphasis>
<anchor xml:id="_tasks_8c_source_1l01502"/>01502 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;defined&#32;in&#32;FreeRTOSConfig.h&#32;then</emphasis>
<anchor xml:id="_tasks_8c_source_1l01503"/>01503 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;portASSERT_IF_INTERRUPT_PRIORITY_INVALID()&#32;will&#32;result&#32;in&#32;an&#32;assertion</emphasis>
<anchor xml:id="_tasks_8c_source_1l01504"/>01504 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;failure&#32;if&#32;a&#32;FreeRTOS&#32;API&#32;function&#32;is&#32;called&#32;from&#32;an&#32;interrupt&#32;that&#32;has</emphasis>
<anchor xml:id="_tasks_8c_source_1l01505"/>01505 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;been&#32;assigned&#32;a&#32;priority&#32;above&#32;the&#32;configured&#32;maximum&#32;system&#32;call</emphasis>
<anchor xml:id="_tasks_8c_source_1l01506"/>01506 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;priority.&#32;&#32;Only&#32;FreeRTOS&#32;functions&#32;that&#32;end&#32;in&#32;FromISR&#32;can&#32;be&#32;called</emphasis>
<anchor xml:id="_tasks_8c_source_1l01507"/>01507 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;from&#32;interrupts&#32;that&#32;have&#32;been&#32;assigned&#32;a&#32;priority&#32;at&#32;or&#32;(logically)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01508"/>01508 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;below&#32;the&#32;maximum&#32;system&#32;call&#32;interrupt&#32;priority.&#32;&#32;FreeRTOS&#32;maintains&#32;a</emphasis>
<anchor xml:id="_tasks_8c_source_1l01509"/>01509 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;separate&#32;interrupt&#32;safe&#32;API&#32;to&#32;ensure&#32;interrupt&#32;entry&#32;is&#32;as&#32;fast&#32;and&#32;as</emphasis>
<anchor xml:id="_tasks_8c_source_1l01510"/>01510 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;simple&#32;as&#32;possible.&#32;&#32;More&#32;information&#32;(albeit&#32;Cortex-M&#32;specific)&#32;is</emphasis>
<anchor xml:id="_tasks_8c_source_1l01511"/>01511 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;provided&#32;on&#32;the&#32;following&#32;link:</emphasis>
<anchor xml:id="_tasks_8c_source_1l01512"/>01512 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;https://www.freertos.org/RTOS-Cortex-M3-M4.html&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01513"/>01513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a10f75d20c71c4289f96d1b89cb6c62e2">portASSERT_IF_INTERRUPT_PRIORITY_INVALID</link>();
<anchor xml:id="_tasks_8c_source_1l01514"/>01514 
<anchor xml:id="_tasks_8c_source_1l01515"/>01515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxSavedInterruptState&#32;=&#32;<link linkend="_portmacro_8h_1a31b4260dbc1823ba80b578f86eb15a98">portSET_INTERRUPT_MASK_FROM_ISR</link>();
<anchor xml:id="_tasks_8c_source_1l01516"/>01516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01517"/>01517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;null&#32;is&#32;passed&#32;in&#32;here&#32;then&#32;it&#32;is&#32;the&#32;priority&#32;of&#32;the&#32;calling</emphasis>
<anchor xml:id="_tasks_8c_source_1l01518"/>01518 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;task&#32;that&#32;is&#32;being&#32;queried.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01519"/>01519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;<link linkend="_tasks_8c_1ad910f5e908283f1dfabd642fe1b11c6b">prvGetTCBFromHandle</link>(&#32;xTask&#32;);
<anchor xml:id="_tasks_8c_source_1l01520"/>01520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxReturn&#32;=&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>;
<anchor xml:id="_tasks_8c_source_1l01521"/>01521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01522"/>01522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a79d65a5d0f6f9133a0739832e9d8367e">portCLEAR_INTERRUPT_MASK_FROM_ISR</link>(&#32;uxSavedInterruptState&#32;);
<anchor xml:id="_tasks_8c_source_1l01523"/>01523 
<anchor xml:id="_tasks_8c_source_1l01524"/>01524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;uxReturn;
<anchor xml:id="_tasks_8c_source_1l01525"/>01525 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01526"/>01526 
<anchor xml:id="_tasks_8c_source_1l01527"/>01527 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;INCLUDE_uxTaskPriorityGet&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l01528"/>01528 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01529"/>01529 
<anchor xml:id="_tasks_8c_source_1l01530"/>01530 <emphasis role="preprocessor">#if&#32;(&#32;INCLUDE_vTaskPrioritySet&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01531"/>01531 
<anchor xml:id="_tasks_8c_source_1l01532"/><link linkend="_task_8h_1a1ee31be76e326e0644dbd6ac40a787b6">01532</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1a364e424f7bf8efced5738f44803f6580">vTaskPrioritySet</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask,&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxNewPriority&#32;)
<anchor xml:id="_tasks_8c_source_1l01533"/>01533 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01534"/>01534 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxTCB;
<anchor xml:id="_tasks_8c_source_1l01535"/>01535 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxCurrentBasePriority,&#32;uxPriorityUsedOnEntry;
<anchor xml:id="_tasks_8c_source_1l01536"/>01536 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xYieldRequired&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_tasks_8c_source_1l01537"/>01537 
<anchor xml:id="_tasks_8c_source_1l01538"/>01538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;(&#32;uxNewPriority&#32;&lt;&#32;<link linkend="__free_r_t_o_s_config__default_8h_1a9a78f5ac61e6cb172dadf2a51f11db38">configMAX_PRIORITIES</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l01539"/>01539 
<anchor xml:id="_tasks_8c_source_1l01540"/>01540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Ensure&#32;the&#32;new&#32;priority&#32;is&#32;valid.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01541"/>01541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;uxNewPriority&#32;&gt;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="__free_r_t_o_s_config__default_8h_1a9a78f5ac61e6cb172dadf2a51f11db38">configMAX_PRIORITIES</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01542"/>01542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01543"/>01543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxNewPriority&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="__free_r_t_o_s_config__default_8h_1a9a78f5ac61e6cb172dadf2a51f11db38">configMAX_PRIORITIES</link>&#32;-&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;1U;
<anchor xml:id="_tasks_8c_source_1l01544"/>01544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01545"/>01545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01546"/>01546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01547"/>01547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01548"/>01548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01549"/>01549 
<anchor xml:id="_tasks_8c_source_1l01550"/>01550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l01551"/>01551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01552"/>01552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;null&#32;is&#32;passed&#32;in&#32;here&#32;then&#32;it&#32;is&#32;the&#32;priority&#32;of&#32;the&#32;calling</emphasis>
<anchor xml:id="_tasks_8c_source_1l01553"/>01553 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;task&#32;that&#32;is&#32;being&#32;changed.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01554"/>01554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;<link linkend="_tasks_8c_1ad910f5e908283f1dfabd642fe1b11c6b">prvGetTCBFromHandle</link>(&#32;xTask&#32;);
<anchor xml:id="_tasks_8c_source_1l01555"/>01555 
<anchor xml:id="_tasks_8c_source_1l01556"/>01556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1acec813ac5f0628aa108bede0cd8c329d">traceTASK_PRIORITY_SET</link>(&#32;pxTCB,&#32;uxNewPriority&#32;);
<anchor xml:id="_tasks_8c_source_1l01557"/>01557 
<anchor xml:id="_tasks_8c_source_1l01558"/>01558 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_MUTEXES&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01559"/>01559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01560"/>01560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxCurrentBasePriority&#32;=&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a3ce2f9306ee315873114616fb49a0ed2">uxBasePriority</link>;
<anchor xml:id="_tasks_8c_source_1l01561"/>01561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01562"/>01562 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01563"/>01563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01564"/>01564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxCurrentBasePriority&#32;=&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>;
<anchor xml:id="_tasks_8c_source_1l01565"/>01565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01566"/>01566 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l01567"/>01567 
<anchor xml:id="_tasks_8c_source_1l01568"/>01568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;uxCurrentBasePriority&#32;!=&#32;uxNewPriority&#32;)
<anchor xml:id="_tasks_8c_source_1l01569"/>01569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01570"/>01570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;priority&#32;change&#32;may&#32;have&#32;readied&#32;a&#32;task&#32;of&#32;higher</emphasis>
<anchor xml:id="_tasks_8c_source_1l01571"/>01571 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;priority&#32;than&#32;the&#32;calling&#32;task.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01572"/>01572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;uxNewPriority&#32;&gt;&#32;uxCurrentBasePriority&#32;)
<anchor xml:id="_tasks_8c_source_1l01573"/>01573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01574"/>01574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB&#32;!=&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01575"/>01575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01576"/>01576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;priority&#32;of&#32;a&#32;task&#32;other&#32;than&#32;the&#32;currently</emphasis>
<anchor xml:id="_tasks_8c_source_1l01577"/>01577 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;running&#32;task&#32;is&#32;being&#32;raised.&#32;&#32;Is&#32;the&#32;priority&#32;being</emphasis>
<anchor xml:id="_tasks_8c_source_1l01578"/>01578 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;raised&#32;above&#32;that&#32;of&#32;the&#32;running&#32;task?&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01579"/>01579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;uxNewPriority&#32;&gt;=&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01580"/>01580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01581"/>01581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xYieldRequired&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l01582"/>01582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01583"/>01583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01584"/>01584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01585"/>01585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01586"/>01586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01587"/>01587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01588"/>01588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01589"/>01589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01590"/>01590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;priority&#32;of&#32;the&#32;running&#32;task&#32;is&#32;being&#32;raised,</emphasis>
<anchor xml:id="_tasks_8c_source_1l01591"/>01591 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;but&#32;the&#32;running&#32;task&#32;must&#32;already&#32;be&#32;the&#32;highest</emphasis>
<anchor xml:id="_tasks_8c_source_1l01592"/>01592 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;priority&#32;task&#32;able&#32;to&#32;run&#32;so&#32;no&#32;yield&#32;is&#32;required.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01593"/>01593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01594"/>01594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01595"/>01595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB&#32;==&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01596"/>01596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01597"/>01597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Setting&#32;the&#32;priority&#32;of&#32;the&#32;running&#32;task&#32;down&#32;means</emphasis>
<anchor xml:id="_tasks_8c_source_1l01598"/>01598 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;there&#32;may&#32;now&#32;be&#32;another&#32;task&#32;of&#32;higher&#32;priority&#32;that</emphasis>
<anchor xml:id="_tasks_8c_source_1l01599"/>01599 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;ready&#32;to&#32;execute.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01600"/>01600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xYieldRequired&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l01601"/>01601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01602"/>01602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01603"/>01603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01604"/>01604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Setting&#32;the&#32;priority&#32;of&#32;any&#32;other&#32;task&#32;down&#32;does&#32;not</emphasis>
<anchor xml:id="_tasks_8c_source_1l01605"/>01605 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;require&#32;a&#32;yield&#32;as&#32;the&#32;running&#32;task&#32;must&#32;be&#32;above&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l01606"/>01606 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new&#32;priority&#32;of&#32;the&#32;task&#32;being&#32;modified.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01607"/>01607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01608"/>01608 
<anchor xml:id="_tasks_8c_source_1l01609"/>01609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Remember&#32;the&#32;ready&#32;list&#32;the&#32;task&#32;might&#32;be&#32;referenced&#32;from</emphasis>
<anchor xml:id="_tasks_8c_source_1l01610"/>01610 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;before&#32;its&#32;uxPriority&#32;member&#32;is&#32;changed&#32;so&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l01611"/>01611 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;taskRESET_READY_PRIORITY()&#32;macro&#32;can&#32;function&#32;correctly.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01612"/>01612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxPriorityUsedOnEntry&#32;=&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>;
<anchor xml:id="_tasks_8c_source_1l01613"/>01613 
<anchor xml:id="_tasks_8c_source_1l01614"/>01614 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_MUTEXES&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01615"/>01615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01616"/>01616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Only&#32;change&#32;the&#32;priority&#32;being&#32;used&#32;if&#32;the&#32;task&#32;is&#32;not</emphasis>
<anchor xml:id="_tasks_8c_source_1l01617"/>01617 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currently&#32;using&#32;an&#32;inherited&#32;priority.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01618"/>01618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a3ce2f9306ee315873114616fb49a0ed2">uxBasePriority</link>&#32;==&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01619"/>01619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01620"/>01620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;=&#32;uxNewPriority;
<anchor xml:id="_tasks_8c_source_1l01621"/>01621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01622"/>01622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01623"/>01623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01624"/>01624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01625"/>01625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01626"/>01626 
<anchor xml:id="_tasks_8c_source_1l01627"/>01627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;base&#32;priority&#32;gets&#32;set&#32;whatever.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01628"/>01628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a3ce2f9306ee315873114616fb49a0ed2">uxBasePriority</link>&#32;=&#32;uxNewPriority;
<anchor xml:id="_tasks_8c_source_1l01629"/>01629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01630"/>01630 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01631"/>01631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01632"/>01632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;=&#32;uxNewPriority;
<anchor xml:id="_tasks_8c_source_1l01633"/>01633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01634"/>01634 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l01635"/>01635 
<anchor xml:id="_tasks_8c_source_1l01636"/>01636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Only&#32;reset&#32;the&#32;event&#32;list&#32;item&#32;value&#32;if&#32;the&#32;value&#32;is&#32;not</emphasis>
<anchor xml:id="_tasks_8c_source_1l01637"/>01637 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;being&#32;used&#32;for&#32;anything&#32;else.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01638"/>01638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;<link linkend="_list_8h_1aa50d09950abc602741d7ebe8387f4e1a">listGET_LIST_ITEM_VALUE</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;)&#32;&amp;&#32;<link linkend="_tasks_8c_1a3e36f3eda563e810a24ab36ee7c978d4">taskEVENT_LIST_ITEM_VALUE_IN_USE</link>&#32;)&#32;==&#32;0UL&#32;)
<anchor xml:id="_tasks_8c_source_1l01639"/>01639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01640"/>01640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8h_1a83e95e61652f032fdc26aa622f5e2610">listSET_LIST_ITEM_VALUE</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;),&#32;(&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;<link linkend="__free_r_t_o_s_config__default_8h_1a9a78f5ac61e6cb172dadf2a51f11db38">configMAX_PRIORITIES</link>&#32;-&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;uxNewPriority&#32;)&#32;);&#32;<emphasis role="comment">/*lint&#32;!e961&#32;MISRA&#32;exception&#32;as&#32;the&#32;casts&#32;are&#32;only&#32;redundant&#32;for&#32;some&#32;ports.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01641"/>01641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01642"/>01642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01643"/>01643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01644"/>01644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01645"/>01645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01646"/>01646 
<anchor xml:id="_tasks_8c_source_1l01647"/>01647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;task&#32;is&#32;in&#32;the&#32;blocked&#32;or&#32;suspended&#32;list&#32;we&#32;need&#32;do</emphasis>
<anchor xml:id="_tasks_8c_source_1l01648"/>01648 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nothing&#32;more&#32;than&#32;change&#32;its&#32;priority&#32;variable.&#32;However,&#32;if</emphasis>
<anchor xml:id="_tasks_8c_source_1l01649"/>01649 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;task&#32;is&#32;in&#32;a&#32;ready&#32;list&#32;it&#32;needs&#32;to&#32;be&#32;removed&#32;and&#32;placed</emphasis>
<anchor xml:id="_tasks_8c_source_1l01650"/>01650 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in&#32;the&#32;list&#32;appropriate&#32;to&#32;its&#32;new&#32;priority.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01651"/>01651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1a60302b468d21f8c53d13987372acb8fa">listIS_CONTAINED_WITHIN</link>(&#32;&amp;(&#32;<link linkend="_tasks_8c_1ab4a8345f8c340d07086342c0dd92c972">pxReadyTasksLists</link>[&#32;uxPriorityUsedOnEntry&#32;]&#32;),&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01652"/>01652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01653"/>01653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;is&#32;currently&#32;in&#32;its&#32;ready&#32;list&#32;-&#32;remove&#32;before</emphasis>
<anchor xml:id="_tasks_8c_source_1l01654"/>01654 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;adding&#32;it&#32;to&#32;it&apos;s&#32;new&#32;ready&#32;list.&#32;&#32;As&#32;we&#32;are&#32;in&#32;a&#32;critical</emphasis>
<anchor xml:id="_tasks_8c_source_1l01655"/>01655 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;section&#32;we&#32;can&#32;do&#32;this&#32;even&#32;if&#32;the&#32;scheduler&#32;is&#32;suspended.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01656"/>01656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8c_1a274fdced76bbdd9d8a4c4840ded2920c">uxListRemove</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;)&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_tasks_8c_source_1l01657"/>01657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01658"/>01658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;It&#32;is&#32;known&#32;that&#32;the&#32;task&#32;is&#32;in&#32;its&#32;ready&#32;list&#32;so</emphasis>
<anchor xml:id="_tasks_8c_source_1l01659"/>01659 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;there&#32;is&#32;no&#32;need&#32;to&#32;check&#32;again&#32;and&#32;the&#32;port&#32;level</emphasis>
<anchor xml:id="_tasks_8c_source_1l01660"/>01660 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reset&#32;macro&#32;can&#32;be&#32;called&#32;directly.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01661"/>01661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1aab771d12c0912d93d52a586628fb18a6">portRESET_READY_PRIORITY</link>(&#32;uxPriorityUsedOnEntry,&#32;<link linkend="_tasks_8c_1a3fffd96ac9ae0d8b352ae10896ed4531">uxTopReadyPriority</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l01662"/>01662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01663"/>01663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01664"/>01664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01665"/>01665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01666"/>01666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01667"/>01667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a94afc7269fff7c906c5eb0d9d315624b">prvAddTaskToReadyList</link>(&#32;pxTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l01668"/>01668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01669"/>01669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01670"/>01670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01671"/>01671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01672"/>01672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01673"/>01673 
<anchor xml:id="_tasks_8c_source_1l01674"/>01674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xYieldRequired&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01675"/>01675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01676"/>01676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1acd0c920e40647de517ac633965b52273">taskYIELD_IF_USING_PREEMPTION</link>();
<anchor xml:id="_tasks_8c_source_1l01677"/>01677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01678"/>01678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01679"/>01679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01680"/>01680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01681"/>01681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01682"/>01682 
<anchor xml:id="_tasks_8c_source_1l01683"/>01683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Remove&#32;compiler&#32;warning&#32;about&#32;unused&#32;variables&#32;when&#32;the&#32;port</emphasis>
<anchor xml:id="_tasks_8c_source_1l01684"/>01684 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimised&#32;task&#32;selection&#32;is&#32;not&#32;being&#32;used.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01685"/>01685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;uxPriorityUsedOnEntry;
<anchor xml:id="_tasks_8c_source_1l01686"/>01686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01687"/>01687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01688"/>01688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l01689"/>01689 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01690"/>01690 
<anchor xml:id="_tasks_8c_source_1l01691"/>01691 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;INCLUDE_vTaskPrioritySet&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l01692"/>01692 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01693"/>01693 
<anchor xml:id="_tasks_8c_source_1l01694"/>01694 <emphasis role="preprocessor">#if&#32;(&#32;INCLUDE_vTaskSuspend&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01695"/>01695 
<anchor xml:id="_tasks_8c_source_1l01696"/><link linkend="_task_8h_1a84d4e660b04630be2939d91b3c2412f8">01696</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1a7fa54417f854974ae4a2b38729b60f12">vTaskSuspend</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTaskToSuspend&#32;)
<anchor xml:id="_tasks_8c_source_1l01697"/>01697 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01698"/>01698 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxTCB;
<anchor xml:id="_tasks_8c_source_1l01699"/>01699 
<anchor xml:id="_tasks_8c_source_1l01700"/>01700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l01701"/>01701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01702"/>01702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;null&#32;is&#32;passed&#32;in&#32;here&#32;then&#32;it&#32;is&#32;the&#32;running&#32;task&#32;that&#32;is</emphasis>
<anchor xml:id="_tasks_8c_source_1l01703"/>01703 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;being&#32;suspended.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01704"/>01704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;<link linkend="_tasks_8c_1ad910f5e908283f1dfabd642fe1b11c6b">prvGetTCBFromHandle</link>(&#32;xTaskToSuspend&#32;);
<anchor xml:id="_tasks_8c_source_1l01705"/>01705 
<anchor xml:id="_tasks_8c_source_1l01706"/>01706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac48891d4d553ea9acbc660d2ebd2ffd7">traceTASK_SUSPEND</link>(&#32;pxTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l01707"/>01707 
<anchor xml:id="_tasks_8c_source_1l01708"/>01708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Remove&#32;task&#32;from&#32;the&#32;ready/delayed&#32;list&#32;and&#32;place&#32;in&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l01709"/>01709 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;suspended&#32;list.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01710"/>01710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8c_1a274fdced76bbdd9d8a4c4840ded2920c">uxListRemove</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;)&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_tasks_8c_source_1l01711"/>01711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01712"/>01712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a9517fc40d713aff9dd8182223948f9c8">taskRESET_READY_PRIORITY</link>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l01713"/>01713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01714"/>01714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01715"/>01715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01716"/>01716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01717"/>01717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01718"/>01718 
<anchor xml:id="_tasks_8c_source_1l01719"/>01719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Is&#32;the&#32;task&#32;waiting&#32;on&#32;an&#32;event&#32;also?&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01720"/>01720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1a7c4dff11380cd843ed0b6a8dc065916b">listLIST_ITEM_CONTAINER</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;)&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l01721"/>01721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01722"/>01722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_list_8c_1a274fdced76bbdd9d8a4c4840ded2920c">uxListRemove</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l01723"/>01723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01724"/>01724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01725"/>01725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01726"/>01726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01727"/>01727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01728"/>01728 
<anchor xml:id="_tasks_8c_source_1l01729"/>01729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8c_1a3240bc0f43fcf755be02bfc6de7dc6ef">vListInsertEnd</link>(&#32;&amp;<link linkend="_tasks_8c_1aeeff59d101a1407ffc42f81fda83baca">xSuspendedTaskList</link>,&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l01730"/>01730 
<anchor xml:id="_tasks_8c_source_1l01731"/>01731 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;configUSE_TASK_NOTIFICATIONS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01732"/>01732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01733"/>01733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1adab5291f06b774ed8f5bb6f76a77496f">ucNotifyState</link>&#32;==&#32;<link linkend="_tasks_8c_1acee66205293e253c13626e74798a0cf0">taskWAITING_NOTIFICATION</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01734"/>01734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01735"/>01735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;was&#32;blocked&#32;to&#32;wait&#32;for&#32;a&#32;notification,&#32;but&#32;is</emphasis>
<anchor xml:id="_tasks_8c_source_1l01736"/>01736 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;now&#32;suspended,&#32;so&#32;no&#32;notification&#32;was&#32;received.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01737"/>01737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1adab5291f06b774ed8f5bb6f76a77496f">ucNotifyState</link>&#32;=&#32;<link linkend="_tasks_8c_1a4f2f023143b2cd2367a441e104f8cf2c">taskNOT_WAITING_NOTIFICATION</link>;
<anchor xml:id="_tasks_8c_source_1l01738"/>01738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01739"/>01739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01740"/>01740 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l01741"/>01741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01742"/>01742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l01743"/>01743 
<anchor xml:id="_tasks_8c_source_1l01744"/>01744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a1799bfbb95c907794761d18bd75faff5">xSchedulerRunning</link>&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01745"/>01745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01746"/>01746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Reset&#32;the&#32;next&#32;expected&#32;unblock&#32;time&#32;in&#32;case&#32;it&#32;referred&#32;to&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l01747"/>01747 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;task&#32;that&#32;is&#32;now&#32;in&#32;the&#32;Suspended&#32;state.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01748"/>01748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l01749"/>01749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01750"/>01750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1ad1b2e4995f863a99cf980836efe330d7">prvResetNextTaskUnblockTime</link>();
<anchor xml:id="_tasks_8c_source_1l01751"/>01751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01752"/>01752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l01753"/>01753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01754"/>01754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01755"/>01755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01756"/>01756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01757"/>01757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01758"/>01758 
<anchor xml:id="_tasks_8c_source_1l01759"/>01759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB&#32;==&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01760"/>01760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01761"/>01761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a1799bfbb95c907794761d18bd75faff5">xSchedulerRunning</link>&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01762"/>01762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01763"/>01763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;current&#32;task&#32;has&#32;just&#32;been&#32;suspended.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01764"/>01764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;<link linkend="_tasks_8c_1a7522707fcf80b216e3a5b25ba464ec85">uxSchedulerSuspended</link>&#32;==&#32;0&#32;);
<anchor xml:id="_tasks_8c_source_1l01765"/>01765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1af4484fc07631a16e45ac5f29a3f0556e">portYIELD_WITHIN_API</link>();
<anchor xml:id="_tasks_8c_source_1l01766"/>01766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01767"/>01767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01768"/>01768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01769"/>01769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;scheduler&#32;is&#32;not&#32;running,&#32;but&#32;the&#32;task&#32;that&#32;was&#32;pointed</emphasis>
<anchor xml:id="_tasks_8c_source_1l01770"/>01770 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;by&#32;pxCurrentTCB&#32;has&#32;just&#32;been&#32;suspended&#32;and&#32;pxCurrentTCB</emphasis>
<anchor xml:id="_tasks_8c_source_1l01771"/>01771 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;must&#32;be&#32;adjusted&#32;to&#32;point&#32;to&#32;a&#32;different&#32;task.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01772"/>01772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1a18b4aded515bdc512017ea6e677a13bb">listCURRENT_LIST_LENGTH</link>(&#32;&amp;<link linkend="_tasks_8c_1aeeff59d101a1407ffc42f81fda83baca">xSuspendedTaskList</link>&#32;)&#32;==&#32;<link linkend="_tasks_8c_1a54edd210c179ef9d185f5ebb020eaa5a">uxCurrentNumberOfTasks</link>&#32;)&#32;<emphasis role="comment">/*lint&#32;!e931&#32;Right&#32;has&#32;no&#32;side&#32;effect,&#32;just&#32;volatile.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01773"/>01773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01774"/>01774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;No&#32;other&#32;tasks&#32;are&#32;ready,&#32;so&#32;set&#32;pxCurrentTCB&#32;back&#32;to</emphasis>
<anchor xml:id="_tasks_8c_source_1l01775"/>01775 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NULL&#32;so&#32;when&#32;the&#32;next&#32;task&#32;is&#32;created&#32;pxCurrentTCB&#32;will</emphasis>
<anchor xml:id="_tasks_8c_source_1l01776"/>01776 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;be&#32;set&#32;to&#32;point&#32;to&#32;it&#32;no&#32;matter&#32;what&#32;its&#32;relative&#32;priority</emphasis>
<anchor xml:id="_tasks_8c_source_1l01777"/>01777 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01778"/>01778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>&#32;=&#32;NULL;
<anchor xml:id="_tasks_8c_source_1l01779"/>01779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01780"/>01780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01781"/>01781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01782"/>01782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a9c86137bc3c1cbffc39fff22627cb885">vTaskSwitchContext</link>();
<anchor xml:id="_tasks_8c_source_1l01783"/>01783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01784"/>01784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01785"/>01785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01786"/>01786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01787"/>01787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01788"/>01788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01789"/>01789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01790"/>01790 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01791"/>01791 
<anchor xml:id="_tasks_8c_source_1l01792"/>01792 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;INCLUDE_vTaskSuspend&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l01793"/>01793 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01794"/>01794 
<anchor xml:id="_tasks_8c_source_1l01795"/>01795 <emphasis role="preprocessor">#if&#32;(&#32;INCLUDE_vTaskSuspend&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01796"/>01796 
<anchor xml:id="_tasks_8c_source_1l01797"/><link linkend="_tasks_8c_1abefde0f5ca141ae3d6e25f66a5234082">01797</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_tasks_8c_1abefde0f5ca141ae3d6e25f66a5234082">prvTaskIsTaskSuspended</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask&#32;)
<anchor xml:id="_tasks_8c_source_1l01798"/>01798 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01799"/>01799 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_tasks_8c_source_1l01800"/>01800 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxTCB&#32;=&#32;xTask;
<anchor xml:id="_tasks_8c_source_1l01801"/>01801 
<anchor xml:id="_tasks_8c_source_1l01802"/>01802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Accesses&#32;xPendingReadyList&#32;so&#32;must&#32;be&#32;called&#32;from&#32;a&#32;critical</emphasis>
<anchor xml:id="_tasks_8c_source_1l01803"/>01803 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;section.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01804"/>01804 
<anchor xml:id="_tasks_8c_source_1l01805"/>01805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;It&#32;does&#32;not&#32;make&#32;sense&#32;to&#32;check&#32;if&#32;the&#32;calling&#32;task&#32;is&#32;suspended.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01806"/>01806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xTask&#32;);
<anchor xml:id="_tasks_8c_source_1l01807"/>01807 
<anchor xml:id="_tasks_8c_source_1l01808"/>01808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Is&#32;the&#32;task&#32;being&#32;resumed&#32;actually&#32;in&#32;the&#32;suspended&#32;list?&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01809"/>01809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1a60302b468d21f8c53d13987372acb8fa">listIS_CONTAINED_WITHIN</link>(&#32;&amp;<link linkend="_tasks_8c_1aeeff59d101a1407ffc42f81fda83baca">xSuspendedTaskList</link>,&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01810"/>01810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01811"/>01811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Has&#32;the&#32;task&#32;already&#32;been&#32;resumed&#32;from&#32;within&#32;an&#32;ISR?&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01812"/>01812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1a60302b468d21f8c53d13987372acb8fa">listIS_CONTAINED_WITHIN</link>(&#32;&amp;<link linkend="_tasks_8c_1a73880e71e7ed72242d1a078685107421">xPendingReadyList</link>,&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01813"/>01813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01814"/>01814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Is&#32;it&#32;in&#32;the&#32;suspended&#32;list&#32;because&#32;it&#32;is&#32;in&#32;the&#32;Suspended</emphasis>
<anchor xml:id="_tasks_8c_source_1l01815"/>01815 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;state,&#32;or&#32;because&#32;is&#32;is&#32;blocked&#32;with&#32;no&#32;timeout?&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01816"/>01816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1a60302b468d21f8c53d13987372acb8fa">listIS_CONTAINED_WITHIN</link>(&#32;NULL,&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)&#32;<emphasis role="comment">/*lint&#32;!e961.&#32;&#32;The&#32;cast&#32;is&#32;only&#32;redundant&#32;when&#32;NULL&#32;is&#32;used.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01817"/>01817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01818"/>01818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l01819"/>01819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01820"/>01820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01821"/>01821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01822"/>01822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01823"/>01823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01824"/>01824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01825"/>01825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01826"/>01826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01827"/>01827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01828"/>01828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01829"/>01829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01830"/>01830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01831"/>01831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01832"/>01832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01833"/>01833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01834"/>01834 
<anchor xml:id="_tasks_8c_source_1l01835"/>01835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l01836"/>01836 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">/*lint&#32;!e818&#32;xTask&#32;cannot&#32;be&#32;a&#32;pointer&#32;to&#32;const&#32;because&#32;it&#32;is&#32;a&#32;typedef.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01837"/>01837 
<anchor xml:id="_tasks_8c_source_1l01838"/>01838 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;INCLUDE_vTaskSuspend&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l01839"/>01839 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01840"/>01840 
<anchor xml:id="_tasks_8c_source_1l01841"/>01841 <emphasis role="preprocessor">#if&#32;(&#32;INCLUDE_vTaskSuspend&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01842"/>01842 
<anchor xml:id="_tasks_8c_source_1l01843"/><link linkend="_task_8h_1a84a1584f29fb7736a1aa72ad5b3e9b44">01843</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1ad8abaa814e2cfc4830c276415d0935bb">vTaskResume</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTaskToResume&#32;)
<anchor xml:id="_tasks_8c_source_1l01844"/>01844 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01845"/>01845 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxTCB&#32;=&#32;xTaskToResume;
<anchor xml:id="_tasks_8c_source_1l01846"/>01846 
<anchor xml:id="_tasks_8c_source_1l01847"/>01847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;It&#32;does&#32;not&#32;make&#32;sense&#32;to&#32;resume&#32;the&#32;calling&#32;task.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01848"/>01848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xTaskToResume&#32;);
<anchor xml:id="_tasks_8c_source_1l01849"/>01849 
<anchor xml:id="_tasks_8c_source_1l01850"/>01850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;parameter&#32;cannot&#32;be&#32;NULL&#32;as&#32;it&#32;is&#32;impossible&#32;to&#32;resume&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l01851"/>01851 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currently&#32;executing&#32;task.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01852"/>01852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;pxTCB&#32;!=&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>&#32;)&#32;&amp;&amp;&#32;(&#32;pxTCB&#32;!=&#32;NULL&#32;)&#32;)
<anchor xml:id="_tasks_8c_source_1l01853"/>01853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01854"/>01854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l01855"/>01855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01856"/>01856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1abefde0f5ca141ae3d6e25f66a5234082">prvTaskIsTaskSuspended</link>(&#32;pxTCB&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01857"/>01857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01858"/>01858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a4f21b0c170fa8675ee2dbf70141695a2">traceTASK_RESUME</link>(&#32;pxTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l01859"/>01859 
<anchor xml:id="_tasks_8c_source_1l01860"/>01860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;ready&#32;list&#32;can&#32;be&#32;accessed&#32;even&#32;if&#32;the&#32;scheduler&#32;is</emphasis>
<anchor xml:id="_tasks_8c_source_1l01861"/>01861 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;suspended&#32;because&#32;this&#32;is&#32;inside&#32;a&#32;critical&#32;section.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01862"/>01862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_list_8c_1a274fdced76bbdd9d8a4c4840ded2920c">uxListRemove</link>(&#32;&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l01863"/>01863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a94afc7269fff7c906c5eb0d9d315624b">prvAddTaskToReadyList</link>(&#32;pxTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l01864"/>01864 
<anchor xml:id="_tasks_8c_source_1l01865"/>01865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;higher&#32;priority&#32;task&#32;may&#32;have&#32;just&#32;been&#32;resumed.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01866"/>01866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;&gt;=&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01867"/>01867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01868"/>01868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;yield&#32;may&#32;not&#32;cause&#32;the&#32;task&#32;just&#32;resumed&#32;to&#32;run,</emphasis>
<anchor xml:id="_tasks_8c_source_1l01869"/>01869 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;but&#32;will&#32;leave&#32;the&#32;lists&#32;in&#32;the&#32;correct&#32;state&#32;for&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l01870"/>01870 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;next&#32;yield.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01871"/>01871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1acd0c920e40647de517ac633965b52273">taskYIELD_IF_USING_PREEMPTION</link>();
<anchor xml:id="_tasks_8c_source_1l01872"/>01872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01873"/>01873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01874"/>01874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01875"/>01875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01876"/>01876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01877"/>01877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01878"/>01878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01879"/>01879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01880"/>01880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01881"/>01881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01882"/>01882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01883"/>01883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l01884"/>01884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01885"/>01885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01886"/>01886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01887"/>01887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01888"/>01888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01889"/>01889 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01890"/>01890 
<anchor xml:id="_tasks_8c_source_1l01891"/>01891 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;INCLUDE_vTaskSuspend&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l01892"/>01892 
<anchor xml:id="_tasks_8c_source_1l01893"/>01893 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01894"/>01894 
<anchor xml:id="_tasks_8c_source_1l01895"/>01895 <emphasis role="preprocessor">#if&#32;(&#32;(&#32;INCLUDE_xTaskResumeFromISR&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;INCLUDE_vTaskSuspend&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01896"/>01896 
<anchor xml:id="_tasks_8c_source_1l01897"/><link linkend="_task_8h_1aefbfd37c0661c3062fafd7334bff9aed">01897</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_tasks_8c_1a17fb13e7325d9dee9dec76f4a736138b">xTaskResumeFromISR</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTaskToResume&#32;)
<anchor xml:id="_tasks_8c_source_1l01898"/>01898 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01899"/>01899 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xYieldRequired&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_tasks_8c_source_1l01900"/>01900 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxTCB&#32;=&#32;xTaskToResume;
<anchor xml:id="_tasks_8c_source_1l01901"/>01901 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxSavedInterruptStatus;
<anchor xml:id="_tasks_8c_source_1l01902"/>01902 
<anchor xml:id="_tasks_8c_source_1l01903"/>01903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xTaskToResume&#32;);
<anchor xml:id="_tasks_8c_source_1l01904"/>01904 
<anchor xml:id="_tasks_8c_source_1l01905"/>01905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;RTOS&#32;ports&#32;that&#32;support&#32;interrupt&#32;nesting&#32;have&#32;the&#32;concept&#32;of&#32;a</emphasis>
<anchor xml:id="_tasks_8c_source_1l01906"/>01906 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maximum&#32;system&#32;call&#32;(or&#32;maximum&#32;API&#32;call)&#32;interrupt&#32;priority.</emphasis>
<anchor xml:id="_tasks_8c_source_1l01907"/>01907 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Interrupts&#32;that&#32;are&#32;above&#32;the&#32;maximum&#32;system&#32;call&#32;priority&#32;are&#32;keep</emphasis>
<anchor xml:id="_tasks_8c_source_1l01908"/>01908 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;permanently&#32;enabled,&#32;even&#32;when&#32;the&#32;RTOS&#32;kernel&#32;is&#32;in&#32;a&#32;critical&#32;section,</emphasis>
<anchor xml:id="_tasks_8c_source_1l01909"/>01909 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;but&#32;cannot&#32;make&#32;any&#32;calls&#32;to&#32;FreeRTOS&#32;API&#32;functions.&#32;&#32;If&#32;configASSERT()</emphasis>
<anchor xml:id="_tasks_8c_source_1l01910"/>01910 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;defined&#32;in&#32;FreeRTOSConfig.h&#32;then</emphasis>
<anchor xml:id="_tasks_8c_source_1l01911"/>01911 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;portASSERT_IF_INTERRUPT_PRIORITY_INVALID()&#32;will&#32;result&#32;in&#32;an&#32;assertion</emphasis>
<anchor xml:id="_tasks_8c_source_1l01912"/>01912 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;failure&#32;if&#32;a&#32;FreeRTOS&#32;API&#32;function&#32;is&#32;called&#32;from&#32;an&#32;interrupt&#32;that&#32;has</emphasis>
<anchor xml:id="_tasks_8c_source_1l01913"/>01913 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;been&#32;assigned&#32;a&#32;priority&#32;above&#32;the&#32;configured&#32;maximum&#32;system&#32;call</emphasis>
<anchor xml:id="_tasks_8c_source_1l01914"/>01914 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;priority.&#32;&#32;Only&#32;FreeRTOS&#32;functions&#32;that&#32;end&#32;in&#32;FromISR&#32;can&#32;be&#32;called</emphasis>
<anchor xml:id="_tasks_8c_source_1l01915"/>01915 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;from&#32;interrupts&#32;that&#32;have&#32;been&#32;assigned&#32;a&#32;priority&#32;at&#32;or&#32;(logically)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01916"/>01916 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;below&#32;the&#32;maximum&#32;system&#32;call&#32;interrupt&#32;priority.&#32;&#32;FreeRTOS&#32;maintains&#32;a</emphasis>
<anchor xml:id="_tasks_8c_source_1l01917"/>01917 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;separate&#32;interrupt&#32;safe&#32;API&#32;to&#32;ensure&#32;interrupt&#32;entry&#32;is&#32;as&#32;fast&#32;and&#32;as</emphasis>
<anchor xml:id="_tasks_8c_source_1l01918"/>01918 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;simple&#32;as&#32;possible.&#32;&#32;More&#32;information&#32;(albeit&#32;Cortex-M&#32;specific)&#32;is</emphasis>
<anchor xml:id="_tasks_8c_source_1l01919"/>01919 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;provided&#32;on&#32;the&#32;following&#32;link:</emphasis>
<anchor xml:id="_tasks_8c_source_1l01920"/>01920 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;https://www.freertos.org/RTOS-Cortex-M3-M4.html&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01921"/>01921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a10f75d20c71c4289f96d1b89cb6c62e2">portASSERT_IF_INTERRUPT_PRIORITY_INVALID</link>();
<anchor xml:id="_tasks_8c_source_1l01922"/>01922 
<anchor xml:id="_tasks_8c_source_1l01923"/>01923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxSavedInterruptStatus&#32;=&#32;<link linkend="_portmacro_8h_1a31b4260dbc1823ba80b578f86eb15a98">portSET_INTERRUPT_MASK_FROM_ISR</link>();
<anchor xml:id="_tasks_8c_source_1l01924"/>01924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01925"/>01925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1abefde0f5ca141ae3d6e25f66a5234082">prvTaskIsTaskSuspended</link>(&#32;pxTCB&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01926"/>01926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01927"/>01927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a7b4afafa82e9c80d0dc43cc22108d248">traceTASK_RESUME_FROM_ISR</link>(&#32;pxTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l01928"/>01928 
<anchor xml:id="_tasks_8c_source_1l01929"/>01929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Check&#32;the&#32;ready&#32;lists&#32;can&#32;be&#32;accessed.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01930"/>01930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a7522707fcf80b216e3a5b25ba464ec85">uxSchedulerSuspended</link>&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01931"/>01931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01932"/>01932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Ready&#32;lists&#32;can&#32;be&#32;accessed&#32;so&#32;move&#32;the&#32;task&#32;from&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l01933"/>01933 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;suspended&#32;list&#32;to&#32;the&#32;ready&#32;list&#32;directly.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01934"/>01934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;&gt;=&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l01935"/>01935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01936"/>01936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xYieldRequired&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l01937"/>01937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01938"/>01938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01939"/>01939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01940"/>01940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01941"/>01941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01942"/>01942 
<anchor xml:id="_tasks_8c_source_1l01943"/>01943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_list_8c_1a274fdced76bbdd9d8a4c4840ded2920c">uxListRemove</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l01944"/>01944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a94afc7269fff7c906c5eb0d9d315624b">prvAddTaskToReadyList</link>(&#32;pxTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l01945"/>01945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01946"/>01946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01947"/>01947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01948"/>01948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;delayed&#32;or&#32;ready&#32;lists&#32;cannot&#32;be&#32;accessed&#32;so&#32;the&#32;task</emphasis>
<anchor xml:id="_tasks_8c_source_1l01949"/>01949 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;held&#32;in&#32;the&#32;pending&#32;ready&#32;list&#32;until&#32;the&#32;scheduler&#32;is</emphasis>
<anchor xml:id="_tasks_8c_source_1l01950"/>01950 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unsuspended.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01951"/>01951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8c_1a3240bc0f43fcf755be02bfc6de7dc6ef">vListInsertEnd</link>(&#32;&amp;(&#32;<link linkend="_tasks_8c_1a73880e71e7ed72242d1a078685107421">xPendingReadyList</link>&#32;),&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l01952"/>01952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01953"/>01953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01954"/>01954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01955"/>01955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01956"/>01956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l01957"/>01957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01958"/>01958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01959"/>01959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a79d65a5d0f6f9133a0739832e9d8367e">portCLEAR_INTERRUPT_MASK_FROM_ISR</link>(&#32;uxSavedInterruptStatus&#32;);
<anchor xml:id="_tasks_8c_source_1l01960"/>01960 
<anchor xml:id="_tasks_8c_source_1l01961"/>01961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xYieldRequired;
<anchor xml:id="_tasks_8c_source_1l01962"/>01962 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01963"/>01963 
<anchor xml:id="_tasks_8c_source_1l01964"/>01964 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;(&#32;(&#32;INCLUDE_xTaskResumeFromISR&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;INCLUDE_vTaskSuspend&#32;==&#32;1&#32;)&#32;)&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l01965"/>01965 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01966"/>01966 
<anchor xml:id="_tasks_8c_source_1l01967"/><link linkend="_task_8h_1aaf9dca1065c60abdeb309d56ab7293cb">01967</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1a598661cdd2a6af95a077245d11e3d142">vTaskStartScheduler</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)
<anchor xml:id="_tasks_8c_source_1l01968"/>01968 {
<anchor xml:id="_tasks_8c_source_1l01969"/>01969 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l01970"/>01970 
<anchor xml:id="_tasks_8c_source_1l01971"/>01971 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Add&#32;the&#32;idle&#32;task&#32;at&#32;the&#32;lowest&#32;priority.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01972"/>01972 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if(&#32;configSUPPORT_STATIC_ALLOCATION&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l01973"/>01973 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01974"/>01974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structx_s_t_a_t_i_c___t_c_b">StaticTask_t</link>&#32;*pxIdleTaskTCBBuffer&#32;=&#32;NULL;
<anchor xml:id="_tasks_8c_source_1l01975"/>01975 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1aa73b01e0200940d619095fb74fb3030b">StackType_t</link>&#32;*pxIdleTaskStackBuffer&#32;=&#32;NULL;
<anchor xml:id="_tasks_8c_source_1l01976"/>01976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint32_t&#32;ulIdleTaskStackSize;
<anchor xml:id="_tasks_8c_source_1l01977"/>01977 
<anchor xml:id="_tasks_8c_source_1l01978"/>01978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;Idle&#32;task&#32;is&#32;created&#32;using&#32;user&#32;provided&#32;RAM&#32;-&#32;obtain&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l01979"/>01979 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;address&#32;of&#32;the&#32;RAM&#32;then&#32;create&#32;the&#32;idle&#32;task.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01980"/>01980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vApplicationGetIdleTaskMemory(&#32;&amp;pxIdleTaskTCBBuffer,&#32;&amp;pxIdleTaskStackBuffer,&#32;&amp;ulIdleTaskStackSize&#32;);
<anchor xml:id="_tasks_8c_source_1l01981"/>01981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1ab1afeb7ccc3b00411775f107e31134ad">xIdleTaskHandle</link>&#32;=&#32;xTaskCreateStatic(&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1af0212702c981e5413a318c0346ac37b2">prvIdleTask</link>,
<anchor xml:id="_tasks_8c_source_1l01982"/>01982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1aa637612832bcdd420acc9e6cc4361071">configIDLE_TASK_NAME</link>,
<anchor xml:id="_tasks_8c_source_1l01983"/>01983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulIdleTaskStackSize,
<anchor xml:id="_tasks_8c_source_1l01984"/>01984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;)&#32;NULL,&#32;<emphasis role="comment">/*lint&#32;!e961.&#32;&#32;The&#32;cast&#32;is&#32;not&#32;redundant&#32;for&#32;all&#32;compilers.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01985"/>01985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a27b7e11718b2ec5b5217e60f3b9e8aec">portPRIVILEGE_BIT</link>,&#32;<emphasis role="comment">/*&#32;In&#32;effect&#32;(&#32;tskIDLE_PRIORITY&#32;|&#32;portPRIVILEGE_BIT&#32;),&#32;but&#32;tskIDLE_PRIORITY&#32;is&#32;zero.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01986"/>01986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxIdleTaskStackBuffer,
<anchor xml:id="_tasks_8c_source_1l01987"/>01987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxIdleTaskTCBBuffer&#32;);&#32;<emphasis role="comment">/*lint&#32;!e961&#32;MISRA&#32;exception,&#32;justified&#32;as&#32;it&#32;is&#32;not&#32;a&#32;redundant&#32;explicit&#32;cast&#32;to&#32;all&#32;supported&#32;compilers.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l01988"/>01988 
<anchor xml:id="_tasks_8c_source_1l01989"/>01989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1ab1afeb7ccc3b00411775f107e31134ad">xIdleTaskHandle</link>&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l01990"/>01990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01991"/>01991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>;
<anchor xml:id="_tasks_8c_source_1l01992"/>01992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01993"/>01993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01994"/>01994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l01995"/>01995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6">pdFAIL</link>;
<anchor xml:id="_tasks_8c_source_1l01996"/>01996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01997"/>01997 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l01998"/>01998 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="_tasks_8c_source_1l01999"/>01999 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02000"/>02000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;Idle&#32;task&#32;is&#32;being&#32;created&#32;using&#32;dynamically&#32;allocated&#32;RAM.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02001"/>02001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_tasks_8c_1ad138d9dda4709b10d711775fa40eb1a1">xTaskCreate</link>(&#32;&#32;<link linkend="_tasks_8c_1af0212702c981e5413a318c0346ac37b2">prvIdleTask</link>,
<anchor xml:id="_tasks_8c_source_1l02002"/>02002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1aa637612832bcdd420acc9e6cc4361071">configIDLE_TASK_NAME</link>,
<anchor xml:id="_tasks_8c_source_1l02003"/>02003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_config__default_8h_1a6c534a6cf8a00528fe0be42083484f9a">configMINIMAL_STACK_SIZE</link>,
<anchor xml:id="_tasks_8c_source_1l02004"/>02004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;)&#32;NULL,
<anchor xml:id="_tasks_8c_source_1l02005"/>02005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a27b7e11718b2ec5b5217e60f3b9e8aec">portPRIVILEGE_BIT</link>,&#32;<emphasis role="comment">/*&#32;In&#32;effect&#32;(&#32;tskIDLE_PRIORITY&#32;|&#32;portPRIVILEGE_BIT&#32;),&#32;but&#32;tskIDLE_PRIORITY&#32;is&#32;zero.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02006"/>02006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;<link linkend="_tasks_8c_1ab1afeb7ccc3b00411775f107e31134ad">xIdleTaskHandle</link>&#32;);&#32;<emphasis role="comment">/*lint&#32;!e961&#32;MISRA&#32;exception,&#32;justified&#32;as&#32;it&#32;is&#32;not&#32;a&#32;redundant&#32;explicit&#32;cast&#32;to&#32;all&#32;supported&#32;compilers.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02007"/>02007 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02008"/>02008 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configSUPPORT_STATIC_ALLOCATION&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l02009"/>02009 
<anchor xml:id="_tasks_8c_source_1l02010"/>02010 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_TIMERS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02011"/>02011 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02012"/>02012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xReturn&#32;==&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l02013"/>02013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02014"/>02014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_timers_8c_1abd79bb4d0a93bdb1c27a3a755ce7905b">xTimerCreateTimerTask</link>();
<anchor xml:id="_tasks_8c_source_1l02015"/>02015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02016"/>02016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02017"/>02017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02018"/>02018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l02019"/>02019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02020"/>02020 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02021"/>02021 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TIMERS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l02022"/>02022 
<anchor xml:id="_tasks_8c_source_1l02023"/>02023 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xReturn&#32;==&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l02024"/>02024 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02025"/>02025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;freertos_tasks_c_additions_init()&#32;should&#32;only&#32;be&#32;called&#32;if&#32;the&#32;user</emphasis>
<anchor xml:id="_tasks_8c_source_1l02026"/>02026 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;definable&#32;macro&#32;FREERTOS_TASKS_C_ADDITIONS_INIT()&#32;is&#32;defined,&#32;as&#32;that&#32;is</emphasis>
<anchor xml:id="_tasks_8c_source_1l02027"/>02027 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;only&#32;macro&#32;called&#32;by&#32;the&#32;function.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02028"/>02028 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#ifdef&#32;FREERTOS_TASKS_C_ADDITIONS_INIT</emphasis>
<anchor xml:id="_tasks_8c_source_1l02029"/>02029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02030"/>02030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;freertos_tasks_c_additions_init();
<anchor xml:id="_tasks_8c_source_1l02031"/>02031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02032"/>02032 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l02033"/>02033 
<anchor xml:id="_tasks_8c_source_1l02034"/>02034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Interrupts&#32;are&#32;turned&#32;off&#32;here,&#32;to&#32;ensure&#32;a&#32;tick&#32;does&#32;not&#32;occur</emphasis>
<anchor xml:id="_tasks_8c_source_1l02035"/>02035 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;before&#32;or&#32;during&#32;the&#32;call&#32;to&#32;xPortStartScheduler().&#32;&#32;The&#32;stacks&#32;of</emphasis>
<anchor xml:id="_tasks_8c_source_1l02036"/>02036 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;created&#32;tasks&#32;contain&#32;a&#32;status&#32;word&#32;with&#32;interrupts&#32;switched&#32;on</emphasis>
<anchor xml:id="_tasks_8c_source_1l02037"/>02037 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;so&#32;interrupts&#32;will&#32;automatically&#32;get&#32;re-enabled&#32;when&#32;the&#32;first&#32;task</emphasis>
<anchor xml:id="_tasks_8c_source_1l02038"/>02038 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;starts&#32;to&#32;run.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02039"/>02039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a6e3d10ee1a0734a647ca192523c2cfc1">portDISABLE_INTERRUPTS</link>();
<anchor xml:id="_tasks_8c_source_1l02040"/>02040 
<anchor xml:id="_tasks_8c_source_1l02041"/>02041 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_NEWLIB_REENTRANT&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02042"/>02042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02043"/>02043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Switch&#32;Newlib&apos;s&#32;_impure_ptr&#32;variable&#32;to&#32;point&#32;to&#32;the&#32;_reent</emphasis>
<anchor xml:id="_tasks_8c_source_1l02044"/>02044 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;structure&#32;specific&#32;to&#32;the&#32;task&#32;that&#32;will&#32;run&#32;first.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02045"/>02045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_impure_ptr&#32;=&#32;&amp;(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;xNewLib_reent&#32;);
<anchor xml:id="_tasks_8c_source_1l02046"/>02046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02047"/>02047 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_NEWLIB_REENTRANT&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l02048"/>02048 
<anchor xml:id="_tasks_8c_source_1l02049"/>02049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1ac27aa725d8922f33f880005e72edec68">xNextTaskUnblockTime</link>&#32;=&#32;<link linkend="_portmacro_8h_1a72723ba1e4a85ca14f25c2b9e066613d">portMAX_DELAY</link>;
<anchor xml:id="_tasks_8c_source_1l02050"/>02050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a1799bfbb95c907794761d18bd75faff5">xSchedulerRunning</link>&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l02051"/>02051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1aaa88969a9b48aea401dbb1ff2b0ef4de">xTickCount</link>&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;<link linkend="__free_r_t_o_s_8h_1ae52c1acd13b26e8758dc66b60b0e3417">configINITIAL_TICK_COUNT</link>;
<anchor xml:id="_tasks_8c_source_1l02052"/>02052 
<anchor xml:id="_tasks_8c_source_1l02053"/>02053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;configGENERATE_RUN_TIME_STATS&#32;is&#32;defined&#32;then&#32;the&#32;following</emphasis>
<anchor xml:id="_tasks_8c_source_1l02054"/>02054 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;macro&#32;must&#32;be&#32;defined&#32;to&#32;configure&#32;the&#32;timer/counter&#32;used&#32;to&#32;generate</emphasis>
<anchor xml:id="_tasks_8c_source_1l02055"/>02055 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;run&#32;time&#32;counter&#32;time&#32;base.&#32;&#32;&#32;NOTE:&#32;&#32;If&#32;configGENERATE_RUN_TIME_STATS</emphasis>
<anchor xml:id="_tasks_8c_source_1l02056"/>02056 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;set&#32;to&#32;0&#32;and&#32;the&#32;following&#32;line&#32;fails&#32;to&#32;build&#32;then&#32;ensure&#32;you&#32;do&#32;not</emphasis>
<anchor xml:id="_tasks_8c_source_1l02057"/>02057 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;have&#32;portCONFIGURE_TIMER_FOR_RUN_TIME_STATS()&#32;defined&#32;in&#32;your</emphasis>
<anchor xml:id="_tasks_8c_source_1l02058"/>02058 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FreeRTOSConfig.h&#32;file.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02059"/>02059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a727939bcdb98501e0eba0ec8a1841e1b">portCONFIGURE_TIMER_FOR_RUN_TIME_STATS</link>();
<anchor xml:id="_tasks_8c_source_1l02060"/>02060 
<anchor xml:id="_tasks_8c_source_1l02061"/>02061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a2f813fe80d3519a396a9f2bb7cc7e820">traceTASK_SWITCHED_IN</link>();
<anchor xml:id="_tasks_8c_source_1l02062"/>02062 
<anchor xml:id="_tasks_8c_source_1l02063"/>02063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Setting&#32;up&#32;the&#32;timer&#32;tick&#32;is&#32;hardware&#32;specific&#32;and&#32;thus&#32;in&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l02064"/>02064 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;portable&#32;interface.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02065"/>02065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_port_8c_1ade5a8c6666e7413a0355cc252029c5c6">xPortStartScheduler</link>()&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l02066"/>02066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02067"/>02067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Should&#32;not&#32;reach&#32;here&#32;as&#32;if&#32;the&#32;scheduler&#32;is&#32;running&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l02068"/>02068 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&#32;will&#32;not&#32;return.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02069"/>02069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02070"/>02070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02071"/>02071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02072"/>02072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Should&#32;only&#32;reach&#32;here&#32;if&#32;a&#32;task&#32;calls&#32;xTaskEndScheduler().&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02073"/>02073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02074"/>02074 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02075"/>02075 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02076"/>02076 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02077"/>02077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;line&#32;will&#32;only&#32;be&#32;reached&#32;if&#32;the&#32;kernel&#32;could&#32;not&#32;be&#32;started,</emphasis>
<anchor xml:id="_tasks_8c_source_1l02078"/>02078 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;because&#32;there&#32;was&#32;not&#32;enough&#32;FreeRTOS&#32;heap&#32;to&#32;create&#32;the&#32;idle&#32;task</emphasis>
<anchor xml:id="_tasks_8c_source_1l02079"/>02079 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;or&#32;the&#32;timer&#32;task.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02080"/>02080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xReturn&#32;!=&#32;<link linkend="_projdefs_8h_1a0b024e12cbca6f5018f5f1a43818b03d">errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l02081"/>02081 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02082"/>02082 
<anchor xml:id="_tasks_8c_source_1l02083"/>02083 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Prevent&#32;compiler&#32;warnings&#32;if&#32;INCLUDE_xTaskGetIdleTaskHandle&#32;is&#32;set&#32;to&#32;0,</emphasis>
<anchor xml:id="_tasks_8c_source_1l02084"/>02084 <emphasis role="comment">&#32;&#32;&#32;&#32;meaning&#32;xIdleTaskHandle&#32;is&#32;not&#32;used&#32;anywhere&#32;else.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02085"/>02085 &#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_tasks_8c_1ab1afeb7ccc3b00411775f107e31134ad">xIdleTaskHandle</link>;
<anchor xml:id="_tasks_8c_source_1l02086"/>02086 }
<anchor xml:id="_tasks_8c_source_1l02087"/>02087 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02088"/>02088 
<anchor xml:id="_tasks_8c_source_1l02089"/><link linkend="_task_8h_1a1651e13c7ccd6273f53a62425ec79a15">02089</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1aeadc53d3d0d0ea3a6c7702a9eacbf452">vTaskEndScheduler</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)
<anchor xml:id="_tasks_8c_source_1l02090"/>02090 {
<anchor xml:id="_tasks_8c_source_1l02091"/>02091 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Stop&#32;the&#32;scheduler&#32;interrupts&#32;and&#32;call&#32;the&#32;portable&#32;scheduler&#32;end</emphasis>
<anchor xml:id="_tasks_8c_source_1l02092"/>02092 <emphasis role="comment">&#32;&#32;&#32;&#32;routine&#32;so&#32;the&#32;original&#32;ISRs&#32;can&#32;be&#32;restored&#32;if&#32;necessary.&#32;&#32;The&#32;port</emphasis>
<anchor xml:id="_tasks_8c_source_1l02093"/>02093 <emphasis role="comment">&#32;&#32;&#32;&#32;layer&#32;must&#32;ensure&#32;interrupts&#32;enable&#32;bit&#32;is&#32;left&#32;in&#32;the&#32;correct&#32;state.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02094"/>02094 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a6e3d10ee1a0734a647ca192523c2cfc1">portDISABLE_INTERRUPTS</link>();
<anchor xml:id="_tasks_8c_source_1l02095"/>02095 &#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a1799bfbb95c907794761d18bd75faff5">xSchedulerRunning</link>&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_tasks_8c_source_1l02096"/>02096 &#32;&#32;&#32;&#32;<link linkend="_port_8c_1af76f3c0b44c5b5c06fc046a4ee1a6423">vPortEndScheduler</link>();
<anchor xml:id="_tasks_8c_source_1l02097"/>02097 }
<anchor xml:id="_tasks_8c_source_1l02098"/>02098 <emphasis role="comment">/*----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02099"/>02099 
<anchor xml:id="_tasks_8c_source_1l02100"/><link linkend="_task_8h_1a366b302eba79d10b5ee2a3756f0fcc43">02100</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1a084d232640bd1d04bcac0b8784417015">vTaskSuspendAll</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)
<anchor xml:id="_tasks_8c_source_1l02101"/>02101 {
<anchor xml:id="_tasks_8c_source_1l02102"/>02102 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;critical&#32;section&#32;is&#32;not&#32;required&#32;as&#32;the&#32;variable&#32;is&#32;of&#32;type</emphasis>
<anchor xml:id="_tasks_8c_source_1l02103"/>02103 <emphasis role="comment">&#32;&#32;&#32;&#32;BaseType_t.&#32;&#32;Please&#32;read&#32;Richard&#32;Barry&apos;s&#32;reply&#32;in&#32;the&#32;following&#32;link&#32;to&#32;a</emphasis>
<anchor xml:id="_tasks_8c_source_1l02104"/>02104 <emphasis role="comment">&#32;&#32;&#32;&#32;post&#32;in&#32;the&#32;FreeRTOS&#32;support&#32;forum&#32;before&#32;reporting&#32;this&#32;as&#32;a&#32;bug!&#32;-</emphasis>
<anchor xml:id="_tasks_8c_source_1l02105"/>02105 <emphasis role="comment">&#32;&#32;&#32;&#32;http://goo.gl/wu4acr&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02106"/>02106 &#32;&#32;&#32;&#32;++<link linkend="_tasks_8c_1a7522707fcf80b216e3a5b25ba464ec85">uxSchedulerSuspended</link>;
<anchor xml:id="_tasks_8c_source_1l02107"/>02107 }
<anchor xml:id="_tasks_8c_source_1l02108"/>02108 <emphasis role="comment">/*----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02109"/>02109 
<anchor xml:id="_tasks_8c_source_1l02110"/>02110 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_TICKLESS_IDLE&#32;!=&#32;0&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02111"/>02111 
<anchor xml:id="_tasks_8c_source_1l02112"/>02112 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;prvGetExpectedIdleTime(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)
<anchor xml:id="_tasks_8c_source_1l02113"/>02113 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02114"/>02114 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l02115"/>02115 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxHigherPriorityReadyTasks&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_tasks_8c_source_1l02116"/>02116 
<anchor xml:id="_tasks_8c_source_1l02117"/>02117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;uxHigherPriorityReadyTasks&#32;takes&#32;care&#32;of&#32;the&#32;case&#32;where</emphasis>
<anchor xml:id="_tasks_8c_source_1l02118"/>02118 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;configUSE_PREEMPTION&#32;is&#32;0,&#32;so&#32;there&#32;may&#32;be&#32;tasks&#32;above&#32;the&#32;idle&#32;priority</emphasis>
<anchor xml:id="_tasks_8c_source_1l02119"/>02119 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;task&#32;that&#32;are&#32;in&#32;the&#32;Ready&#32;state,&#32;even&#32;though&#32;the&#32;idle&#32;task&#32;is</emphasis>
<anchor xml:id="_tasks_8c_source_1l02120"/>02120 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;running.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02121"/>02121 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;configUSE_PORT_OPTIMISED_TASK_SELECTION&#32;==&#32;0&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02122"/>02122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02123"/>02123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a3fffd96ac9ae0d8b352ae10896ed4531">uxTopReadyPriority</link>&#32;&gt;&#32;<link linkend="_task_8h_1a94ed0b9b3b4e8ccc859c322f18583e67">tskIDLE_PRIORITY</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l02124"/>02124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02125"/>02125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxHigherPriorityReadyTasks&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l02126"/>02126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02127"/>02127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02128"/>02128 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02129"/>02129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02130"/>02130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxLeastSignificantBit&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0x01;
<anchor xml:id="_tasks_8c_source_1l02131"/>02131 
<anchor xml:id="_tasks_8c_source_1l02132"/>02132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;When&#32;port&#32;optimised&#32;task&#32;selection&#32;is&#32;used&#32;the&#32;uxTopReadyPriority</emphasis>
<anchor xml:id="_tasks_8c_source_1l02133"/>02133 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;variable&#32;is&#32;used&#32;as&#32;a&#32;bit&#32;map.&#32;&#32;If&#32;bits&#32;other&#32;than&#32;the&#32;least</emphasis>
<anchor xml:id="_tasks_8c_source_1l02134"/>02134 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;significant&#32;bit&#32;are&#32;set&#32;then&#32;there&#32;are&#32;tasks&#32;that&#32;have&#32;a&#32;priority</emphasis>
<anchor xml:id="_tasks_8c_source_1l02135"/>02135 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;above&#32;the&#32;idle&#32;priority&#32;that&#32;are&#32;in&#32;the&#32;Ready&#32;state.&#32;&#32;This&#32;takes</emphasis>
<anchor xml:id="_tasks_8c_source_1l02136"/>02136 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;care&#32;of&#32;the&#32;case&#32;where&#32;the&#32;co-operative&#32;scheduler&#32;is&#32;in&#32;use.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02137"/>02137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a3fffd96ac9ae0d8b352ae10896ed4531">uxTopReadyPriority</link>&#32;&gt;&#32;uxLeastSignificantBit&#32;)
<anchor xml:id="_tasks_8c_source_1l02138"/>02138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02139"/>02139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxHigherPriorityReadyTasks&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l02140"/>02140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02141"/>02141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02142"/>02142 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l02143"/>02143 
<anchor xml:id="_tasks_8c_source_1l02144"/>02144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;&gt;&#32;<link linkend="_task_8h_1a94ed0b9b3b4e8ccc859c322f18583e67">tskIDLE_PRIORITY</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l02145"/>02145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02146"/>02146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;0;
<anchor xml:id="_tasks_8c_source_1l02147"/>02147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02148"/>02148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1a18b4aded515bdc512017ea6e677a13bb">listCURRENT_LIST_LENGTH</link>(&#32;&amp;(&#32;<link linkend="_tasks_8c_1ab4a8345f8c340d07086342c0dd92c972">pxReadyTasksLists</link>[&#32;<link linkend="_task_8h_1a94ed0b9b3b4e8ccc859c322f18583e67">tskIDLE_PRIORITY</link>&#32;]&#32;)&#32;)&#32;&gt;&#32;1&#32;)
<anchor xml:id="_tasks_8c_source_1l02149"/>02149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02150"/>02150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;There&#32;are&#32;other&#32;idle&#32;priority&#32;tasks&#32;in&#32;the&#32;ready&#32;state.&#32;&#32;If</emphasis>
<anchor xml:id="_tasks_8c_source_1l02151"/>02151 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;time&#32;slicing&#32;is&#32;used&#32;then&#32;the&#32;very&#32;next&#32;tick&#32;interrupt&#32;must&#32;be</emphasis>
<anchor xml:id="_tasks_8c_source_1l02152"/>02152 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;processed.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02153"/>02153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;0;
<anchor xml:id="_tasks_8c_source_1l02154"/>02154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02155"/>02155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(&#32;uxHigherPriorityReadyTasks&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l02156"/>02156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02157"/>02157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;There&#32;are&#32;tasks&#32;in&#32;the&#32;Ready&#32;state&#32;that&#32;have&#32;a&#32;priority&#32;above&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l02158"/>02158 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;idle&#32;priority.&#32;&#32;This&#32;path&#32;can&#32;only&#32;be&#32;reached&#32;if</emphasis>
<anchor xml:id="_tasks_8c_source_1l02159"/>02159 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;configUSE_PREEMPTION&#32;is&#32;0.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02160"/>02160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;0;
<anchor xml:id="_tasks_8c_source_1l02161"/>02161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02162"/>02162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02163"/>02163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02164"/>02164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_tasks_8c_1ac27aa725d8922f33f880005e72edec68">xNextTaskUnblockTime</link>&#32;-&#32;<link linkend="_tasks_8c_1aaa88969a9b48aea401dbb1ff2b0ef4de">xTickCount</link>;
<anchor xml:id="_tasks_8c_source_1l02165"/>02165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02166"/>02166 
<anchor xml:id="_tasks_8c_source_1l02167"/>02167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l02168"/>02168 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02169"/>02169 
<anchor xml:id="_tasks_8c_source_1l02170"/>02170 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TICKLESS_IDLE&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l02171"/>02171 <emphasis role="comment">/*----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02172"/>02172 
<anchor xml:id="_tasks_8c_source_1l02173"/><link linkend="_task_8h_1a003f8ae6d649225abd030cc76e1c7d0e">02173</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_tasks_8c_1adf830ea0f150fcdfdaa944667137f080">xTaskResumeAll</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)
<anchor xml:id="_tasks_8c_source_1l02174"/>02174 {
<anchor xml:id="_tasks_8c_source_1l02175"/>02175 <link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxTCB&#32;=&#32;NULL;
<anchor xml:id="_tasks_8c_source_1l02176"/>02176 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xAlreadyYielded&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_tasks_8c_source_1l02177"/>02177 
<anchor xml:id="_tasks_8c_source_1l02178"/>02178 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;uxSchedulerSuspended&#32;is&#32;zero&#32;then&#32;this&#32;function&#32;does&#32;not&#32;match&#32;a</emphasis>
<anchor xml:id="_tasks_8c_source_1l02179"/>02179 <emphasis role="comment">&#32;&#32;&#32;&#32;previous&#32;call&#32;to&#32;vTaskSuspendAll().&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02180"/>02180 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;<link linkend="_tasks_8c_1a7522707fcf80b216e3a5b25ba464ec85">uxSchedulerSuspended</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l02181"/>02181 
<anchor xml:id="_tasks_8c_source_1l02182"/>02182 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;It&#32;is&#32;possible&#32;that&#32;an&#32;ISR&#32;caused&#32;a&#32;task&#32;to&#32;be&#32;removed&#32;from&#32;an&#32;event</emphasis>
<anchor xml:id="_tasks_8c_source_1l02183"/>02183 <emphasis role="comment">&#32;&#32;&#32;&#32;list&#32;while&#32;the&#32;scheduler&#32;was&#32;suspended.&#32;&#32;If&#32;this&#32;was&#32;the&#32;case&#32;then&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l02184"/>02184 <emphasis role="comment">&#32;&#32;&#32;&#32;removed&#32;task&#32;will&#32;have&#32;been&#32;added&#32;to&#32;the&#32;xPendingReadyList.&#32;&#32;Once&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l02185"/>02185 <emphasis role="comment">&#32;&#32;&#32;&#32;scheduler&#32;has&#32;been&#32;resumed&#32;it&#32;is&#32;safe&#32;to&#32;move&#32;all&#32;the&#32;pending&#32;ready</emphasis>
<anchor xml:id="_tasks_8c_source_1l02186"/>02186 <emphasis role="comment">&#32;&#32;&#32;&#32;tasks&#32;from&#32;this&#32;list&#32;into&#32;their&#32;appropriate&#32;ready&#32;list.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02187"/>02187 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l02188"/>02188 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02189"/>02189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--<link linkend="_tasks_8c_1a7522707fcf80b216e3a5b25ba464ec85">uxSchedulerSuspended</link>;
<anchor xml:id="_tasks_8c_source_1l02190"/>02190 
<anchor xml:id="_tasks_8c_source_1l02191"/>02191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a7522707fcf80b216e3a5b25ba464ec85">uxSchedulerSuspended</link>&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l02192"/>02192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02193"/>02193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a54edd210c179ef9d185f5ebb020eaa5a">uxCurrentNumberOfTasks</link>&#32;&gt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0U&#32;)
<anchor xml:id="_tasks_8c_source_1l02194"/>02194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02195"/>02195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Move&#32;any&#32;readied&#32;tasks&#32;from&#32;the&#32;pending&#32;list&#32;into&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l02196"/>02196 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;appropriate&#32;ready&#32;list.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02197"/>02197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(&#32;<link linkend="_list_8h_1aaba6eb05d67ebc8026bea29193eca28f">listLIST_IS_EMPTY</link>(&#32;&amp;<link linkend="_tasks_8c_1a73880e71e7ed72242d1a078685107421">xPendingReadyList</link>&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l02198"/>02198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02199"/>02199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;<link linkend="_list_8h_1a715561302af8cb5b74416b23ce4e999d">listGET_OWNER_OF_HEAD_ENTRY</link>(&#32;(&#32;&amp;<link linkend="_tasks_8c_1a73880e71e7ed72242d1a078685107421">xPendingReadyList</link>&#32;)&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9079&#32;void&#32;*&#32;is&#32;used&#32;as&#32;this&#32;macro&#32;is&#32;used&#32;with&#32;timers&#32;and&#32;co-routines&#32;too.&#32;&#32;Alignment&#32;is&#32;known&#32;to&#32;be&#32;fine&#32;as&#32;the&#32;type&#32;of&#32;the&#32;pointer&#32;stored&#32;and&#32;retrieved&#32;is&#32;the&#32;same.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02200"/>02200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_list_8c_1a274fdced76bbdd9d8a4c4840ded2920c">uxListRemove</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l02201"/>02201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_list_8c_1a274fdced76bbdd9d8a4c4840ded2920c">uxListRemove</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l02202"/>02202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a94afc7269fff7c906c5eb0d9d315624b">prvAddTaskToReadyList</link>(&#32;pxTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l02203"/>02203 
<anchor xml:id="_tasks_8c_source_1l02204"/>02204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;moved&#32;task&#32;has&#32;a&#32;priority&#32;higher&#32;than&#32;the&#32;current</emphasis>
<anchor xml:id="_tasks_8c_source_1l02205"/>02205 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;task&#32;then&#32;a&#32;yield&#32;must&#32;be&#32;performed.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02206"/>02206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;&gt;=&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l02207"/>02207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02208"/>02208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a25abc99b92e910c1602028081e13b1b0">xYieldPending</link>&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l02209"/>02209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02210"/>02210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02211"/>02211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02212"/>02212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l02213"/>02213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02214"/>02214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02215"/>02215 
<anchor xml:id="_tasks_8c_source_1l02216"/>02216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l02217"/>02217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02218"/>02218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;task&#32;was&#32;unblocked&#32;while&#32;the&#32;scheduler&#32;was&#32;suspended,</emphasis>
<anchor xml:id="_tasks_8c_source_1l02219"/>02219 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;which&#32;may&#32;have&#32;prevented&#32;the&#32;next&#32;unblock&#32;time&#32;from&#32;being</emphasis>
<anchor xml:id="_tasks_8c_source_1l02220"/>02220 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;re-calculated,&#32;in&#32;which&#32;case&#32;re-calculate&#32;it&#32;now.&#32;&#32;Mainly</emphasis>
<anchor xml:id="_tasks_8c_source_1l02221"/>02221 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;important&#32;for&#32;low&#32;power&#32;tickless&#32;implementations,&#32;where</emphasis>
<anchor xml:id="_tasks_8c_source_1l02222"/>02222 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this&#32;can&#32;prevent&#32;an&#32;unnecessary&#32;exit&#32;from&#32;low&#32;power</emphasis>
<anchor xml:id="_tasks_8c_source_1l02223"/>02223 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;state.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02224"/>02224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1ad1b2e4995f863a99cf980836efe330d7">prvResetNextTaskUnblockTime</link>();
<anchor xml:id="_tasks_8c_source_1l02225"/>02225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02226"/>02226 
<anchor xml:id="_tasks_8c_source_1l02227"/>02227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;any&#32;ticks&#32;occurred&#32;while&#32;the&#32;scheduler&#32;was&#32;suspended&#32;then</emphasis>
<anchor xml:id="_tasks_8c_source_1l02228"/>02228 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;they&#32;should&#32;be&#32;processed&#32;now.&#32;&#32;This&#32;ensures&#32;the&#32;tick&#32;count&#32;does</emphasis>
<anchor xml:id="_tasks_8c_source_1l02229"/>02229 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;not&#32;slip,&#32;and&#32;that&#32;any&#32;delayed&#32;tasks&#32;are&#32;resumed&#32;at&#32;the&#32;correct</emphasis>
<anchor xml:id="_tasks_8c_source_1l02230"/>02230 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;time.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02231"/>02231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02232"/>02232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxPendedCounts&#32;=&#32;<link linkend="_tasks_8c_1a476a5b10aeb0bf39d29d6baccbc26f56">uxPendedTicks</link>;&#32;<emphasis role="comment">/*&#32;Non-volatile&#32;copy.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02233"/>02233 
<anchor xml:id="_tasks_8c_source_1l02234"/>02234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;uxPendedCounts&#32;&gt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0U&#32;)
<anchor xml:id="_tasks_8c_source_1l02235"/>02235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02236"/>02236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
<anchor xml:id="_tasks_8c_source_1l02237"/>02237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02238"/>02238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a54f31e9aef0eb7b87e48c7d68ecc84c1">xTaskIncrementTick</link>()&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l02239"/>02239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02240"/>02240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a25abc99b92e910c1602028081e13b1b0">xYieldPending</link>&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l02241"/>02241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02242"/>02242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02243"/>02243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02244"/>02244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l02245"/>02245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02246"/>02246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--uxPendedCounts;
<anchor xml:id="_tasks_8c_source_1l02247"/>02247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(&#32;uxPendedCounts&#32;&gt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0U&#32;);
<anchor xml:id="_tasks_8c_source_1l02248"/>02248 
<anchor xml:id="_tasks_8c_source_1l02249"/>02249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a476a5b10aeb0bf39d29d6baccbc26f56">uxPendedTicks</link>&#32;=&#32;0;
<anchor xml:id="_tasks_8c_source_1l02250"/>02250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02251"/>02251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02252"/>02252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02253"/>02253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l02254"/>02254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02255"/>02255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02256"/>02256 
<anchor xml:id="_tasks_8c_source_1l02257"/>02257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a25abc99b92e910c1602028081e13b1b0">xYieldPending</link>&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l02258"/>02258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02259"/>02259 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;configUSE_PREEMPTION&#32;!=&#32;0&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02260"/>02260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02261"/>02261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xAlreadyYielded&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l02262"/>02262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02263"/>02263 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l02264"/>02264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1acd0c920e40647de517ac633965b52273">taskYIELD_IF_USING_PREEMPTION</link>();
<anchor xml:id="_tasks_8c_source_1l02265"/>02265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02266"/>02266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02267"/>02267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02268"/>02268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l02269"/>02269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02270"/>02270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02271"/>02271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02272"/>02272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02273"/>02273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02274"/>02274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l02275"/>02275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02276"/>02276 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02277"/>02277 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l02278"/>02278 
<anchor xml:id="_tasks_8c_source_1l02279"/>02279 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xAlreadyYielded;
<anchor xml:id="_tasks_8c_source_1l02280"/>02280 }
<anchor xml:id="_tasks_8c_source_1l02281"/>02281 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02282"/>02282 
<anchor xml:id="_tasks_8c_source_1l02283"/><link linkend="_task_8h_1a753ecfe23e7386066ecccad5d16422f7">02283</link> <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;<link linkend="_tasks_8c_1a5fa24e36d5e1eeb57f5b73b72ea048e7">xTaskGetTickCount</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)
<anchor xml:id="_tasks_8c_source_1l02284"/>02284 {
<anchor xml:id="_tasks_8c_source_1l02285"/>02285 <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicks;
<anchor xml:id="_tasks_8c_source_1l02286"/>02286 
<anchor xml:id="_tasks_8c_source_1l02287"/>02287 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Critical&#32;section&#32;required&#32;if&#32;running&#32;on&#32;a&#32;16&#32;bit&#32;processor.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02288"/>02288 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a5ada85b405891061cad280c1e35213ee">portTICK_TYPE_ENTER_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l02289"/>02289 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02290"/>02290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xTicks&#32;=&#32;<link linkend="_tasks_8c_1aaa88969a9b48aea401dbb1ff2b0ef4de">xTickCount</link>;
<anchor xml:id="_tasks_8c_source_1l02291"/>02291 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02292"/>02292 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a3a24fff82b123ddc7cf8195a466733dd">portTICK_TYPE_EXIT_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l02293"/>02293 
<anchor xml:id="_tasks_8c_source_1l02294"/>02294 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xTicks;
<anchor xml:id="_tasks_8c_source_1l02295"/>02295 }
<anchor xml:id="_tasks_8c_source_1l02296"/>02296 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02297"/>02297 
<anchor xml:id="_tasks_8c_source_1l02298"/><link linkend="_task_8h_1a092be3fd5752625303c307620be523ff">02298</link> <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;<link linkend="_tasks_8c_1ad58fd766b8f438b5703276f585738762">xTaskGetTickCountFromISR</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)
<anchor xml:id="_tasks_8c_source_1l02299"/>02299 {
<anchor xml:id="_tasks_8c_source_1l02300"/>02300 <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l02301"/>02301 <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxSavedInterruptStatus;
<anchor xml:id="_tasks_8c_source_1l02302"/>02302 
<anchor xml:id="_tasks_8c_source_1l02303"/>02303 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;RTOS&#32;ports&#32;that&#32;support&#32;interrupt&#32;nesting&#32;have&#32;the&#32;concept&#32;of&#32;a&#32;maximum</emphasis>
<anchor xml:id="_tasks_8c_source_1l02304"/>02304 <emphasis role="comment">&#32;&#32;&#32;&#32;system&#32;call&#32;(or&#32;maximum&#32;API&#32;call)&#32;interrupt&#32;priority.&#32;&#32;Interrupts&#32;that&#32;are</emphasis>
<anchor xml:id="_tasks_8c_source_1l02305"/>02305 <emphasis role="comment">&#32;&#32;&#32;&#32;above&#32;the&#32;maximum&#32;system&#32;call&#32;priority&#32;are&#32;kept&#32;permanently&#32;enabled,&#32;even</emphasis>
<anchor xml:id="_tasks_8c_source_1l02306"/>02306 <emphasis role="comment">&#32;&#32;&#32;&#32;when&#32;the&#32;RTOS&#32;kernel&#32;is&#32;in&#32;a&#32;critical&#32;section,&#32;but&#32;cannot&#32;make&#32;any&#32;calls&#32;to</emphasis>
<anchor xml:id="_tasks_8c_source_1l02307"/>02307 <emphasis role="comment">&#32;&#32;&#32;&#32;FreeRTOS&#32;API&#32;functions.&#32;&#32;If&#32;configASSERT()&#32;is&#32;defined&#32;in&#32;FreeRTOSConfig.h</emphasis>
<anchor xml:id="_tasks_8c_source_1l02308"/>02308 <emphasis role="comment">&#32;&#32;&#32;&#32;then&#32;portASSERT_IF_INTERRUPT_PRIORITY_INVALID()&#32;will&#32;result&#32;in&#32;an&#32;assertion</emphasis>
<anchor xml:id="_tasks_8c_source_1l02309"/>02309 <emphasis role="comment">&#32;&#32;&#32;&#32;failure&#32;if&#32;a&#32;FreeRTOS&#32;API&#32;function&#32;is&#32;called&#32;from&#32;an&#32;interrupt&#32;that&#32;has&#32;been</emphasis>
<anchor xml:id="_tasks_8c_source_1l02310"/>02310 <emphasis role="comment">&#32;&#32;&#32;&#32;assigned&#32;a&#32;priority&#32;above&#32;the&#32;configured&#32;maximum&#32;system&#32;call&#32;priority.</emphasis>
<anchor xml:id="_tasks_8c_source_1l02311"/>02311 <emphasis role="comment">&#32;&#32;&#32;&#32;Only&#32;FreeRTOS&#32;functions&#32;that&#32;end&#32;in&#32;FromISR&#32;can&#32;be&#32;called&#32;from&#32;interrupts</emphasis>
<anchor xml:id="_tasks_8c_source_1l02312"/>02312 <emphasis role="comment">&#32;&#32;&#32;&#32;that&#32;have&#32;been&#32;assigned&#32;a&#32;priority&#32;at&#32;or&#32;(logically)&#32;below&#32;the&#32;maximum</emphasis>
<anchor xml:id="_tasks_8c_source_1l02313"/>02313 <emphasis role="comment">&#32;&#32;&#32;&#32;system&#32;call&#32;interrupt&#32;priority.&#32;&#32;FreeRTOS&#32;maintains&#32;a&#32;separate&#32;interrupt</emphasis>
<anchor xml:id="_tasks_8c_source_1l02314"/>02314 <emphasis role="comment">&#32;&#32;&#32;&#32;safe&#32;API&#32;to&#32;ensure&#32;interrupt&#32;entry&#32;is&#32;as&#32;fast&#32;and&#32;as&#32;simple&#32;as&#32;possible.</emphasis>
<anchor xml:id="_tasks_8c_source_1l02315"/>02315 <emphasis role="comment">&#32;&#32;&#32;&#32;More&#32;information&#32;(albeit&#32;Cortex-M&#32;specific)&#32;is&#32;provided&#32;on&#32;the&#32;following</emphasis>
<anchor xml:id="_tasks_8c_source_1l02316"/>02316 <emphasis role="comment">&#32;&#32;&#32;&#32;link:&#32;https://www.freertos.org/RTOS-Cortex-M3-M4.html&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02317"/>02317 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a10f75d20c71c4289f96d1b89cb6c62e2">portASSERT_IF_INTERRUPT_PRIORITY_INVALID</link>();
<anchor xml:id="_tasks_8c_source_1l02318"/>02318 
<anchor xml:id="_tasks_8c_source_1l02319"/>02319 &#32;&#32;&#32;&#32;uxSavedInterruptStatus&#32;=&#32;<link linkend="__free_r_t_o_s_8h_1a7b53d0f5d4ae09f599f92fb5cd546e6b">portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR</link>();
<anchor xml:id="_tasks_8c_source_1l02320"/>02320 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02321"/>02321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_tasks_8c_1aaa88969a9b48aea401dbb1ff2b0ef4de">xTickCount</link>;
<anchor xml:id="_tasks_8c_source_1l02322"/>02322 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02323"/>02323 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a506f401396abd44a8dbe31edac713f8b">portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR</link>(&#32;uxSavedInterruptStatus&#32;);
<anchor xml:id="_tasks_8c_source_1l02324"/>02324 
<anchor xml:id="_tasks_8c_source_1l02325"/>02325 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l02326"/>02326 }
<anchor xml:id="_tasks_8c_source_1l02327"/>02327 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02328"/>02328 
<anchor xml:id="_tasks_8c_source_1l02329"/><link linkend="_task_8h_1a70a89a0f07c7db5d695707d1f6f44a4a">02329</link> <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_tasks_8c_1a4b660446c721df74158dddb9fc189c1e">uxTaskGetNumberOfTasks</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)
<anchor xml:id="_tasks_8c_source_1l02330"/>02330 {
<anchor xml:id="_tasks_8c_source_1l02331"/>02331 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;critical&#32;section&#32;is&#32;not&#32;required&#32;because&#32;the&#32;variables&#32;are&#32;of&#32;type</emphasis>
<anchor xml:id="_tasks_8c_source_1l02332"/>02332 <emphasis role="comment">&#32;&#32;&#32;&#32;BaseType_t.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02333"/>02333 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_tasks_8c_1a54edd210c179ef9d185f5ebb020eaa5a">uxCurrentNumberOfTasks</link>;
<anchor xml:id="_tasks_8c_source_1l02334"/>02334 }
<anchor xml:id="_tasks_8c_source_1l02335"/>02335 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02336"/>02336 
<anchor xml:id="_tasks_8c_source_1l02337"/><link linkend="_task_8h_1aedab278c23c41dcbfdf312d383bdb342">02337</link> <emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_tasks_8c_1acb1be57d03f6f1a3161b69e98df6ccb9">pcTaskGetName</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTaskToQuery&#32;)&#32;<emphasis role="comment">/*lint&#32;!e971&#32;Unqualified&#32;char&#32;types&#32;are&#32;allowed&#32;for&#32;strings&#32;and&#32;single&#32;characters&#32;only.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02338"/>02338 {
<anchor xml:id="_tasks_8c_source_1l02339"/>02339 <link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxTCB;
<anchor xml:id="_tasks_8c_source_1l02340"/>02340 
<anchor xml:id="_tasks_8c_source_1l02341"/>02341 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;null&#32;is&#32;passed&#32;in&#32;here&#32;then&#32;the&#32;name&#32;of&#32;the&#32;calling&#32;task&#32;is&#32;being</emphasis>
<anchor xml:id="_tasks_8c_source_1l02342"/>02342 <emphasis role="comment">&#32;&#32;&#32;&#32;queried.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02343"/>02343 &#32;&#32;&#32;&#32;pxTCB&#32;=&#32;<link linkend="_tasks_8c_1ad910f5e908283f1dfabd642fe1b11c6b">prvGetTCBFromHandle</link>(&#32;xTaskToQuery&#32;);
<anchor xml:id="_tasks_8c_source_1l02344"/>02344 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l02345"/>02345 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1affa468d3857e94ddeeea03b1d454778b">pcTaskName</link>[&#32;0&#32;]&#32;);
<anchor xml:id="_tasks_8c_source_1l02346"/>02346 }
<anchor xml:id="_tasks_8c_source_1l02347"/>02347 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02348"/>02348 
<anchor xml:id="_tasks_8c_source_1l02349"/>02349 <emphasis role="preprocessor">#if&#32;(&#32;INCLUDE_xTaskGetHandle&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02350"/>02350 
<anchor xml:id="_tasks_8c_source_1l02351"/><link linkend="_tasks_8c_1a2a2eca63c8d866fff6851e2096881382">02351</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*<link linkend="_tasks_8c_1a2a2eca63c8d866fff6851e2096881382">prvSearchForNameWithinSingleList</link>(&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;*pxList,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;pcNameToQuery[]&#32;)
<anchor xml:id="_tasks_8c_source_1l02352"/>02352 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02353"/>02353 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxNextTCB,&#32;*pxFirstTCB,&#32;*pxReturn&#32;=&#32;NULL;
<anchor xml:id="_tasks_8c_source_1l02354"/>02354 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;x;
<anchor xml:id="_tasks_8c_source_1l02355"/>02355 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;cNextChar;
<anchor xml:id="_tasks_8c_source_1l02356"/>02356 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xBreakLoop;
<anchor xml:id="_tasks_8c_source_1l02357"/>02357 
<anchor xml:id="_tasks_8c_source_1l02358"/>02358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;function&#32;is&#32;called&#32;with&#32;the&#32;scheduler&#32;suspended.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02359"/>02359 
<anchor xml:id="_tasks_8c_source_1l02360"/>02360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1a18b4aded515bdc512017ea6e677a13bb">listCURRENT_LIST_LENGTH</link>(&#32;pxList&#32;)&#32;&gt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_tasks_8c_source_1l02361"/>02361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02362"/>02362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8h_1a275d9855e9b71652e2b8f6e2ed62aadd">listGET_OWNER_OF_NEXT_ENTRY</link>(&#32;pxFirstTCB,&#32;pxList&#32;);&#32;&#32;<emphasis role="comment">/*lint&#32;!e9079&#32;void&#32;*&#32;is&#32;used&#32;as&#32;this&#32;macro&#32;is&#32;used&#32;with&#32;timers&#32;and&#32;co-routines&#32;too.&#32;&#32;Alignment&#32;is&#32;known&#32;to&#32;be&#32;fine&#32;as&#32;the&#32;type&#32;of&#32;the&#32;pointer&#32;stored&#32;and&#32;retrieved&#32;is&#32;the&#32;same.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02363"/>02363 
<anchor xml:id="_tasks_8c_source_1l02364"/>02364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
<anchor xml:id="_tasks_8c_source_1l02365"/>02365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02366"/>02366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8h_1a275d9855e9b71652e2b8f6e2ed62aadd">listGET_OWNER_OF_NEXT_ENTRY</link>(&#32;pxNextTCB,&#32;pxList&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9079&#32;void&#32;*&#32;is&#32;used&#32;as&#32;this&#32;macro&#32;is&#32;used&#32;with&#32;timers&#32;and&#32;co-routines&#32;too.&#32;&#32;Alignment&#32;is&#32;known&#32;to&#32;be&#32;fine&#32;as&#32;the&#32;type&#32;of&#32;the&#32;pointer&#32;stored&#32;and&#32;retrieved&#32;is&#32;the&#32;same.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02367"/>02367 
<anchor xml:id="_tasks_8c_source_1l02368"/>02368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Check&#32;each&#32;character&#32;in&#32;the&#32;name&#32;looking&#32;for&#32;a&#32;match&#32;or</emphasis>
<anchor xml:id="_tasks_8c_source_1l02369"/>02369 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mismatch.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02370"/>02370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xBreakLoop&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_tasks_8c_source_1l02371"/>02371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;x&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0;&#32;x&#32;&lt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="__free_r_t_o_s_config__default_8h_1ac388dc4041aab6997348828eb27fc1a8">configMAX_TASK_NAME_LEN</link>;&#32;x++&#32;)
<anchor xml:id="_tasks_8c_source_1l02372"/>02372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02373"/>02373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cNextChar&#32;=&#32;pxNextTCB-&gt;<link linkend="_structtsk_task_control_block_1affa468d3857e94ddeeea03b1d454778b">pcTaskName</link>[&#32;x&#32;];
<anchor xml:id="_tasks_8c_source_1l02374"/>02374 
<anchor xml:id="_tasks_8c_source_1l02375"/>02375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;cNextChar&#32;!=&#32;pcNameToQuery[&#32;x&#32;]&#32;)
<anchor xml:id="_tasks_8c_source_1l02376"/>02376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02377"/>02377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Characters&#32;didn&apos;t&#32;match.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02378"/>02378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xBreakLoop&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l02379"/>02379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02380"/>02380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(&#32;cNextChar&#32;==&#32;(&#32;<emphasis role="keywordtype">char</emphasis>&#32;)&#32;0x00&#32;)
<anchor xml:id="_tasks_8c_source_1l02381"/>02381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02382"/>02382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Both&#32;strings&#32;terminated,&#32;a&#32;match&#32;must&#32;have&#32;been</emphasis>
<anchor xml:id="_tasks_8c_source_1l02383"/>02383 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;found.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02384"/>02384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxReturn&#32;=&#32;pxNextTCB;
<anchor xml:id="_tasks_8c_source_1l02385"/>02385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xBreakLoop&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l02386"/>02386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02387"/>02387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02388"/>02388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02389"/>02389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l02390"/>02390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02391"/>02391 
<anchor xml:id="_tasks_8c_source_1l02392"/>02392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xBreakLoop&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l02393"/>02393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02394"/>02394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_tasks_8c_source_1l02395"/>02395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02396"/>02396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02397"/>02397 
<anchor xml:id="_tasks_8c_source_1l02398"/>02398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxReturn&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l02399"/>02399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02400"/>02400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;handle&#32;has&#32;been&#32;found.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02401"/>02401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_tasks_8c_source_1l02402"/>02402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02403"/>02403 
<anchor xml:id="_tasks_8c_source_1l02404"/>02404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(&#32;pxNextTCB&#32;!=&#32;pxFirstTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l02405"/>02405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02406"/>02406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02407"/>02407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02408"/>02408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l02409"/>02409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02410"/>02410 
<anchor xml:id="_tasks_8c_source_1l02411"/>02411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pxReturn;
<anchor xml:id="_tasks_8c_source_1l02412"/>02412 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02413"/>02413 
<anchor xml:id="_tasks_8c_source_1l02414"/>02414 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;INCLUDE_xTaskGetHandle&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l02415"/>02415 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02416"/>02416 
<anchor xml:id="_tasks_8c_source_1l02417"/>02417 <emphasis role="preprocessor">#if&#32;(&#32;INCLUDE_xTaskGetHandle&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02418"/>02418 
<anchor xml:id="_tasks_8c_source_1l02419"/><link linkend="_task_8h_1a45b3b1cd0227269609499beeeb8c5c26">02419</link> &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;<link linkend="_tasks_8c_1a86e945a322943dca5023dc49d1458b0c">xTaskGetHandle</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*pcNameToQuery&#32;)&#32;<emphasis role="comment">/*lint&#32;!e971&#32;Unqualified&#32;char&#32;types&#32;are&#32;allowed&#32;for&#32;strings&#32;and&#32;single&#32;characters&#32;only.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02420"/>02420 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02421"/>02421 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxQueue&#32;=&#32;<link linkend="__free_r_t_o_s_config__default_8h_1a9a78f5ac61e6cb172dadf2a51f11db38">configMAX_PRIORITIES</link>;
<anchor xml:id="_tasks_8c_source_1l02422"/>02422 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>*&#32;pxTCB;
<anchor xml:id="_tasks_8c_source_1l02423"/>02423 
<anchor xml:id="_tasks_8c_source_1l02424"/>02424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Task&#32;names&#32;will&#32;be&#32;truncated&#32;to&#32;configMAX_TASK_NAME_LEN&#32;-&#32;1&#32;bytes.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02425"/>02425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;strlen(&#32;pcNameToQuery&#32;)&#32;&lt;&#32;<link linkend="__free_r_t_o_s_config__default_8h_1ac388dc4041aab6997348828eb27fc1a8">configMAX_TASK_NAME_LEN</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l02426"/>02426 
<anchor xml:id="_tasks_8c_source_1l02427"/>02427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a084d232640bd1d04bcac0b8784417015">vTaskSuspendAll</link>();
<anchor xml:id="_tasks_8c_source_1l02428"/>02428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02429"/>02429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Search&#32;the&#32;ready&#32;lists.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02430"/>02430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
<anchor xml:id="_tasks_8c_source_1l02431"/>02431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02432"/>02432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxQueue--;
<anchor xml:id="_tasks_8c_source_1l02433"/>02433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;<link linkend="_tasks_8c_1a2a2eca63c8d866fff6851e2096881382">prvSearchForNameWithinSingleList</link>(&#32;(&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;*&#32;)&#32;&amp;(&#32;<link linkend="_tasks_8c_1ab4a8345f8c340d07086342c0dd92c972">pxReadyTasksLists</link>[&#32;uxQueue&#32;]&#32;),&#32;pcNameToQuery&#32;);
<anchor xml:id="_tasks_8c_source_1l02434"/>02434 
<anchor xml:id="_tasks_8c_source_1l02435"/>02435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l02436"/>02436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02437"/>02437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Found&#32;the&#32;handle.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02438"/>02438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_tasks_8c_source_1l02439"/>02439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02440"/>02440 
<anchor xml:id="_tasks_8c_source_1l02441"/>02441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(&#32;uxQueue&#32;&gt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="_task_8h_1a94ed0b9b3b4e8ccc859c322f18583e67">tskIDLE_PRIORITY</link>&#32;);&#32;<emphasis role="comment">/*lint&#32;!e961&#32;MISRA&#32;exception&#32;as&#32;the&#32;casts&#32;are&#32;only&#32;redundant&#32;for&#32;some&#32;ports.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02442"/>02442 
<anchor xml:id="_tasks_8c_source_1l02443"/>02443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Search&#32;the&#32;delayed&#32;lists.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02444"/>02444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB&#32;==&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l02445"/>02445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02446"/>02446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;<link linkend="_tasks_8c_1a2a2eca63c8d866fff6851e2096881382">prvSearchForNameWithinSingleList</link>(&#32;(&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;*&#32;)&#32;<link linkend="_tasks_8c_1a30b4b716a99940e93fc9d4a13c1f81db">pxDelayedTaskList</link>,&#32;pcNameToQuery&#32;);
<anchor xml:id="_tasks_8c_source_1l02447"/>02447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02448"/>02448 
<anchor xml:id="_tasks_8c_source_1l02449"/>02449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB&#32;==&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l02450"/>02450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02451"/>02451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;<link linkend="_tasks_8c_1a2a2eca63c8d866fff6851e2096881382">prvSearchForNameWithinSingleList</link>(&#32;(&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;*&#32;)&#32;<link linkend="_tasks_8c_1aae5cac9860aec54036f49920561a9705">pxOverflowDelayedTaskList</link>,&#32;pcNameToQuery&#32;);
<anchor xml:id="_tasks_8c_source_1l02452"/>02452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02453"/>02453 
<anchor xml:id="_tasks_8c_source_1l02454"/>02454 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;INCLUDE_vTaskSuspend&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02455"/>02455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02456"/>02456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB&#32;==&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l02457"/>02457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02458"/>02458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Search&#32;the&#32;suspended&#32;list.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02459"/>02459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;<link linkend="_tasks_8c_1a2a2eca63c8d866fff6851e2096881382">prvSearchForNameWithinSingleList</link>(&#32;&amp;<link linkend="_tasks_8c_1aeeff59d101a1407ffc42f81fda83baca">xSuspendedTaskList</link>,&#32;pcNameToQuery&#32;);
<anchor xml:id="_tasks_8c_source_1l02460"/>02460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02461"/>02461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02462"/>02462 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l02463"/>02463 
<anchor xml:id="_tasks_8c_source_1l02464"/>02464 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;INCLUDE_vTaskDelete&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02465"/>02465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02466"/>02466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB&#32;==&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l02467"/>02467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02468"/>02468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Search&#32;the&#32;deleted&#32;list.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02469"/>02469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;<link linkend="_tasks_8c_1a2a2eca63c8d866fff6851e2096881382">prvSearchForNameWithinSingleList</link>(&#32;&amp;<link linkend="_tasks_8c_1a9d5346b64d3da2ce013224df5f403005">xTasksWaitingTermination</link>,&#32;pcNameToQuery&#32;);
<anchor xml:id="_tasks_8c_source_1l02470"/>02470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02471"/>02471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02472"/>02472 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l02473"/>02473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02474"/>02474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_tasks_8c_1adf830ea0f150fcdfdaa944667137f080">xTaskResumeAll</link>();
<anchor xml:id="_tasks_8c_source_1l02475"/>02475 
<anchor xml:id="_tasks_8c_source_1l02476"/>02476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pxTCB;
<anchor xml:id="_tasks_8c_source_1l02477"/>02477 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02478"/>02478 
<anchor xml:id="_tasks_8c_source_1l02479"/>02479 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;INCLUDE_xTaskGetHandle&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l02480"/>02480 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02481"/>02481 
<anchor xml:id="_tasks_8c_source_1l02482"/>02482 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02483"/>02483 
<anchor xml:id="_tasks_8c_source_1l02484"/><link linkend="_task_8h_1aa4603f3de3d809e9beb18d10fbac005d">02484</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_tasks_8c_1a5bd92b080086390cae790e5bd74bd018">uxTaskGetSystemState</link>(&#32;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s">TaskStatus_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxTaskStatusArray,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxArraySize,&#32;uint32_t&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pulTotalRunTime&#32;)
<anchor xml:id="_tasks_8c_source_1l02485"/>02485 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02486"/>02486 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxTask&#32;=&#32;0,&#32;uxQueue&#32;=&#32;<link linkend="__free_r_t_o_s_config__default_8h_1a9a78f5ac61e6cb172dadf2a51f11db38">configMAX_PRIORITIES</link>;
<anchor xml:id="_tasks_8c_source_1l02487"/>02487 
<anchor xml:id="_tasks_8c_source_1l02488"/>02488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a084d232640bd1d04bcac0b8784417015">vTaskSuspendAll</link>();
<anchor xml:id="_tasks_8c_source_1l02489"/>02489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02490"/>02490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Is&#32;there&#32;a&#32;space&#32;in&#32;the&#32;array&#32;for&#32;each&#32;task&#32;in&#32;the&#32;system?&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02491"/>02491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;uxArraySize&#32;&gt;=&#32;<link linkend="_tasks_8c_1a54edd210c179ef9d185f5ebb020eaa5a">uxCurrentNumberOfTasks</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l02492"/>02492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02493"/>02493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Fill&#32;in&#32;an&#32;TaskStatus_t&#32;structure&#32;with&#32;information&#32;on&#32;each</emphasis>
<anchor xml:id="_tasks_8c_source_1l02494"/>02494 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;task&#32;in&#32;the&#32;Ready&#32;state.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02495"/>02495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
<anchor xml:id="_tasks_8c_source_1l02496"/>02496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02497"/>02497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxQueue--;
<anchor xml:id="_tasks_8c_source_1l02498"/>02498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxTask&#32;+=&#32;<link linkend="_tasks_8c_1a76a09ef72cff5e96bdfb4f9e882f4cfe">prvListTasksWithinSingleList</link>(&#32;&amp;(&#32;pxTaskStatusArray[&#32;uxTask&#32;]&#32;),&#32;&amp;(&#32;<link linkend="_tasks_8c_1ab4a8345f8c340d07086342c0dd92c972">pxReadyTasksLists</link>[&#32;uxQueue&#32;]&#32;),&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892ca8570b65f331057b2cf92c504f0a2bc83">eReady</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l02499"/>02499 
<anchor xml:id="_tasks_8c_source_1l02500"/>02500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(&#32;uxQueue&#32;&gt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="_task_8h_1a94ed0b9b3b4e8ccc859c322f18583e67">tskIDLE_PRIORITY</link>&#32;);&#32;<emphasis role="comment">/*lint&#32;!e961&#32;MISRA&#32;exception&#32;as&#32;the&#32;casts&#32;are&#32;only&#32;redundant&#32;for&#32;some&#32;ports.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02501"/>02501 
<anchor xml:id="_tasks_8c_source_1l02502"/>02502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Fill&#32;in&#32;an&#32;TaskStatus_t&#32;structure&#32;with&#32;information&#32;on&#32;each</emphasis>
<anchor xml:id="_tasks_8c_source_1l02503"/>02503 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;task&#32;in&#32;the&#32;Blocked&#32;state.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02504"/>02504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxTask&#32;+=&#32;<link linkend="_tasks_8c_1a76a09ef72cff5e96bdfb4f9e882f4cfe">prvListTasksWithinSingleList</link>(&#32;&amp;(&#32;pxTaskStatusArray[&#32;uxTask&#32;]&#32;),&#32;(&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;*&#32;)&#32;<link linkend="_tasks_8c_1a30b4b716a99940e93fc9d4a13c1f81db">pxDelayedTaskList</link>,&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892cad23d72c68f43b6fff4962ad4154766af">eBlocked</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l02505"/>02505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxTask&#32;+=&#32;<link linkend="_tasks_8c_1a76a09ef72cff5e96bdfb4f9e882f4cfe">prvListTasksWithinSingleList</link>(&#32;&amp;(&#32;pxTaskStatusArray[&#32;uxTask&#32;]&#32;),&#32;(&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;*&#32;)&#32;<link linkend="_tasks_8c_1aae5cac9860aec54036f49920561a9705">pxOverflowDelayedTaskList</link>,&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892cad23d72c68f43b6fff4962ad4154766af">eBlocked</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l02506"/>02506 
<anchor xml:id="_tasks_8c_source_1l02507"/>02507 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;INCLUDE_vTaskDelete&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02508"/>02508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02509"/>02509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Fill&#32;in&#32;an&#32;TaskStatus_t&#32;structure&#32;with&#32;information&#32;on</emphasis>
<anchor xml:id="_tasks_8c_source_1l02510"/>02510 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;each&#32;task&#32;that&#32;has&#32;been&#32;deleted&#32;but&#32;not&#32;yet&#32;cleaned&#32;up.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02511"/>02511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxTask&#32;+=&#32;<link linkend="_tasks_8c_1a76a09ef72cff5e96bdfb4f9e882f4cfe">prvListTasksWithinSingleList</link>(&#32;&amp;(&#32;pxTaskStatusArray[&#32;uxTask&#32;]&#32;),&#32;&amp;<link linkend="_tasks_8c_1a9d5346b64d3da2ce013224df5f403005">xTasksWaitingTermination</link>,&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892cacef5c6e771d3a07f656e07a13a20ba35">eDeleted</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l02512"/>02512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02513"/>02513 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l02514"/>02514 
<anchor xml:id="_tasks_8c_source_1l02515"/>02515 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;INCLUDE_vTaskSuspend&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02516"/>02516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02517"/>02517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Fill&#32;in&#32;an&#32;TaskStatus_t&#32;structure&#32;with&#32;information&#32;on</emphasis>
<anchor xml:id="_tasks_8c_source_1l02518"/>02518 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;each&#32;task&#32;in&#32;the&#32;Suspended&#32;state.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02519"/>02519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxTask&#32;+=&#32;<link linkend="_tasks_8c_1a76a09ef72cff5e96bdfb4f9e882f4cfe">prvListTasksWithinSingleList</link>(&#32;&amp;(&#32;pxTaskStatusArray[&#32;uxTask&#32;]&#32;),&#32;&amp;<link linkend="_tasks_8c_1aeeff59d101a1407ffc42f81fda83baca">xSuspendedTaskList</link>,&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892caf35a900d49fdfc2502eefc68fdb70f72">eSuspended</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l02520"/>02520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02521"/>02521 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l02522"/>02522 
<anchor xml:id="_tasks_8c_source_1l02523"/>02523 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;configGENERATE_RUN_TIME_STATS&#32;==&#32;1)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02524"/>02524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02525"/>02525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pulTotalRunTime&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l02526"/>02526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02527"/>02527 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#ifdef&#32;portALT_GET_RUN_TIME_COUNTER_VALUE</emphasis>
<anchor xml:id="_tasks_8c_source_1l02528"/>02528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;portALT_GET_RUN_TIME_COUNTER_VALUE(&#32;(&#32;*pulTotalRunTime&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l02529"/>02529 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02530"/>02530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pulTotalRunTime&#32;=&#32;portGET_RUN_TIME_COUNTER_VALUE();
<anchor xml:id="_tasks_8c_source_1l02531"/>02531 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l02532"/>02532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02533"/>02533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02534"/>02534 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02535"/>02535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02536"/>02536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pulTotalRunTime&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l02537"/>02537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02538"/>02538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pulTotalRunTime&#32;=&#32;0;
<anchor xml:id="_tasks_8c_source_1l02539"/>02539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02540"/>02540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02541"/>02541 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l02542"/>02542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02543"/>02543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02544"/>02544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02545"/>02545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l02546"/>02546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02547"/>02547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02548"/>02548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_tasks_8c_1adf830ea0f150fcdfdaa944667137f080">xTaskResumeAll</link>();
<anchor xml:id="_tasks_8c_source_1l02549"/>02549 
<anchor xml:id="_tasks_8c_source_1l02550"/>02550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;uxTask;
<anchor xml:id="_tasks_8c_source_1l02551"/>02551 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02552"/>02552 
<anchor xml:id="_tasks_8c_source_1l02553"/>02553 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TRACE_FACILITY&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l02554"/>02554 <emphasis role="comment">/*----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02555"/>02555 
<anchor xml:id="_tasks_8c_source_1l02556"/>02556 <emphasis role="preprocessor">#if&#32;(&#32;INCLUDE_xTaskGetIdleTaskHandle&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02557"/>02557 
<anchor xml:id="_tasks_8c_source_1l02558"/>02558 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;<link linkend="_task_8h_1a3d5446a4403457e855cb84b3bba5570a">xTaskGetIdleTaskHandle</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)
<anchor xml:id="_tasks_8c_source_1l02559"/>02559 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02560"/>02560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;xTaskGetIdleTaskHandle()&#32;is&#32;called&#32;before&#32;the&#32;scheduler&#32;has&#32;been</emphasis>
<anchor xml:id="_tasks_8c_source_1l02561"/>02561 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;started,&#32;then&#32;xIdleTaskHandle&#32;will&#32;be&#32;NULL.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02562"/>02562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;(&#32;<link linkend="_tasks_8c_1ab1afeb7ccc3b00411775f107e31134ad">xIdleTaskHandle</link>&#32;!=&#32;NULL&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l02563"/>02563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_tasks_8c_1ab1afeb7ccc3b00411775f107e31134ad">xIdleTaskHandle</link>;
<anchor xml:id="_tasks_8c_source_1l02564"/>02564 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02565"/>02565 
<anchor xml:id="_tasks_8c_source_1l02566"/>02566 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;INCLUDE_xTaskGetIdleTaskHandle&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l02567"/>02567 <emphasis role="comment">/*----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02568"/>02568 
<anchor xml:id="_tasks_8c_source_1l02569"/>02569 <emphasis role="comment">/*&#32;This&#32;conditional&#32;compilation&#32;should&#32;use&#32;inequality&#32;to&#32;0,&#32;not&#32;equality&#32;to&#32;1.</emphasis>
<anchor xml:id="_tasks_8c_source_1l02570"/>02570 <emphasis role="comment">This&#32;is&#32;to&#32;ensure&#32;vTaskStepTick()&#32;is&#32;available&#32;when&#32;user&#32;defined&#32;low&#32;power&#32;mode</emphasis>
<anchor xml:id="_tasks_8c_source_1l02571"/>02571 <emphasis role="comment">implementations&#32;require&#32;configUSE_TICKLESS_IDLE&#32;to&#32;be&#32;set&#32;to&#32;a&#32;value&#32;other&#32;than</emphasis>
<anchor xml:id="_tasks_8c_source_1l02572"/>02572 <emphasis role="comment">1.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02573"/>02573 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_TICKLESS_IDLE&#32;!=&#32;0&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02574"/>02574 
<anchor xml:id="_tasks_8c_source_1l02575"/>02575 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1a8dda6cb26bb158dd9636873135e63912">vTaskStepTick</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToJump&#32;)
<anchor xml:id="_tasks_8c_source_1l02576"/>02576 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02577"/>02577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Correct&#32;the&#32;tick&#32;count&#32;value&#32;after&#32;a&#32;period&#32;during&#32;which&#32;the&#32;tick</emphasis>
<anchor xml:id="_tasks_8c_source_1l02578"/>02578 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;was&#32;suppressed.&#32;&#32;Note&#32;this&#32;does&#32;*not*&#32;call&#32;the&#32;tick&#32;hook&#32;function&#32;for</emphasis>
<anchor xml:id="_tasks_8c_source_1l02579"/>02579 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;each&#32;stepped&#32;tick.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02580"/>02580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;(&#32;<link linkend="_tasks_8c_1aaa88969a9b48aea401dbb1ff2b0ef4de">xTickCount</link>&#32;+&#32;xTicksToJump&#32;)&#32;&lt;=&#32;<link linkend="_tasks_8c_1ac27aa725d8922f33f880005e72edec68">xNextTaskUnblockTime</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l02581"/>02581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1aaa88969a9b48aea401dbb1ff2b0ef4de">xTickCount</link>&#32;+=&#32;xTicksToJump;
<anchor xml:id="_tasks_8c_source_1l02582"/>02582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a74e013fe2bad2c2d7db71f4b17bad698">traceINCREASE_TICK_COUNT</link>(&#32;xTicksToJump&#32;);
<anchor xml:id="_tasks_8c_source_1l02583"/>02583 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02584"/>02584 
<anchor xml:id="_tasks_8c_source_1l02585"/>02585 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TICKLESS_IDLE&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l02586"/>02586 <emphasis role="comment">/*----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02587"/>02587 
<anchor xml:id="_tasks_8c_source_1l02588"/>02588 <emphasis role="preprocessor">#if&#32;(&#32;INCLUDE_xTaskAbortDelay&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02589"/>02589 
<anchor xml:id="_tasks_8c_source_1l02590"/>02590 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_task_8h_1afefe333df0492c8411c0094badd25185">xTaskAbortDelay</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask&#32;)
<anchor xml:id="_tasks_8c_source_1l02591"/>02591 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02592"/>02592 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxTCB&#32;=&#32;xTask;
<anchor xml:id="_tasks_8c_source_1l02593"/>02593 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l02594"/>02594 
<anchor xml:id="_tasks_8c_source_1l02595"/>02595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l02596"/>02596 
<anchor xml:id="_tasks_8c_source_1l02597"/>02597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a084d232640bd1d04bcac0b8784417015">vTaskSuspendAll</link>();
<anchor xml:id="_tasks_8c_source_1l02598"/>02598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02599"/>02599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;task&#32;can&#32;only&#32;be&#32;prematurely&#32;removed&#32;from&#32;the&#32;Blocked&#32;state&#32;if</emphasis>
<anchor xml:id="_tasks_8c_source_1l02600"/>02600 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it&#32;is&#32;actually&#32;in&#32;the&#32;Blocked&#32;state.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02601"/>02601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1aab948efa7e3b657465cd06196b259ed7">eTaskGetState</link>(&#32;xTask&#32;)&#32;==&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892cad23d72c68f43b6fff4962ad4154766af">eBlocked</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l02602"/>02602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02603"/>02603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>;
<anchor xml:id="_tasks_8c_source_1l02604"/>02604 
<anchor xml:id="_tasks_8c_source_1l02605"/>02605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Remove&#32;the&#32;reference&#32;to&#32;the&#32;task&#32;from&#32;the&#32;blocked&#32;list.&#32;&#32;An</emphasis>
<anchor xml:id="_tasks_8c_source_1l02606"/>02606 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;interrupt&#32;won&apos;t&#32;touch&#32;the&#32;xStateListItem&#32;because&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l02607"/>02607 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scheduler&#32;is&#32;suspended.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02608"/>02608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_list_8c_1a274fdced76bbdd9d8a4c4840ded2920c">uxListRemove</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l02609"/>02609 
<anchor xml:id="_tasks_8c_source_1l02610"/>02610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Is&#32;the&#32;task&#32;waiting&#32;on&#32;an&#32;event&#32;also?&#32;&#32;If&#32;so&#32;remove&#32;it&#32;from</emphasis>
<anchor xml:id="_tasks_8c_source_1l02611"/>02611 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;event&#32;list&#32;too.&#32;&#32;Interrupts&#32;can&#32;touch&#32;the&#32;event&#32;list&#32;item,</emphasis>
<anchor xml:id="_tasks_8c_source_1l02612"/>02612 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;even&#32;though&#32;the&#32;scheduler&#32;is&#32;suspended,&#32;so&#32;a&#32;critical&#32;section</emphasis>
<anchor xml:id="_tasks_8c_source_1l02613"/>02613 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;used.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02614"/>02614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l02615"/>02615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02616"/>02616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1a7c4dff11380cd843ed0b6a8dc065916b">listLIST_ITEM_CONTAINER</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;)&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l02617"/>02617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02618"/>02618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_list_8c_1a274fdced76bbdd9d8a4c4840ded2920c">uxListRemove</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l02619"/>02619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB-&gt;ucDelayAborted&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l02620"/>02620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02621"/>02621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02622"/>02622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02623"/>02623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l02624"/>02624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02625"/>02625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02626"/>02626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l02627"/>02627 
<anchor xml:id="_tasks_8c_source_1l02628"/>02628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Place&#32;the&#32;unblocked&#32;task&#32;into&#32;the&#32;appropriate&#32;ready&#32;list.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02629"/>02629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a94afc7269fff7c906c5eb0d9d315624b">prvAddTaskToReadyList</link>(&#32;pxTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l02630"/>02630 
<anchor xml:id="_tasks_8c_source_1l02631"/>02631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;task&#32;being&#32;unblocked&#32;cannot&#32;cause&#32;an&#32;immediate&#32;context</emphasis>
<anchor xml:id="_tasks_8c_source_1l02632"/>02632 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;switch&#32;if&#32;preemption&#32;is&#32;turned&#32;off.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02633"/>02633 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;&#32;configUSE_PREEMPTION&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02634"/>02634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02635"/>02635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Preemption&#32;is&#32;on,&#32;but&#32;a&#32;context&#32;switch&#32;should&#32;only&#32;be</emphasis>
<anchor xml:id="_tasks_8c_source_1l02636"/>02636 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;performed&#32;if&#32;the&#32;unblocked&#32;task&#32;has&#32;a&#32;priority&#32;that&#32;is</emphasis>
<anchor xml:id="_tasks_8c_source_1l02637"/>02637 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;equal&#32;to&#32;or&#32;higher&#32;than&#32;the&#32;currently&#32;executing&#32;task.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02638"/>02638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;&gt;&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l02639"/>02639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02640"/>02640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Pend&#32;the&#32;yield&#32;to&#32;be&#32;performed&#32;when&#32;the&#32;scheduler</emphasis>
<anchor xml:id="_tasks_8c_source_1l02641"/>02641 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;unsuspended.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02642"/>02642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a25abc99b92e910c1602028081e13b1b0">xYieldPending</link>&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l02643"/>02643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02644"/>02644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02645"/>02645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02646"/>02646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l02647"/>02647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02648"/>02648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02649"/>02649 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_PREEMPTION&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l02650"/>02650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02651"/>02651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02652"/>02652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02653"/>02653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6">pdFAIL</link>;
<anchor xml:id="_tasks_8c_source_1l02654"/>02654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02655"/>02655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02656"/>02656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_tasks_8c_1adf830ea0f150fcdfdaa944667137f080">xTaskResumeAll</link>();
<anchor xml:id="_tasks_8c_source_1l02657"/>02657 
<anchor xml:id="_tasks_8c_source_1l02658"/>02658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l02659"/>02659 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02660"/>02660 
<anchor xml:id="_tasks_8c_source_1l02661"/>02661 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;INCLUDE_xTaskAbortDelay&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l02662"/>02662 <emphasis role="comment">/*----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02663"/>02663 
<anchor xml:id="_tasks_8c_source_1l02664"/><link linkend="_task_8h_1a978e25460ac35706f9ad30b46d9403d8">02664</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_tasks_8c_1a54f31e9aef0eb7b87e48c7d68ecc84c1">xTaskIncrementTick</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)
<anchor xml:id="_tasks_8c_source_1l02665"/>02665 {
<anchor xml:id="_tasks_8c_source_1l02666"/>02666 <link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*&#32;pxTCB;
<anchor xml:id="_tasks_8c_source_1l02667"/>02667 <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xItemValue;
<anchor xml:id="_tasks_8c_source_1l02668"/>02668 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xSwitchRequired&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_tasks_8c_source_1l02669"/>02669 
<anchor xml:id="_tasks_8c_source_1l02670"/>02670 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Called&#32;by&#32;the&#32;portable&#32;layer&#32;each&#32;time&#32;a&#32;tick&#32;interrupt&#32;occurs.</emphasis>
<anchor xml:id="_tasks_8c_source_1l02671"/>02671 <emphasis role="comment">&#32;&#32;&#32;&#32;Increments&#32;the&#32;tick&#32;then&#32;checks&#32;to&#32;see&#32;if&#32;the&#32;new&#32;tick&#32;value&#32;will&#32;cause&#32;any</emphasis>
<anchor xml:id="_tasks_8c_source_1l02672"/>02672 <emphasis role="comment">&#32;&#32;&#32;&#32;tasks&#32;to&#32;be&#32;unblocked.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02673"/>02673 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1aeea8ada76999a73fd5ffcacd267d336d">traceTASK_INCREMENT_TICK</link>(&#32;<link linkend="_tasks_8c_1aaa88969a9b48aea401dbb1ff2b0ef4de">xTickCount</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l02674"/>02674 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a7522707fcf80b216e3a5b25ba464ec85">uxSchedulerSuspended</link>&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l02675"/>02675 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02676"/>02676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Minor&#32;optimisation.&#32;&#32;The&#32;tick&#32;count&#32;cannot&#32;change&#32;in&#32;this</emphasis>
<anchor xml:id="_tasks_8c_source_1l02677"/>02677 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;block.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02678"/>02678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xConstTickCount&#32;=&#32;<link linkend="_tasks_8c_1aaa88969a9b48aea401dbb1ff2b0ef4de">xTickCount</link>&#32;+&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;1;
<anchor xml:id="_tasks_8c_source_1l02679"/>02679 
<anchor xml:id="_tasks_8c_source_1l02680"/>02680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Increment&#32;the&#32;RTOS&#32;tick,&#32;switching&#32;the&#32;delayed&#32;and&#32;overflowed</emphasis>
<anchor xml:id="_tasks_8c_source_1l02681"/>02681 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;delayed&#32;lists&#32;if&#32;it&#32;wraps&#32;to&#32;0.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02682"/>02682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1aaa88969a9b48aea401dbb1ff2b0ef4de">xTickCount</link>&#32;=&#32;xConstTickCount;
<anchor xml:id="_tasks_8c_source_1l02683"/>02683 
<anchor xml:id="_tasks_8c_source_1l02684"/>02684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xConstTickCount&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;0U&#32;)&#32;<emphasis role="comment">/*lint&#32;!e774&#32;&apos;if&apos;&#32;does&#32;not&#32;always&#32;evaluate&#32;to&#32;false&#32;as&#32;it&#32;is&#32;looking&#32;for&#32;an&#32;overflow.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02685"/>02685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02686"/>02686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1aa604b7713b82e63154a290e21ecf700c">taskSWITCH_DELAYED_LISTS</link>();
<anchor xml:id="_tasks_8c_source_1l02687"/>02687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02688"/>02688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02689"/>02689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02690"/>02690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l02691"/>02691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02692"/>02692 
<anchor xml:id="_tasks_8c_source_1l02693"/>02693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;See&#32;if&#32;this&#32;tick&#32;has&#32;made&#32;a&#32;timeout&#32;expire.&#32;&#32;Tasks&#32;are&#32;stored&#32;in</emphasis>
<anchor xml:id="_tasks_8c_source_1l02694"/>02694 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;queue&#32;in&#32;the&#32;order&#32;of&#32;their&#32;wake&#32;time&#32;-&#32;meaning&#32;once&#32;one&#32;task</emphasis>
<anchor xml:id="_tasks_8c_source_1l02695"/>02695 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;has&#32;been&#32;found&#32;whose&#32;block&#32;time&#32;has&#32;not&#32;expired&#32;there&#32;is&#32;no&#32;need&#32;to</emphasis>
<anchor xml:id="_tasks_8c_source_1l02696"/>02696 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;look&#32;any&#32;further&#32;down&#32;the&#32;list.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02697"/>02697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xConstTickCount&#32;&gt;=&#32;<link linkend="_tasks_8c_1ac27aa725d8922f33f880005e72edec68">xNextTaskUnblockTime</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l02698"/>02698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02699"/>02699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;;;&#32;)
<anchor xml:id="_tasks_8c_source_1l02700"/>02700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02701"/>02701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1aaba6eb05d67ebc8026bea29193eca28f">listLIST_IS_EMPTY</link>(&#32;<link linkend="_tasks_8c_1a30b4b716a99940e93fc9d4a13c1f81db">pxDelayedTaskList</link>&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l02702"/>02702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02703"/>02703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;delayed&#32;list&#32;is&#32;empty.&#32;&#32;Set&#32;xNextTaskUnblockTime</emphasis>
<anchor xml:id="_tasks_8c_source_1l02704"/>02704 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;the&#32;maximum&#32;possible&#32;value&#32;so&#32;it&#32;is&#32;extremely</emphasis>
<anchor xml:id="_tasks_8c_source_1l02705"/>02705 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unlikely&#32;that&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l02706"/>02706 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(&#32;xTickCount&#32;&gt;=&#32;xNextTaskUnblockTime&#32;)&#32;test&#32;will&#32;pass</emphasis>
<anchor xml:id="_tasks_8c_source_1l02707"/>02707 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;next&#32;time&#32;through.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02708"/>02708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1ac27aa725d8922f33f880005e72edec68">xNextTaskUnblockTime</link>&#32;=&#32;<link linkend="_portmacro_8h_1a72723ba1e4a85ca14f25c2b9e066613d">portMAX_DELAY</link>;&#32;<emphasis role="comment">/*lint&#32;!e961&#32;MISRA&#32;exception&#32;as&#32;the&#32;casts&#32;are&#32;only&#32;redundant&#32;for&#32;some&#32;ports.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02709"/>02709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_tasks_8c_source_1l02710"/>02710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02711"/>02711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02712"/>02712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02713"/>02713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;delayed&#32;list&#32;is&#32;not&#32;empty,&#32;get&#32;the&#32;value&#32;of&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l02714"/>02714 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;item&#32;at&#32;the&#32;head&#32;of&#32;the&#32;delayed&#32;list.&#32;&#32;This&#32;is&#32;the&#32;time</emphasis>
<anchor xml:id="_tasks_8c_source_1l02715"/>02715 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;at&#32;which&#32;the&#32;task&#32;at&#32;the&#32;head&#32;of&#32;the&#32;delayed&#32;list&#32;must</emphasis>
<anchor xml:id="_tasks_8c_source_1l02716"/>02716 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;be&#32;removed&#32;from&#32;the&#32;Blocked&#32;state.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02717"/>02717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;<link linkend="_list_8h_1a715561302af8cb5b74416b23ce4e999d">listGET_OWNER_OF_HEAD_ENTRY</link>(&#32;<link linkend="_tasks_8c_1a30b4b716a99940e93fc9d4a13c1f81db">pxDelayedTaskList</link>&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9079&#32;void&#32;*&#32;is&#32;used&#32;as&#32;this&#32;macro&#32;is&#32;used&#32;with&#32;timers&#32;and&#32;co-routines&#32;too.&#32;&#32;Alignment&#32;is&#32;known&#32;to&#32;be&#32;fine&#32;as&#32;the&#32;type&#32;of&#32;the&#32;pointer&#32;stored&#32;and&#32;retrieved&#32;is&#32;the&#32;same.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02718"/>02718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xItemValue&#32;=&#32;<link linkend="_list_8h_1aa50d09950abc602741d7ebe8387f4e1a">listGET_LIST_ITEM_VALUE</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l02719"/>02719 
<anchor xml:id="_tasks_8c_source_1l02720"/>02720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xConstTickCount&#32;&lt;&#32;xItemValue&#32;)
<anchor xml:id="_tasks_8c_source_1l02721"/>02721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02722"/>02722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;It&#32;is&#32;not&#32;time&#32;to&#32;unblock&#32;this&#32;item&#32;yet,&#32;but&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l02723"/>02723 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;item&#32;value&#32;is&#32;the&#32;time&#32;at&#32;which&#32;the&#32;task&#32;at&#32;the&#32;head</emphasis>
<anchor xml:id="_tasks_8c_source_1l02724"/>02724 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;of&#32;the&#32;blocked&#32;list&#32;must&#32;be&#32;removed&#32;from&#32;the&#32;Blocked</emphasis>
<anchor xml:id="_tasks_8c_source_1l02725"/>02725 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;state&#32;-&#32;so&#32;record&#32;the&#32;item&#32;value&#32;in</emphasis>
<anchor xml:id="_tasks_8c_source_1l02726"/>02726 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xNextTaskUnblockTime.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02727"/>02727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1ac27aa725d8922f33f880005e72edec68">xNextTaskUnblockTime</link>&#32;=&#32;xItemValue;
<anchor xml:id="_tasks_8c_source_1l02728"/>02728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;&#32;<emphasis role="comment">/*lint&#32;!e9011&#32;Code&#32;structure&#32;here&#32;is&#32;deedmed&#32;easier&#32;to&#32;understand&#32;with&#32;multiple&#32;breaks.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02729"/>02729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02730"/>02730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02731"/>02731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02732"/>02732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l02733"/>02733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02734"/>02734 
<anchor xml:id="_tasks_8c_source_1l02735"/>02735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;It&#32;is&#32;time&#32;to&#32;remove&#32;the&#32;item&#32;from&#32;the&#32;Blocked&#32;state.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02736"/>02736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_list_8c_1a274fdced76bbdd9d8a4c4840ded2920c">uxListRemove</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l02737"/>02737 
<anchor xml:id="_tasks_8c_source_1l02738"/>02738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Is&#32;the&#32;task&#32;waiting&#32;on&#32;an&#32;event&#32;also?&#32;&#32;If&#32;so&#32;remove</emphasis>
<anchor xml:id="_tasks_8c_source_1l02739"/>02739 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it&#32;from&#32;the&#32;event&#32;list.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02740"/>02740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1a7c4dff11380cd843ed0b6a8dc065916b">listLIST_ITEM_CONTAINER</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;)&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l02741"/>02741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02742"/>02742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_list_8c_1a274fdced76bbdd9d8a4c4840ded2920c">uxListRemove</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l02743"/>02743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02744"/>02744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02745"/>02745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02746"/>02746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l02747"/>02747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02748"/>02748 
<anchor xml:id="_tasks_8c_source_1l02749"/>02749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Place&#32;the&#32;unblocked&#32;task&#32;into&#32;the&#32;appropriate&#32;ready</emphasis>
<anchor xml:id="_tasks_8c_source_1l02750"/>02750 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02751"/>02751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a94afc7269fff7c906c5eb0d9d315624b">prvAddTaskToReadyList</link>(&#32;pxTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l02752"/>02752 
<anchor xml:id="_tasks_8c_source_1l02753"/>02753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;task&#32;being&#32;unblocked&#32;cannot&#32;cause&#32;an&#32;immediate</emphasis>
<anchor xml:id="_tasks_8c_source_1l02754"/>02754 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;context&#32;switch&#32;if&#32;preemption&#32;is&#32;turned&#32;off.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02755"/>02755 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;&#32;configUSE_PREEMPTION&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02756"/>02756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02757"/>02757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Preemption&#32;is&#32;on,&#32;but&#32;a&#32;context&#32;switch&#32;should</emphasis>
<anchor xml:id="_tasks_8c_source_1l02758"/>02758 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;only&#32;be&#32;performed&#32;if&#32;the&#32;unblocked&#32;task&#32;has&#32;a</emphasis>
<anchor xml:id="_tasks_8c_source_1l02759"/>02759 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;priority&#32;that&#32;is&#32;equal&#32;to&#32;or&#32;higher&#32;than&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l02760"/>02760 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currently&#32;executing&#32;task.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02761"/>02761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;&gt;=&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l02762"/>02762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02763"/>02763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xSwitchRequired&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l02764"/>02764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02765"/>02765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02766"/>02766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02767"/>02767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l02768"/>02768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02769"/>02769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02770"/>02770 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_PREEMPTION&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l02771"/>02771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02772"/>02772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02773"/>02773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02774"/>02774 
<anchor xml:id="_tasks_8c_source_1l02775"/>02775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Tasks&#32;of&#32;equal&#32;priority&#32;to&#32;the&#32;currently&#32;running&#32;task&#32;will&#32;share</emphasis>
<anchor xml:id="_tasks_8c_source_1l02776"/>02776 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;processing&#32;time&#32;(time&#32;slice)&#32;if&#32;preemption&#32;is&#32;on,&#32;and&#32;the&#32;application</emphasis>
<anchor xml:id="_tasks_8c_source_1l02777"/>02777 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;writer&#32;has&#32;not&#32;explicitly&#32;turned&#32;time&#32;slicing&#32;off.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02778"/>02778 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;(&#32;configUSE_PREEMPTION&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configUSE_TIME_SLICING&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02779"/>02779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02780"/>02780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1a18b4aded515bdc512017ea6e677a13bb">listCURRENT_LIST_LENGTH</link>(&#32;&amp;(&#32;<link linkend="_tasks_8c_1ab4a8345f8c340d07086342c0dd92c972">pxReadyTasksLists</link>[&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;]&#32;)&#32;)&#32;&gt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;1&#32;)
<anchor xml:id="_tasks_8c_source_1l02781"/>02781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02782"/>02782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xSwitchRequired&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l02783"/>02783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02784"/>02784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02785"/>02785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02786"/>02786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l02787"/>02787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02788"/>02788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02789"/>02789 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;(&#32;(&#32;configUSE_PREEMPTION&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configUSE_TIME_SLICING&#32;==&#32;1&#32;)&#32;)&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l02790"/>02790 
<anchor xml:id="_tasks_8c_source_1l02791"/>02791 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_TICK_HOOK&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02792"/>02792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02793"/>02793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Guard&#32;against&#32;the&#32;tick&#32;hook&#32;being&#32;called&#32;when&#32;the&#32;pended&#32;tick</emphasis>
<anchor xml:id="_tasks_8c_source_1l02794"/>02794 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count&#32;is&#32;being&#32;unwound&#32;(when&#32;the&#32;scheduler&#32;is&#32;being&#32;unlocked).&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02795"/>02795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a476a5b10aeb0bf39d29d6baccbc26f56">uxPendedTicks</link>&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0U&#32;)
<anchor xml:id="_tasks_8c_source_1l02796"/>02796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02797"/>02797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vApplicationTickHook();
<anchor xml:id="_tasks_8c_source_1l02798"/>02798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02799"/>02799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02800"/>02800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02801"/>02801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l02802"/>02802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02803"/>02803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02804"/>02804 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TICK_HOOK&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l02805"/>02805 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02806"/>02806 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02807"/>02807 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02808"/>02808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++<link linkend="_tasks_8c_1a476a5b10aeb0bf39d29d6baccbc26f56">uxPendedTicks</link>;
<anchor xml:id="_tasks_8c_source_1l02809"/>02809 
<anchor xml:id="_tasks_8c_source_1l02810"/>02810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;tick&#32;hook&#32;gets&#32;called&#32;at&#32;regular&#32;intervals,&#32;even&#32;if&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l02811"/>02811 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scheduler&#32;is&#32;locked.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02812"/>02812 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_TICK_HOOK&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02813"/>02813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02814"/>02814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vApplicationTickHook();
<anchor xml:id="_tasks_8c_source_1l02815"/>02815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02816"/>02816 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l02817"/>02817 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02818"/>02818 
<anchor xml:id="_tasks_8c_source_1l02819"/>02819 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_PREEMPTION&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02820"/>02820 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02821"/>02821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a25abc99b92e910c1602028081e13b1b0">xYieldPending</link>&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l02822"/>02822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02823"/>02823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xSwitchRequired&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l02824"/>02824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02825"/>02825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02826"/>02826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02827"/>02827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l02828"/>02828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02829"/>02829 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02830"/>02830 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_PREEMPTION&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l02831"/>02831 
<anchor xml:id="_tasks_8c_source_1l02832"/>02832 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xSwitchRequired;
<anchor xml:id="_tasks_8c_source_1l02833"/>02833 }
<anchor xml:id="_tasks_8c_source_1l02834"/>02834 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02835"/>02835 
<anchor xml:id="_tasks_8c_source_1l02836"/>02836 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_APPLICATION_TASK_TAG&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02837"/>02837 
<anchor xml:id="_tasks_8c_source_1l02838"/>02838 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;vTaskSetApplicationTaskTag(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask,&#32;<link linkend="_task_8h_1af984026250bf8fece2e0068874d4661d">TaskHookFunction_t</link>&#32;pxHookFunction&#32;)
<anchor xml:id="_tasks_8c_source_1l02839"/>02839 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02840"/>02840 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*xTCB;
<anchor xml:id="_tasks_8c_source_1l02841"/>02841 
<anchor xml:id="_tasks_8c_source_1l02842"/>02842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;xTask&#32;is&#32;NULL&#32;then&#32;it&#32;is&#32;the&#32;task&#32;hook&#32;of&#32;the&#32;calling&#32;task&#32;that&#32;is</emphasis>
<anchor xml:id="_tasks_8c_source_1l02843"/>02843 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;getting&#32;set.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02844"/>02844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTask&#32;==&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l02845"/>02845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02846"/>02846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xTCB&#32;=&#32;(&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*&#32;)&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>;
<anchor xml:id="_tasks_8c_source_1l02847"/>02847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02848"/>02848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02849"/>02849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02850"/>02850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xTCB&#32;=&#32;xTask;
<anchor xml:id="_tasks_8c_source_1l02851"/>02851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02852"/>02852 
<anchor xml:id="_tasks_8c_source_1l02853"/>02853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Save&#32;the&#32;hook&#32;function&#32;in&#32;the&#32;TCB.&#32;&#32;A&#32;critical&#32;section&#32;is&#32;required&#32;as</emphasis>
<anchor xml:id="_tasks_8c_source_1l02854"/>02854 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;value&#32;can&#32;be&#32;accessed&#32;from&#32;an&#32;interrupt.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02855"/>02855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l02856"/>02856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02857"/>02857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xTCB-&gt;pxTaskTag&#32;=&#32;pxHookFunction;
<anchor xml:id="_tasks_8c_source_1l02858"/>02858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02859"/>02859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l02860"/>02860 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02861"/>02861 
<anchor xml:id="_tasks_8c_source_1l02862"/>02862 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_APPLICATION_TASK_TAG&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l02863"/>02863 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02864"/>02864 
<anchor xml:id="_tasks_8c_source_1l02865"/>02865 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_APPLICATION_TASK_TAG&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02866"/>02866 
<anchor xml:id="_tasks_8c_source_1l02867"/>02867 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1af984026250bf8fece2e0068874d4661d">TaskHookFunction_t</link>&#32;xTaskGetApplicationTaskTag(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask&#32;)
<anchor xml:id="_tasks_8c_source_1l02868"/>02868 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02869"/>02869 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxTCB;
<anchor xml:id="_tasks_8c_source_1l02870"/>02870 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1af984026250bf8fece2e0068874d4661d">TaskHookFunction_t</link>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l02871"/>02871 
<anchor xml:id="_tasks_8c_source_1l02872"/>02872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;xTask&#32;is&#32;NULL&#32;then&#32;set&#32;the&#32;calling&#32;task&apos;s&#32;hook.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02873"/>02873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;<link linkend="_tasks_8c_1ad910f5e908283f1dfabd642fe1b11c6b">prvGetTCBFromHandle</link>(&#32;xTask&#32;);
<anchor xml:id="_tasks_8c_source_1l02874"/>02874 
<anchor xml:id="_tasks_8c_source_1l02875"/>02875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Save&#32;the&#32;hook&#32;function&#32;in&#32;the&#32;TCB.&#32;&#32;A&#32;critical&#32;section&#32;is&#32;required&#32;as</emphasis>
<anchor xml:id="_tasks_8c_source_1l02876"/>02876 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;value&#32;can&#32;be&#32;accessed&#32;from&#32;an&#32;interrupt.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02877"/>02877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l02878"/>02878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02879"/>02879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;pxTCB-&gt;pxTaskTag;
<anchor xml:id="_tasks_8c_source_1l02880"/>02880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02881"/>02881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l02882"/>02882 
<anchor xml:id="_tasks_8c_source_1l02883"/>02883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l02884"/>02884 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02885"/>02885 
<anchor xml:id="_tasks_8c_source_1l02886"/>02886 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_APPLICATION_TASK_TAG&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l02887"/>02887 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02888"/>02888 
<anchor xml:id="_tasks_8c_source_1l02889"/>02889 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_APPLICATION_TASK_TAG&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02890"/>02890 
<anchor xml:id="_tasks_8c_source_1l02891"/>02891 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1af984026250bf8fece2e0068874d4661d">TaskHookFunction_t</link>&#32;xTaskGetApplicationTaskTagFromISR(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask&#32;)
<anchor xml:id="_tasks_8c_source_1l02892"/>02892 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02893"/>02893 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxTCB;
<anchor xml:id="_tasks_8c_source_1l02894"/>02894 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1af984026250bf8fece2e0068874d4661d">TaskHookFunction_t</link>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l02895"/>02895 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxSavedInterruptStatus;
<anchor xml:id="_tasks_8c_source_1l02896"/>02896 
<anchor xml:id="_tasks_8c_source_1l02897"/>02897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;xTask&#32;is&#32;NULL&#32;then&#32;set&#32;the&#32;calling&#32;task&apos;s&#32;hook.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02898"/>02898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;<link linkend="_tasks_8c_1ad910f5e908283f1dfabd642fe1b11c6b">prvGetTCBFromHandle</link>(&#32;xTask&#32;);
<anchor xml:id="_tasks_8c_source_1l02899"/>02899 
<anchor xml:id="_tasks_8c_source_1l02900"/>02900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Save&#32;the&#32;hook&#32;function&#32;in&#32;the&#32;TCB.&#32;&#32;A&#32;critical&#32;section&#32;is&#32;required&#32;as</emphasis>
<anchor xml:id="_tasks_8c_source_1l02901"/>02901 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;value&#32;can&#32;be&#32;accessed&#32;from&#32;an&#32;interrupt.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02902"/>02902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxSavedInterruptStatus&#32;=&#32;<link linkend="_portmacro_8h_1a31b4260dbc1823ba80b578f86eb15a98">portSET_INTERRUPT_MASK_FROM_ISR</link>();
<anchor xml:id="_tasks_8c_source_1l02903"/>02903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02904"/>02904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;pxTCB-&gt;pxTaskTag;
<anchor xml:id="_tasks_8c_source_1l02905"/>02905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02906"/>02906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a79d65a5d0f6f9133a0739832e9d8367e">portCLEAR_INTERRUPT_MASK_FROM_ISR</link>(&#32;uxSavedInterruptStatus&#32;);
<anchor xml:id="_tasks_8c_source_1l02907"/>02907 
<anchor xml:id="_tasks_8c_source_1l02908"/>02908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l02909"/>02909 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02910"/>02910 
<anchor xml:id="_tasks_8c_source_1l02911"/>02911 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_APPLICATION_TASK_TAG&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l02912"/>02912 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02913"/>02913 
<anchor xml:id="_tasks_8c_source_1l02914"/>02914 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_APPLICATION_TASK_TAG&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02915"/>02915 
<anchor xml:id="_tasks_8c_source_1l02916"/>02916 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_task_8h_1ab6607e5d8a9664e3aa9fe16efa694e83">xTaskCallApplicationTaskHook</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pvParameter&#32;)
<anchor xml:id="_tasks_8c_source_1l02917"/>02917 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02918"/>02918 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*xTCB;
<anchor xml:id="_tasks_8c_source_1l02919"/>02919 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l02920"/>02920 
<anchor xml:id="_tasks_8c_source_1l02921"/>02921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;xTask&#32;is&#32;NULL&#32;then&#32;we&#32;are&#32;calling&#32;our&#32;own&#32;task&#32;hook.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02922"/>02922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTask&#32;==&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l02923"/>02923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02924"/>02924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xTCB&#32;=&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>;
<anchor xml:id="_tasks_8c_source_1l02925"/>02925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02926"/>02926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02927"/>02927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02928"/>02928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xTCB&#32;=&#32;xTask;
<anchor xml:id="_tasks_8c_source_1l02929"/>02929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02930"/>02930 
<anchor xml:id="_tasks_8c_source_1l02931"/>02931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTCB-&gt;pxTaskTag&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l02932"/>02932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02933"/>02933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;xTCB-&gt;pxTaskTag(&#32;pvParameter&#32;);
<anchor xml:id="_tasks_8c_source_1l02934"/>02934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02935"/>02935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02936"/>02936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02937"/>02937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6">pdFAIL</link>;
<anchor xml:id="_tasks_8c_source_1l02938"/>02938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02939"/>02939 
<anchor xml:id="_tasks_8c_source_1l02940"/>02940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l02941"/>02941 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02942"/>02942 
<anchor xml:id="_tasks_8c_source_1l02943"/>02943 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_APPLICATION_TASK_TAG&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l02944"/>02944 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02945"/>02945 
<anchor xml:id="_tasks_8c_source_1l02946"/><link linkend="_task_8h_1a26df422f8d635d5191a3e106fbeeed68">02946</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1a9c86137bc3c1cbffc39fff22627cb885">vTaskSwitchContext</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)
<anchor xml:id="_tasks_8c_source_1l02947"/>02947 {
<anchor xml:id="_tasks_8c_source_1l02948"/>02948 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a7522707fcf80b216e3a5b25ba464ec85">uxSchedulerSuspended</link>&#32;!=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l02949"/>02949 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02950"/>02950 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;scheduler&#32;is&#32;currently&#32;suspended&#32;-&#32;do&#32;not&#32;allow&#32;a&#32;context</emphasis>
<anchor xml:id="_tasks_8c_source_1l02951"/>02951 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;switch.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02952"/>02952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a25abc99b92e910c1602028081e13b1b0">xYieldPending</link>&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l02953"/>02953 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02954"/>02954 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02955"/>02955 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02956"/>02956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a25abc99b92e910c1602028081e13b1b0">xYieldPending</link>&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_tasks_8c_source_1l02957"/>02957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a4b94b0d35e9a4ad783af7be32cabbdaa">traceTASK_SWITCHED_OUT</link>();
<anchor xml:id="_tasks_8c_source_1l02958"/>02958 
<anchor xml:id="_tasks_8c_source_1l02959"/>02959 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;configGENERATE_RUN_TIME_STATS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02960"/>02960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02961"/>02961 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#ifdef&#32;portALT_GET_RUN_TIME_COUNTER_VALUE</emphasis>
<anchor xml:id="_tasks_8c_source_1l02962"/>02962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;portALT_GET_RUN_TIME_COUNTER_VALUE(&#32;ulTotalRunTime&#32;);
<anchor xml:id="_tasks_8c_source_1l02963"/>02963 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02964"/>02964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulTotalRunTime&#32;=&#32;portGET_RUN_TIME_COUNTER_VALUE();
<anchor xml:id="_tasks_8c_source_1l02965"/>02965 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l02966"/>02966 
<anchor xml:id="_tasks_8c_source_1l02967"/>02967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Add&#32;the&#32;amount&#32;of&#32;time&#32;the&#32;task&#32;has&#32;been&#32;running&#32;to&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l02968"/>02968 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;accumulated&#32;time&#32;so&#32;far.&#32;&#32;The&#32;time&#32;the&#32;task&#32;started&#32;running&#32;was</emphasis>
<anchor xml:id="_tasks_8c_source_1l02969"/>02969 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stored&#32;in&#32;ulTaskSwitchedInTime.&#32;&#32;Note&#32;that&#32;there&#32;is&#32;no&#32;overflow</emphasis>
<anchor xml:id="_tasks_8c_source_1l02970"/>02970 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;protection&#32;here&#32;so&#32;count&#32;values&#32;are&#32;only&#32;valid&#32;until&#32;the&#32;timer</emphasis>
<anchor xml:id="_tasks_8c_source_1l02971"/>02971 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;overflows.&#32;&#32;The&#32;guard&#32;against&#32;negative&#32;values&#32;is&#32;to&#32;protect</emphasis>
<anchor xml:id="_tasks_8c_source_1l02972"/>02972 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;against&#32;suspect&#32;run&#32;time&#32;stat&#32;counter&#32;implementations&#32;-&#32;which</emphasis>
<anchor xml:id="_tasks_8c_source_1l02973"/>02973 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;are&#32;provided&#32;by&#32;the&#32;application,&#32;not&#32;the&#32;kernel.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02974"/>02974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;ulTotalRunTime&#32;&gt;&#32;ulTaskSwitchedInTime&#32;)
<anchor xml:id="_tasks_8c_source_1l02975"/>02975 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02976"/>02976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;ulRunTimeCounter&#32;+=&#32;(&#32;ulTotalRunTime&#32;-&#32;ulTaskSwitchedInTime&#32;);
<anchor xml:id="_tasks_8c_source_1l02977"/>02977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02978"/>02978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l02979"/>02979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02980"/>02980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l02981"/>02981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02982"/>02982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulTaskSwitchedInTime&#32;=&#32;ulTotalRunTime;
<anchor xml:id="_tasks_8c_source_1l02983"/>02983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02984"/>02984 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configGENERATE_RUN_TIME_STATS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l02985"/>02985 
<anchor xml:id="_tasks_8c_source_1l02986"/>02986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Check&#32;for&#32;stack&#32;overflow,&#32;if&#32;configured.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02987"/>02987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stack__macros_8h_1a48d287f599f5c139ae0764f024368806">taskCHECK_FOR_STACK_OVERFLOW</link>();
<anchor xml:id="_tasks_8c_source_1l02988"/>02988 
<anchor xml:id="_tasks_8c_source_1l02989"/>02989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Before&#32;the&#32;currently&#32;running&#32;task&#32;is&#32;switched&#32;out,&#32;save&#32;its&#32;errno.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02990"/>02990 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;configUSE_POSIX_ERRNO&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l02991"/>02991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l02992"/>02992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;iTaskErrno&#32;=&#32;FreeRTOS_errno;
<anchor xml:id="_tasks_8c_source_1l02993"/>02993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l02994"/>02994 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l02995"/>02995 
<anchor xml:id="_tasks_8c_source_1l02996"/>02996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Select&#32;a&#32;new&#32;task&#32;to&#32;run&#32;using&#32;either&#32;the&#32;generic&#32;C&#32;or&#32;port</emphasis>
<anchor xml:id="_tasks_8c_source_1l02997"/>02997 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;optimised&#32;asm&#32;code.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02998"/>02998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1adace394d56a7fe7a8f8ee83edba3537c">taskSELECT_HIGHEST_PRIORITY_TASK</link>();&#32;<emphasis role="comment">/*lint&#32;!e9079&#32;void&#32;*&#32;is&#32;used&#32;as&#32;this&#32;macro&#32;is&#32;used&#32;with&#32;timers&#32;and&#32;co-routines&#32;too.&#32;&#32;Alignment&#32;is&#32;known&#32;to&#32;be&#32;fine&#32;as&#32;the&#32;type&#32;of&#32;the&#32;pointer&#32;stored&#32;and&#32;retrieved&#32;is&#32;the&#32;same.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l02999"/>02999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a2f813fe80d3519a396a9f2bb7cc7e820">traceTASK_SWITCHED_IN</link>();
<anchor xml:id="_tasks_8c_source_1l03000"/>03000 
<anchor xml:id="_tasks_8c_source_1l03001"/>03001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;After&#32;the&#32;new&#32;task&#32;is&#32;switched&#32;in,&#32;update&#32;the&#32;global&#32;errno.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03002"/>03002 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;configUSE_POSIX_ERRNO&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03003"/>03003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03004"/>03004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FreeRTOS_errno&#32;=&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;iTaskErrno;
<anchor xml:id="_tasks_8c_source_1l03005"/>03005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03006"/>03006 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l03007"/>03007 
<anchor xml:id="_tasks_8c_source_1l03008"/>03008 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_NEWLIB_REENTRANT&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03009"/>03009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03010"/>03010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Switch&#32;Newlib&apos;s&#32;_impure_ptr&#32;variable&#32;to&#32;point&#32;to&#32;the&#32;_reent</emphasis>
<anchor xml:id="_tasks_8c_source_1l03011"/>03011 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;structure&#32;specific&#32;to&#32;this&#32;task.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03012"/>03012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_impure_ptr&#32;=&#32;&amp;(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;xNewLib_reent&#32;);
<anchor xml:id="_tasks_8c_source_1l03013"/>03013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03014"/>03014 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_NEWLIB_REENTRANT&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03015"/>03015 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03016"/>03016 }
<anchor xml:id="_tasks_8c_source_1l03017"/>03017 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03018"/>03018 
<anchor xml:id="_tasks_8c_source_1l03019"/><link linkend="_task_8h_1a56ae23bc0dece4522d666959902221ca">03019</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1adc9eb47ceecf7dd7ee325bebff9eafc5">vTaskPlaceOnEventList</link>(&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxEventList,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait&#32;)
<anchor xml:id="_tasks_8c_source_1l03020"/>03020 {
<anchor xml:id="_tasks_8c_source_1l03021"/>03021 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxEventList&#32;);
<anchor xml:id="_tasks_8c_source_1l03022"/>03022 
<anchor xml:id="_tasks_8c_source_1l03023"/>03023 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;THIS&#32;FUNCTION&#32;MUST&#32;BE&#32;CALLED&#32;WITH&#32;EITHER&#32;INTERRUPTS&#32;DISABLED&#32;OR&#32;THE</emphasis>
<anchor xml:id="_tasks_8c_source_1l03024"/>03024 <emphasis role="comment">&#32;&#32;&#32;&#32;SCHEDULER&#32;SUSPENDED&#32;AND&#32;THE&#32;QUEUE&#32;BEING&#32;ACCESSED&#32;LOCKED.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03025"/>03025 
<anchor xml:id="_tasks_8c_source_1l03026"/>03026 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Place&#32;the&#32;event&#32;list&#32;item&#32;of&#32;the&#32;TCB&#32;in&#32;the&#32;appropriate&#32;event&#32;list.</emphasis>
<anchor xml:id="_tasks_8c_source_1l03027"/>03027 <emphasis role="comment">&#32;&#32;&#32;&#32;This&#32;is&#32;placed&#32;in&#32;the&#32;list&#32;in&#32;priority&#32;order&#32;so&#32;the&#32;highest&#32;priority&#32;task</emphasis>
<anchor xml:id="_tasks_8c_source_1l03028"/>03028 <emphasis role="comment">&#32;&#32;&#32;&#32;is&#32;the&#32;first&#32;to&#32;be&#32;woken&#32;by&#32;the&#32;event.&#32;&#32;The&#32;queue&#32;that&#32;contains&#32;the&#32;event</emphasis>
<anchor xml:id="_tasks_8c_source_1l03029"/>03029 <emphasis role="comment">&#32;&#32;&#32;&#32;list&#32;is&#32;locked,&#32;preventing&#32;simultaneous&#32;access&#32;from&#32;interrupts.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03030"/>03030 &#32;&#32;&#32;&#32;<link linkend="_list_8c_1a28faa70d3ec4b4f39e53b0fc52d62ecf">vListInsert</link>(&#32;pxEventList,&#32;&amp;(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l03031"/>03031 
<anchor xml:id="_tasks_8c_source_1l03032"/>03032 &#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1ab4574e77d9aea876272e563c68f639da">prvAddCurrentTaskToDelayedList</link>(&#32;xTicksToWait,&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l03033"/>03033 }
<anchor xml:id="_tasks_8c_source_1l03034"/>03034 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03035"/>03035 
<anchor xml:id="_tasks_8c_source_1l03036"/><link linkend="_task_8h_1a9d52fa7b60cc6a7b4fd0846700d7834c">03036</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1a0896d9cd10d789ef8dbb95c4959c3ce5">vTaskPlaceOnUnorderedEventList</link>(&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;*&#32;pxEventList,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xItemValue,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait&#32;)
<anchor xml:id="_tasks_8c_source_1l03037"/>03037 {
<anchor xml:id="_tasks_8c_source_1l03038"/>03038 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxEventList&#32;);
<anchor xml:id="_tasks_8c_source_1l03039"/>03039 
<anchor xml:id="_tasks_8c_source_1l03040"/>03040 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;THIS&#32;FUNCTION&#32;MUST&#32;BE&#32;CALLED&#32;WITH&#32;THE&#32;SCHEDULER&#32;SUSPENDED.&#32;&#32;It&#32;is&#32;used&#32;by</emphasis>
<anchor xml:id="_tasks_8c_source_1l03041"/>03041 <emphasis role="comment">&#32;&#32;&#32;&#32;the&#32;event&#32;groups&#32;implementation.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03042"/>03042 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;<link linkend="_tasks_8c_1a7522707fcf80b216e3a5b25ba464ec85">uxSchedulerSuspended</link>&#32;!=&#32;0&#32;);
<anchor xml:id="_tasks_8c_source_1l03043"/>03043 
<anchor xml:id="_tasks_8c_source_1l03044"/>03044 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Store&#32;the&#32;item&#32;value&#32;in&#32;the&#32;event&#32;list&#32;item.&#32;&#32;It&#32;is&#32;safe&#32;to&#32;access&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l03045"/>03045 <emphasis role="comment">&#32;&#32;&#32;&#32;event&#32;list&#32;item&#32;here&#32;as&#32;interrupts&#32;won&apos;t&#32;access&#32;the&#32;event&#32;list&#32;item&#32;of&#32;a</emphasis>
<anchor xml:id="_tasks_8c_source_1l03046"/>03046 <emphasis role="comment">&#32;&#32;&#32;&#32;task&#32;that&#32;is&#32;not&#32;in&#32;the&#32;Blocked&#32;state.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03047"/>03047 &#32;&#32;&#32;&#32;<link linkend="_list_8h_1a83e95e61652f032fdc26aa622f5e2610">listSET_LIST_ITEM_VALUE</link>(&#32;&amp;(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;),&#32;xItemValue&#32;|&#32;<link linkend="_tasks_8c_1a3e36f3eda563e810a24ab36ee7c978d4">taskEVENT_LIST_ITEM_VALUE_IN_USE</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l03048"/>03048 
<anchor xml:id="_tasks_8c_source_1l03049"/>03049 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Place&#32;the&#32;event&#32;list&#32;item&#32;of&#32;the&#32;TCB&#32;at&#32;the&#32;end&#32;of&#32;the&#32;appropriate&#32;event</emphasis>
<anchor xml:id="_tasks_8c_source_1l03050"/>03050 <emphasis role="comment">&#32;&#32;&#32;&#32;list.&#32;&#32;It&#32;is&#32;safe&#32;to&#32;access&#32;the&#32;event&#32;list&#32;here&#32;because&#32;it&#32;is&#32;part&#32;of&#32;an</emphasis>
<anchor xml:id="_tasks_8c_source_1l03051"/>03051 <emphasis role="comment">&#32;&#32;&#32;&#32;event&#32;group&#32;implementation&#32;-&#32;and&#32;interrupts&#32;don&apos;t&#32;access&#32;event&#32;groups</emphasis>
<anchor xml:id="_tasks_8c_source_1l03052"/>03052 <emphasis role="comment">&#32;&#32;&#32;&#32;directly&#32;(instead&#32;they&#32;access&#32;them&#32;indirectly&#32;by&#32;pending&#32;function&#32;calls&#32;to</emphasis>
<anchor xml:id="_tasks_8c_source_1l03053"/>03053 <emphasis role="comment">&#32;&#32;&#32;&#32;the&#32;task&#32;level).&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03054"/>03054 &#32;&#32;&#32;&#32;<link linkend="_list_8c_1a3240bc0f43fcf755be02bfc6de7dc6ef">vListInsertEnd</link>(&#32;pxEventList,&#32;&amp;(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l03055"/>03055 
<anchor xml:id="_tasks_8c_source_1l03056"/>03056 &#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1ab4574e77d9aea876272e563c68f639da">prvAddCurrentTaskToDelayedList</link>(&#32;xTicksToWait,&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l03057"/>03057 }
<anchor xml:id="_tasks_8c_source_1l03058"/>03058 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03059"/>03059 
<anchor xml:id="_tasks_8c_source_1l03060"/>03060 <emphasis role="preprocessor">#if(&#32;configUSE_TIMERS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03061"/>03061 
<anchor xml:id="_tasks_8c_source_1l03062"/><link linkend="_task_8h_1ada3eb00e16241f5b648184a406a6a6fd">03062</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1ae8c3085adca5389867fd6267a44a2c7e">vTaskPlaceOnEventListRestricted</link>(&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxEventList,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xWaitIndefinitely&#32;)
<anchor xml:id="_tasks_8c_source_1l03063"/>03063 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03064"/>03064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxEventList&#32;);
<anchor xml:id="_tasks_8c_source_1l03065"/>03065 
<anchor xml:id="_tasks_8c_source_1l03066"/>03066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;function&#32;should&#32;not&#32;be&#32;called&#32;by&#32;application&#32;code&#32;hence&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l03067"/>03067 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&apos;Restricted&apos;&#32;in&#32;its&#32;name.&#32;&#32;It&#32;is&#32;not&#32;part&#32;of&#32;the&#32;public&#32;API.&#32;&#32;It&#32;is</emphasis>
<anchor xml:id="_tasks_8c_source_1l03068"/>03068 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;designed&#32;for&#32;use&#32;by&#32;kernel&#32;code,&#32;and&#32;has&#32;special&#32;calling&#32;requirements&#32;-</emphasis>
<anchor xml:id="_tasks_8c_source_1l03069"/>03069 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it&#32;should&#32;be&#32;called&#32;with&#32;the&#32;scheduler&#32;suspended.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03070"/>03070 
<anchor xml:id="_tasks_8c_source_1l03071"/>03071 
<anchor xml:id="_tasks_8c_source_1l03072"/>03072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Place&#32;the&#32;event&#32;list&#32;item&#32;of&#32;the&#32;TCB&#32;in&#32;the&#32;appropriate&#32;event&#32;list.</emphasis>
<anchor xml:id="_tasks_8c_source_1l03073"/>03073 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;In&#32;this&#32;case&#32;it&#32;is&#32;assume&#32;that&#32;this&#32;is&#32;the&#32;only&#32;task&#32;that&#32;is&#32;going&#32;to</emphasis>
<anchor xml:id="_tasks_8c_source_1l03074"/>03074 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;be&#32;waiting&#32;on&#32;this&#32;event&#32;list,&#32;so&#32;the&#32;faster&#32;vListInsertEnd()&#32;function</emphasis>
<anchor xml:id="_tasks_8c_source_1l03075"/>03075 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;can&#32;be&#32;used&#32;in&#32;place&#32;of&#32;vListInsert.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03076"/>03076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8c_1a3240bc0f43fcf755be02bfc6de7dc6ef">vListInsertEnd</link>(&#32;pxEventList,&#32;&amp;(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l03077"/>03077 
<anchor xml:id="_tasks_8c_source_1l03078"/>03078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;task&#32;should&#32;block&#32;indefinitely&#32;then&#32;set&#32;the&#32;block&#32;time&#32;to&#32;a</emphasis>
<anchor xml:id="_tasks_8c_source_1l03079"/>03079 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;that&#32;will&#32;be&#32;recognised&#32;as&#32;an&#32;indefinite&#32;delay&#32;inside&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l03080"/>03080 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prvAddCurrentTaskToDelayedList()&#32;function.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03081"/>03081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xWaitIndefinitely&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l03082"/>03082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03083"/>03083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xTicksToWait&#32;=&#32;<link linkend="_portmacro_8h_1a72723ba1e4a85ca14f25c2b9e066613d">portMAX_DELAY</link>;
<anchor xml:id="_tasks_8c_source_1l03084"/>03084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03085"/>03085 
<anchor xml:id="_tasks_8c_source_1l03086"/>03086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac7bba9e806376061522f5cb2eef261c4">traceTASK_DELAY_UNTIL</link>(&#32;(&#32;<link linkend="_tasks_8c_1aaa88969a9b48aea401dbb1ff2b0ef4de">xTickCount</link>&#32;+&#32;xTicksToWait&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l03087"/>03087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1ab4574e77d9aea876272e563c68f639da">prvAddCurrentTaskToDelayedList</link>(&#32;xTicksToWait,&#32;xWaitIndefinitely&#32;);
<anchor xml:id="_tasks_8c_source_1l03088"/>03088 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03089"/>03089 
<anchor xml:id="_tasks_8c_source_1l03090"/>03090 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TIMERS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03091"/>03091 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03092"/>03092 
<anchor xml:id="_tasks_8c_source_1l03093"/><link linkend="_task_8h_1a14513b7dd36055f73fba3c5ebbdc1b06">03093</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_tasks_8c_1a6d21c9054b62d8bc1bfb2724e11578d9">xTaskRemoveFromEventList</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxEventList&#32;)
<anchor xml:id="_tasks_8c_source_1l03094"/>03094 {
<anchor xml:id="_tasks_8c_source_1l03095"/>03095 <link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxUnblockedTCB;
<anchor xml:id="_tasks_8c_source_1l03096"/>03096 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l03097"/>03097 
<anchor xml:id="_tasks_8c_source_1l03098"/>03098 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;THIS&#32;FUNCTION&#32;MUST&#32;BE&#32;CALLED&#32;FROM&#32;A&#32;CRITICAL&#32;SECTION.&#32;&#32;It&#32;can&#32;also&#32;be</emphasis>
<anchor xml:id="_tasks_8c_source_1l03099"/>03099 <emphasis role="comment">&#32;&#32;&#32;&#32;called&#32;from&#32;a&#32;critical&#32;section&#32;within&#32;an&#32;ISR.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03100"/>03100 
<anchor xml:id="_tasks_8c_source_1l03101"/>03101 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;event&#32;list&#32;is&#32;sorted&#32;in&#32;priority&#32;order,&#32;so&#32;the&#32;first&#32;in&#32;the&#32;list&#32;can</emphasis>
<anchor xml:id="_tasks_8c_source_1l03102"/>03102 <emphasis role="comment">&#32;&#32;&#32;&#32;be&#32;removed&#32;as&#32;it&#32;is&#32;known&#32;to&#32;be&#32;the&#32;highest&#32;priority.&#32;&#32;Remove&#32;the&#32;TCB&#32;from</emphasis>
<anchor xml:id="_tasks_8c_source_1l03103"/>03103 <emphasis role="comment">&#32;&#32;&#32;&#32;the&#32;delayed&#32;list,&#32;and&#32;add&#32;it&#32;to&#32;the&#32;ready&#32;list.</emphasis>
<anchor xml:id="_tasks_8c_source_1l03104"/>03104 <emphasis role="comment"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03105"/>03105 <emphasis role="comment">&#32;&#32;&#32;&#32;If&#32;an&#32;event&#32;is&#32;for&#32;a&#32;queue&#32;that&#32;is&#32;locked&#32;then&#32;this&#32;function&#32;will&#32;never</emphasis>
<anchor xml:id="_tasks_8c_source_1l03106"/>03106 <emphasis role="comment">&#32;&#32;&#32;&#32;get&#32;called&#32;-&#32;the&#32;lock&#32;count&#32;on&#32;the&#32;queue&#32;will&#32;get&#32;modified&#32;instead.&#32;&#32;This</emphasis>
<anchor xml:id="_tasks_8c_source_1l03107"/>03107 <emphasis role="comment">&#32;&#32;&#32;&#32;means&#32;exclusive&#32;access&#32;to&#32;the&#32;event&#32;list&#32;is&#32;guaranteed&#32;here.</emphasis>
<anchor xml:id="_tasks_8c_source_1l03108"/>03108 <emphasis role="comment"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03109"/>03109 <emphasis role="comment">&#32;&#32;&#32;&#32;This&#32;function&#32;assumes&#32;that&#32;a&#32;check&#32;has&#32;already&#32;been&#32;made&#32;to&#32;ensure&#32;that</emphasis>
<anchor xml:id="_tasks_8c_source_1l03110"/>03110 <emphasis role="comment">&#32;&#32;&#32;&#32;pxEventList&#32;is&#32;not&#32;empty.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03111"/>03111 &#32;&#32;&#32;&#32;pxUnblockedTCB&#32;=&#32;<link linkend="_list_8h_1a715561302af8cb5b74416b23ce4e999d">listGET_OWNER_OF_HEAD_ENTRY</link>(&#32;pxEventList&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9079&#32;void&#32;*&#32;is&#32;used&#32;as&#32;this&#32;macro&#32;is&#32;used&#32;with&#32;timers&#32;and&#32;co-routines&#32;too.&#32;&#32;Alignment&#32;is&#32;known&#32;to&#32;be&#32;fine&#32;as&#32;the&#32;type&#32;of&#32;the&#32;pointer&#32;stored&#32;and&#32;retrieved&#32;is&#32;the&#32;same.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03112"/>03112 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxUnblockedTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l03113"/>03113 &#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_list_8c_1a274fdced76bbdd9d8a4c4840ded2920c">uxListRemove</link>(&#32;&amp;(&#32;pxUnblockedTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l03114"/>03114 
<anchor xml:id="_tasks_8c_source_1l03115"/>03115 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a7522707fcf80b216e3a5b25ba464ec85">uxSchedulerSuspended</link>&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l03116"/>03116 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03117"/>03117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_list_8c_1a274fdced76bbdd9d8a4c4840ded2920c">uxListRemove</link>(&#32;&amp;(&#32;pxUnblockedTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l03118"/>03118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a94afc7269fff7c906c5eb0d9d315624b">prvAddTaskToReadyList</link>(&#32;pxUnblockedTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l03119"/>03119 
<anchor xml:id="_tasks_8c_source_1l03120"/>03120 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;configUSE_TICKLESS_IDLE&#32;!=&#32;0&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03121"/>03121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03122"/>03122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;a&#32;task&#32;is&#32;blocked&#32;on&#32;a&#32;kernel&#32;object&#32;then&#32;xNextTaskUnblockTime</emphasis>
<anchor xml:id="_tasks_8c_source_1l03123"/>03123 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;might&#32;be&#32;set&#32;to&#32;the&#32;blocked&#32;task&apos;s&#32;time&#32;out&#32;time.&#32;&#32;If&#32;the&#32;task&#32;is</emphasis>
<anchor xml:id="_tasks_8c_source_1l03124"/>03124 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unblocked&#32;for&#32;a&#32;reason&#32;other&#32;than&#32;a&#32;timeout&#32;xNextTaskUnblockTime&#32;is</emphasis>
<anchor xml:id="_tasks_8c_source_1l03125"/>03125 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;normally&#32;left&#32;unchanged,&#32;because&#32;it&#32;is&#32;automatically&#32;reset&#32;to&#32;a&#32;new</emphasis>
<anchor xml:id="_tasks_8c_source_1l03126"/>03126 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;when&#32;the&#32;tick&#32;count&#32;equals&#32;xNextTaskUnblockTime.&#32;&#32;However&#32;if</emphasis>
<anchor xml:id="_tasks_8c_source_1l03127"/>03127 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tickless&#32;idling&#32;is&#32;used&#32;it&#32;might&#32;be&#32;more&#32;important&#32;to&#32;enter&#32;sleep&#32;mode</emphasis>
<anchor xml:id="_tasks_8c_source_1l03128"/>03128 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;at&#32;the&#32;earliest&#32;possible&#32;time&#32;-&#32;so&#32;reset&#32;xNextTaskUnblockTime&#32;here&#32;to</emphasis>
<anchor xml:id="_tasks_8c_source_1l03129"/>03129 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ensure&#32;it&#32;is&#32;updated&#32;at&#32;the&#32;earliest&#32;possible&#32;time.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03130"/>03130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1ad1b2e4995f863a99cf980836efe330d7">prvResetNextTaskUnblockTime</link>();
<anchor xml:id="_tasks_8c_source_1l03131"/>03131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03132"/>03132 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l03133"/>03133 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03134"/>03134 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03135"/>03135 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03136"/>03136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;delayed&#32;and&#32;ready&#32;lists&#32;cannot&#32;be&#32;accessed,&#32;so&#32;hold&#32;this&#32;task</emphasis>
<anchor xml:id="_tasks_8c_source_1l03137"/>03137 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pending&#32;until&#32;the&#32;scheduler&#32;is&#32;resumed.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03138"/>03138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8c_1a3240bc0f43fcf755be02bfc6de7dc6ef">vListInsertEnd</link>(&#32;&amp;(&#32;<link linkend="_tasks_8c_1a73880e71e7ed72242d1a078685107421">xPendingReadyList</link>&#32;),&#32;&amp;(&#32;pxUnblockedTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l03139"/>03139 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03140"/>03140 
<anchor xml:id="_tasks_8c_source_1l03141"/>03141 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxUnblockedTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;&gt;&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l03142"/>03142 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03143"/>03143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Return&#32;true&#32;if&#32;the&#32;task&#32;removed&#32;from&#32;the&#32;event&#32;list&#32;has&#32;a&#32;higher</emphasis>
<anchor xml:id="_tasks_8c_source_1l03144"/>03144 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;priority&#32;than&#32;the&#32;calling&#32;task.&#32;&#32;This&#32;allows&#32;the&#32;calling&#32;task&#32;to&#32;know&#32;if</emphasis>
<anchor xml:id="_tasks_8c_source_1l03145"/>03145 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it&#32;should&#32;force&#32;a&#32;context&#32;switch&#32;now.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03146"/>03146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l03147"/>03147 
<anchor xml:id="_tasks_8c_source_1l03148"/>03148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Mark&#32;that&#32;a&#32;yield&#32;is&#32;pending&#32;in&#32;case&#32;the&#32;user&#32;is&#32;not&#32;using&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l03149"/>03149 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;xHigherPriorityTaskWoken&quot;&#32;parameter&#32;to&#32;an&#32;ISR&#32;safe&#32;FreeRTOS&#32;function.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03150"/>03150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a25abc99b92e910c1602028081e13b1b0">xYieldPending</link>&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l03151"/>03151 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03152"/>03152 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03153"/>03153 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03154"/>03154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_tasks_8c_source_1l03155"/>03155 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03156"/>03156 
<anchor xml:id="_tasks_8c_source_1l03157"/>03157 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l03158"/>03158 }
<anchor xml:id="_tasks_8c_source_1l03159"/>03159 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03160"/>03160 
<anchor xml:id="_tasks_8c_source_1l03161"/><link linkend="_task_8h_1a340b9bc9f37c9d4d3fb6e303c3ef311b">03161</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1a82d239ddcdd2d68abe14789b1257b11f">vTaskRemoveFromUnorderedEventList</link>(&#32;<link linkend="_structx_l_i_s_t___i_t_e_m">ListItem_t</link>&#32;*&#32;pxEventListItem,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xItemValue&#32;)
<anchor xml:id="_tasks_8c_source_1l03162"/>03162 {
<anchor xml:id="_tasks_8c_source_1l03163"/>03163 <link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxUnblockedTCB;
<anchor xml:id="_tasks_8c_source_1l03164"/>03164 
<anchor xml:id="_tasks_8c_source_1l03165"/>03165 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;THIS&#32;FUNCTION&#32;MUST&#32;BE&#32;CALLED&#32;WITH&#32;THE&#32;SCHEDULER&#32;SUSPENDED.&#32;&#32;It&#32;is&#32;used&#32;by</emphasis>
<anchor xml:id="_tasks_8c_source_1l03166"/>03166 <emphasis role="comment">&#32;&#32;&#32;&#32;the&#32;event&#32;flags&#32;implementation.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03167"/>03167 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;<link linkend="_tasks_8c_1a7522707fcf80b216e3a5b25ba464ec85">uxSchedulerSuspended</link>&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l03168"/>03168 
<anchor xml:id="_tasks_8c_source_1l03169"/>03169 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Store&#32;the&#32;new&#32;item&#32;value&#32;in&#32;the&#32;event&#32;list.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03170"/>03170 &#32;&#32;&#32;&#32;<link linkend="_list_8h_1a83e95e61652f032fdc26aa622f5e2610">listSET_LIST_ITEM_VALUE</link>(&#32;pxEventListItem,&#32;xItemValue&#32;|&#32;<link linkend="_tasks_8c_1a3e36f3eda563e810a24ab36ee7c978d4">taskEVENT_LIST_ITEM_VALUE_IN_USE</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l03171"/>03171 
<anchor xml:id="_tasks_8c_source_1l03172"/>03172 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Remove&#32;the&#32;event&#32;list&#32;form&#32;the&#32;event&#32;flag.&#32;&#32;Interrupts&#32;do&#32;not&#32;access</emphasis>
<anchor xml:id="_tasks_8c_source_1l03173"/>03173 <emphasis role="comment">&#32;&#32;&#32;&#32;event&#32;flags.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03174"/>03174 &#32;&#32;&#32;&#32;pxUnblockedTCB&#32;=&#32;<link linkend="_list_8h_1aa9469bd061a44b4f75d30c6175f66d5c">listGET_LIST_ITEM_OWNER</link>(&#32;pxEventListItem&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9079&#32;void&#32;*&#32;is&#32;used&#32;as&#32;this&#32;macro&#32;is&#32;used&#32;with&#32;timers&#32;and&#32;co-routines&#32;too.&#32;&#32;Alignment&#32;is&#32;known&#32;to&#32;be&#32;fine&#32;as&#32;the&#32;type&#32;of&#32;the&#32;pointer&#32;stored&#32;and&#32;retrieved&#32;is&#32;the&#32;same.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03175"/>03175 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxUnblockedTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l03176"/>03176 &#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_list_8c_1a274fdced76bbdd9d8a4c4840ded2920c">uxListRemove</link>(&#32;pxEventListItem&#32;);
<anchor xml:id="_tasks_8c_source_1l03177"/>03177 
<anchor xml:id="_tasks_8c_source_1l03178"/>03178 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Remove&#32;the&#32;task&#32;from&#32;the&#32;delayed&#32;list&#32;and&#32;add&#32;it&#32;to&#32;the&#32;ready&#32;list.&#32;&#32;The</emphasis>
<anchor xml:id="_tasks_8c_source_1l03179"/>03179 <emphasis role="comment">&#32;&#32;&#32;&#32;scheduler&#32;is&#32;suspended&#32;so&#32;interrupts&#32;will&#32;not&#32;be&#32;accessing&#32;the&#32;ready</emphasis>
<anchor xml:id="_tasks_8c_source_1l03180"/>03180 <emphasis role="comment">&#32;&#32;&#32;&#32;lists.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03181"/>03181 &#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_list_8c_1a274fdced76bbdd9d8a4c4840ded2920c">uxListRemove</link>(&#32;&amp;(&#32;pxUnblockedTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l03182"/>03182 &#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a94afc7269fff7c906c5eb0d9d315624b">prvAddTaskToReadyList</link>(&#32;pxUnblockedTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l03183"/>03183 
<anchor xml:id="_tasks_8c_source_1l03184"/>03184 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxUnblockedTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;&gt;&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l03185"/>03185 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03186"/>03186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;unblocked&#32;task&#32;has&#32;a&#32;priority&#32;above&#32;that&#32;of&#32;the&#32;calling&#32;task,&#32;so</emphasis>
<anchor xml:id="_tasks_8c_source_1l03187"/>03187 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;context&#32;switch&#32;is&#32;required.&#32;&#32;This&#32;function&#32;is&#32;called&#32;with&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l03188"/>03188 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scheduler&#32;suspended&#32;so&#32;xYieldPending&#32;is&#32;set&#32;so&#32;the&#32;context&#32;switch</emphasis>
<anchor xml:id="_tasks_8c_source_1l03189"/>03189 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;occurs&#32;immediately&#32;that&#32;the&#32;scheduler&#32;is&#32;resumed&#32;(unsuspended).&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03190"/>03190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a25abc99b92e910c1602028081e13b1b0">xYieldPending</link>&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l03191"/>03191 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03192"/>03192 }
<anchor xml:id="_tasks_8c_source_1l03193"/>03193 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03194"/>03194 
<anchor xml:id="_tasks_8c_source_1l03195"/><link linkend="_task_8h_1a67155ad4ea2482b5f4597a69f2152be0">03195</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1a5dfb2b9e41fb002318d9c55452a91c83">vTaskSetTimeOutState</link>(&#32;<link linkend="_structx_t_i_m_e___o_u_t">TimeOut_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxTimeOut&#32;)
<anchor xml:id="_tasks_8c_source_1l03196"/>03196 {
<anchor xml:id="_tasks_8c_source_1l03197"/>03197 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxTimeOut&#32;);
<anchor xml:id="_tasks_8c_source_1l03198"/>03198 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l03199"/>03199 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03200"/>03200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTimeOut-&gt;<link linkend="_structx_t_i_m_e___o_u_t_1a9289c6f97096a9b3e3fc705d0bc5a160">xOverflowCount</link>&#32;=&#32;<link linkend="_tasks_8c_1ab278ffe04bd2e0cdf4acdabdd7692306">xNumOfOverflows</link>;
<anchor xml:id="_tasks_8c_source_1l03201"/>03201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTimeOut-&gt;<link linkend="_structx_t_i_m_e___o_u_t_1a3464939ca050f7bcc6ffe0d8d3766337">xTimeOnEntering</link>&#32;=&#32;<link linkend="_tasks_8c_1aaa88969a9b48aea401dbb1ff2b0ef4de">xTickCount</link>;
<anchor xml:id="_tasks_8c_source_1l03202"/>03202 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03203"/>03203 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l03204"/>03204 }
<anchor xml:id="_tasks_8c_source_1l03205"/>03205 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03206"/>03206 
<anchor xml:id="_tasks_8c_source_1l03207"/><link linkend="_task_8h_1a9bff8681d5ed262e71b92805ca0da909">03207</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1a91fbc7c4b65e32fae51b7d43ebdcb131">vTaskInternalSetTimeOutState</link>(&#32;<link linkend="_structx_t_i_m_e___o_u_t">TimeOut_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxTimeOut&#32;)
<anchor xml:id="_tasks_8c_source_1l03208"/>03208 {
<anchor xml:id="_tasks_8c_source_1l03209"/>03209 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;For&#32;internal&#32;use&#32;only&#32;as&#32;it&#32;does&#32;not&#32;use&#32;a&#32;critical&#32;section.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03210"/>03210 &#32;&#32;&#32;&#32;pxTimeOut-&gt;<link linkend="_structx_t_i_m_e___o_u_t_1a9289c6f97096a9b3e3fc705d0bc5a160">xOverflowCount</link>&#32;=&#32;<link linkend="_tasks_8c_1ab278ffe04bd2e0cdf4acdabdd7692306">xNumOfOverflows</link>;
<anchor xml:id="_tasks_8c_source_1l03211"/>03211 &#32;&#32;&#32;&#32;pxTimeOut-&gt;<link linkend="_structx_t_i_m_e___o_u_t_1a3464939ca050f7bcc6ffe0d8d3766337">xTimeOnEntering</link>&#32;=&#32;<link linkend="_tasks_8c_1aaa88969a9b48aea401dbb1ff2b0ef4de">xTickCount</link>;
<anchor xml:id="_tasks_8c_source_1l03212"/>03212 }
<anchor xml:id="_tasks_8c_source_1l03213"/>03213 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03214"/>03214 
<anchor xml:id="_tasks_8c_source_1l03215"/><link linkend="_task_8h_1a3b018a85d339e536a6c05748dd666a3a">03215</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_tasks_8c_1acfc8de487c86355713d0e8546506d9e4">xTaskCheckForTimeOut</link>(&#32;<link linkend="_structx_t_i_m_e___o_u_t">TimeOut_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxTimeOut,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxTicksToWait&#32;)
<anchor xml:id="_tasks_8c_source_1l03216"/>03216 {
<anchor xml:id="_tasks_8c_source_1l03217"/>03217 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l03218"/>03218 
<anchor xml:id="_tasks_8c_source_1l03219"/>03219 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxTimeOut&#32;);
<anchor xml:id="_tasks_8c_source_1l03220"/>03220 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxTicksToWait&#32;);
<anchor xml:id="_tasks_8c_source_1l03221"/>03221 
<anchor xml:id="_tasks_8c_source_1l03222"/>03222 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l03223"/>03223 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03224"/>03224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Minor&#32;optimisation.&#32;&#32;The&#32;tick&#32;count&#32;cannot&#32;change&#32;in&#32;this&#32;block.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03225"/>03225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xConstTickCount&#32;=&#32;<link linkend="_tasks_8c_1aaa88969a9b48aea401dbb1ff2b0ef4de">xTickCount</link>;
<anchor xml:id="_tasks_8c_source_1l03226"/>03226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xElapsedTime&#32;=&#32;xConstTickCount&#32;-&#32;pxTimeOut-&gt;<link linkend="_structx_t_i_m_e___o_u_t_1a3464939ca050f7bcc6ffe0d8d3766337">xTimeOnEntering</link>;
<anchor xml:id="_tasks_8c_source_1l03227"/>03227 
<anchor xml:id="_tasks_8c_source_1l03228"/>03228 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;INCLUDE_xTaskAbortDelay&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03229"/>03229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;ucDelayAborted&#32;!=&#32;(&#32;uint8_t&#32;)&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l03230"/>03230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03231"/>03231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;delay&#32;was&#32;aborted,&#32;which&#32;is&#32;not&#32;the&#32;same&#32;as&#32;a&#32;time&#32;out,</emphasis>
<anchor xml:id="_tasks_8c_source_1l03232"/>03232 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;but&#32;has&#32;the&#32;same&#32;result.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03233"/>03233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;ucDelayAborted&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_tasks_8c_source_1l03234"/>03234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l03235"/>03235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03236"/>03236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03237"/>03237 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l03238"/>03238 
<anchor xml:id="_tasks_8c_source_1l03239"/>03239 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;INCLUDE_vTaskSuspend&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03240"/>03240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;*pxTicksToWait&#32;==&#32;<link linkend="_portmacro_8h_1a72723ba1e4a85ca14f25c2b9e066613d">portMAX_DELAY</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l03241"/>03241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03242"/>03242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;INCLUDE_vTaskSuspend&#32;is&#32;set&#32;to&#32;1&#32;and&#32;the&#32;block&#32;time</emphasis>
<anchor xml:id="_tasks_8c_source_1l03243"/>03243 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;specified&#32;is&#32;the&#32;maximum&#32;block&#32;time&#32;then&#32;the&#32;task&#32;should&#32;block</emphasis>
<anchor xml:id="_tasks_8c_source_1l03244"/>03244 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;indefinitely,&#32;and&#32;therefore&#32;never&#32;time&#32;out.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03245"/>03245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_tasks_8c_source_1l03246"/>03246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03247"/>03247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03248"/>03248 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l03249"/>03249 
<anchor xml:id="_tasks_8c_source_1l03250"/>03250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;<link linkend="_tasks_8c_1ab278ffe04bd2e0cdf4acdabdd7692306">xNumOfOverflows</link>&#32;!=&#32;pxTimeOut-&gt;<link linkend="_structx_t_i_m_e___o_u_t_1a9289c6f97096a9b3e3fc705d0bc5a160">xOverflowCount</link>&#32;)&#32;&amp;&amp;&#32;(&#32;xConstTickCount&#32;&gt;=&#32;pxTimeOut-&gt;<link linkend="_structx_t_i_m_e___o_u_t_1a3464939ca050f7bcc6ffe0d8d3766337">xTimeOnEntering</link>&#32;)&#32;)&#32;<emphasis role="comment">/*lint&#32;!e525&#32;Indentation&#32;preferred&#32;as&#32;is&#32;to&#32;make&#32;code&#32;within&#32;pre-processor&#32;directives&#32;clearer.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03251"/>03251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03252"/>03252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;tick&#32;count&#32;is&#32;greater&#32;than&#32;the&#32;time&#32;at&#32;which</emphasis>
<anchor xml:id="_tasks_8c_source_1l03253"/>03253 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vTaskSetTimeout()&#32;was&#32;called,&#32;but&#32;has&#32;also&#32;overflowed&#32;since</emphasis>
<anchor xml:id="_tasks_8c_source_1l03254"/>03254 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vTaskSetTimeOut()&#32;was&#32;called.&#32;&#32;It&#32;must&#32;have&#32;wrapped&#32;all&#32;the&#32;way</emphasis>
<anchor xml:id="_tasks_8c_source_1l03255"/>03255 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;around&#32;and&#32;gone&#32;past&#32;again.&#32;This&#32;passed&#32;since&#32;vTaskSetTimeout()</emphasis>
<anchor xml:id="_tasks_8c_source_1l03256"/>03256 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;was&#32;called.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03257"/>03257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l03258"/>03258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03259"/>03259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xElapsedTime&#32;&lt;&#32;*pxTicksToWait&#32;)&#32;<emphasis role="comment">/*lint&#32;!e961&#32;Explicit&#32;casting&#32;is&#32;only&#32;redundant&#32;with&#32;some&#32;compilers,&#32;whereas&#32;others&#32;require&#32;it&#32;to&#32;prevent&#32;integer&#32;conversion&#32;errors.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03260"/>03260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03261"/>03261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Not&#32;a&#32;genuine&#32;timeout.&#32;Adjust&#32;parameters&#32;for&#32;time&#32;remaining.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03262"/>03262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pxTicksToWait&#32;-=&#32;xElapsedTime;
<anchor xml:id="_tasks_8c_source_1l03263"/>03263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a91fbc7c4b65e32fae51b7d43ebdcb131">vTaskInternalSetTimeOutState</link>(&#32;pxTimeOut&#32;);
<anchor xml:id="_tasks_8c_source_1l03264"/>03264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_tasks_8c_source_1l03265"/>03265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03266"/>03266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03267"/>03267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03268"/>03268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pxTicksToWait&#32;=&#32;0;
<anchor xml:id="_tasks_8c_source_1l03269"/>03269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l03270"/>03270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03271"/>03271 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03272"/>03272 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l03273"/>03273 
<anchor xml:id="_tasks_8c_source_1l03274"/>03274 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l03275"/>03275 }
<anchor xml:id="_tasks_8c_source_1l03276"/>03276 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03277"/>03277 
<anchor xml:id="_tasks_8c_source_1l03278"/><link linkend="_task_8h_1a998c69e37431a3a32c637b31ff60089a">03278</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1a33c369f5f08ab96659f94093fdb985af">vTaskMissedYield</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)
<anchor xml:id="_tasks_8c_source_1l03279"/>03279 {
<anchor xml:id="_tasks_8c_source_1l03280"/>03280 &#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a25abc99b92e910c1602028081e13b1b0">xYieldPending</link>&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l03281"/>03281 }
<anchor xml:id="_tasks_8c_source_1l03282"/>03282 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03283"/>03283 
<anchor xml:id="_tasks_8c_source_1l03284"/>03284 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03285"/>03285 
<anchor xml:id="_tasks_8c_source_1l03286"/><link linkend="_task_8h_1ad8bb91e2267905f0069918802fa7f8b8">03286</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_tasks_8c_1a3d0244e50b0591b64cc05df68ed1217f">uxTaskGetTaskNumber</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask&#32;)
<anchor xml:id="_tasks_8c_source_1l03287"/>03287 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03288"/>03288 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxReturn;
<anchor xml:id="_tasks_8c_source_1l03289"/>03289 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;<emphasis role="keyword">const</emphasis>&#32;*pxTCB;
<anchor xml:id="_tasks_8c_source_1l03290"/>03290 
<anchor xml:id="_tasks_8c_source_1l03291"/>03291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTask&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l03292"/>03292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03293"/>03293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;xTask;
<anchor xml:id="_tasks_8c_source_1l03294"/>03294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxReturn&#32;=&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a46894d7d546d614cc881212dc8039f41">uxTaskNumber</link>;
<anchor xml:id="_tasks_8c_source_1l03295"/>03295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03296"/>03296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03297"/>03297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03298"/>03298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxReturn&#32;=&#32;0U;
<anchor xml:id="_tasks_8c_source_1l03299"/>03299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03300"/>03300 
<anchor xml:id="_tasks_8c_source_1l03301"/>03301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;uxReturn;
<anchor xml:id="_tasks_8c_source_1l03302"/>03302 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03303"/>03303 
<anchor xml:id="_tasks_8c_source_1l03304"/>03304 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TRACE_FACILITY&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03305"/>03305 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03306"/>03306 
<anchor xml:id="_tasks_8c_source_1l03307"/>03307 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03308"/>03308 
<anchor xml:id="_tasks_8c_source_1l03309"/><link linkend="_task_8h_1ae48f006277815cb1c534284e29ca8f82">03309</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1a19139609bc1895960fcd85613c819a20">vTaskSetTaskNumber</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxHandle&#32;)
<anchor xml:id="_tasks_8c_source_1l03310"/>03310 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03311"/>03311 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*&#32;pxTCB;
<anchor xml:id="_tasks_8c_source_1l03312"/>03312 
<anchor xml:id="_tasks_8c_source_1l03313"/>03313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTask&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l03314"/>03314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03315"/>03315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;xTask;
<anchor xml:id="_tasks_8c_source_1l03316"/>03316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a46894d7d546d614cc881212dc8039f41">uxTaskNumber</link>&#32;=&#32;uxHandle;
<anchor xml:id="_tasks_8c_source_1l03317"/>03317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03318"/>03318 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03319"/>03319 
<anchor xml:id="_tasks_8c_source_1l03320"/>03320 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TRACE_FACILITY&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03321"/>03321 
<anchor xml:id="_tasks_8c_source_1l03322"/>03322 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_tasks_8c_source_1l03323"/>03323 <emphasis role="comment">&#32;*&#32;-----------------------------------------------------------</emphasis>
<anchor xml:id="_tasks_8c_source_1l03324"/>03324 <emphasis role="comment">&#32;*&#32;The&#32;Idle&#32;task.</emphasis>
<anchor xml:id="_tasks_8c_source_1l03325"/>03325 <emphasis role="comment">&#32;*&#32;----------------------------------------------------------</emphasis>
<anchor xml:id="_tasks_8c_source_1l03326"/>03326 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_tasks_8c_source_1l03327"/>03327 <emphasis role="comment">&#32;*&#32;The&#32;portTASK_FUNCTION()&#32;macro&#32;is&#32;used&#32;to&#32;allow&#32;port/compiler&#32;specific</emphasis>
<anchor xml:id="_tasks_8c_source_1l03328"/>03328 <emphasis role="comment">&#32;*&#32;language&#32;extensions.&#32;&#32;The&#32;equivalent&#32;prototype&#32;for&#32;this&#32;function&#32;is:</emphasis>
<anchor xml:id="_tasks_8c_source_1l03329"/>03329 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_tasks_8c_source_1l03330"/>03330 <emphasis role="comment">&#32;*&#32;void&#32;prvIdleTask(&#32;void&#32;*pvParameters&#32;);</emphasis>
<anchor xml:id="_tasks_8c_source_1l03331"/>03331 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_tasks_8c_source_1l03332"/>03332 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03333"/><link linkend="_tasks_8c_1af0212702c981e5413a318c0346ac37b2">03333</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_portmacro_8h_1a3a289793652f505c538abea27045ccdf">portTASK_FUNCTION</link>(&#32;<link linkend="_tasks_8c_1af0212702c981e5413a318c0346ac37b2">prvIdleTask</link>,&#32;pvParameters&#32;)
<anchor xml:id="_tasks_8c_source_1l03334"/>03334 {
<anchor xml:id="_tasks_8c_source_1l03335"/>03335 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Stop&#32;warnings.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03336"/>03336 &#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;pvParameters;
<anchor xml:id="_tasks_8c_source_1l03337"/>03337 
<anchor xml:id="_tasks_8c_source_1l03341"/>03341 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;In&#32;case&#32;a&#32;task&#32;that&#32;has&#32;a&#32;secure&#32;context&#32;deletes&#32;itself,&#32;in&#32;which&#32;case</emphasis>
<anchor xml:id="_tasks_8c_source_1l03342"/>03342 <emphasis role="comment">&#32;&#32;&#32;&#32;the&#32;idle&#32;task&#32;is&#32;responsible&#32;for&#32;deleting&#32;the&#32;task&apos;s&#32;secure&#32;context,&#32;if</emphasis>
<anchor xml:id="_tasks_8c_source_1l03343"/>03343 <emphasis role="comment">&#32;&#32;&#32;&#32;any.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03344"/>03344 &#32;&#32;&#32;&#32;<emphasis role="comment">//portALLOCATE_SECURE_CONTEXT(&#32;configMINIMAL_SECURE_STACK_SIZE&#32;);</emphasis>
<anchor xml:id="_tasks_8c_source_1l03345"/>03345 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a401e0f8194560d5f27f5844ba82009b5">portTASK_CALLS_SECURE_FUNCTIONS</link>();
<anchor xml:id="_tasks_8c_source_1l03346"/>03346 
<anchor xml:id="_tasks_8c_source_1l03347"/>03347 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;;;&#32;)
<anchor xml:id="_tasks_8c_source_1l03348"/>03348 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03349"/>03349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;See&#32;if&#32;any&#32;tasks&#32;have&#32;deleted&#32;themselves&#32;-&#32;if&#32;so&#32;then&#32;the&#32;idle&#32;task</emphasis>
<anchor xml:id="_tasks_8c_source_1l03350"/>03350 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;responsible&#32;for&#32;freeing&#32;the&#32;deleted&#32;task&apos;s&#32;TCB&#32;and&#32;stack.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03351"/>03351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a903096c962a2bc907f4b902a7d42302a">prvCheckTasksWaitingTermination</link>();
<anchor xml:id="_tasks_8c_source_1l03352"/>03352 
<anchor xml:id="_tasks_8c_source_1l03353"/>03353 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_PREEMPTION&#32;==&#32;0&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03354"/>03354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03355"/>03355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;we&#32;are&#32;not&#32;using&#32;preemption&#32;we&#32;keep&#32;forcing&#32;a&#32;task&#32;switch&#32;to</emphasis>
<anchor xml:id="_tasks_8c_source_1l03356"/>03356 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;see&#32;if&#32;any&#32;other&#32;task&#32;has&#32;become&#32;available.&#32;&#32;If&#32;we&#32;are&#32;using</emphasis>
<anchor xml:id="_tasks_8c_source_1l03357"/>03357 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;preemption&#32;we&#32;don&apos;t&#32;need&#32;to&#32;do&#32;this&#32;as&#32;any&#32;task&#32;becoming&#32;available</emphasis>
<anchor xml:id="_tasks_8c_source_1l03358"/>03358 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;will&#32;automatically&#32;get&#32;the&#32;processor&#32;anyway.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03359"/>03359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1a767e474430db1e60056e9678763f9202">taskYIELD</link>();
<anchor xml:id="_tasks_8c_source_1l03360"/>03360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03361"/>03361 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_PREEMPTION&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03362"/>03362 
<anchor xml:id="_tasks_8c_source_1l03363"/>03363 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;(&#32;configUSE_PREEMPTION&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configIDLE_SHOULD_YIELD&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03364"/>03364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03365"/>03365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;When&#32;using&#32;preemption&#32;tasks&#32;of&#32;equal&#32;priority&#32;will&#32;be</emphasis>
<anchor xml:id="_tasks_8c_source_1l03366"/>03366 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timesliced.&#32;&#32;If&#32;a&#32;task&#32;that&#32;is&#32;sharing&#32;the&#32;idle&#32;priority&#32;is&#32;ready</emphasis>
<anchor xml:id="_tasks_8c_source_1l03367"/>03367 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;run&#32;then&#32;the&#32;idle&#32;task&#32;should&#32;yield&#32;before&#32;the&#32;end&#32;of&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l03368"/>03368 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timeslice.</emphasis>
<anchor xml:id="_tasks_8c_source_1l03369"/>03369 <emphasis role="comment"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03370"/>03370 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;A&#32;critical&#32;region&#32;is&#32;not&#32;required&#32;here&#32;as&#32;we&#32;are&#32;just&#32;reading&#32;from</emphasis>
<anchor xml:id="_tasks_8c_source_1l03371"/>03371 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;list,&#32;and&#32;an&#32;occasional&#32;incorrect&#32;value&#32;will&#32;not&#32;matter.&#32;&#32;If</emphasis>
<anchor xml:id="_tasks_8c_source_1l03372"/>03372 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;ready&#32;list&#32;at&#32;the&#32;idle&#32;priority&#32;contains&#32;more&#32;than&#32;one&#32;task</emphasis>
<anchor xml:id="_tasks_8c_source_1l03373"/>03373 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;then&#32;a&#32;task&#32;other&#32;than&#32;the&#32;idle&#32;task&#32;is&#32;ready&#32;to&#32;execute.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03374"/>03374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1a18b4aded515bdc512017ea6e677a13bb">listCURRENT_LIST_LENGTH</link>(&#32;&amp;(&#32;<link linkend="_tasks_8c_1ab4a8345f8c340d07086342c0dd92c972">pxReadyTasksLists</link>[&#32;<link linkend="_task_8h_1a94ed0b9b3b4e8ccc859c322f18583e67">tskIDLE_PRIORITY</link>&#32;]&#32;)&#32;)&#32;&gt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;1&#32;)
<anchor xml:id="_tasks_8c_source_1l03375"/>03375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03376"/>03376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1a767e474430db1e60056e9678763f9202">taskYIELD</link>();
<anchor xml:id="_tasks_8c_source_1l03377"/>03377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03378"/>03378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03379"/>03379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03380"/>03380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l03381"/>03381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03382"/>03382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03383"/>03383 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;(&#32;(&#32;configUSE_PREEMPTION&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configIDLE_SHOULD_YIELD&#32;==&#32;1&#32;)&#32;)&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03384"/>03384 
<anchor xml:id="_tasks_8c_source_1l03385"/>03385 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_IDLE_HOOK&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03386"/>03386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03387"/>03387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;vApplicationIdleHook(&#32;<emphasis role="keywordtype">void</emphasis>&#32;);
<anchor xml:id="_tasks_8c_source_1l03388"/>03388 
<anchor xml:id="_tasks_8c_source_1l03389"/>03389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Call&#32;the&#32;user&#32;defined&#32;function&#32;from&#32;within&#32;the&#32;idle&#32;task.&#32;&#32;This</emphasis>
<anchor xml:id="_tasks_8c_source_1l03390"/>03390 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allows&#32;the&#32;application&#32;designer&#32;to&#32;add&#32;background&#32;functionality</emphasis>
<anchor xml:id="_tasks_8c_source_1l03391"/>03391 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;without&#32;the&#32;overhead&#32;of&#32;a&#32;separate&#32;task.</emphasis>
<anchor xml:id="_tasks_8c_source_1l03392"/>03392 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NOTE:&#32;vApplicationIdleHook()&#32;MUST&#32;NOT,&#32;UNDER&#32;ANY&#32;CIRCUMSTANCES,</emphasis>
<anchor xml:id="_tasks_8c_source_1l03393"/>03393 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CALL&#32;A&#32;FUNCTION&#32;THAT&#32;MIGHT&#32;BLOCK.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03394"/>03394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vApplicationIdleHook();
<anchor xml:id="_tasks_8c_source_1l03395"/>03395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03396"/>03396 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_IDLE_HOOK&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03397"/>03397 
<anchor xml:id="_tasks_8c_source_1l03398"/>03398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;conditional&#32;compilation&#32;should&#32;use&#32;inequality&#32;to&#32;0,&#32;not&#32;equality</emphasis>
<anchor xml:id="_tasks_8c_source_1l03399"/>03399 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;1.&#32;&#32;This&#32;is&#32;to&#32;ensure&#32;portSUPPRESS_TICKS_AND_SLEEP()&#32;is&#32;called&#32;when</emphasis>
<anchor xml:id="_tasks_8c_source_1l03400"/>03400 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;user&#32;defined&#32;low&#32;power&#32;mode&#32;implementations&#32;require</emphasis>
<anchor xml:id="_tasks_8c_source_1l03401"/>03401 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;configUSE_TICKLESS_IDLE&#32;to&#32;be&#32;set&#32;to&#32;a&#32;value&#32;other&#32;than&#32;1.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03402"/>03402 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_TICKLESS_IDLE&#32;!=&#32;0&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03403"/>03403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03404"/>03404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xExpectedIdleTime;
<anchor xml:id="_tasks_8c_source_1l03405"/>03405 
<anchor xml:id="_tasks_8c_source_1l03406"/>03406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;It&#32;is&#32;not&#32;desirable&#32;to&#32;suspend&#32;then&#32;resume&#32;the&#32;scheduler&#32;on</emphasis>
<anchor xml:id="_tasks_8c_source_1l03407"/>03407 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;each&#32;iteration&#32;of&#32;the&#32;idle&#32;task.&#32;&#32;Therefore,&#32;a&#32;preliminary</emphasis>
<anchor xml:id="_tasks_8c_source_1l03408"/>03408 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;test&#32;of&#32;the&#32;expected&#32;idle&#32;time&#32;is&#32;performed&#32;without&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l03409"/>03409 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scheduler&#32;suspended.&#32;&#32;The&#32;result&#32;here&#32;is&#32;not&#32;necessarily</emphasis>
<anchor xml:id="_tasks_8c_source_1l03410"/>03410 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;valid.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03411"/>03411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xExpectedIdleTime&#32;=&#32;prvGetExpectedIdleTime();
<anchor xml:id="_tasks_8c_source_1l03412"/>03412 
<anchor xml:id="_tasks_8c_source_1l03413"/>03413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xExpectedIdleTime&#32;&gt;=&#32;<link linkend="__free_r_t_o_s_8h_1aff3d7f6e5b38283f5214880d8086bb57">configEXPECTED_IDLE_TIME_BEFORE_SLEEP</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l03414"/>03414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03415"/>03415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a084d232640bd1d04bcac0b8784417015">vTaskSuspendAll</link>();
<anchor xml:id="_tasks_8c_source_1l03416"/>03416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03417"/>03417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Now&#32;the&#32;scheduler&#32;is&#32;suspended,&#32;the&#32;expected&#32;idle</emphasis>
<anchor xml:id="_tasks_8c_source_1l03418"/>03418 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;time&#32;can&#32;be&#32;sampled&#32;again,&#32;and&#32;this&#32;time&#32;its&#32;value&#32;can</emphasis>
<anchor xml:id="_tasks_8c_source_1l03419"/>03419 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;be&#32;used.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03420"/>03420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;<link linkend="_tasks_8c_1ac27aa725d8922f33f880005e72edec68">xNextTaskUnblockTime</link>&#32;&gt;=&#32;<link linkend="_tasks_8c_1aaa88969a9b48aea401dbb1ff2b0ef4de">xTickCount</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l03421"/>03421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xExpectedIdleTime&#32;=&#32;prvGetExpectedIdleTime();
<anchor xml:id="_tasks_8c_source_1l03422"/>03422 
<anchor xml:id="_tasks_8c_source_1l03423"/>03423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Define&#32;the&#32;following&#32;macro&#32;to&#32;set&#32;xExpectedIdleTime&#32;to&#32;0</emphasis>
<anchor xml:id="_tasks_8c_source_1l03424"/>03424 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;the&#32;application&#32;does&#32;not&#32;want</emphasis>
<anchor xml:id="_tasks_8c_source_1l03425"/>03425 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;portSUPPRESS_TICKS_AND_SLEEP()&#32;to&#32;be&#32;called.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03426"/>03426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a506860f45e7b8f14ee85c09db15eed7a">configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING</link>(&#32;xExpectedIdleTime&#32;);
<anchor xml:id="_tasks_8c_source_1l03427"/>03427 
<anchor xml:id="_tasks_8c_source_1l03428"/>03428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xExpectedIdleTime&#32;&gt;=&#32;<link linkend="__free_r_t_o_s_8h_1aff3d7f6e5b38283f5214880d8086bb57">configEXPECTED_IDLE_TIME_BEFORE_SLEEP</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l03429"/>03429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03430"/>03430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1acc1364ea0a06d6395232d57708e4987c">traceLOW_POWER_IDLE_BEGIN</link>();
<anchor xml:id="_tasks_8c_source_1l03431"/>03431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a1dcf4bd9c1ad4fe16a71391dd95cf585">portSUPPRESS_TICKS_AND_SLEEP</link>(&#32;xExpectedIdleTime&#32;);
<anchor xml:id="_tasks_8c_source_1l03432"/>03432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1aa5471ee0f56cb504d9aaba9cb3b7750e">traceLOW_POWER_IDLE_END</link>();
<anchor xml:id="_tasks_8c_source_1l03433"/>03433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03434"/>03434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03435"/>03435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03436"/>03436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l03437"/>03437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03438"/>03438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03439"/>03439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_tasks_8c_1adf830ea0f150fcdfdaa944667137f080">xTaskResumeAll</link>();
<anchor xml:id="_tasks_8c_source_1l03440"/>03440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03441"/>03441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03442"/>03442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03443"/>03443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l03444"/>03444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03445"/>03445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03446"/>03446 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TICKLESS_IDLE&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03447"/>03447 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03448"/>03448 }
<anchor xml:id="_tasks_8c_source_1l03449"/>03449 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03450"/>03450 
<anchor xml:id="_tasks_8c_source_1l03451"/>03451 <emphasis role="preprocessor">#if(&#32;configUSE_TICKLESS_IDLE&#32;!=&#32;0&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03452"/>03452 
<anchor xml:id="_tasks_8c_source_1l03453"/>03453 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1afd168a210ae0f2fb0fca242860a8178e">eSleepModeStatus</link>&#32;<link linkend="_task_8h_1ad185d5a451380c4040888620d9a92ec6">eTaskConfirmSleepModeStatus</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)
<anchor xml:id="_tasks_8c_source_1l03454"/>03454 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03455"/>03455 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;idle&#32;task&#32;exists&#32;in&#32;addition&#32;to&#32;the&#32;application&#32;tasks.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03456"/>03456 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxNonApplicationTasks&#32;=&#32;1;
<anchor xml:id="_tasks_8c_source_1l03457"/>03457 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1afd168a210ae0f2fb0fca242860a8178e">eSleepModeStatus</link>&#32;eReturn&#32;=&#32;<link linkend="_task_8h_1afd168a210ae0f2fb0fca242860a8178ea2c539add8104402c6336bc33a660d1d1">eStandardSleep</link>;
<anchor xml:id="_tasks_8c_source_1l03458"/>03458 
<anchor xml:id="_tasks_8c_source_1l03459"/>03459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1a18b4aded515bdc512017ea6e677a13bb">listCURRENT_LIST_LENGTH</link>(&#32;&amp;<link linkend="_tasks_8c_1a73880e71e7ed72242d1a078685107421">xPendingReadyList</link>&#32;)&#32;!=&#32;0&#32;)
<anchor xml:id="_tasks_8c_source_1l03460"/>03460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03461"/>03461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;task&#32;was&#32;made&#32;ready&#32;while&#32;the&#32;scheduler&#32;was&#32;suspended.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03462"/>03462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eReturn&#32;=&#32;<link linkend="_task_8h_1afd168a210ae0f2fb0fca242860a8178eaba7b1a394c63faa14a85dbb191f1c6f9">eAbortSleep</link>;
<anchor xml:id="_tasks_8c_source_1l03463"/>03463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03464"/>03464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a25abc99b92e910c1602028081e13b1b0">xYieldPending</link>&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l03465"/>03465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03466"/>03466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;yield&#32;was&#32;pended&#32;while&#32;the&#32;scheduler&#32;was&#32;suspended.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03467"/>03467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eReturn&#32;=&#32;<link linkend="_task_8h_1afd168a210ae0f2fb0fca242860a8178eaba7b1a394c63faa14a85dbb191f1c6f9">eAbortSleep</link>;
<anchor xml:id="_tasks_8c_source_1l03468"/>03468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03469"/>03469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03470"/>03470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03471"/>03471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;all&#32;the&#32;tasks&#32;are&#32;in&#32;the&#32;suspended&#32;list&#32;(which&#32;might&#32;mean&#32;they</emphasis>
<anchor xml:id="_tasks_8c_source_1l03472"/>03472 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;have&#32;an&#32;infinite&#32;block&#32;time&#32;rather&#32;than&#32;actually&#32;being&#32;suspended)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03473"/>03473 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;then&#32;it&#32;is&#32;safe&#32;to&#32;turn&#32;all&#32;clocks&#32;off&#32;and&#32;just&#32;wait&#32;for&#32;external</emphasis>
<anchor xml:id="_tasks_8c_source_1l03474"/>03474 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;interrupts.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03475"/>03475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1a18b4aded515bdc512017ea6e677a13bb">listCURRENT_LIST_LENGTH</link>(&#32;&amp;<link linkend="_tasks_8c_1aeeff59d101a1407ffc42f81fda83baca">xSuspendedTaskList</link>&#32;)&#32;==&#32;(&#32;<link linkend="_tasks_8c_1a54edd210c179ef9d185f5ebb020eaa5a">uxCurrentNumberOfTasks</link>&#32;-&#32;uxNonApplicationTasks&#32;)&#32;)
<anchor xml:id="_tasks_8c_source_1l03476"/>03476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03477"/>03477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eReturn&#32;=&#32;<link linkend="_task_8h_1afd168a210ae0f2fb0fca242860a8178ea004c4d9f1a2619193750d0e2f18f6046">eNoTasksWaitingTimeout</link>;
<anchor xml:id="_tasks_8c_source_1l03478"/>03478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03479"/>03479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03480"/>03480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03481"/>03481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l03482"/>03482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03483"/>03483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03484"/>03484 
<anchor xml:id="_tasks_8c_source_1l03485"/>03485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;eReturn;
<anchor xml:id="_tasks_8c_source_1l03486"/>03486 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03487"/>03487 
<anchor xml:id="_tasks_8c_source_1l03488"/>03488 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TICKLESS_IDLE&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03489"/>03489 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03490"/>03490 
<anchor xml:id="_tasks_8c_source_1l03491"/>03491 <emphasis role="preprocessor">#if&#32;(&#32;configNUM_THREAD_LOCAL_STORAGE_POINTERS&#32;!=&#32;0&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03492"/>03492 
<anchor xml:id="_tasks_8c_source_1l03493"/><link linkend="_tasks_8c_1a8b1132bc3b01220a1b949c8006af0943">03493</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1a8b1132bc3b01220a1b949c8006af0943">vTaskSetThreadLocalStoragePointer</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTaskToSet,&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xIndex,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pvValue&#32;)
<anchor xml:id="_tasks_8c_source_1l03494"/>03494 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03495"/>03495 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxTCB;
<anchor xml:id="_tasks_8c_source_1l03496"/>03496 
<anchor xml:id="_tasks_8c_source_1l03497"/>03497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xIndex&#32;&lt;&#32;<link linkend="__free_r_t_o_s_config__default_8h_1a8d32b5f74e55dfd12c5aa3415e16d75e">configNUM_THREAD_LOCAL_STORAGE_POINTERS</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l03498"/>03498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03499"/>03499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;<link linkend="_tasks_8c_1ad910f5e908283f1dfabd642fe1b11c6b">prvGetTCBFromHandle</link>(&#32;xTaskToSet&#32;);
<anchor xml:id="_tasks_8c_source_1l03500"/>03500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1afa9621ce7433273ee2842a637cccb69e">pvThreadLocalStoragePointers</link>[&#32;xIndex&#32;]&#32;=&#32;pvValue;
<anchor xml:id="_tasks_8c_source_1l03501"/>03501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03502"/>03502 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03503"/>03503 
<anchor xml:id="_tasks_8c_source_1l03504"/>03504 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configNUM_THREAD_LOCAL_STORAGE_POINTERS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03505"/>03505 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03506"/>03506 
<anchor xml:id="_tasks_8c_source_1l03507"/>03507 <emphasis role="preprocessor">#if&#32;(&#32;configNUM_THREAD_LOCAL_STORAGE_POINTERS&#32;!=&#32;0&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03508"/>03508 
<anchor xml:id="_tasks_8c_source_1l03509"/><link linkend="_tasks_8c_1a7c95aced700fe8d9cc12326a3eb0e916">03509</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="_tasks_8c_1a7c95aced700fe8d9cc12326a3eb0e916">pvTaskGetThreadLocalStoragePointer</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTaskToQuery,&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xIndex&#32;)
<anchor xml:id="_tasks_8c_source_1l03510"/>03510 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03511"/>03511 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pvReturn&#32;=&#32;NULL;
<anchor xml:id="_tasks_8c_source_1l03512"/>03512 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxTCB;
<anchor xml:id="_tasks_8c_source_1l03513"/>03513 
<anchor xml:id="_tasks_8c_source_1l03514"/>03514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xIndex&#32;&lt;&#32;<link linkend="__free_r_t_o_s_config__default_8h_1a8d32b5f74e55dfd12c5aa3415e16d75e">configNUM_THREAD_LOCAL_STORAGE_POINTERS</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l03515"/>03515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03516"/>03516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;<link linkend="_tasks_8c_1ad910f5e908283f1dfabd642fe1b11c6b">prvGetTCBFromHandle</link>(&#32;xTaskToQuery&#32;);
<anchor xml:id="_tasks_8c_source_1l03517"/>03517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pvReturn&#32;=&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1afa9621ce7433273ee2842a637cccb69e">pvThreadLocalStoragePointers</link>[&#32;xIndex&#32;];
<anchor xml:id="_tasks_8c_source_1l03518"/>03518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03519"/>03519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03520"/>03520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03521"/>03521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pvReturn&#32;=&#32;NULL;
<anchor xml:id="_tasks_8c_source_1l03522"/>03522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03523"/>03523 
<anchor xml:id="_tasks_8c_source_1l03524"/>03524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pvReturn;
<anchor xml:id="_tasks_8c_source_1l03525"/>03525 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03526"/>03526 
<anchor xml:id="_tasks_8c_source_1l03527"/>03527 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configNUM_THREAD_LOCAL_STORAGE_POINTERS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03528"/>03528 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03529"/>03529 
<anchor xml:id="_tasks_8c_source_1l03530"/>03530 <emphasis role="preprocessor">#if&#32;(&#32;portUSING_MPU_WRAPPERS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03531"/>03531 
<anchor xml:id="_tasks_8c_source_1l03532"/>03532 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1ad889595baff9faf9efe02f3696825409">vTaskAllocateMPURegions</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTaskToModify,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structx_m_e_m_o_r_y___r_e_g_i_o_n">MemoryRegion_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;xRegions&#32;)
<anchor xml:id="_tasks_8c_source_1l03533"/>03533 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03534"/>03534 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxTCB;
<anchor xml:id="_tasks_8c_source_1l03535"/>03535 
<anchor xml:id="_tasks_8c_source_1l03536"/>03536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;null&#32;is&#32;passed&#32;in&#32;here&#32;then&#32;we&#32;are&#32;modifying&#32;the&#32;MPU&#32;settings&#32;of</emphasis>
<anchor xml:id="_tasks_8c_source_1l03537"/>03537 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;calling&#32;task.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03538"/>03538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;<link linkend="_tasks_8c_1ad910f5e908283f1dfabd642fe1b11c6b">prvGetTCBFromHandle</link>(&#32;xTaskToModify&#32;);
<anchor xml:id="_tasks_8c_source_1l03539"/>03539 
<anchor xml:id="_tasks_8c_source_1l03540"/>03540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vPortStoreTaskMPUSettings(&#32;&amp;(&#32;pxTCB-&gt;xMPUSettings&#32;),&#32;xRegions,&#32;NULL,&#32;0&#32;);
<anchor xml:id="_tasks_8c_source_1l03541"/>03541 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03542"/>03542 
<anchor xml:id="_tasks_8c_source_1l03543"/>03543 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;portUSING_MPU_WRAPPERS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03544"/>03544 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03545"/>03545 
<anchor xml:id="_tasks_8c_source_1l03546"/><link linkend="_tasks_8c_1af4a1bd397cb871d893fc24e5f86e4f19">03546</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1af4a1bd397cb871d893fc24e5f86e4f19">prvInitialiseTaskLists</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)
<anchor xml:id="_tasks_8c_source_1l03547"/>03547 {
<anchor xml:id="_tasks_8c_source_1l03548"/>03548 <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxPriority;
<anchor xml:id="_tasks_8c_source_1l03549"/>03549 
<anchor xml:id="_tasks_8c_source_1l03550"/>03550 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;uxPriority&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0U;&#32;uxPriority&#32;&lt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="__free_r_t_o_s_config__default_8h_1a9a78f5ac61e6cb172dadf2a51f11db38">configMAX_PRIORITIES</link>;&#32;uxPriority++&#32;)
<anchor xml:id="_tasks_8c_source_1l03551"/>03551 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03552"/>03552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8c_1aa0831d347bba16bfbe524f4faa790b9d">vListInitialise</link>(&#32;&amp;(&#32;<link linkend="_tasks_8c_1ab4a8345f8c340d07086342c0dd92c972">pxReadyTasksLists</link>[&#32;uxPriority&#32;]&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l03553"/>03553 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03554"/>03554 
<anchor xml:id="_tasks_8c_source_1l03555"/>03555 &#32;&#32;&#32;&#32;<link linkend="_list_8c_1aa0831d347bba16bfbe524f4faa790b9d">vListInitialise</link>(&#32;&amp;<link linkend="_tasks_8c_1a07888d97f0712ee0b671b295c03ad19d">xDelayedTaskList1</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l03556"/>03556 &#32;&#32;&#32;&#32;<link linkend="_list_8c_1aa0831d347bba16bfbe524f4faa790b9d">vListInitialise</link>(&#32;&amp;<link linkend="_tasks_8c_1aa53d90340a8a11b958e385cd170b8c6d">xDelayedTaskList2</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l03557"/>03557 &#32;&#32;&#32;&#32;<link linkend="_list_8c_1aa0831d347bba16bfbe524f4faa790b9d">vListInitialise</link>(&#32;&amp;<link linkend="_tasks_8c_1a73880e71e7ed72242d1a078685107421">xPendingReadyList</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l03558"/>03558 
<anchor xml:id="_tasks_8c_source_1l03559"/>03559 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;INCLUDE_vTaskDelete&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03560"/>03560 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03561"/>03561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8c_1aa0831d347bba16bfbe524f4faa790b9d">vListInitialise</link>(&#32;&amp;<link linkend="_tasks_8c_1a9d5346b64d3da2ce013224df5f403005">xTasksWaitingTermination</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l03562"/>03562 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03563"/>03563 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;INCLUDE_vTaskDelete&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03564"/>03564 
<anchor xml:id="_tasks_8c_source_1l03565"/>03565 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;INCLUDE_vTaskSuspend&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03566"/>03566 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03567"/>03567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8c_1aa0831d347bba16bfbe524f4faa790b9d">vListInitialise</link>(&#32;&amp;<link linkend="_tasks_8c_1aeeff59d101a1407ffc42f81fda83baca">xSuspendedTaskList</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l03568"/>03568 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03569"/>03569 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;INCLUDE_vTaskSuspend&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03570"/>03570 
<anchor xml:id="_tasks_8c_source_1l03571"/>03571 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Start&#32;with&#32;pxDelayedTaskList&#32;using&#32;list1&#32;and&#32;the&#32;pxOverflowDelayedTaskList</emphasis>
<anchor xml:id="_tasks_8c_source_1l03572"/>03572 <emphasis role="comment">&#32;&#32;&#32;&#32;using&#32;list2.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03573"/>03573 &#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a30b4b716a99940e93fc9d4a13c1f81db">pxDelayedTaskList</link>&#32;=&#32;&amp;<link linkend="_tasks_8c_1a07888d97f0712ee0b671b295c03ad19d">xDelayedTaskList1</link>;
<anchor xml:id="_tasks_8c_source_1l03574"/>03574 &#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1aae5cac9860aec54036f49920561a9705">pxOverflowDelayedTaskList</link>&#32;=&#32;&amp;<link linkend="_tasks_8c_1aa53d90340a8a11b958e385cd170b8c6d">xDelayedTaskList2</link>;
<anchor xml:id="_tasks_8c_source_1l03575"/>03575 }
<anchor xml:id="_tasks_8c_source_1l03576"/>03576 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03577"/>03577 
<anchor xml:id="_tasks_8c_source_1l03578"/><link linkend="_tasks_8c_1a903096c962a2bc907f4b902a7d42302a">03578</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1a903096c962a2bc907f4b902a7d42302a">prvCheckTasksWaitingTermination</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)
<anchor xml:id="_tasks_8c_source_1l03579"/>03579 {
<anchor xml:id="_tasks_8c_source_1l03580"/>03580 
<anchor xml:id="_tasks_8c_source_1l03583"/>03583 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;INCLUDE_vTaskDelete&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03584"/>03584 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03585"/>03585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxTCB;
<anchor xml:id="_tasks_8c_source_1l03586"/>03586 
<anchor xml:id="_tasks_8c_source_1l03587"/>03587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;uxDeletedTasksWaitingCleanUp&#32;is&#32;used&#32;to&#32;prevent&#32;taskENTER_CRITICAL()</emphasis>
<anchor xml:id="_tasks_8c_source_1l03588"/>03588 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;being&#32;called&#32;too&#32;often&#32;in&#32;the&#32;idle&#32;task.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03589"/>03589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(&#32;<link linkend="_tasks_8c_1ad31bb9fd9a09cc9045861dd458f54615">uxDeletedTasksWaitingCleanUp</link>&#32;&gt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0U&#32;)
<anchor xml:id="_tasks_8c_source_1l03590"/>03590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03591"/>03591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l03592"/>03592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03593"/>03593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;<link linkend="_list_8h_1a715561302af8cb5b74416b23ce4e999d">listGET_OWNER_OF_HEAD_ENTRY</link>(&#32;(&#32;&amp;<link linkend="_tasks_8c_1a9d5346b64d3da2ce013224df5f403005">xTasksWaitingTermination</link>&#32;)&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9079&#32;void&#32;*&#32;is&#32;used&#32;as&#32;this&#32;macro&#32;is&#32;used&#32;with&#32;timers&#32;and&#32;co-routines&#32;too.&#32;&#32;Alignment&#32;is&#32;known&#32;to&#32;be&#32;fine&#32;as&#32;the&#32;type&#32;of&#32;the&#32;pointer&#32;stored&#32;and&#32;retrieved&#32;is&#32;the&#32;same.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03594"/>03594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_list_8c_1a274fdced76bbdd9d8a4c4840ded2920c">uxListRemove</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l03595"/>03595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--<link linkend="_tasks_8c_1a54edd210c179ef9d185f5ebb020eaa5a">uxCurrentNumberOfTasks</link>;
<anchor xml:id="_tasks_8c_source_1l03596"/>03596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--<link linkend="_tasks_8c_1ad31bb9fd9a09cc9045861dd458f54615">uxDeletedTasksWaitingCleanUp</link>;
<anchor xml:id="_tasks_8c_source_1l03597"/>03597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03598"/>03598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l03599"/>03599 
<anchor xml:id="_tasks_8c_source_1l03600"/>03600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1ad538c599036f7914942471780230ffa6">prvDeleteTCB</link>(&#32;pxTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l03601"/>03601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03602"/>03602 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03603"/>03603 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;INCLUDE_vTaskDelete&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03604"/>03604 }
<anchor xml:id="_tasks_8c_source_1l03605"/>03605 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03606"/>03606 
<anchor xml:id="_tasks_8c_source_1l03607"/>03607 <emphasis role="preprocessor">#if(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03608"/>03608 
<anchor xml:id="_tasks_8c_source_1l03609"/><link linkend="_task_8h_1ac08c26d037d0dc685740eec9b2028715">03609</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1a24b033eee266bdc8c3de63171a543f65">vTaskGetInfo</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask,&#32;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s">TaskStatus_t</link>&#32;*pxTaskStatus,&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xGetFreeStackSpace,&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892c">eTaskState</link>&#32;eState&#32;)
<anchor xml:id="_tasks_8c_source_1l03610"/>03610 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03611"/>03611 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxTCB;
<anchor xml:id="_tasks_8c_source_1l03612"/>03612 
<anchor xml:id="_tasks_8c_source_1l03613"/>03613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;xTask&#32;is&#32;NULL&#32;then&#32;get&#32;the&#32;state&#32;of&#32;the&#32;calling&#32;task.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03614"/>03614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;<link linkend="_tasks_8c_1ad910f5e908283f1dfabd642fe1b11c6b">prvGetTCBFromHandle</link>(&#32;xTask&#32;);
<anchor xml:id="_tasks_8c_source_1l03615"/>03615 
<anchor xml:id="_tasks_8c_source_1l03616"/>03616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskStatus-&gt;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1ac57f825f365c3c64bba827285fe3c2a0">xHandle</link>&#32;=&#32;(&#32;<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link>&#32;)&#32;pxTCB;
<anchor xml:id="_tasks_8c_source_1l03617"/>03617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskStatus-&gt;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1ad272663e2560bd9ea088384a39ba6192">pcTaskName</link>&#32;=&#32;(&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*&#32;)&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1affa468d3857e94ddeeea03b1d454778b">pcTaskName</link>&#32;[&#32;0&#32;]&#32;);
<anchor xml:id="_tasks_8c_source_1l03618"/>03618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskStatus-&gt;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1a39df647234fc0d6de5852042a2741a94">uxCurrentPriority</link>&#32;=&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>;
<anchor xml:id="_tasks_8c_source_1l03619"/>03619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskStatus-&gt;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1a0ee59674d2cc57d3a5a29c777d5452ed">pxStackBase</link>&#32;=&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a9a0d71a9f95dd0609f9911d9efd79134">pxStack</link>;
<anchor xml:id="_tasks_8c_source_1l03620"/>03620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskStatus-&gt;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1acd44468ba37270b04f83d0833c098057">xTaskNumber</link>&#32;=&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a3f3169fa5667af8ee542304f8dd48553">uxTCBNumber</link>;
<anchor xml:id="_tasks_8c_source_1l03621"/>03621 
<anchor xml:id="_tasks_8c_source_1l03622"/>03622 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_MUTEXES&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03623"/>03623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03624"/>03624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskStatus-&gt;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1a692f4c8957b7270f1579cdee63ff287e">uxBasePriority</link>&#32;=&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a3ce2f9306ee315873114616fb49a0ed2">uxBasePriority</link>;
<anchor xml:id="_tasks_8c_source_1l03625"/>03625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03626"/>03626 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03627"/>03627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03628"/>03628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskStatus-&gt;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1a692f4c8957b7270f1579cdee63ff287e">uxBasePriority</link>&#32;=&#32;0;
<anchor xml:id="_tasks_8c_source_1l03629"/>03629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03630"/>03630 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l03631"/>03631 
<anchor xml:id="_tasks_8c_source_1l03632"/>03632 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;configGENERATE_RUN_TIME_STATS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03633"/>03633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03634"/>03634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskStatus-&gt;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1a92ab83f4f376c255dedf8e06a78261f7">ulRunTimeCounter</link>&#32;=&#32;pxTCB-&gt;ulRunTimeCounter;
<anchor xml:id="_tasks_8c_source_1l03635"/>03635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03636"/>03636 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03637"/>03637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03638"/>03638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskStatus-&gt;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1a92ab83f4f376c255dedf8e06a78261f7">ulRunTimeCounter</link>&#32;=&#32;0;
<anchor xml:id="_tasks_8c_source_1l03639"/>03639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03640"/>03640 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l03641"/>03641 
<anchor xml:id="_tasks_8c_source_1l03642"/>03642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Obtaining&#32;the&#32;task&#32;state&#32;is&#32;a&#32;little&#32;fiddly,&#32;so&#32;is&#32;only&#32;done&#32;if&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l03643"/>03643 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;of&#32;eState&#32;passed&#32;into&#32;this&#32;function&#32;is&#32;eInvalid&#32;-&#32;otherwise&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l03644"/>03644 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;state&#32;is&#32;just&#32;set&#32;to&#32;whatever&#32;is&#32;passed&#32;in.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03645"/>03645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;eState&#32;!=&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892cab32c771bb60dc8b502f65b81eef3bd86">eInvalid</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l03646"/>03646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03647"/>03647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB&#32;==&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l03648"/>03648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03649"/>03649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskStatus-&gt;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1a727e904e3afe49472b0fc6a4e96439cb">eCurrentState</link>&#32;=&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892ca83318c0d58e6b2bafaefa1be597fb8b6">eRunning</link>;
<anchor xml:id="_tasks_8c_source_1l03650"/>03650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03651"/>03651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03652"/>03652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03653"/>03653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskStatus-&gt;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1a727e904e3afe49472b0fc6a4e96439cb">eCurrentState</link>&#32;=&#32;eState;
<anchor xml:id="_tasks_8c_source_1l03654"/>03654 
<anchor xml:id="_tasks_8c_source_1l03655"/>03655 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;INCLUDE_vTaskSuspend&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03656"/>03656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03657"/>03657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;task&#32;is&#32;in&#32;the&#32;suspended&#32;list&#32;then&#32;there&#32;is&#32;a</emphasis>
<anchor xml:id="_tasks_8c_source_1l03658"/>03658 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chance&#32;it&#32;is&#32;actually&#32;just&#32;blocked&#32;indefinitely&#32;-&#32;so&#32;really</emphasis>
<anchor xml:id="_tasks_8c_source_1l03659"/>03659 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it&#32;should&#32;be&#32;reported&#32;as&#32;being&#32;in&#32;the&#32;Blocked&#32;state.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03660"/>03660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;eState&#32;==&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892caf35a900d49fdfc2502eefc68fdb70f72">eSuspended</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l03661"/>03661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03662"/>03662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a084d232640bd1d04bcac0b8784417015">vTaskSuspendAll</link>();
<anchor xml:id="_tasks_8c_source_1l03663"/>03663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03664"/>03664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1a7c4dff11380cd843ed0b6a8dc065916b">listLIST_ITEM_CONTAINER</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;)&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l03665"/>03665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03666"/>03666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskStatus-&gt;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1a727e904e3afe49472b0fc6a4e96439cb">eCurrentState</link>&#32;=&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892cad23d72c68f43b6fff4962ad4154766af">eBlocked</link>;
<anchor xml:id="_tasks_8c_source_1l03667"/>03667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03668"/>03668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03669"/>03669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_tasks_8c_1adf830ea0f150fcdfdaa944667137f080">xTaskResumeAll</link>();
<anchor xml:id="_tasks_8c_source_1l03670"/>03670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03671"/>03671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03672"/>03672 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;INCLUDE_vTaskSuspend&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03673"/>03673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03674"/>03674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03675"/>03675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03676"/>03676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03677"/>03677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskStatus-&gt;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1a727e904e3afe49472b0fc6a4e96439cb">eCurrentState</link>&#32;=&#32;<link linkend="_tasks_8c_1aab948efa7e3b657465cd06196b259ed7">eTaskGetState</link>(&#32;pxTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l03678"/>03678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03679"/>03679 
<anchor xml:id="_tasks_8c_source_1l03680"/>03680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Obtaining&#32;the&#32;stack&#32;space&#32;takes&#32;some&#32;time,&#32;so&#32;the&#32;xGetFreeStackSpace</emphasis>
<anchor xml:id="_tasks_8c_source_1l03681"/>03681 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parameter&#32;is&#32;provided&#32;to&#32;allow&#32;it&#32;to&#32;be&#32;skipped.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03682"/>03682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xGetFreeStackSpace&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l03683"/>03683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03684"/>03684 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;portSTACK_GROWTH&#32;&gt;&#32;0&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03685"/>03685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03686"/>03686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskStatus-&gt;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1aaad57afd4a629d2404e1cff97891c571">usStackHighWaterMark</link>&#32;=&#32;<link linkend="_tasks_8c_1aaba9e72c97964b8d9496e8dbdd40aa60">prvTaskCheckFreeStackSpace</link>(&#32;(&#32;uint8_t&#32;*&#32;)&#32;pxTCB-&gt;pxEndOfStack&#32;);
<anchor xml:id="_tasks_8c_source_1l03687"/>03687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03688"/>03688 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03689"/>03689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03690"/>03690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskStatus-&gt;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1aaad57afd4a629d2404e1cff97891c571">usStackHighWaterMark</link>&#32;=&#32;<link linkend="_tasks_8c_1aaba9e72c97964b8d9496e8dbdd40aa60">prvTaskCheckFreeStackSpace</link>(&#32;(&#32;uint8_t&#32;*&#32;)&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a9a0d71a9f95dd0609f9911d9efd79134">pxStack</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l03691"/>03691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03692"/>03692 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l03693"/>03693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03694"/>03694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03695"/>03695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03696"/>03696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskStatus-&gt;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1aaad57afd4a629d2404e1cff97891c571">usStackHighWaterMark</link>&#32;=&#32;0;
<anchor xml:id="_tasks_8c_source_1l03697"/>03697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03698"/>03698 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03699"/>03699 
<anchor xml:id="_tasks_8c_source_1l03700"/>03700 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TRACE_FACILITY&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03701"/>03701 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03702"/>03702 
<anchor xml:id="_tasks_8c_source_1l03703"/>03703 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03704"/>03704 
<anchor xml:id="_tasks_8c_source_1l03705"/><link linkend="_tasks_8c_1a76a09ef72cff5e96bdfb4f9e882f4cfe">03705</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_tasks_8c_1a76a09ef72cff5e96bdfb4f9e882f4cfe">prvListTasksWithinSingleList</link>(&#32;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s">TaskStatus_t</link>&#32;*pxTaskStatusArray,&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;*pxList,&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892c">eTaskState</link>&#32;eState&#32;)
<anchor xml:id="_tasks_8c_source_1l03706"/>03706 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03707"/>03707 &#32;&#32;&#32;&#32;<link linkend="_list_8h_1a2d5de557c5561c8980d1bf51d87d8cba">configLIST_VOLATILE</link>&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxNextTCB,&#32;*pxFirstTCB;
<anchor xml:id="_tasks_8c_source_1l03708"/>03708 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxTask&#32;=&#32;0;
<anchor xml:id="_tasks_8c_source_1l03709"/>03709 
<anchor xml:id="_tasks_8c_source_1l03710"/>03710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1a18b4aded515bdc512017ea6e677a13bb">listCURRENT_LIST_LENGTH</link>(&#32;pxList&#32;)&#32;&gt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_tasks_8c_source_1l03711"/>03711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03712"/>03712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8h_1a275d9855e9b71652e2b8f6e2ed62aadd">listGET_OWNER_OF_NEXT_ENTRY</link>(&#32;pxFirstTCB,&#32;pxList&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9079&#32;void&#32;*&#32;is&#32;used&#32;as&#32;this&#32;macro&#32;is&#32;used&#32;with&#32;timers&#32;and&#32;co-routines&#32;too.&#32;&#32;Alignment&#32;is&#32;known&#32;to&#32;be&#32;fine&#32;as&#32;the&#32;type&#32;of&#32;the&#32;pointer&#32;stored&#32;and&#32;retrieved&#32;is&#32;the&#32;same.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03713"/>03713 
<anchor xml:id="_tasks_8c_source_1l03714"/>03714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Populate&#32;an&#32;TaskStatus_t&#32;structure&#32;within&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l03715"/>03715 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskStatusArray&#32;array&#32;for&#32;each&#32;task&#32;that&#32;is&#32;referenced&#32;from</emphasis>
<anchor xml:id="_tasks_8c_source_1l03716"/>03716 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxList.&#32;&#32;See&#32;the&#32;definition&#32;of&#32;TaskStatus_t&#32;in&#32;task.h&#32;for&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l03717"/>03717 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;meaning&#32;of&#32;each&#32;TaskStatus_t&#32;structure&#32;member.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03718"/>03718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
<anchor xml:id="_tasks_8c_source_1l03719"/>03719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03720"/>03720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8h_1a275d9855e9b71652e2b8f6e2ed62aadd">listGET_OWNER_OF_NEXT_ENTRY</link>(&#32;pxNextTCB,&#32;pxList&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9079&#32;void&#32;*&#32;is&#32;used&#32;as&#32;this&#32;macro&#32;is&#32;used&#32;with&#32;timers&#32;and&#32;co-routines&#32;too.&#32;&#32;Alignment&#32;is&#32;known&#32;to&#32;be&#32;fine&#32;as&#32;the&#32;type&#32;of&#32;the&#32;pointer&#32;stored&#32;and&#32;retrieved&#32;is&#32;the&#32;same.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03721"/>03721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a24b033eee266bdc8c3de63171a543f65">vTaskGetInfo</link>(&#32;(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;)&#32;pxNextTCB,&#32;&amp;(&#32;pxTaskStatusArray[&#32;uxTask&#32;]&#32;),&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>,&#32;eState&#32;);
<anchor xml:id="_tasks_8c_source_1l03722"/>03722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxTask++;
<anchor xml:id="_tasks_8c_source_1l03723"/>03723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(&#32;pxNextTCB&#32;!=&#32;pxFirstTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l03724"/>03724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03725"/>03725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03726"/>03726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03727"/>03727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l03728"/>03728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03729"/>03729 
<anchor xml:id="_tasks_8c_source_1l03730"/>03730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;uxTask;
<anchor xml:id="_tasks_8c_source_1l03731"/>03731 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03732"/>03732 
<anchor xml:id="_tasks_8c_source_1l03733"/>03733 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TRACE_FACILITY&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03734"/>03734 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03735"/>03735 
<anchor xml:id="_tasks_8c_source_1l03736"/>03736 <emphasis role="preprocessor">#if&#32;(&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)&#32;||&#32;(&#32;INCLUDE_uxTaskGetStackHighWaterMark&#32;==&#32;1&#32;)&#32;||&#32;(&#32;INCLUDE_uxTaskGetStackHighWaterMark2&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03737"/>03737 
<anchor xml:id="_tasks_8c_source_1l03738"/><link linkend="_tasks_8c_1aaba9e72c97964b8d9496e8dbdd40aa60">03738</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="__free_r_t_o_s_8h_1ae4e85bffd36d76cf2796092f0ccd784a">configSTACK_DEPTH_TYPE</link>&#32;<link linkend="_tasks_8c_1aaba9e72c97964b8d9496e8dbdd40aa60">prvTaskCheckFreeStackSpace</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;*&#32;pucStackByte&#32;)
<anchor xml:id="_tasks_8c_source_1l03739"/>03739 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03740"/>03740 &#32;&#32;&#32;&#32;uint32_t&#32;ulCount&#32;=&#32;0U;
<anchor xml:id="_tasks_8c_source_1l03741"/>03741 
<anchor xml:id="_tasks_8c_source_1l03742"/>03742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(&#32;*pucStackByte&#32;==&#32;(&#32;uint8_t&#32;)&#32;<link linkend="_tasks_8c_1ad3b1c99066f14855be098ccca1685fac">tskSTACK_FILL_BYTE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l03743"/>03743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03744"/>03744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pucStackByte&#32;-=&#32;<link linkend="_portmacro_8h_1a21adaab1601f6a0f35ba550a43060830">portSTACK_GROWTH</link>;
<anchor xml:id="_tasks_8c_source_1l03745"/>03745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulCount++;
<anchor xml:id="_tasks_8c_source_1l03746"/>03746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03747"/>03747 
<anchor xml:id="_tasks_8c_source_1l03748"/>03748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulCount&#32;/=&#32;(&#32;uint32_t&#32;)&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<link linkend="_portmacro_8h_1aa73b01e0200940d619095fb74fb3030b">StackType_t</link>&#32;);&#32;<emphasis role="comment">/*lint&#32;!e961&#32;Casting&#32;is&#32;not&#32;redundant&#32;on&#32;smaller&#32;architectures.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03749"/>03749 
<anchor xml:id="_tasks_8c_source_1l03750"/>03750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(&#32;<link linkend="__free_r_t_o_s_8h_1ae4e85bffd36d76cf2796092f0ccd784a">configSTACK_DEPTH_TYPE</link>&#32;)&#32;ulCount;
<anchor xml:id="_tasks_8c_source_1l03751"/>03751 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03752"/>03752 
<anchor xml:id="_tasks_8c_source_1l03753"/>03753 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;(&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)&#32;||&#32;(&#32;INCLUDE_uxTaskGetStackHighWaterMark&#32;==&#32;1&#32;)&#32;||&#32;(&#32;INCLUDE_uxTaskGetStackHighWaterMark2&#32;==&#32;1&#32;)&#32;)&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03754"/>03754 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03755"/>03755 
<anchor xml:id="_tasks_8c_source_1l03756"/>03756 <emphasis role="preprocessor">#if&#32;(&#32;INCLUDE_uxTaskGetStackHighWaterMark2&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03757"/>03757 
<anchor xml:id="_tasks_8c_source_1l03758"/>03758 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;uxTaskGetStackHighWaterMark()&#32;and&#32;uxTaskGetStackHighWaterMark2()&#32;are&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l03759"/>03759 <emphasis role="comment">&#32;&#32;&#32;&#32;same&#32;except&#32;for&#32;their&#32;return&#32;type.&#32;&#32;Using&#32;configSTACK_DEPTH_TYPE&#32;allows&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l03760"/>03760 <emphasis role="comment">&#32;&#32;&#32;&#32;user&#32;to&#32;determine&#32;the&#32;return&#32;type.&#32;&#32;It&#32;gets&#32;around&#32;the&#32;problem&#32;of&#32;the&#32;value</emphasis>
<anchor xml:id="_tasks_8c_source_1l03761"/>03761 <emphasis role="comment">&#32;&#32;&#32;&#32;overflowing&#32;on&#32;8-bit&#32;types&#32;without&#32;breaking&#32;backward&#32;compatibility&#32;for</emphasis>
<anchor xml:id="_tasks_8c_source_1l03762"/>03762 <emphasis role="comment">&#32;&#32;&#32;&#32;applications&#32;that&#32;expect&#32;an&#32;8-bit&#32;return&#32;type.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03763"/>03763 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ae4e85bffd36d76cf2796092f0ccd784a">configSTACK_DEPTH_TYPE</link>&#32;<link linkend="_task_8h_1a7fd88fa038a89eb539bd41ce64a93744">uxTaskGetStackHighWaterMark2</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask&#32;)
<anchor xml:id="_tasks_8c_source_1l03764"/>03764 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03765"/>03765 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxTCB;
<anchor xml:id="_tasks_8c_source_1l03766"/>03766 &#32;&#32;&#32;&#32;uint8_t&#32;*pucEndOfStack;
<anchor xml:id="_tasks_8c_source_1l03767"/>03767 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ae4e85bffd36d76cf2796092f0ccd784a">configSTACK_DEPTH_TYPE</link>&#32;uxReturn;
<anchor xml:id="_tasks_8c_source_1l03768"/>03768 
<anchor xml:id="_tasks_8c_source_1l03769"/>03769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;uxTaskGetStackHighWaterMark()&#32;and&#32;uxTaskGetStackHighWaterMark2()&#32;are</emphasis>
<anchor xml:id="_tasks_8c_source_1l03770"/>03770 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;same&#32;except&#32;for&#32;their&#32;return&#32;type.&#32;&#32;Using&#32;configSTACK_DEPTH_TYPE</emphasis>
<anchor xml:id="_tasks_8c_source_1l03771"/>03771 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allows&#32;the&#32;user&#32;to&#32;determine&#32;the&#32;return&#32;type.&#32;&#32;It&#32;gets&#32;around&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l03772"/>03772 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;problem&#32;of&#32;the&#32;value&#32;overflowing&#32;on&#32;8-bit&#32;types&#32;without&#32;breaking</emphasis>
<anchor xml:id="_tasks_8c_source_1l03773"/>03773 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;backward&#32;compatibility&#32;for&#32;applications&#32;that&#32;expect&#32;an&#32;8-bit&#32;return</emphasis>
<anchor xml:id="_tasks_8c_source_1l03774"/>03774 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;type.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03775"/>03775 
<anchor xml:id="_tasks_8c_source_1l03776"/>03776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;<link linkend="_tasks_8c_1ad910f5e908283f1dfabd642fe1b11c6b">prvGetTCBFromHandle</link>(&#32;xTask&#32;);
<anchor xml:id="_tasks_8c_source_1l03777"/>03777 
<anchor xml:id="_tasks_8c_source_1l03778"/>03778 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;portSTACK_GROWTH&#32;&lt;&#32;0</emphasis>
<anchor xml:id="_tasks_8c_source_1l03779"/>03779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03780"/>03780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pucEndOfStack&#32;=&#32;(&#32;uint8_t&#32;*&#32;)&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a9a0d71a9f95dd0609f9911d9efd79134">pxStack</link>;
<anchor xml:id="_tasks_8c_source_1l03781"/>03781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03782"/>03782 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03783"/>03783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03784"/>03784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pucEndOfStack&#32;=&#32;(&#32;uint8_t&#32;*&#32;)&#32;pxTCB-&gt;pxEndOfStack;
<anchor xml:id="_tasks_8c_source_1l03785"/>03785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03786"/>03786 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l03787"/>03787 
<anchor xml:id="_tasks_8c_source_1l03788"/>03788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxReturn&#32;=&#32;<link linkend="_tasks_8c_1aaba9e72c97964b8d9496e8dbdd40aa60">prvTaskCheckFreeStackSpace</link>(&#32;pucEndOfStack&#32;);
<anchor xml:id="_tasks_8c_source_1l03789"/>03789 
<anchor xml:id="_tasks_8c_source_1l03790"/>03790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;uxReturn;
<anchor xml:id="_tasks_8c_source_1l03791"/>03791 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03792"/>03792 
<anchor xml:id="_tasks_8c_source_1l03793"/>03793 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;INCLUDE_uxTaskGetStackHighWaterMark2&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03794"/>03794 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03795"/>03795 
<anchor xml:id="_tasks_8c_source_1l03796"/>03796 <emphasis role="preprocessor">#if&#32;(&#32;INCLUDE_uxTaskGetStackHighWaterMark&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03797"/>03797 
<anchor xml:id="_tasks_8c_source_1l03798"/>03798 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_task_8h_1a799967af01d328132cde814e47733437">uxTaskGetStackHighWaterMark</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask&#32;)
<anchor xml:id="_tasks_8c_source_1l03799"/>03799 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03800"/>03800 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxTCB;
<anchor xml:id="_tasks_8c_source_1l03801"/>03801 &#32;&#32;&#32;&#32;uint8_t&#32;*pucEndOfStack;
<anchor xml:id="_tasks_8c_source_1l03802"/>03802 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxReturn;
<anchor xml:id="_tasks_8c_source_1l03803"/>03803 
<anchor xml:id="_tasks_8c_source_1l03804"/>03804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;<link linkend="_tasks_8c_1ad910f5e908283f1dfabd642fe1b11c6b">prvGetTCBFromHandle</link>(&#32;xTask&#32;);
<anchor xml:id="_tasks_8c_source_1l03805"/>03805 
<anchor xml:id="_tasks_8c_source_1l03806"/>03806 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;portSTACK_GROWTH&#32;&lt;&#32;0</emphasis>
<anchor xml:id="_tasks_8c_source_1l03807"/>03807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03808"/>03808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pucEndOfStack&#32;=&#32;(&#32;uint8_t&#32;*&#32;)&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a9a0d71a9f95dd0609f9911d9efd79134">pxStack</link>;
<anchor xml:id="_tasks_8c_source_1l03809"/>03809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03810"/>03810 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03811"/>03811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03812"/>03812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pucEndOfStack&#32;=&#32;(&#32;uint8_t&#32;*&#32;)&#32;pxTCB-&gt;pxEndOfStack;
<anchor xml:id="_tasks_8c_source_1l03813"/>03813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03814"/>03814 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l03815"/>03815 
<anchor xml:id="_tasks_8c_source_1l03816"/>03816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxReturn&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="_tasks_8c_1aaba9e72c97964b8d9496e8dbdd40aa60">prvTaskCheckFreeStackSpace</link>(&#32;pucEndOfStack&#32;);
<anchor xml:id="_tasks_8c_source_1l03817"/>03817 
<anchor xml:id="_tasks_8c_source_1l03818"/>03818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;uxReturn;
<anchor xml:id="_tasks_8c_source_1l03819"/>03819 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03820"/>03820 
<anchor xml:id="_tasks_8c_source_1l03821"/>03821 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;INCLUDE_uxTaskGetStackHighWaterMark&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03822"/>03822 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03823"/>03823 
<anchor xml:id="_tasks_8c_source_1l03824"/>03824 <emphasis role="preprocessor">#if&#32;(&#32;INCLUDE_vTaskDelete&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03825"/>03825 
<anchor xml:id="_tasks_8c_source_1l03826"/><link linkend="_tasks_8c_1ad538c599036f7914942471780230ffa6">03826</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1ad538c599036f7914942471780230ffa6">prvDeleteTCB</link>(&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxTCB&#32;)
<anchor xml:id="_tasks_8c_source_1l03827"/>03827 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03828"/>03828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;call&#32;is&#32;required&#32;specifically&#32;for&#32;the&#32;TriCore&#32;port.&#32;&#32;It&#32;must&#32;be</emphasis>
<anchor xml:id="_tasks_8c_source_1l03829"/>03829 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;above&#32;the&#32;vPortFree()&#32;calls.&#32;&#32;The&#32;call&#32;is&#32;also&#32;used&#32;by&#32;ports/demos&#32;that</emphasis>
<anchor xml:id="_tasks_8c_source_1l03830"/>03830 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;want&#32;to&#32;allocate&#32;and&#32;clean&#32;RAM&#32;statically.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03831"/>03831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a3c506bf351102047fb5a75491287fe69">portCLEAN_UP_TCB</link>(&#32;pxTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l03832"/>03832 
<anchor xml:id="_tasks_8c_source_1l03833"/>03833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Free&#32;up&#32;the&#32;memory&#32;allocated&#32;by&#32;the&#32;scheduler&#32;for&#32;the&#32;task.&#32;&#32;It&#32;is&#32;up</emphasis>
<anchor xml:id="_tasks_8c_source_1l03834"/>03834 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;the&#32;task&#32;to&#32;free&#32;any&#32;memory&#32;allocated&#32;at&#32;the&#32;application&#32;level.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03835"/>03835 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_NEWLIB_REENTRANT&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03836"/>03836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03837"/>03837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_reclaim_reent(&#32;&amp;(&#32;pxTCB-&gt;xNewLib_reent&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l03838"/>03838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03839"/>03839 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_NEWLIB_REENTRANT&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03840"/>03840 
<anchor xml:id="_tasks_8c_source_1l03841"/>03841 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;(&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configSUPPORT_STATIC_ALLOCATION&#32;==&#32;0&#32;)&#32;&amp;&amp;&#32;(&#32;portUSING_MPU_WRAPPERS&#32;==&#32;0&#32;)&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03842"/>03842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03843"/>03843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;can&#32;only&#32;have&#32;been&#32;allocated&#32;dynamically&#32;-&#32;free&#32;both</emphasis>
<anchor xml:id="_tasks_8c_source_1l03844"/>03844 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;stack&#32;and&#32;TCB.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03845"/>03845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_heap__3_8c_1a1e7cea2fd1bc894ea3b5f5e8179d259b">vPortFree</link>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a9a0d71a9f95dd0609f9911d9efd79134">pxStack</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l03846"/>03846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_heap__3_8c_1a1e7cea2fd1bc894ea3b5f5e8179d259b">vPortFree</link>(&#32;pxTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l03847"/>03847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03848"/>03848 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#elif(&#32;tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE&#32;!=&#32;0&#32;)&#32;</emphasis><emphasis role="comment">/*lint&#32;!e731&#32;!e9029&#32;Macro&#32;has&#32;been&#32;consolidated&#32;for&#32;readability&#32;reasons.&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03849"/>03849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03850"/>03850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;could&#32;have&#32;been&#32;allocated&#32;statically&#32;or&#32;dynamically,&#32;so</emphasis>
<anchor xml:id="_tasks_8c_source_1l03851"/>03851 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;check&#32;what&#32;was&#32;statically&#32;allocated&#32;before&#32;trying&#32;to&#32;free&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l03852"/>03852 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memory.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03853"/>03853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB-&gt;ucStaticallyAllocated&#32;==&#32;<link linkend="_tasks_8c_1af06a1633d2fb92f67712e62f3d1c3777">tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l03854"/>03854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03855"/>03855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Both&#32;the&#32;stack&#32;and&#32;TCB&#32;were&#32;allocated&#32;dynamically,&#32;so&#32;both</emphasis>
<anchor xml:id="_tasks_8c_source_1l03856"/>03856 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;must&#32;be&#32;freed.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03857"/>03857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_heap__3_8c_1a1e7cea2fd1bc894ea3b5f5e8179d259b">vPortFree</link>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a9a0d71a9f95dd0609f9911d9efd79134">pxStack</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l03858"/>03858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_heap__3_8c_1a1e7cea2fd1bc894ea3b5f5e8179d259b">vPortFree</link>(&#32;pxTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l03859"/>03859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03860"/>03860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB-&gt;ucStaticallyAllocated&#32;==&#32;<link linkend="_tasks_8c_1ad65be2320d426aca4e0e72d29ccd04de">tskSTATICALLY_ALLOCATED_STACK_ONLY</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l03861"/>03861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03862"/>03862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Only&#32;the&#32;stack&#32;was&#32;statically&#32;allocated,&#32;so&#32;the&#32;TCB&#32;is&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l03863"/>03863 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;only&#32;memory&#32;that&#32;must&#32;be&#32;freed.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03864"/>03864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_heap__3_8c_1a1e7cea2fd1bc894ea3b5f5e8179d259b">vPortFree</link>(&#32;pxTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l03865"/>03865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03866"/>03866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03867"/>03867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03868"/>03868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Neither&#32;the&#32;stack&#32;nor&#32;the&#32;TCB&#32;were&#32;allocated&#32;dynamically,&#32;so</emphasis>
<anchor xml:id="_tasks_8c_source_1l03869"/>03869 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nothing&#32;needs&#32;to&#32;be&#32;freed.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03870"/>03870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxTCB-&gt;ucStaticallyAllocated&#32;==&#32;<link linkend="_tasks_8c_1a9851e50775136d536fed623e1ac598aa">tskSTATICALLY_ALLOCATED_STACK_AND_TCB</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l03871"/>03871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l03872"/>03872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03873"/>03873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03874"/>03874 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03875"/>03875 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03876"/>03876 
<anchor xml:id="_tasks_8c_source_1l03877"/>03877 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;INCLUDE_vTaskDelete&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03878"/>03878 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03879"/>03879 
<anchor xml:id="_tasks_8c_source_1l03880"/><link linkend="_tasks_8c_1ad1b2e4995f863a99cf980836efe330d7">03880</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1ad1b2e4995f863a99cf980836efe330d7">prvResetNextTaskUnblockTime</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)
<anchor xml:id="_tasks_8c_source_1l03881"/>03881 {
<anchor xml:id="_tasks_8c_source_1l03882"/>03882 <link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxTCB;
<anchor xml:id="_tasks_8c_source_1l03883"/>03883 
<anchor xml:id="_tasks_8c_source_1l03884"/>03884 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1aaba6eb05d67ebc8026bea29193eca28f">listLIST_IS_EMPTY</link>(&#32;<link linkend="_tasks_8c_1a30b4b716a99940e93fc9d4a13c1f81db">pxDelayedTaskList</link>&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l03885"/>03885 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03886"/>03886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;new&#32;current&#32;delayed&#32;list&#32;is&#32;empty.&#32;&#32;Set&#32;xNextTaskUnblockTime&#32;to</emphasis>
<anchor xml:id="_tasks_8c_source_1l03887"/>03887 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;maximum&#32;possible&#32;value&#32;so&#32;it&#32;is&#32;extremely&#32;unlikely&#32;that&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l03888"/>03888 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(&#32;xTickCount&#32;&gt;=&#32;xNextTaskUnblockTime&#32;)&#32;test&#32;will&#32;pass&#32;until</emphasis>
<anchor xml:id="_tasks_8c_source_1l03889"/>03889 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;there&#32;is&#32;an&#32;item&#32;in&#32;the&#32;delayed&#32;list.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03890"/>03890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1ac27aa725d8922f33f880005e72edec68">xNextTaskUnblockTime</link>&#32;=&#32;<link linkend="_portmacro_8h_1a72723ba1e4a85ca14f25c2b9e066613d">portMAX_DELAY</link>;
<anchor xml:id="_tasks_8c_source_1l03891"/>03891 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03892"/>03892 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03893"/>03893 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03894"/>03894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;new&#32;current&#32;delayed&#32;list&#32;is&#32;not&#32;empty,&#32;get&#32;the&#32;value&#32;of</emphasis>
<anchor xml:id="_tasks_8c_source_1l03895"/>03895 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;item&#32;at&#32;the&#32;head&#32;of&#32;the&#32;delayed&#32;list.&#32;&#32;This&#32;is&#32;the&#32;time&#32;at</emphasis>
<anchor xml:id="_tasks_8c_source_1l03896"/>03896 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;which&#32;the&#32;task&#32;at&#32;the&#32;head&#32;of&#32;the&#32;delayed&#32;list&#32;should&#32;be&#32;removed</emphasis>
<anchor xml:id="_tasks_8c_source_1l03897"/>03897 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;from&#32;the&#32;Blocked&#32;state.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03898"/>03898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;pxTCB&#32;)&#32;=&#32;<link linkend="_list_8h_1a715561302af8cb5b74416b23ce4e999d">listGET_OWNER_OF_HEAD_ENTRY</link>(&#32;<link linkend="_tasks_8c_1a30b4b716a99940e93fc9d4a13c1f81db">pxDelayedTaskList</link>&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9079&#32;void&#32;*&#32;is&#32;used&#32;as&#32;this&#32;macro&#32;is&#32;used&#32;with&#32;timers&#32;and&#32;co-routines&#32;too.&#32;&#32;Alignment&#32;is&#32;known&#32;to&#32;be&#32;fine&#32;as&#32;the&#32;type&#32;of&#32;the&#32;pointer&#32;stored&#32;and&#32;retrieved&#32;is&#32;the&#32;same.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03899"/>03899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1ac27aa725d8922f33f880005e72edec68">xNextTaskUnblockTime</link>&#32;=&#32;<link linkend="_list_8h_1aa50d09950abc602741d7ebe8387f4e1a">listGET_LIST_ITEM_VALUE</link>(&#32;&amp;(&#32;(&#32;pxTCB&#32;)-&gt;xStateListItem&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l03900"/>03900 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03901"/>03901 }
<anchor xml:id="_tasks_8c_source_1l03902"/>03902 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03903"/>03903 
<anchor xml:id="_tasks_8c_source_1l03904"/>03904 <emphasis role="preprocessor">#if&#32;(&#32;(&#32;INCLUDE_xTaskGetCurrentTaskHandle&#32;==&#32;1&#32;)&#32;||&#32;(&#32;configUSE_MUTEXES&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03905"/>03905 
<anchor xml:id="_tasks_8c_source_1l03906"/><link linkend="_task_8h_1a85a0f9c9f817b18686efbf8f37c72dfc">03906</link> &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;<link linkend="_tasks_8c_1a28aaeed93d0de14da726f3a1a8c33251">xTaskGetCurrentTaskHandle</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)
<anchor xml:id="_tasks_8c_source_1l03907"/>03907 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03908"/>03908 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l03909"/>03909 
<anchor xml:id="_tasks_8c_source_1l03910"/>03910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;critical&#32;section&#32;is&#32;not&#32;required&#32;as&#32;this&#32;is&#32;not&#32;called&#32;from</emphasis>
<anchor xml:id="_tasks_8c_source_1l03911"/>03911 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;an&#32;interrupt&#32;and&#32;the&#32;current&#32;TCB&#32;will&#32;always&#32;be&#32;the&#32;same&#32;for&#32;any</emphasis>
<anchor xml:id="_tasks_8c_source_1l03912"/>03912 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;individual&#32;execution&#32;thread.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03913"/>03913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>;
<anchor xml:id="_tasks_8c_source_1l03914"/>03914 
<anchor xml:id="_tasks_8c_source_1l03915"/>03915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l03916"/>03916 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03917"/>03917 
<anchor xml:id="_tasks_8c_source_1l03918"/>03918 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;(&#32;(&#32;INCLUDE_xTaskGetCurrentTaskHandle&#32;==&#32;1&#32;)&#32;||&#32;(&#32;configUSE_MUTEXES&#32;==&#32;1&#32;)&#32;)&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03919"/>03919 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03920"/>03920 
<anchor xml:id="_tasks_8c_source_1l03921"/>03921 <emphasis role="preprocessor">#if&#32;(&#32;(&#32;INCLUDE_xTaskGetSchedulerState&#32;==&#32;1&#32;)&#32;||&#32;(&#32;configUSE_TIMERS&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03922"/>03922 
<anchor xml:id="_tasks_8c_source_1l03923"/><link linkend="_task_8h_1a0241000e08a261372186d34825a35979">03923</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_tasks_8c_1a95ee42e80f8afd6815d4b7080717cd7f">xTaskGetSchedulerState</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)
<anchor xml:id="_tasks_8c_source_1l03924"/>03924 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03925"/>03925 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l03926"/>03926 
<anchor xml:id="_tasks_8c_source_1l03927"/>03927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a1799bfbb95c907794761d18bd75faff5">xSchedulerRunning</link>&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l03928"/>03928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03929"/>03929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_task_8h_1a0923fdaae1bfe42ac5cccd9e9ddca9ed">taskSCHEDULER_NOT_STARTED</link>;
<anchor xml:id="_tasks_8c_source_1l03930"/>03930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03931"/>03931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03932"/>03932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03933"/>03933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a7522707fcf80b216e3a5b25ba464ec85">uxSchedulerSuspended</link>&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l03934"/>03934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03935"/>03935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_task_8h_1acbb675035741787d29da475b5a887545">taskSCHEDULER_RUNNING</link>;
<anchor xml:id="_tasks_8c_source_1l03936"/>03936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03937"/>03937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03938"/>03938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03939"/>03939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_task_8h_1a0cad071ca127a35df93166e9ed5b6ada">taskSCHEDULER_SUSPENDED</link>;
<anchor xml:id="_tasks_8c_source_1l03940"/>03940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03941"/>03941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03942"/>03942 
<anchor xml:id="_tasks_8c_source_1l03943"/>03943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l03944"/>03944 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03945"/>03945 
<anchor xml:id="_tasks_8c_source_1l03946"/>03946 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;(&#32;(&#32;INCLUDE_xTaskGetSchedulerState&#32;==&#32;1&#32;)&#32;||&#32;(&#32;configUSE_TIMERS&#32;==&#32;1&#32;)&#32;)&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l03947"/>03947 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03948"/>03948 
<anchor xml:id="_tasks_8c_source_1l03949"/>03949 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_MUTEXES&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l03950"/>03950 
<anchor xml:id="_tasks_8c_source_1l03951"/><link linkend="_task_8h_1aa715a488a6014df5a9393ca38c5938c0">03951</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_tasks_8c_1ad84a9d66e311d48251c0334b3107165c">xTaskPriorityInherit</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;<emphasis role="keyword">const</emphasis>&#32;pxMutexHolder&#32;)
<anchor xml:id="_tasks_8c_source_1l03952"/>03952 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03953"/>03953 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxMutexHolderTCB&#32;=&#32;pxMutexHolder;
<anchor xml:id="_tasks_8c_source_1l03954"/>03954 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_tasks_8c_source_1l03955"/>03955 
<anchor xml:id="_tasks_8c_source_1l03956"/>03956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;mutex&#32;was&#32;given&#32;back&#32;by&#32;an&#32;interrupt&#32;while&#32;the&#32;queue&#32;was</emphasis>
<anchor xml:id="_tasks_8c_source_1l03957"/>03957 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;locked&#32;then&#32;the&#32;mutex&#32;holder&#32;might&#32;now&#32;be&#32;NULL.&#32;&#32;_RB_&#32;Is&#32;this&#32;still</emphasis>
<anchor xml:id="_tasks_8c_source_1l03958"/>03958 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;needed&#32;as&#32;interrupts&#32;can&#32;no&#32;longer&#32;use&#32;mutexes?&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03959"/>03959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxMutexHolder&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l03960"/>03960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03961"/>03961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;holder&#32;of&#32;the&#32;mutex&#32;has&#32;a&#32;priority&#32;below&#32;the&#32;priority&#32;of</emphasis>
<anchor xml:id="_tasks_8c_source_1l03962"/>03962 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;task&#32;attempting&#32;to&#32;obtain&#32;the&#32;mutex&#32;then&#32;it&#32;will&#32;temporarily</emphasis>
<anchor xml:id="_tasks_8c_source_1l03963"/>03963 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inherit&#32;the&#32;priority&#32;of&#32;the&#32;task&#32;attempting&#32;to&#32;obtain&#32;the&#32;mutex.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03964"/>03964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxMutexHolderTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;&lt;&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l03965"/>03965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03966"/>03966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Adjust&#32;the&#32;mutex&#32;holder&#32;state&#32;to&#32;account&#32;for&#32;its&#32;new</emphasis>
<anchor xml:id="_tasks_8c_source_1l03967"/>03967 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;priority.&#32;&#32;Only&#32;reset&#32;the&#32;event&#32;list&#32;item&#32;value&#32;if&#32;the&#32;value&#32;is</emphasis>
<anchor xml:id="_tasks_8c_source_1l03968"/>03968 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;not&#32;being&#32;used&#32;for&#32;anything&#32;else.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03969"/>03969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;<link linkend="_list_8h_1aa50d09950abc602741d7ebe8387f4e1a">listGET_LIST_ITEM_VALUE</link>(&#32;&amp;(&#32;pxMutexHolderTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;)&#32;&amp;&#32;<link linkend="_tasks_8c_1a3e36f3eda563e810a24ab36ee7c978d4">taskEVENT_LIST_ITEM_VALUE_IN_USE</link>&#32;)&#32;==&#32;0UL&#32;)
<anchor xml:id="_tasks_8c_source_1l03970"/>03970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03971"/>03971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8h_1a83e95e61652f032fdc26aa622f5e2610">listSET_LIST_ITEM_VALUE</link>(&#32;&amp;(&#32;pxMutexHolderTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;),&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;<link linkend="__free_r_t_o_s_config__default_8h_1a9a78f5ac61e6cb172dadf2a51f11db38">configMAX_PRIORITIES</link>&#32;-&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;);&#32;<emphasis role="comment">/*lint&#32;!e961&#32;MISRA&#32;exception&#32;as&#32;the&#32;casts&#32;are&#32;only&#32;redundant&#32;for&#32;some&#32;ports.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03972"/>03972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03973"/>03973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03974"/>03974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03975"/>03975 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l03976"/>03976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03977"/>03977 
<anchor xml:id="_tasks_8c_source_1l03978"/>03978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;task&#32;being&#32;modified&#32;is&#32;in&#32;the&#32;ready&#32;state&#32;it&#32;will&#32;need</emphasis>
<anchor xml:id="_tasks_8c_source_1l03979"/>03979 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;be&#32;moved&#32;into&#32;a&#32;new&#32;list.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03980"/>03980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1a60302b468d21f8c53d13987372acb8fa">listIS_CONTAINED_WITHIN</link>(&#32;&amp;(&#32;<link linkend="_tasks_8c_1ab4a8345f8c340d07086342c0dd92c972">pxReadyTasksLists</link>[&#32;pxMutexHolderTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;]&#32;),&#32;&amp;(&#32;pxMutexHolderTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l03981"/>03981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03982"/>03982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8c_1a274fdced76bbdd9d8a4c4840ded2920c">uxListRemove</link>(&#32;&amp;(&#32;pxMutexHolderTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;)&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_tasks_8c_source_1l03983"/>03983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03984"/>03984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a9517fc40d713aff9dd8182223948f9c8">taskRESET_READY_PRIORITY</link>(&#32;pxMutexHolderTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l03985"/>03985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03986"/>03986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03987"/>03987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03988"/>03988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l03989"/>03989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03990"/>03990 
<anchor xml:id="_tasks_8c_source_1l03991"/>03991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Inherit&#32;the&#32;priority&#32;before&#32;being&#32;moved&#32;into&#32;the&#32;new&#32;list.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03992"/>03992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxMutexHolderTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;=&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>;
<anchor xml:id="_tasks_8c_source_1l03993"/>03993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a94afc7269fff7c906c5eb0d9d315624b">prvAddTaskToReadyList</link>(&#32;pxMutexHolderTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l03994"/>03994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l03995"/>03995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l03996"/>03996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l03997"/>03997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Just&#32;inherit&#32;the&#32;priority.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l03998"/>03998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxMutexHolderTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;=&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>;
<anchor xml:id="_tasks_8c_source_1l03999"/>03999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04000"/>04000 
<anchor xml:id="_tasks_8c_source_1l04001"/>04001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a4149bb2def17cb85a356c17fa6331c79">traceTASK_PRIORITY_INHERIT</link>(&#32;pxMutexHolderTCB,&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l04002"/>04002 
<anchor xml:id="_tasks_8c_source_1l04003"/>04003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Inheritance&#32;occurred.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04004"/>04004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l04005"/>04005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04006"/>04006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04007"/>04007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04008"/>04008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxMutexHolderTCB-&gt;<link linkend="_structtsk_task_control_block_1a3ce2f9306ee315873114616fb49a0ed2">uxBasePriority</link>&#32;&lt;&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l04009"/>04009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04010"/>04010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;base&#32;priority&#32;of&#32;the&#32;mutex&#32;holder&#32;is&#32;lower&#32;than&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l04011"/>04011 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;priority&#32;of&#32;the&#32;task&#32;attempting&#32;to&#32;take&#32;the&#32;mutex,&#32;but&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l04012"/>04012 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;current&#32;priority&#32;of&#32;the&#32;mutex&#32;holder&#32;is&#32;not&#32;lower&#32;than&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l04013"/>04013 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;priority&#32;of&#32;the&#32;task&#32;attempting&#32;to&#32;take&#32;the&#32;mutex.</emphasis>
<anchor xml:id="_tasks_8c_source_1l04014"/>04014 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Therefore&#32;the&#32;mutex&#32;holder&#32;must&#32;have&#32;already&#32;inherited&#32;a</emphasis>
<anchor xml:id="_tasks_8c_source_1l04015"/>04015 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;priority,&#32;but&#32;inheritance&#32;would&#32;have&#32;occurred&#32;if&#32;that&#32;had</emphasis>
<anchor xml:id="_tasks_8c_source_1l04016"/>04016 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;not&#32;been&#32;the&#32;case.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04017"/>04017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l04018"/>04018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04019"/>04019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04020"/>04020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04021"/>04021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04022"/>04022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04023"/>04023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04024"/>04024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04025"/>04025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04026"/>04026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04027"/>04027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04028"/>04028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04029"/>04029 
<anchor xml:id="_tasks_8c_source_1l04030"/>04030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l04031"/>04031 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04032"/>04032 
<anchor xml:id="_tasks_8c_source_1l04033"/>04033 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_MUTEXES&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l04034"/>04034 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04035"/>04035 
<anchor xml:id="_tasks_8c_source_1l04036"/>04036 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_MUTEXES&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l04037"/>04037 
<anchor xml:id="_tasks_8c_source_1l04038"/><link linkend="_task_8h_1a02fe2e1419fd6c35f75a1357c5e5ce22">04038</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_tasks_8c_1a5d3cae31dc49e7c8d552e7e16b226379">xTaskPriorityDisinherit</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;<emphasis role="keyword">const</emphasis>&#32;pxMutexHolder&#32;)
<anchor xml:id="_tasks_8c_source_1l04039"/>04039 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04040"/>04040 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxTCB&#32;=&#32;pxMutexHolder;
<anchor xml:id="_tasks_8c_source_1l04041"/>04041 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_tasks_8c_source_1l04042"/>04042 
<anchor xml:id="_tasks_8c_source_1l04043"/>04043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxMutexHolder&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l04044"/>04044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04045"/>04045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;task&#32;can&#32;only&#32;have&#32;an&#32;inherited&#32;priority&#32;if&#32;it&#32;holds&#32;the&#32;mutex.</emphasis>
<anchor xml:id="_tasks_8c_source_1l04046"/>04046 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;the&#32;mutex&#32;is&#32;held&#32;by&#32;a&#32;task&#32;then&#32;it&#32;cannot&#32;be&#32;given&#32;from&#32;an</emphasis>
<anchor xml:id="_tasks_8c_source_1l04047"/>04047 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;interrupt,&#32;and&#32;if&#32;a&#32;mutex&#32;is&#32;given&#32;by&#32;the&#32;holding&#32;task&#32;then&#32;it&#32;must</emphasis>
<anchor xml:id="_tasks_8c_source_1l04048"/>04048 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;be&#32;the&#32;running&#32;state&#32;task.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04049"/>04049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxTCB&#32;==&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l04050"/>04050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a405a8451e393290ef92337cd77a3bf1f">uxMutexesHeld</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l04051"/>04051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a405a8451e393290ef92337cd77a3bf1f">uxMutexesHeld</link>&#32;)--;
<anchor xml:id="_tasks_8c_source_1l04052"/>04052 
<anchor xml:id="_tasks_8c_source_1l04053"/>04053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Has&#32;the&#32;holder&#32;of&#32;the&#32;mutex&#32;inherited&#32;the&#32;priority&#32;of&#32;another</emphasis>
<anchor xml:id="_tasks_8c_source_1l04054"/>04054 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;task?&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04055"/>04055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;!=&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a3ce2f9306ee315873114616fb49a0ed2">uxBasePriority</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l04056"/>04056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04057"/>04057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Only&#32;disinherit&#32;if&#32;no&#32;other&#32;mutexes&#32;are&#32;held.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04058"/>04058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a405a8451e393290ef92337cd77a3bf1f">uxMutexesHeld</link>&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_tasks_8c_source_1l04059"/>04059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04060"/>04060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;task&#32;can&#32;only&#32;have&#32;an&#32;inherited&#32;priority&#32;if&#32;it&#32;holds</emphasis>
<anchor xml:id="_tasks_8c_source_1l04061"/>04061 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;mutex.&#32;&#32;If&#32;the&#32;mutex&#32;is&#32;held&#32;by&#32;a&#32;task&#32;then&#32;it&#32;cannot&#32;be</emphasis>
<anchor xml:id="_tasks_8c_source_1l04062"/>04062 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;given&#32;from&#32;an&#32;interrupt,&#32;and&#32;if&#32;a&#32;mutex&#32;is&#32;given&#32;by&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l04063"/>04063 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;holding&#32;task&#32;then&#32;it&#32;must&#32;be&#32;the&#32;running&#32;state&#32;task.&#32;&#32;Remove</emphasis>
<anchor xml:id="_tasks_8c_source_1l04064"/>04064 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;holding&#32;task&#32;from&#32;the&#32;ready&#32;list.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04065"/>04065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8c_1a274fdced76bbdd9d8a4c4840ded2920c">uxListRemove</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;)&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_tasks_8c_source_1l04066"/>04066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04067"/>04067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a9517fc40d713aff9dd8182223948f9c8">taskRESET_READY_PRIORITY</link>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l04068"/>04068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04069"/>04069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04070"/>04070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04071"/>04071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04072"/>04072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04073"/>04073 
<anchor xml:id="_tasks_8c_source_1l04074"/>04074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Disinherit&#32;the&#32;priority&#32;before&#32;adding&#32;the&#32;task&#32;into&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l04075"/>04075 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new&#32;ready&#32;list.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04076"/>04076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1aeef741f693914ccacb456313d613c810">traceTASK_PRIORITY_DISINHERIT</link>(&#32;pxTCB,&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a3ce2f9306ee315873114616fb49a0ed2">uxBasePriority</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l04077"/>04077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;=&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a3ce2f9306ee315873114616fb49a0ed2">uxBasePriority</link>;
<anchor xml:id="_tasks_8c_source_1l04078"/>04078 
<anchor xml:id="_tasks_8c_source_1l04079"/>04079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Reset&#32;the&#32;event&#32;list&#32;item&#32;value.&#32;&#32;It&#32;cannot&#32;be&#32;in&#32;use&#32;for</emphasis>
<anchor xml:id="_tasks_8c_source_1l04080"/>04080 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;any&#32;other&#32;purpose&#32;if&#32;this&#32;task&#32;is&#32;running,&#32;and&#32;it&#32;must&#32;be</emphasis>
<anchor xml:id="_tasks_8c_source_1l04081"/>04081 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;running&#32;to&#32;give&#32;back&#32;the&#32;mutex.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04082"/>04082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8h_1a83e95e61652f032fdc26aa622f5e2610">listSET_LIST_ITEM_VALUE</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;),&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;<link linkend="__free_r_t_o_s_config__default_8h_1a9a78f5ac61e6cb172dadf2a51f11db38">configMAX_PRIORITIES</link>&#32;-&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;);&#32;<emphasis role="comment">/*lint&#32;!e961&#32;MISRA&#32;exception&#32;as&#32;the&#32;casts&#32;are&#32;only&#32;redundant&#32;for&#32;some&#32;ports.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04083"/>04083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a94afc7269fff7c906c5eb0d9d315624b">prvAddTaskToReadyList</link>(&#32;pxTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l04084"/>04084 
<anchor xml:id="_tasks_8c_source_1l04085"/>04085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Return&#32;true&#32;to&#32;indicate&#32;that&#32;a&#32;context&#32;switch&#32;is&#32;required.</emphasis>
<anchor xml:id="_tasks_8c_source_1l04086"/>04086 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;is&#32;only&#32;actually&#32;required&#32;in&#32;the&#32;corner&#32;case&#32;whereby</emphasis>
<anchor xml:id="_tasks_8c_source_1l04087"/>04087 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;multiple&#32;mutexes&#32;were&#32;held&#32;and&#32;the&#32;mutexes&#32;were&#32;given&#32;back</emphasis>
<anchor xml:id="_tasks_8c_source_1l04088"/>04088 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in&#32;an&#32;order&#32;different&#32;to&#32;that&#32;in&#32;which&#32;they&#32;were&#32;taken.</emphasis>
<anchor xml:id="_tasks_8c_source_1l04089"/>04089 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;If&#32;a&#32;context&#32;switch&#32;did&#32;not&#32;occur&#32;when&#32;the&#32;first&#32;mutex&#32;was</emphasis>
<anchor xml:id="_tasks_8c_source_1l04090"/>04090 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;returned,&#32;even&#32;if&#32;a&#32;task&#32;was&#32;waiting&#32;on&#32;it,&#32;then&#32;a&#32;context</emphasis>
<anchor xml:id="_tasks_8c_source_1l04091"/>04091 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;switch&#32;should&#32;occur&#32;when&#32;the&#32;last&#32;mutex&#32;is&#32;returned&#32;whether</emphasis>
<anchor xml:id="_tasks_8c_source_1l04092"/>04092 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;task&#32;is&#32;waiting&#32;on&#32;it&#32;or&#32;not.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04093"/>04093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l04094"/>04094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04095"/>04095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04096"/>04096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04097"/>04097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04098"/>04098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04099"/>04099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04100"/>04100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04101"/>04101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04102"/>04102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04103"/>04103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04104"/>04104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04105"/>04105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04106"/>04106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04107"/>04107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04108"/>04108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04109"/>04109 
<anchor xml:id="_tasks_8c_source_1l04110"/>04110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l04111"/>04111 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04112"/>04112 
<anchor xml:id="_tasks_8c_source_1l04113"/>04113 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_MUTEXES&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l04114"/>04114 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04115"/>04115 
<anchor xml:id="_tasks_8c_source_1l04116"/>04116 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_MUTEXES&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l04117"/>04117 
<anchor xml:id="_tasks_8c_source_1l04118"/><link linkend="_task_8h_1aa11e6a58d2534fe91ed8ee3a02c9b5e0">04118</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1a8d317cbb8311a0f572dbee9fe35ab01d">vTaskPriorityDisinheritAfterTimeout</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;<emphasis role="keyword">const</emphasis>&#32;pxMutexHolder,&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxHighestPriorityWaitingTask&#32;)
<anchor xml:id="_tasks_8c_source_1l04119"/>04119 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04120"/>04120 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxTCB&#32;=&#32;pxMutexHolder;
<anchor xml:id="_tasks_8c_source_1l04121"/>04121 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxPriorityUsedOnEntry,&#32;uxPriorityToUse;
<anchor xml:id="_tasks_8c_source_1l04122"/>04122 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxOnlyOneMutexHeld&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;1;
<anchor xml:id="_tasks_8c_source_1l04123"/>04123 
<anchor xml:id="_tasks_8c_source_1l04124"/>04124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxMutexHolder&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l04125"/>04125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04126"/>04126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;pxMutexHolder&#32;is&#32;not&#32;NULL&#32;then&#32;the&#32;holder&#32;must&#32;hold&#32;at&#32;least</emphasis>
<anchor xml:id="_tasks_8c_source_1l04127"/>04127 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;one&#32;mutex.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04128"/>04128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a405a8451e393290ef92337cd77a3bf1f">uxMutexesHeld</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l04129"/>04129 
<anchor xml:id="_tasks_8c_source_1l04130"/>04130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Determine&#32;the&#32;priority&#32;to&#32;which&#32;the&#32;priority&#32;of&#32;the&#32;task&#32;that</emphasis>
<anchor xml:id="_tasks_8c_source_1l04131"/>04131 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;holds&#32;the&#32;mutex&#32;should&#32;be&#32;set.&#32;&#32;This&#32;will&#32;be&#32;the&#32;greater&#32;of&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l04132"/>04132 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;holding&#32;task&apos;s&#32;base&#32;priority&#32;and&#32;the&#32;priority&#32;of&#32;the&#32;highest</emphasis>
<anchor xml:id="_tasks_8c_source_1l04133"/>04133 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;priority&#32;task&#32;that&#32;is&#32;waiting&#32;to&#32;obtain&#32;the&#32;mutex.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04134"/>04134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a3ce2f9306ee315873114616fb49a0ed2">uxBasePriority</link>&#32;&lt;&#32;uxHighestPriorityWaitingTask&#32;)
<anchor xml:id="_tasks_8c_source_1l04135"/>04135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04136"/>04136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxPriorityToUse&#32;=&#32;uxHighestPriorityWaitingTask;
<anchor xml:id="_tasks_8c_source_1l04137"/>04137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04138"/>04138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04139"/>04139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04140"/>04140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxPriorityToUse&#32;=&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a3ce2f9306ee315873114616fb49a0ed2">uxBasePriority</link>;
<anchor xml:id="_tasks_8c_source_1l04141"/>04141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04142"/>04142 
<anchor xml:id="_tasks_8c_source_1l04143"/>04143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Does&#32;the&#32;priority&#32;need&#32;to&#32;change?&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04144"/>04144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;!=&#32;uxPriorityToUse&#32;)
<anchor xml:id="_tasks_8c_source_1l04145"/>04145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04146"/>04146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Only&#32;disinherit&#32;if&#32;no&#32;other&#32;mutexes&#32;are&#32;held.&#32;&#32;This&#32;is&#32;a</emphasis>
<anchor xml:id="_tasks_8c_source_1l04147"/>04147 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;simplification&#32;in&#32;the&#32;priority&#32;inheritance&#32;implementation.&#32;&#32;If</emphasis>
<anchor xml:id="_tasks_8c_source_1l04148"/>04148 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;task&#32;that&#32;holds&#32;the&#32;mutex&#32;is&#32;also&#32;holding&#32;other&#32;mutexes&#32;then</emphasis>
<anchor xml:id="_tasks_8c_source_1l04149"/>04149 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;other&#32;mutexes&#32;may&#32;have&#32;caused&#32;the&#32;priority&#32;inheritance.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04150"/>04150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a405a8451e393290ef92337cd77a3bf1f">uxMutexesHeld</link>&#32;==&#32;uxOnlyOneMutexHeld&#32;)
<anchor xml:id="_tasks_8c_source_1l04151"/>04151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04152"/>04152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;a&#32;task&#32;has&#32;timed&#32;out&#32;because&#32;it&#32;already&#32;holds&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l04153"/>04153 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mutex&#32;it&#32;was&#32;trying&#32;to&#32;obtain&#32;then&#32;it&#32;cannot&#32;of&#32;inherited</emphasis>
<anchor xml:id="_tasks_8c_source_1l04154"/>04154 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;its&#32;own&#32;priority.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04155"/>04155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxTCB&#32;!=&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l04156"/>04156 
<anchor xml:id="_tasks_8c_source_1l04157"/>04157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Disinherit&#32;the&#32;priority,&#32;remembering&#32;the&#32;previous</emphasis>
<anchor xml:id="_tasks_8c_source_1l04158"/>04158 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;priority&#32;to&#32;facilitate&#32;determining&#32;the&#32;subject&#32;task&apos;s</emphasis>
<anchor xml:id="_tasks_8c_source_1l04159"/>04159 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;state.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04160"/>04160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1aeef741f693914ccacb456313d613c810">traceTASK_PRIORITY_DISINHERIT</link>(&#32;pxTCB,&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a3ce2f9306ee315873114616fb49a0ed2">uxBasePriority</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l04161"/>04161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxPriorityUsedOnEntry&#32;=&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>;
<anchor xml:id="_tasks_8c_source_1l04162"/>04162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;=&#32;uxPriorityToUse;
<anchor xml:id="_tasks_8c_source_1l04163"/>04163 
<anchor xml:id="_tasks_8c_source_1l04164"/>04164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Only&#32;reset&#32;the&#32;event&#32;list&#32;item&#32;value&#32;if&#32;the&#32;value&#32;is&#32;not</emphasis>
<anchor xml:id="_tasks_8c_source_1l04165"/>04165 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;being&#32;used&#32;for&#32;anything&#32;else.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04166"/>04166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;<link linkend="_list_8h_1aa50d09950abc602741d7ebe8387f4e1a">listGET_LIST_ITEM_VALUE</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;)&#32;&amp;&#32;<link linkend="_tasks_8c_1a3e36f3eda563e810a24ab36ee7c978d4">taskEVENT_LIST_ITEM_VALUE_IN_USE</link>&#32;)&#32;==&#32;0UL&#32;)
<anchor xml:id="_tasks_8c_source_1l04167"/>04167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04168"/>04168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8h_1a83e95e61652f032fdc26aa622f5e2610">listSET_LIST_ITEM_VALUE</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;),&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;<link linkend="__free_r_t_o_s_config__default_8h_1a9a78f5ac61e6cb172dadf2a51f11db38">configMAX_PRIORITIES</link>&#32;-&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;uxPriorityToUse&#32;);&#32;<emphasis role="comment">/*lint&#32;!e961&#32;MISRA&#32;exception&#32;as&#32;the&#32;casts&#32;are&#32;only&#32;redundant&#32;for&#32;some&#32;ports.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04169"/>04169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04170"/>04170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04171"/>04171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04172"/>04172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04173"/>04173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04174"/>04174 
<anchor xml:id="_tasks_8c_source_1l04175"/>04175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;running&#32;task&#32;is&#32;not&#32;the&#32;task&#32;that&#32;holds&#32;the&#32;mutex</emphasis>
<anchor xml:id="_tasks_8c_source_1l04176"/>04176 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;then&#32;the&#32;task&#32;that&#32;holds&#32;the&#32;mutex&#32;could&#32;be&#32;in&#32;either&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l04177"/>04177 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ready,&#32;Blocked&#32;or&#32;Suspended&#32;states.&#32;&#32;Only&#32;remove&#32;the&#32;task</emphasis>
<anchor xml:id="_tasks_8c_source_1l04178"/>04178 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;from&#32;its&#32;current&#32;state&#32;list&#32;if&#32;it&#32;is&#32;in&#32;the&#32;Ready&#32;state&#32;as</emphasis>
<anchor xml:id="_tasks_8c_source_1l04179"/>04179 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;task&apos;s&#32;priority&#32;is&#32;going&#32;to&#32;change&#32;and&#32;there&#32;is&#32;one</emphasis>
<anchor xml:id="_tasks_8c_source_1l04180"/>04180 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ready&#32;list&#32;per&#32;priority.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04181"/>04181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1a60302b468d21f8c53d13987372acb8fa">listIS_CONTAINED_WITHIN</link>(&#32;&amp;(&#32;<link linkend="_tasks_8c_1ab4a8345f8c340d07086342c0dd92c972">pxReadyTasksLists</link>[&#32;uxPriorityUsedOnEntry&#32;]&#32;),&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l04182"/>04182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04183"/>04183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8c_1a274fdced76bbdd9d8a4c4840ded2920c">uxListRemove</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;)&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_tasks_8c_source_1l04184"/>04184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04185"/>04185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a9517fc40d713aff9dd8182223948f9c8">taskRESET_READY_PRIORITY</link>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l04186"/>04186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04187"/>04187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04188"/>04188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04189"/>04189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04190"/>04190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04191"/>04191 
<anchor xml:id="_tasks_8c_source_1l04192"/>04192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a94afc7269fff7c906c5eb0d9d315624b">prvAddTaskToReadyList</link>(&#32;pxTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l04193"/>04193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04194"/>04194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04195"/>04195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04196"/>04196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04197"/>04197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04198"/>04198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04199"/>04199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04200"/>04200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04201"/>04201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04202"/>04202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04203"/>04203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04204"/>04204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04205"/>04205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04206"/>04206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04207"/>04207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04208"/>04208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04209"/>04209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04210"/>04210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04211"/>04211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04212"/>04212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04213"/>04213 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04214"/>04214 
<anchor xml:id="_tasks_8c_source_1l04215"/>04215 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_MUTEXES&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l04216"/>04216 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04217"/>04217 
<anchor xml:id="_tasks_8c_source_1l04218"/>04218 <emphasis role="preprocessor">#if&#32;(&#32;portCRITICAL_NESTING_IN_TCB&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l04219"/>04219 
<anchor xml:id="_tasks_8c_source_1l04220"/>04220 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;vTaskEnterCritical(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)
<anchor xml:id="_tasks_8c_source_1l04221"/>04221 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04222"/>04222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a6e3d10ee1a0734a647ca192523c2cfc1">portDISABLE_INTERRUPTS</link>();
<anchor xml:id="_tasks_8c_source_1l04223"/>04223 
<anchor xml:id="_tasks_8c_source_1l04224"/>04224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a1799bfbb95c907794761d18bd75faff5">xSchedulerRunning</link>&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l04225"/>04225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04226"/>04226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;uxCriticalNesting&#32;)++;
<anchor xml:id="_tasks_8c_source_1l04227"/>04227 
<anchor xml:id="_tasks_8c_source_1l04228"/>04228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;is&#32;not&#32;the&#32;interrupt&#32;safe&#32;version&#32;of&#32;the&#32;enter&#32;critical</emphasis>
<anchor xml:id="_tasks_8c_source_1l04229"/>04229 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&#32;so&#32;assert()&#32;if&#32;it&#32;is&#32;being&#32;called&#32;from&#32;an&#32;interrupt</emphasis>
<anchor xml:id="_tasks_8c_source_1l04230"/>04230 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;context.&#32;&#32;Only&#32;API&#32;functions&#32;that&#32;end&#32;in&#32;&quot;FromISR&quot;&#32;can&#32;be&#32;used&#32;in&#32;an</emphasis>
<anchor xml:id="_tasks_8c_source_1l04231"/>04231 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;interrupt.&#32;&#32;Only&#32;assert&#32;if&#32;the&#32;critical&#32;nesting&#32;count&#32;is&#32;1&#32;to</emphasis>
<anchor xml:id="_tasks_8c_source_1l04232"/>04232 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;protect&#32;against&#32;recursive&#32;calls&#32;if&#32;the&#32;assert&#32;function&#32;also&#32;uses&#32;a</emphasis>
<anchor xml:id="_tasks_8c_source_1l04233"/>04233 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;critical&#32;section.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04234"/>04234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;uxCriticalNesting&#32;==&#32;1&#32;)
<anchor xml:id="_tasks_8c_source_1l04235"/>04235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04236"/>04236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a24a48f166f347e5201a72efcc73d0202">portASSERT_IF_IN_ISR</link>();
<anchor xml:id="_tasks_8c_source_1l04237"/>04237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04238"/>04238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04239"/>04239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04240"/>04240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04241"/>04241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04242"/>04242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04243"/>04243 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04244"/>04244 
<anchor xml:id="_tasks_8c_source_1l04245"/>04245 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;portCRITICAL_NESTING_IN_TCB&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l04246"/>04246 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04247"/>04247 
<anchor xml:id="_tasks_8c_source_1l04248"/>04248 <emphasis role="preprocessor">#if&#32;(&#32;portCRITICAL_NESTING_IN_TCB&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l04249"/>04249 
<anchor xml:id="_tasks_8c_source_1l04250"/>04250 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;vTaskExitCritical(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)
<anchor xml:id="_tasks_8c_source_1l04251"/>04251 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04252"/>04252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a1799bfbb95c907794761d18bd75faff5">xSchedulerRunning</link>&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l04253"/>04253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04254"/>04254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;uxCriticalNesting&#32;&gt;&#32;0U&#32;)
<anchor xml:id="_tasks_8c_source_1l04255"/>04255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04256"/>04256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;uxCriticalNesting&#32;)--;
<anchor xml:id="_tasks_8c_source_1l04257"/>04257 
<anchor xml:id="_tasks_8c_source_1l04258"/>04258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;uxCriticalNesting&#32;==&#32;0U&#32;)
<anchor xml:id="_tasks_8c_source_1l04259"/>04259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04260"/>04260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1abc47e85a6befbb47961ad5ee7aa57173">portENABLE_INTERRUPTS</link>();
<anchor xml:id="_tasks_8c_source_1l04261"/>04261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04262"/>04262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04263"/>04263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04264"/>04264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04265"/>04265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04266"/>04266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04267"/>04267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04268"/>04268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04269"/>04269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04270"/>04270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04271"/>04271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04272"/>04272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04273"/>04273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04274"/>04274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04275"/>04275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04276"/>04276 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04277"/>04277 
<anchor xml:id="_tasks_8c_source_1l04278"/>04278 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;portCRITICAL_NESTING_IN_TCB&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l04279"/>04279 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04280"/>04280 
<anchor xml:id="_tasks_8c_source_1l04281"/>04281 <emphasis role="preprocessor">#if&#32;(&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configUSE_STATS_FORMATTING_FUNCTIONS&#32;&gt;&#32;0&#32;)&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l04282"/>04282 
<anchor xml:id="_tasks_8c_source_1l04283"/>04283 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*prvWriteNameToBuffer(&#32;<emphasis role="keywordtype">char</emphasis>&#32;*pcBuffer,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*pcTaskName&#32;)
<anchor xml:id="_tasks_8c_source_1l04284"/>04284 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04285"/>04285 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;x;
<anchor xml:id="_tasks_8c_source_1l04286"/>04286 
<anchor xml:id="_tasks_8c_source_1l04287"/>04287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Start&#32;by&#32;copying&#32;the&#32;entire&#32;string.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04288"/>04288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;strcpy(&#32;pcBuffer,&#32;pcTaskName&#32;);
<anchor xml:id="_tasks_8c_source_1l04289"/>04289 
<anchor xml:id="_tasks_8c_source_1l04290"/>04290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Pad&#32;the&#32;end&#32;of&#32;the&#32;string&#32;with&#32;spaces&#32;to&#32;ensure&#32;columns&#32;line&#32;up&#32;when</emphasis>
<anchor xml:id="_tasks_8c_source_1l04291"/>04291 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printed&#32;out.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04292"/>04292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;x&#32;=&#32;strlen(&#32;pcBuffer&#32;);&#32;x&#32;&lt;&#32;(&#32;size_t&#32;)&#32;(&#32;<link linkend="__free_r_t_o_s_config__default_8h_1ac388dc4041aab6997348828eb27fc1a8">configMAX_TASK_NAME_LEN</link>&#32;-&#32;1&#32;);&#32;x++&#32;)
<anchor xml:id="_tasks_8c_source_1l04293"/>04293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04294"/>04294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcBuffer[&#32;x&#32;]&#32;=&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>;
<anchor xml:id="_tasks_8c_source_1l04295"/>04295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04296"/>04296 
<anchor xml:id="_tasks_8c_source_1l04297"/>04297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Terminate.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04298"/>04298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcBuffer[&#32;x&#32;]&#32;=&#32;(&#32;char&#32;)&#32;0x00;
<anchor xml:id="_tasks_8c_source_1l04299"/>04299 
<anchor xml:id="_tasks_8c_source_1l04300"/>04300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Return&#32;the&#32;new&#32;end&#32;of&#32;string.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04301"/>04301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&amp;(&#32;pcBuffer[&#32;x&#32;]&#32;);
<anchor xml:id="_tasks_8c_source_1l04302"/>04302 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04303"/>04303 
<anchor xml:id="_tasks_8c_source_1l04304"/>04304 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configUSE_STATS_FORMATTING_FUNCTIONS&#32;&gt;&#32;0&#32;)&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l04305"/>04305 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04306"/>04306 
<anchor xml:id="_tasks_8c_source_1l04307"/>04307 <emphasis role="preprocessor">#if&#32;(&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configUSE_STATS_FORMATTING_FUNCTIONS&#32;&gt;&#32;0&#32;)&#32;&amp;&amp;&#32;(&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l04308"/>04308 
<anchor xml:id="_tasks_8c_source_1l04309"/>04309 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1ab87abc717f34ddced76802d12588a93d">vTaskList</link>(&#32;<emphasis role="keywordtype">char</emphasis>&#32;*&#32;pcWriteBuffer&#32;)
<anchor xml:id="_tasks_8c_source_1l04310"/>04310 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04311"/>04311 &#32;&#32;&#32;&#32;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s">TaskStatus_t</link>&#32;*pxTaskStatusArray;
<anchor xml:id="_tasks_8c_source_1l04312"/>04312 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxArraySize,&#32;x;
<anchor xml:id="_tasks_8c_source_1l04313"/>04313 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;cStatus;
<anchor xml:id="_tasks_8c_source_1l04314"/>04314 
<anchor xml:id="_tasks_8c_source_1l04315"/>04315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
<anchor xml:id="_tasks_8c_source_1l04316"/>04316 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;PLEASE&#32;NOTE:</emphasis>
<anchor xml:id="_tasks_8c_source_1l04317"/>04317 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
<anchor xml:id="_tasks_8c_source_1l04318"/>04318 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;This&#32;function&#32;is&#32;provided&#32;for&#32;convenience&#32;only,&#32;and&#32;is&#32;used&#32;by&#32;many</emphasis>
<anchor xml:id="_tasks_8c_source_1l04319"/>04319 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;of&#32;the&#32;demo&#32;applications.&#32;&#32;Do&#32;not&#32;consider&#32;it&#32;to&#32;be&#32;part&#32;of&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l04320"/>04320 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;scheduler.</emphasis>
<anchor xml:id="_tasks_8c_source_1l04321"/>04321 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
<anchor xml:id="_tasks_8c_source_1l04322"/>04322 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;vTaskList()&#32;calls&#32;uxTaskGetSystemState(),&#32;then&#32;formats&#32;part&#32;of&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l04323"/>04323 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;uxTaskGetSystemState()&#32;output&#32;into&#32;a&#32;human&#32;readable&#32;table&#32;that</emphasis>
<anchor xml:id="_tasks_8c_source_1l04324"/>04324 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;displays&#32;task&#32;names,&#32;states&#32;and&#32;stack&#32;usage.</emphasis>
<anchor xml:id="_tasks_8c_source_1l04325"/>04325 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
<anchor xml:id="_tasks_8c_source_1l04326"/>04326 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;vTaskList()&#32;has&#32;a&#32;dependency&#32;on&#32;the&#32;sprintf()&#32;C&#32;library&#32;function&#32;that</emphasis>
<anchor xml:id="_tasks_8c_source_1l04327"/>04327 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;might&#32;bloat&#32;the&#32;code&#32;size,&#32;use&#32;a&#32;lot&#32;of&#32;stack,&#32;and&#32;provide&#32;different</emphasis>
<anchor xml:id="_tasks_8c_source_1l04328"/>04328 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;results&#32;on&#32;different&#32;platforms.&#32;&#32;An&#32;alternative,&#32;tiny,&#32;third&#32;party,</emphasis>
<anchor xml:id="_tasks_8c_source_1l04329"/>04329 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;and&#32;limited&#32;functionality&#32;implementation&#32;of&#32;sprintf()&#32;is&#32;provided&#32;in</emphasis>
<anchor xml:id="_tasks_8c_source_1l04330"/>04330 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;many&#32;of&#32;the&#32;FreeRTOS/Demo&#32;sub-directories&#32;in&#32;a&#32;file&#32;called</emphasis>
<anchor xml:id="_tasks_8c_source_1l04331"/>04331 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;printf-stdarg.c&#32;(note&#32;printf-stdarg.c&#32;does&#32;not&#32;provide&#32;a&#32;full</emphasis>
<anchor xml:id="_tasks_8c_source_1l04332"/>04332 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;snprintf()&#32;implementation!).</emphasis>
<anchor xml:id="_tasks_8c_source_1l04333"/>04333 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
<anchor xml:id="_tasks_8c_source_1l04334"/>04334 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;It&#32;is&#32;recommended&#32;that&#32;production&#32;systems&#32;call&#32;uxTaskGetSystemState()</emphasis>
<anchor xml:id="_tasks_8c_source_1l04335"/>04335 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;directly&#32;to&#32;get&#32;access&#32;to&#32;raw&#32;stats&#32;data,&#32;rather&#32;than&#32;indirectly</emphasis>
<anchor xml:id="_tasks_8c_source_1l04336"/>04336 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;through&#32;a&#32;call&#32;to&#32;vTaskList().</emphasis>
<anchor xml:id="_tasks_8c_source_1l04337"/>04337 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04338"/>04338 
<anchor xml:id="_tasks_8c_source_1l04339"/>04339 
<anchor xml:id="_tasks_8c_source_1l04340"/>04340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Make&#32;sure&#32;the&#32;write&#32;buffer&#32;does&#32;not&#32;contain&#32;a&#32;string.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04341"/>04341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pcWriteBuffer&#32;=&#32;(&#32;char&#32;)&#32;0x00;
<anchor xml:id="_tasks_8c_source_1l04342"/>04342 
<anchor xml:id="_tasks_8c_source_1l04343"/>04343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Take&#32;a&#32;snapshot&#32;of&#32;the&#32;number&#32;of&#32;tasks&#32;in&#32;case&#32;it&#32;changes&#32;while&#32;this</emphasis>
<anchor xml:id="_tasks_8c_source_1l04344"/>04344 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&#32;is&#32;executing.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04345"/>04345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxArraySize&#32;=&#32;<link linkend="_tasks_8c_1a54edd210c179ef9d185f5ebb020eaa5a">uxCurrentNumberOfTasks</link>;
<anchor xml:id="_tasks_8c_source_1l04346"/>04346 
<anchor xml:id="_tasks_8c_source_1l04347"/>04347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Allocate&#32;an&#32;array&#32;index&#32;for&#32;each&#32;task.&#32;&#32;NOTE!&#32;&#32;if</emphasis>
<anchor xml:id="_tasks_8c_source_1l04348"/>04348 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;is&#32;set&#32;to&#32;0&#32;then&#32;pvPortMalloc()&#32;will</emphasis>
<anchor xml:id="_tasks_8c_source_1l04349"/>04349 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;equate&#32;to&#32;NULL.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04350"/>04350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskStatusArray&#32;=&#32;<link linkend="_heap__3_8c_1ac56bcb7515f081a5b3df83935499fa4a">pvPortMalloc</link>(&#32;<link linkend="_tasks_8c_1a54edd210c179ef9d185f5ebb020eaa5a">uxCurrentNumberOfTasks</link>&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s">TaskStatus_t</link>&#32;)&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9079&#32;All&#32;values&#32;returned&#32;by&#32;pvPortMalloc()&#32;have&#32;at&#32;least&#32;the&#32;alignment&#32;required&#32;by&#32;the&#32;MCU&apos;s&#32;stack&#32;and&#32;this&#32;allocation&#32;allocates&#32;a&#32;struct&#32;that&#32;has&#32;the&#32;alignment&#32;requirements&#32;of&#32;a&#32;pointer.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04351"/>04351 
<anchor xml:id="_tasks_8c_source_1l04352"/>04352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTaskStatusArray&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l04353"/>04353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04354"/>04354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Generate&#32;the&#32;(binary)&#32;data.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04355"/>04355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxArraySize&#32;=&#32;<link linkend="_tasks_8c_1a5bd92b080086390cae790e5bd74bd018">uxTaskGetSystemState</link>(&#32;pxTaskStatusArray,&#32;uxArraySize,&#32;NULL&#32;);
<anchor xml:id="_tasks_8c_source_1l04356"/>04356 
<anchor xml:id="_tasks_8c_source_1l04357"/>04357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Create&#32;a&#32;human&#32;readable&#32;table&#32;from&#32;the&#32;binary&#32;data.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04358"/>04358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;x&#32;=&#32;0;&#32;x&#32;&lt;&#32;uxArraySize;&#32;x++&#32;)
<anchor xml:id="_tasks_8c_source_1l04359"/>04359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04360"/>04360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(&#32;pxTaskStatusArray[&#32;x&#32;].eCurrentState&#32;)
<anchor xml:id="_tasks_8c_source_1l04361"/>04361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04362"/>04362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892ca83318c0d58e6b2bafaefa1be597fb8b6">eRunning</link>:&#32;&#32;&#32;&#32;&#32;&#32;cStatus&#32;=&#32;<link linkend="_tasks_8c_1a13f2f32dab5dee7a9b2c848c88ef9bcc">tskRUNNING_CHAR</link>;
<anchor xml:id="_tasks_8c_source_1l04363"/>04363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_tasks_8c_source_1l04364"/>04364 
<anchor xml:id="_tasks_8c_source_1l04365"/>04365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892ca8570b65f331057b2cf92c504f0a2bc83">eReady</link>:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cStatus&#32;=&#32;<link linkend="_tasks_8c_1a2fd6c7a58ad28dd1f2c1e322b1ab3fcb">tskREADY_CHAR</link>;
<anchor xml:id="_tasks_8c_source_1l04366"/>04366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_tasks_8c_source_1l04367"/>04367 
<anchor xml:id="_tasks_8c_source_1l04368"/>04368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892cad23d72c68f43b6fff4962ad4154766af">eBlocked</link>:&#32;&#32;&#32;&#32;&#32;&#32;cStatus&#32;=&#32;<link linkend="_tasks_8c_1a4cd87df39bdffff557d06f4ff15a30b0">tskBLOCKED_CHAR</link>;
<anchor xml:id="_tasks_8c_source_1l04369"/>04369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_tasks_8c_source_1l04370"/>04370 
<anchor xml:id="_tasks_8c_source_1l04371"/>04371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892caf35a900d49fdfc2502eefc68fdb70f72">eSuspended</link>:&#32;&#32;&#32;&#32;cStatus&#32;=&#32;<link linkend="_tasks_8c_1a3613b4b66406c8f6cc73e5c3e9f208db">tskSUSPENDED_CHAR</link>;
<anchor xml:id="_tasks_8c_source_1l04372"/>04372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_tasks_8c_source_1l04373"/>04373 
<anchor xml:id="_tasks_8c_source_1l04374"/>04374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892cacef5c6e771d3a07f656e07a13a20ba35">eDeleted</link>:&#32;&#32;&#32;&#32;&#32;&#32;cStatus&#32;=&#32;<link linkend="_tasks_8c_1a9aba572191d065741f5a3e94c416d455">tskDELETED_CHAR</link>;
<anchor xml:id="_tasks_8c_source_1l04375"/>04375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_tasks_8c_source_1l04376"/>04376 
<anchor xml:id="_tasks_8c_source_1l04377"/>04377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_task_8h_1a1749369458e2282a22e862a619a3892cab32c771bb60dc8b502f65b81eef3bd86">eInvalid</link>:&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Fall&#32;through.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04378"/>04378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Should&#32;not&#32;get&#32;here,&#32;but&#32;it&#32;is&#32;included</emphasis>
<anchor xml:id="_tasks_8c_source_1l04379"/>04379 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;prevent&#32;static&#32;checking&#32;errors.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04380"/>04380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cStatus&#32;=&#32;(&#32;char&#32;)&#32;0x00;
<anchor xml:id="_tasks_8c_source_1l04381"/>04381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_tasks_8c_source_1l04382"/>04382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04383"/>04383 
<anchor xml:id="_tasks_8c_source_1l04384"/>04384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Write&#32;the&#32;task&#32;name&#32;to&#32;the&#32;string,&#32;padding&#32;with&#32;spaces&#32;so&#32;it</emphasis>
<anchor xml:id="_tasks_8c_source_1l04385"/>04385 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;can&#32;be&#32;printed&#32;in&#32;tabular&#32;form&#32;more&#32;easily.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04386"/>04386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcWriteBuffer&#32;=&#32;prvWriteNameToBuffer(&#32;pcWriteBuffer,&#32;pxTaskStatusArray[&#32;x&#32;].pcTaskName&#32;);
<anchor xml:id="_tasks_8c_source_1l04387"/>04387 
<anchor xml:id="_tasks_8c_source_1l04388"/>04388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Write&#32;the&#32;rest&#32;of&#32;the&#32;string.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04389"/>04389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sprintf(&#32;pcWriteBuffer,&#32;<emphasis role="stringliteral">&quot;\t%c\t%u\t%u\t%u\r\n&quot;</emphasis>,&#32;cStatus,&#32;(&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;)&#32;pxTaskStatusArray[&#32;x&#32;].uxCurrentPriority,&#32;(&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;)&#32;pxTaskStatusArray[&#32;x&#32;].usStackHighWaterMark,&#32;(&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;)&#32;pxTaskStatusArray[&#32;x&#32;].xTaskNumber&#32;);&#32;<emphasis role="comment">/*lint&#32;!e586&#32;sprintf()&#32;allowed&#32;as&#32;this&#32;is&#32;compiled&#32;with&#32;many&#32;compilers&#32;and&#32;this&#32;is&#32;a&#32;utility&#32;function&#32;only&#32;-&#32;not&#32;part&#32;of&#32;the&#32;core&#32;kernel&#32;implementation.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04390"/>04390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcWriteBuffer&#32;+=&#32;strlen(&#32;pcWriteBuffer&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9016&#32;Pointer&#32;arithmetic&#32;ok&#32;on&#32;char&#32;pointers&#32;especially&#32;as&#32;in&#32;this&#32;case&#32;where&#32;it&#32;best&#32;denotes&#32;the&#32;intent&#32;of&#32;the&#32;code.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04391"/>04391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04392"/>04392 
<anchor xml:id="_tasks_8c_source_1l04393"/>04393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Free&#32;the&#32;array&#32;again.&#32;&#32;NOTE!&#32;&#32;If&#32;configSUPPORT_DYNAMIC_ALLOCATION</emphasis>
<anchor xml:id="_tasks_8c_source_1l04394"/>04394 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;0&#32;then&#32;vPortFree()&#32;will&#32;be&#32;#defined&#32;to&#32;nothing.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04395"/>04395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_heap__3_8c_1a1e7cea2fd1bc894ea3b5f5e8179d259b">vPortFree</link>(&#32;pxTaskStatusArray&#32;);
<anchor xml:id="_tasks_8c_source_1l04396"/>04396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04397"/>04397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04398"/>04398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04399"/>04399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04400"/>04400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04401"/>04401 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04402"/>04402 
<anchor xml:id="_tasks_8c_source_1l04403"/>04403 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;(&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configUSE_STATS_FORMATTING_FUNCTIONS&#32;&gt;&#32;0&#32;)&#32;&amp;&amp;&#32;(&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;==&#32;1&#32;)&#32;)&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l04404"/>04404 <emphasis role="comment">/*----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04405"/>04405 
<anchor xml:id="_tasks_8c_source_1l04406"/>04406 <emphasis role="preprocessor">#if&#32;(&#32;(&#32;configGENERATE_RUN_TIME_STATS&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configUSE_STATS_FORMATTING_FUNCTIONS&#32;&gt;&#32;0&#32;)&#32;&amp;&amp;&#32;(&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l04407"/>04407 
<anchor xml:id="_tasks_8c_source_1l04408"/>04408 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_task_8h_1a52da9b427041a48dc9f6802e10f151d4">vTaskGetRunTimeStats</link>(&#32;<emphasis role="keywordtype">char</emphasis>&#32;*pcWriteBuffer&#32;)
<anchor xml:id="_tasks_8c_source_1l04409"/>04409 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04410"/>04410 &#32;&#32;&#32;&#32;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s">TaskStatus_t</link>&#32;*pxTaskStatusArray;
<anchor xml:id="_tasks_8c_source_1l04411"/>04411 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxArraySize,&#32;x;
<anchor xml:id="_tasks_8c_source_1l04412"/>04412 &#32;&#32;&#32;&#32;uint32_t&#32;ulTotalTime,&#32;ulStatsAsPercentage;
<anchor xml:id="_tasks_8c_source_1l04413"/>04413 
<anchor xml:id="_tasks_8c_source_1l04414"/>04414 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;configUSE_TRACE_FACILITY&#32;!=&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l04415"/>04415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04416"/>04416 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#error&#32;configUSE_TRACE_FACILITY&#32;must&#32;also&#32;be&#32;set&#32;to&#32;1&#32;in&#32;FreeRTOSConfig.h&#32;to&#32;use&#32;vTaskGetRunTimeStats().</emphasis>
<anchor xml:id="_tasks_8c_source_1l04417"/>04417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04418"/>04418 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l04419"/>04419 
<anchor xml:id="_tasks_8c_source_1l04420"/>04420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
<anchor xml:id="_tasks_8c_source_1l04421"/>04421 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;PLEASE&#32;NOTE:</emphasis>
<anchor xml:id="_tasks_8c_source_1l04422"/>04422 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
<anchor xml:id="_tasks_8c_source_1l04423"/>04423 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;This&#32;function&#32;is&#32;provided&#32;for&#32;convenience&#32;only,&#32;and&#32;is&#32;used&#32;by&#32;many</emphasis>
<anchor xml:id="_tasks_8c_source_1l04424"/>04424 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;of&#32;the&#32;demo&#32;applications.&#32;&#32;Do&#32;not&#32;consider&#32;it&#32;to&#32;be&#32;part&#32;of&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l04425"/>04425 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;scheduler.</emphasis>
<anchor xml:id="_tasks_8c_source_1l04426"/>04426 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
<anchor xml:id="_tasks_8c_source_1l04427"/>04427 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;vTaskGetRunTimeStats()&#32;calls&#32;uxTaskGetSystemState(),&#32;then&#32;formats&#32;part</emphasis>
<anchor xml:id="_tasks_8c_source_1l04428"/>04428 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;of&#32;the&#32;uxTaskGetSystemState()&#32;output&#32;into&#32;a&#32;human&#32;readable&#32;table&#32;that</emphasis>
<anchor xml:id="_tasks_8c_source_1l04429"/>04429 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;displays&#32;the&#32;amount&#32;of&#32;time&#32;each&#32;task&#32;has&#32;spent&#32;in&#32;the&#32;Running&#32;state</emphasis>
<anchor xml:id="_tasks_8c_source_1l04430"/>04430 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;in&#32;both&#32;absolute&#32;and&#32;percentage&#32;terms.</emphasis>
<anchor xml:id="_tasks_8c_source_1l04431"/>04431 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
<anchor xml:id="_tasks_8c_source_1l04432"/>04432 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;vTaskGetRunTimeStats()&#32;has&#32;a&#32;dependency&#32;on&#32;the&#32;sprintf()&#32;C&#32;library</emphasis>
<anchor xml:id="_tasks_8c_source_1l04433"/>04433 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;function&#32;that&#32;might&#32;bloat&#32;the&#32;code&#32;size,&#32;use&#32;a&#32;lot&#32;of&#32;stack,&#32;and</emphasis>
<anchor xml:id="_tasks_8c_source_1l04434"/>04434 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;provide&#32;different&#32;results&#32;on&#32;different&#32;platforms.&#32;&#32;An&#32;alternative,</emphasis>
<anchor xml:id="_tasks_8c_source_1l04435"/>04435 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;tiny,&#32;third&#32;party,&#32;and&#32;limited&#32;functionality&#32;implementation&#32;of</emphasis>
<anchor xml:id="_tasks_8c_source_1l04436"/>04436 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;sprintf()&#32;is&#32;provided&#32;in&#32;many&#32;of&#32;the&#32;FreeRTOS/Demo&#32;sub-directories&#32;in</emphasis>
<anchor xml:id="_tasks_8c_source_1l04437"/>04437 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;a&#32;file&#32;called&#32;printf-stdarg.c&#32;(note&#32;printf-stdarg.c&#32;does&#32;not&#32;provide</emphasis>
<anchor xml:id="_tasks_8c_source_1l04438"/>04438 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;a&#32;full&#32;snprintf()&#32;implementation!).</emphasis>
<anchor xml:id="_tasks_8c_source_1l04439"/>04439 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
<anchor xml:id="_tasks_8c_source_1l04440"/>04440 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;It&#32;is&#32;recommended&#32;that&#32;production&#32;systems&#32;call&#32;uxTaskGetSystemState()</emphasis>
<anchor xml:id="_tasks_8c_source_1l04441"/>04441 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;directly&#32;to&#32;get&#32;access&#32;to&#32;raw&#32;stats&#32;data,&#32;rather&#32;than&#32;indirectly</emphasis>
<anchor xml:id="_tasks_8c_source_1l04442"/>04442 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;through&#32;a&#32;call&#32;to&#32;vTaskGetRunTimeStats().</emphasis>
<anchor xml:id="_tasks_8c_source_1l04443"/>04443 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04444"/>04444 
<anchor xml:id="_tasks_8c_source_1l04445"/>04445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Make&#32;sure&#32;the&#32;write&#32;buffer&#32;does&#32;not&#32;contain&#32;a&#32;string.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04446"/>04446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pcWriteBuffer&#32;=&#32;(&#32;char&#32;)&#32;0x00;
<anchor xml:id="_tasks_8c_source_1l04447"/>04447 
<anchor xml:id="_tasks_8c_source_1l04448"/>04448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Take&#32;a&#32;snapshot&#32;of&#32;the&#32;number&#32;of&#32;tasks&#32;in&#32;case&#32;it&#32;changes&#32;while&#32;this</emphasis>
<anchor xml:id="_tasks_8c_source_1l04449"/>04449 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;function&#32;is&#32;executing.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04450"/>04450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxArraySize&#32;=&#32;<link linkend="_tasks_8c_1a54edd210c179ef9d185f5ebb020eaa5a">uxCurrentNumberOfTasks</link>;
<anchor xml:id="_tasks_8c_source_1l04451"/>04451 
<anchor xml:id="_tasks_8c_source_1l04452"/>04452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Allocate&#32;an&#32;array&#32;index&#32;for&#32;each&#32;task.&#32;&#32;NOTE!&#32;&#32;If</emphasis>
<anchor xml:id="_tasks_8c_source_1l04453"/>04453 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;is&#32;set&#32;to&#32;0&#32;then&#32;pvPortMalloc()&#32;will</emphasis>
<anchor xml:id="_tasks_8c_source_1l04454"/>04454 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;equate&#32;to&#32;NULL.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04455"/>04455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTaskStatusArray&#32;=&#32;<link linkend="_heap__3_8c_1ac56bcb7515f081a5b3df83935499fa4a">pvPortMalloc</link>(&#32;<link linkend="_tasks_8c_1a54edd210c179ef9d185f5ebb020eaa5a">uxCurrentNumberOfTasks</link>&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<link linkend="_structx_t_a_s_k___s_t_a_t_u_s">TaskStatus_t</link>&#32;)&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9079&#32;All&#32;values&#32;returned&#32;by&#32;pvPortMalloc()&#32;have&#32;at&#32;least&#32;the&#32;alignment&#32;required&#32;by&#32;the&#32;MCU&apos;s&#32;stack&#32;and&#32;this&#32;allocation&#32;allocates&#32;a&#32;struct&#32;that&#32;has&#32;the&#32;alignment&#32;requirements&#32;of&#32;a&#32;pointer.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04456"/>04456 
<anchor xml:id="_tasks_8c_source_1l04457"/>04457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTaskStatusArray&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l04458"/>04458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04459"/>04459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Generate&#32;the&#32;(binary)&#32;data.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04460"/>04460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxArraySize&#32;=&#32;<link linkend="_tasks_8c_1a5bd92b080086390cae790e5bd74bd018">uxTaskGetSystemState</link>(&#32;pxTaskStatusArray,&#32;uxArraySize,&#32;&amp;ulTotalTime&#32;);
<anchor xml:id="_tasks_8c_source_1l04461"/>04461 
<anchor xml:id="_tasks_8c_source_1l04462"/>04462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;For&#32;percentage&#32;calculations.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04463"/>04463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulTotalTime&#32;/=&#32;100UL;
<anchor xml:id="_tasks_8c_source_1l04464"/>04464 
<anchor xml:id="_tasks_8c_source_1l04465"/>04465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Avoid&#32;divide&#32;by&#32;zero&#32;errors.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04466"/>04466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;ulTotalTime&#32;&gt;&#32;0UL&#32;)
<anchor xml:id="_tasks_8c_source_1l04467"/>04467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04468"/>04468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Create&#32;a&#32;human&#32;readable&#32;table&#32;from&#32;the&#32;binary&#32;data.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04469"/>04469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;x&#32;=&#32;0;&#32;x&#32;&lt;&#32;uxArraySize;&#32;x++&#32;)
<anchor xml:id="_tasks_8c_source_1l04470"/>04470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04471"/>04471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;What&#32;percentage&#32;of&#32;the&#32;total&#32;run&#32;time&#32;has&#32;the&#32;task&#32;used?</emphasis>
<anchor xml:id="_tasks_8c_source_1l04472"/>04472 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;This&#32;will&#32;always&#32;be&#32;rounded&#32;down&#32;to&#32;the&#32;nearest&#32;integer.</emphasis>
<anchor xml:id="_tasks_8c_source_1l04473"/>04473 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulTotalRunTimeDiv100&#32;has&#32;already&#32;been&#32;divided&#32;by&#32;100.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04474"/>04474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulStatsAsPercentage&#32;=&#32;pxTaskStatusArray[&#32;x&#32;].<link linkend="_structx_t_a_s_k___s_t_a_t_u_s_1a92ab83f4f376c255dedf8e06a78261f7">ulRunTimeCounter</link>&#32;/&#32;ulTotalTime;
<anchor xml:id="_tasks_8c_source_1l04475"/>04475 
<anchor xml:id="_tasks_8c_source_1l04476"/>04476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Write&#32;the&#32;task&#32;name&#32;to&#32;the&#32;string,&#32;padding&#32;with</emphasis>
<anchor xml:id="_tasks_8c_source_1l04477"/>04477 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spaces&#32;so&#32;it&#32;can&#32;be&#32;printed&#32;in&#32;tabular&#32;form&#32;more</emphasis>
<anchor xml:id="_tasks_8c_source_1l04478"/>04478 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;easily.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04479"/>04479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcWriteBuffer&#32;=&#32;prvWriteNameToBuffer(&#32;pcWriteBuffer,&#32;pxTaskStatusArray[&#32;x&#32;].pcTaskName&#32;);
<anchor xml:id="_tasks_8c_source_1l04480"/>04480 
<anchor xml:id="_tasks_8c_source_1l04481"/>04481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;ulStatsAsPercentage&#32;&gt;&#32;0UL&#32;)
<anchor xml:id="_tasks_8c_source_1l04482"/>04482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04483"/>04483 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#ifdef&#32;portLU_PRINTF_SPECIFIER_REQUIRED</emphasis>
<anchor xml:id="_tasks_8c_source_1l04484"/>04484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04485"/>04485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sprintf(&#32;pcWriteBuffer,&#32;<emphasis role="stringliteral">&quot;\t%lu\t\t%lu%%\r\n&quot;</emphasis>,&#32;pxTaskStatusArray[&#32;x&#32;].ulRunTimeCounter,&#32;ulStatsAsPercentage&#32;);
<anchor xml:id="_tasks_8c_source_1l04486"/>04486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04487"/>04487 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04488"/>04488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04489"/>04489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;sizeof(&#32;int&#32;)&#32;==&#32;sizeof(&#32;long&#32;)&#32;so&#32;a&#32;smaller</emphasis>
<anchor xml:id="_tasks_8c_source_1l04490"/>04490 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf()&#32;library&#32;can&#32;be&#32;used.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04491"/>04491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sprintf(&#32;pcWriteBuffer,&#32;<emphasis role="stringliteral">&quot;\t%u\t\t%u%%\r\n&quot;</emphasis>,&#32;(&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;)&#32;pxTaskStatusArray[&#32;x&#32;].ulRunTimeCounter,&#32;(&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;)&#32;ulStatsAsPercentage&#32;);&#32;<emphasis role="comment">/*lint&#32;!e586&#32;sprintf()&#32;allowed&#32;as&#32;this&#32;is&#32;compiled&#32;with&#32;many&#32;compilers&#32;and&#32;this&#32;is&#32;a&#32;utility&#32;function&#32;only&#32;-&#32;not&#32;part&#32;of&#32;the&#32;core&#32;kernel&#32;implementation.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04492"/>04492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04493"/>04493 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l04494"/>04494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04495"/>04495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04496"/>04496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04497"/>04497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;percentage&#32;is&#32;zero&#32;here&#32;then&#32;the&#32;task&#32;has</emphasis>
<anchor xml:id="_tasks_8c_source_1l04498"/>04498 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;consumed&#32;less&#32;than&#32;1%&#32;of&#32;the&#32;total&#32;run&#32;time.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04499"/>04499 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#ifdef&#32;portLU_PRINTF_SPECIFIER_REQUIRED</emphasis>
<anchor xml:id="_tasks_8c_source_1l04500"/>04500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04501"/>04501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sprintf(&#32;pcWriteBuffer,&#32;<emphasis role="stringliteral">&quot;\t%lu\t\t&lt;1%%\r\n&quot;</emphasis>,&#32;pxTaskStatusArray[&#32;x&#32;].ulRunTimeCounter&#32;);
<anchor xml:id="_tasks_8c_source_1l04502"/>04502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04503"/>04503 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04504"/>04504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04505"/>04505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;sizeof(&#32;int&#32;)&#32;==&#32;sizeof(&#32;long&#32;)&#32;so&#32;a&#32;smaller</emphasis>
<anchor xml:id="_tasks_8c_source_1l04506"/>04506 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf()&#32;library&#32;can&#32;be&#32;used.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04507"/>04507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sprintf(&#32;pcWriteBuffer,&#32;<emphasis role="stringliteral">&quot;\t%u\t\t&lt;1%%\r\n&quot;</emphasis>,&#32;(&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;)&#32;pxTaskStatusArray[&#32;x&#32;].ulRunTimeCounter&#32;);&#32;<emphasis role="comment">/*lint&#32;!e586&#32;sprintf()&#32;allowed&#32;as&#32;this&#32;is&#32;compiled&#32;with&#32;many&#32;compilers&#32;and&#32;this&#32;is&#32;a&#32;utility&#32;function&#32;only&#32;-&#32;not&#32;part&#32;of&#32;the&#32;core&#32;kernel&#32;implementation.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04508"/>04508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04509"/>04509 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l04510"/>04510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04511"/>04511 
<anchor xml:id="_tasks_8c_source_1l04512"/>04512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcWriteBuffer&#32;+=&#32;strlen(&#32;pcWriteBuffer&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9016&#32;Pointer&#32;arithmetic&#32;ok&#32;on&#32;char&#32;pointers&#32;especially&#32;as&#32;in&#32;this&#32;case&#32;where&#32;it&#32;best&#32;denotes&#32;the&#32;intent&#32;of&#32;the&#32;code.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04513"/>04513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04514"/>04514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04515"/>04515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04516"/>04516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04517"/>04517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04518"/>04518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04519"/>04519 
<anchor xml:id="_tasks_8c_source_1l04520"/>04520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Free&#32;the&#32;array&#32;again.&#32;&#32;NOTE!&#32;&#32;If&#32;configSUPPORT_DYNAMIC_ALLOCATION</emphasis>
<anchor xml:id="_tasks_8c_source_1l04521"/>04521 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;0&#32;then&#32;vPortFree()&#32;will&#32;be&#32;#defined&#32;to&#32;nothing.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04522"/>04522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_heap__3_8c_1a1e7cea2fd1bc894ea3b5f5e8179d259b">vPortFree</link>(&#32;pxTaskStatusArray&#32;);
<anchor xml:id="_tasks_8c_source_1l04523"/>04523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04524"/>04524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04525"/>04525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04526"/>04526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04527"/>04527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04528"/>04528 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04529"/>04529 
<anchor xml:id="_tasks_8c_source_1l04530"/>04530 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;(&#32;(&#32;configGENERATE_RUN_TIME_STATS&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configUSE_STATS_FORMATTING_FUNCTIONS&#32;&gt;&#32;0&#32;)&#32;&amp;&amp;&#32;(&#32;configSUPPORT_STATIC_ALLOCATION&#32;==&#32;1&#32;)&#32;)&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l04531"/>04531 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04532"/>04532 
<anchor xml:id="_tasks_8c_source_1l04533"/><link linkend="_task_8h_1a7793b4bbe45c10d4c5104c126b89e87c">04533</link> <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;<link linkend="_tasks_8c_1a7ffe39eff8b9037b2de04f15a10ba717">uxTaskResetEventItemValue</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)
<anchor xml:id="_tasks_8c_source_1l04534"/>04534 {
<anchor xml:id="_tasks_8c_source_1l04535"/>04535 <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;uxReturn;
<anchor xml:id="_tasks_8c_source_1l04536"/>04536 
<anchor xml:id="_tasks_8c_source_1l04537"/>04537 &#32;&#32;&#32;&#32;uxReturn&#32;=&#32;<link linkend="_list_8h_1aa50d09950abc602741d7ebe8387f4e1a">listGET_LIST_ITEM_VALUE</link>(&#32;&amp;(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l04538"/>04538 
<anchor xml:id="_tasks_8c_source_1l04539"/>04539 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Reset&#32;the&#32;event&#32;list&#32;item&#32;to&#32;its&#32;normal&#32;value&#32;-&#32;so&#32;it&#32;can&#32;be&#32;used&#32;with</emphasis>
<anchor xml:id="_tasks_8c_source_1l04540"/>04540 <emphasis role="comment">&#32;&#32;&#32;&#32;queues&#32;and&#32;semaphores.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04541"/>04541 &#32;&#32;&#32;&#32;<link linkend="_list_8h_1a83e95e61652f032fdc26aa622f5e2610">listSET_LIST_ITEM_VALUE</link>(&#32;&amp;(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;),&#32;(&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;<link linkend="__free_r_t_o_s_config__default_8h_1a9a78f5ac61e6cb172dadf2a51f11db38">configMAX_PRIORITIES</link>&#32;-&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;)&#32;);&#32;<emphasis role="comment">/*lint&#32;!e961&#32;MISRA&#32;exception&#32;as&#32;the&#32;casts&#32;are&#32;only&#32;redundant&#32;for&#32;some&#32;ports.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04542"/>04542 
<anchor xml:id="_tasks_8c_source_1l04543"/>04543 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;uxReturn;
<anchor xml:id="_tasks_8c_source_1l04544"/>04544 }
<anchor xml:id="_tasks_8c_source_1l04545"/>04545 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04546"/>04546 
<anchor xml:id="_tasks_8c_source_1l04547"/>04547 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_MUTEXES&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l04548"/>04548 
<anchor xml:id="_tasks_8c_source_1l04549"/><link linkend="_task_8h_1a54430b124666d513049dcbf888e6935f">04549</link> &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;<link linkend="_tasks_8c_1a9ccf2385d919ea110e39b7b3420bec0d">pvTaskIncrementMutexHeldCount</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)
<anchor xml:id="_tasks_8c_source_1l04550"/>04550 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04551"/>04551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;xSemaphoreCreateMutex()&#32;is&#32;called&#32;before&#32;any&#32;tasks&#32;have&#32;been&#32;created</emphasis>
<anchor xml:id="_tasks_8c_source_1l04552"/>04552 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;then&#32;pxCurrentTCB&#32;will&#32;be&#32;NULL.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04553"/>04553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l04554"/>04554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04555"/>04555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a405a8451e393290ef92337cd77a3bf1f">uxMutexesHeld</link>&#32;)++;
<anchor xml:id="_tasks_8c_source_1l04556"/>04556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04557"/>04557 
<anchor xml:id="_tasks_8c_source_1l04558"/>04558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>;
<anchor xml:id="_tasks_8c_source_1l04559"/>04559 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04560"/>04560 
<anchor xml:id="_tasks_8c_source_1l04561"/>04561 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_MUTEXES&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l04562"/>04562 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04563"/>04563 
<anchor xml:id="_tasks_8c_source_1l04564"/>04564 <emphasis role="preprocessor">#if(&#32;configUSE_TASK_NOTIFICATIONS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l04565"/>04565 
<anchor xml:id="_tasks_8c_source_1l04566"/><link linkend="_task_8h_1a66540bef602522a01a519f776e4c07d8">04566</link> &#32;&#32;&#32;&#32;uint32_t&#32;<link linkend="_tasks_8c_1a1dd29cf3d25f9968ac86b0ca35af8ada">ulTaskNotifyTake</link>(&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xClearCountOnExit,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait&#32;)
<anchor xml:id="_tasks_8c_source_1l04567"/>04567 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04568"/>04568 &#32;&#32;&#32;&#32;uint32_t&#32;ulReturn;
<anchor xml:id="_tasks_8c_source_1l04569"/>04569 
<anchor xml:id="_tasks_8c_source_1l04570"/>04570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l04571"/>04571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04572"/>04572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Only&#32;block&#32;if&#32;the&#32;notification&#32;count&#32;is&#32;not&#32;already&#32;non-zero.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04573"/>04573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a7c571b992f90bfe77414cab060ca2af8">ulNotifiedValue</link>&#32;==&#32;0UL&#32;)
<anchor xml:id="_tasks_8c_source_1l04574"/>04574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04575"/>04575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Mark&#32;this&#32;task&#32;as&#32;waiting&#32;for&#32;a&#32;notification.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04576"/>04576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1adab5291f06b774ed8f5bb6f76a77496f">ucNotifyState</link>&#32;=&#32;<link linkend="_tasks_8c_1acee66205293e253c13626e74798a0cf0">taskWAITING_NOTIFICATION</link>;
<anchor xml:id="_tasks_8c_source_1l04577"/>04577 
<anchor xml:id="_tasks_8c_source_1l04578"/>04578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTicksToWait&#32;&gt;&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_tasks_8c_source_1l04579"/>04579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04580"/>04580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1ab4574e77d9aea876272e563c68f639da">prvAddCurrentTaskToDelayedList</link>(&#32;xTicksToWait,&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l04581"/>04581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1af6c636f9baf2eb594ffb0b6689d1b729">traceTASK_NOTIFY_TAKE_BLOCK</link>();
<anchor xml:id="_tasks_8c_source_1l04582"/>04582 
<anchor xml:id="_tasks_8c_source_1l04583"/>04583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;All&#32;ports&#32;are&#32;written&#32;to&#32;allow&#32;a&#32;yield&#32;in&#32;a&#32;critical</emphasis>
<anchor xml:id="_tasks_8c_source_1l04584"/>04584 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;section&#32;(some&#32;will&#32;yield&#32;immediately,&#32;others&#32;wait&#32;until&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l04585"/>04585 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;critical&#32;section&#32;exits)&#32;-&#32;but&#32;it&#32;is&#32;not&#32;something&#32;that</emphasis>
<anchor xml:id="_tasks_8c_source_1l04586"/>04586 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;application&#32;code&#32;should&#32;ever&#32;do.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04587"/>04587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1af4484fc07631a16e45ac5f29a3f0556e">portYIELD_WITHIN_API</link>();
<anchor xml:id="_tasks_8c_source_1l04588"/>04588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04589"/>04589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04590"/>04590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04591"/>04591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04592"/>04592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04593"/>04593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04594"/>04594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04595"/>04595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04596"/>04596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04597"/>04597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04598"/>04598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04599"/>04599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l04600"/>04600 
<anchor xml:id="_tasks_8c_source_1l04601"/>04601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l04602"/>04602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04603"/>04603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ab60d0210392d54bc0539de67c8bb3bf6">traceTASK_NOTIFY_TAKE</link>();
<anchor xml:id="_tasks_8c_source_1l04604"/>04604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ulReturn&#32;=&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a7c571b992f90bfe77414cab060ca2af8">ulNotifiedValue</link>;
<anchor xml:id="_tasks_8c_source_1l04605"/>04605 
<anchor xml:id="_tasks_8c_source_1l04606"/>04606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;ulReturn&#32;!=&#32;0UL&#32;)
<anchor xml:id="_tasks_8c_source_1l04607"/>04607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04608"/>04608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xClearCountOnExit&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l04609"/>04609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04610"/>04610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a7c571b992f90bfe77414cab060ca2af8">ulNotifiedValue</link>&#32;=&#32;0UL;
<anchor xml:id="_tasks_8c_source_1l04611"/>04611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04612"/>04612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04613"/>04613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04614"/>04614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a7c571b992f90bfe77414cab060ca2af8">ulNotifiedValue</link>&#32;=&#32;ulReturn&#32;-&#32;(&#32;uint32_t&#32;)&#32;1;
<anchor xml:id="_tasks_8c_source_1l04615"/>04615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04616"/>04616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04617"/>04617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04618"/>04618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04619"/>04619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04620"/>04620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04621"/>04621 
<anchor xml:id="_tasks_8c_source_1l04622"/>04622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1adab5291f06b774ed8f5bb6f76a77496f">ucNotifyState</link>&#32;=&#32;<link linkend="_tasks_8c_1a4f2f023143b2cd2367a441e104f8cf2c">taskNOT_WAITING_NOTIFICATION</link>;
<anchor xml:id="_tasks_8c_source_1l04623"/>04623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04624"/>04624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l04625"/>04625 
<anchor xml:id="_tasks_8c_source_1l04626"/>04626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ulReturn;
<anchor xml:id="_tasks_8c_source_1l04627"/>04627 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04628"/>04628 
<anchor xml:id="_tasks_8c_source_1l04629"/>04629 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TASK_NOTIFICATIONS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l04630"/>04630 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04631"/>04631 
<anchor xml:id="_tasks_8c_source_1l04632"/>04632 <emphasis role="preprocessor">#if(&#32;configUSE_TASK_NOTIFICATIONS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l04633"/>04633 
<anchor xml:id="_tasks_8c_source_1l04634"/><link linkend="_task_8h_1a0475fcda9718f403521c270a7270ff93">04634</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_tasks_8c_1a7cab914767933dc732f2c36e3915f6b0">xTaskNotifyWait</link>(&#32;uint32_t&#32;ulBitsToClearOnEntry,&#32;uint32_t&#32;ulBitsToClearOnExit,&#32;uint32_t&#32;*pulNotificationValue,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait&#32;)
<anchor xml:id="_tasks_8c_source_1l04635"/>04635 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04636"/>04636 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l04637"/>04637 
<anchor xml:id="_tasks_8c_source_1l04638"/>04638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l04639"/>04639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04640"/>04640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Only&#32;block&#32;if&#32;a&#32;notification&#32;is&#32;not&#32;already&#32;pending.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04641"/>04641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1adab5291f06b774ed8f5bb6f76a77496f">ucNotifyState</link>&#32;!=&#32;<link linkend="_tasks_8c_1aa62ac91d5f644c98b5459c28ae4f689e">taskNOTIFICATION_RECEIVED</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l04642"/>04642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04643"/>04643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Clear&#32;bits&#32;in&#32;the&#32;task&apos;s&#32;notification&#32;value&#32;as&#32;bits&#32;may&#32;get</emphasis>
<anchor xml:id="_tasks_8c_source_1l04644"/>04644 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;set&#32;by&#32;the&#32;notifying&#32;task&#32;or&#32;interrupt.&#32;&#32;This&#32;can&#32;be&#32;used&#32;to</emphasis>
<anchor xml:id="_tasks_8c_source_1l04645"/>04645 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;clear&#32;the&#32;value&#32;to&#32;zero.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04646"/>04646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a7c571b992f90bfe77414cab060ca2af8">ulNotifiedValue</link>&#32;&amp;=&#32;~ulBitsToClearOnEntry;
<anchor xml:id="_tasks_8c_source_1l04647"/>04647 
<anchor xml:id="_tasks_8c_source_1l04648"/>04648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Mark&#32;this&#32;task&#32;as&#32;waiting&#32;for&#32;a&#32;notification.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04649"/>04649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1adab5291f06b774ed8f5bb6f76a77496f">ucNotifyState</link>&#32;=&#32;<link linkend="_tasks_8c_1acee66205293e253c13626e74798a0cf0">taskWAITING_NOTIFICATION</link>;
<anchor xml:id="_tasks_8c_source_1l04650"/>04650 
<anchor xml:id="_tasks_8c_source_1l04651"/>04651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTicksToWait&#32;&gt;&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_tasks_8c_source_1l04652"/>04652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04653"/>04653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1ab4574e77d9aea876272e563c68f639da">prvAddCurrentTaskToDelayedList</link>(&#32;xTicksToWait,&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>&#32;);
<anchor xml:id="_tasks_8c_source_1l04654"/>04654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a42d4b4f2c5bac89d617c27902606019c">traceTASK_NOTIFY_WAIT_BLOCK</link>();
<anchor xml:id="_tasks_8c_source_1l04655"/>04655 
<anchor xml:id="_tasks_8c_source_1l04656"/>04656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;All&#32;ports&#32;are&#32;written&#32;to&#32;allow&#32;a&#32;yield&#32;in&#32;a&#32;critical</emphasis>
<anchor xml:id="_tasks_8c_source_1l04657"/>04657 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;section&#32;(some&#32;will&#32;yield&#32;immediately,&#32;others&#32;wait&#32;until&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l04658"/>04658 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;critical&#32;section&#32;exits)&#32;-&#32;but&#32;it&#32;is&#32;not&#32;something&#32;that</emphasis>
<anchor xml:id="_tasks_8c_source_1l04659"/>04659 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;application&#32;code&#32;should&#32;ever&#32;do.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04660"/>04660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1af4484fc07631a16e45ac5f29a3f0556e">portYIELD_WITHIN_API</link>();
<anchor xml:id="_tasks_8c_source_1l04661"/>04661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04662"/>04662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04663"/>04663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04664"/>04664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04665"/>04665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04666"/>04666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04667"/>04667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04668"/>04668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04669"/>04669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04670"/>04670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04671"/>04671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04672"/>04672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l04673"/>04673 
<anchor xml:id="_tasks_8c_source_1l04674"/>04674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l04675"/>04675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04676"/>04676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a32ea7a3f22b7ef8b2ddc7b98848b8446">traceTASK_NOTIFY_WAIT</link>();
<anchor xml:id="_tasks_8c_source_1l04677"/>04677 
<anchor xml:id="_tasks_8c_source_1l04678"/>04678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pulNotificationValue&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l04679"/>04679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04680"/>04680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Output&#32;the&#32;current&#32;notification&#32;value,&#32;which&#32;may&#32;or&#32;may&#32;not</emphasis>
<anchor xml:id="_tasks_8c_source_1l04681"/>04681 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;have&#32;changed.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04682"/>04682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pulNotificationValue&#32;=&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a7c571b992f90bfe77414cab060ca2af8">ulNotifiedValue</link>;
<anchor xml:id="_tasks_8c_source_1l04683"/>04683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04684"/>04684 
<anchor xml:id="_tasks_8c_source_1l04685"/>04685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;ucNotifyValue&#32;is&#32;set&#32;then&#32;either&#32;the&#32;task&#32;never&#32;entered&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l04686"/>04686 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;blocked&#32;state&#32;(because&#32;a&#32;notification&#32;was&#32;already&#32;pending)&#32;or&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l04687"/>04687 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;task&#32;unblocked&#32;because&#32;of&#32;a&#32;notification.&#32;&#32;Otherwise&#32;the&#32;task</emphasis>
<anchor xml:id="_tasks_8c_source_1l04688"/>04688 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unblocked&#32;because&#32;of&#32;a&#32;timeout.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04689"/>04689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1adab5291f06b774ed8f5bb6f76a77496f">ucNotifyState</link>&#32;!=&#32;<link linkend="_tasks_8c_1aa62ac91d5f644c98b5459c28ae4f689e">taskNOTIFICATION_RECEIVED</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l04690"/>04690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04691"/>04691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;notification&#32;was&#32;not&#32;received.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04692"/>04692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_tasks_8c_source_1l04693"/>04693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04694"/>04694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04695"/>04695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04696"/>04696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;notification&#32;was&#32;already&#32;pending&#32;or&#32;a&#32;notification&#32;was</emphasis>
<anchor xml:id="_tasks_8c_source_1l04697"/>04697 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;received&#32;while&#32;the&#32;task&#32;was&#32;waiting.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04698"/>04698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a7c571b992f90bfe77414cab060ca2af8">ulNotifiedValue</link>&#32;&amp;=&#32;~ulBitsToClearOnExit;
<anchor xml:id="_tasks_8c_source_1l04699"/>04699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l04700"/>04700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04701"/>04701 
<anchor xml:id="_tasks_8c_source_1l04702"/>04702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1adab5291f06b774ed8f5bb6f76a77496f">ucNotifyState</link>&#32;=&#32;<link linkend="_tasks_8c_1a4f2f023143b2cd2367a441e104f8cf2c">taskNOT_WAITING_NOTIFICATION</link>;
<anchor xml:id="_tasks_8c_source_1l04703"/>04703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04704"/>04704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l04705"/>04705 
<anchor xml:id="_tasks_8c_source_1l04706"/>04706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l04707"/>04707 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04708"/>04708 
<anchor xml:id="_tasks_8c_source_1l04709"/>04709 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TASK_NOTIFICATIONS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l04710"/>04710 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04711"/>04711 
<anchor xml:id="_tasks_8c_source_1l04712"/>04712 <emphasis role="preprocessor">#if(&#32;configUSE_TASK_NOTIFICATIONS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l04713"/>04713 
<anchor xml:id="_tasks_8c_source_1l04714"/><link linkend="_task_8h_1aa7bd3a4f3847b83900fd6a9f1bacfe9e">04714</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_tasks_8c_1ab7ac3722f088a5530f7ac58cd48a5e7a">xTaskGenericNotify</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTaskToNotify,&#32;uint32_t&#32;ulValue,&#32;<link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233">eNotifyAction</link>&#32;eAction,&#32;uint32_t&#32;*pulPreviousNotificationValue&#32;)
<anchor xml:id="_tasks_8c_source_1l04715"/>04715 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04716"/>04716 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*&#32;pxTCB;
<anchor xml:id="_tasks_8c_source_1l04717"/>04717 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>;
<anchor xml:id="_tasks_8c_source_1l04718"/>04718 &#32;&#32;&#32;&#32;uint8_t&#32;ucOriginalNotifyState;
<anchor xml:id="_tasks_8c_source_1l04719"/>04719 
<anchor xml:id="_tasks_8c_source_1l04720"/>04720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xTaskToNotify&#32;);
<anchor xml:id="_tasks_8c_source_1l04721"/>04721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;xTaskToNotify;
<anchor xml:id="_tasks_8c_source_1l04722"/>04722 
<anchor xml:id="_tasks_8c_source_1l04723"/>04723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l04724"/>04724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04725"/>04725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pulPreviousNotificationValue&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l04726"/>04726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04727"/>04727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pulPreviousNotificationValue&#32;=&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a7c571b992f90bfe77414cab060ca2af8">ulNotifiedValue</link>;
<anchor xml:id="_tasks_8c_source_1l04728"/>04728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04729"/>04729 
<anchor xml:id="_tasks_8c_source_1l04730"/>04730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ucOriginalNotifyState&#32;=&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1adab5291f06b774ed8f5bb6f76a77496f">ucNotifyState</link>;
<anchor xml:id="_tasks_8c_source_1l04731"/>04731 
<anchor xml:id="_tasks_8c_source_1l04732"/>04732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1adab5291f06b774ed8f5bb6f76a77496f">ucNotifyState</link>&#32;=&#32;<link linkend="_tasks_8c_1aa62ac91d5f644c98b5459c28ae4f689e">taskNOTIFICATION_RECEIVED</link>;
<anchor xml:id="_tasks_8c_source_1l04733"/>04733 
<anchor xml:id="_tasks_8c_source_1l04734"/>04734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(&#32;eAction&#32;)
<anchor xml:id="_tasks_8c_source_1l04735"/>04735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04736"/>04736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233ab7b1af2eeee53ae78eeff37c1cb6f79b">eSetBits</link>&#32;&#32;&#32;:
<anchor xml:id="_tasks_8c_source_1l04737"/>04737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a7c571b992f90bfe77414cab060ca2af8">ulNotifiedValue</link>&#32;|=&#32;ulValue;
<anchor xml:id="_tasks_8c_source_1l04738"/>04738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_tasks_8c_source_1l04739"/>04739 
<anchor xml:id="_tasks_8c_source_1l04740"/>04740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233a04fb0e98d2400e4cd28f1593bc868822">eIncrement</link>&#32;:
<anchor xml:id="_tasks_8c_source_1l04741"/>04741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a7c571b992f90bfe77414cab060ca2af8">ulNotifiedValue</link>&#32;)++;
<anchor xml:id="_tasks_8c_source_1l04742"/>04742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_tasks_8c_source_1l04743"/>04743 
<anchor xml:id="_tasks_8c_source_1l04744"/>04744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233ab61fc296ef909186b5824c823b33e130">eSetValueWithOverwrite</link>&#32;:
<anchor xml:id="_tasks_8c_source_1l04745"/>04745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a7c571b992f90bfe77414cab060ca2af8">ulNotifiedValue</link>&#32;=&#32;ulValue;
<anchor xml:id="_tasks_8c_source_1l04746"/>04746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_tasks_8c_source_1l04747"/>04747 
<anchor xml:id="_tasks_8c_source_1l04748"/>04748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233acc4dd3fe71b62c751187a2c4c515abac">eSetValueWithoutOverwrite</link>&#32;:
<anchor xml:id="_tasks_8c_source_1l04749"/>04749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;ucOriginalNotifyState&#32;!=&#32;<link linkend="_tasks_8c_1aa62ac91d5f644c98b5459c28ae4f689e">taskNOTIFICATION_RECEIVED</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l04750"/>04750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04751"/>04751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a7c571b992f90bfe77414cab060ca2af8">ulNotifiedValue</link>&#32;=&#32;ulValue;
<anchor xml:id="_tasks_8c_source_1l04752"/>04752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04753"/>04753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04754"/>04754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04755"/>04755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;value&#32;could&#32;not&#32;be&#32;written&#32;to&#32;the&#32;task.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04756"/>04756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6">pdFAIL</link>;
<anchor xml:id="_tasks_8c_source_1l04757"/>04757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04758"/>04758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_tasks_8c_source_1l04759"/>04759 
<anchor xml:id="_tasks_8c_source_1l04760"/>04760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233abac2b17ab15444724b6f35d47cd0a64a">eNoAction</link>:
<anchor xml:id="_tasks_8c_source_1l04761"/>04761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;is&#32;being&#32;notified&#32;without&#32;its&#32;notify&#32;value&#32;being</emphasis>
<anchor xml:id="_tasks_8c_source_1l04762"/>04762 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;updated.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04763"/>04763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_tasks_8c_source_1l04764"/>04764 
<anchor xml:id="_tasks_8c_source_1l04765"/>04765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="_tasks_8c_source_1l04766"/>04766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Should&#32;not&#32;get&#32;here&#32;if&#32;all&#32;enums&#32;are&#32;handled.</emphasis>
<anchor xml:id="_tasks_8c_source_1l04767"/>04767 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Artificially&#32;force&#32;an&#32;assert&#32;by&#32;testing&#32;a&#32;value&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l04768"/>04768 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;compiler&#32;can&apos;t&#32;assume&#32;is&#32;const.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04769"/>04769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a7c571b992f90bfe77414cab060ca2af8">ulNotifiedValue</link>&#32;==&#32;~0UL&#32;);
<anchor xml:id="_tasks_8c_source_1l04770"/>04770 
<anchor xml:id="_tasks_8c_source_1l04771"/>04771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_tasks_8c_source_1l04772"/>04772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04773"/>04773 
<anchor xml:id="_tasks_8c_source_1l04774"/>04774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a0047b9beb807b3c8b31d485532f7b077">traceTASK_NOTIFY</link>();
<anchor xml:id="_tasks_8c_source_1l04775"/>04775 
<anchor xml:id="_tasks_8c_source_1l04776"/>04776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;task&#32;is&#32;in&#32;the&#32;blocked&#32;state&#32;specifically&#32;to&#32;wait&#32;for&#32;a</emphasis>
<anchor xml:id="_tasks_8c_source_1l04777"/>04777 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;notification&#32;then&#32;unblock&#32;it&#32;now.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04778"/>04778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;ucOriginalNotifyState&#32;==&#32;<link linkend="_tasks_8c_1acee66205293e253c13626e74798a0cf0">taskWAITING_NOTIFICATION</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l04779"/>04779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04780"/>04780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_list_8c_1a274fdced76bbdd9d8a4c4840ded2920c">uxListRemove</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l04781"/>04781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a94afc7269fff7c906c5eb0d9d315624b">prvAddTaskToReadyList</link>(&#32;pxTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l04782"/>04782 
<anchor xml:id="_tasks_8c_source_1l04783"/>04783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;should&#32;not&#32;have&#32;been&#32;on&#32;an&#32;event&#32;list.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04784"/>04784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;<link linkend="_list_8h_1a7c4dff11380cd843ed0b6a8dc065916b">listLIST_ITEM_CONTAINER</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;)&#32;==&#32;NULL&#32;);
<anchor xml:id="_tasks_8c_source_1l04785"/>04785 
<anchor xml:id="_tasks_8c_source_1l04786"/>04786 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;configUSE_TICKLESS_IDLE&#32;!=&#32;0&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l04787"/>04787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04788"/>04788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;a&#32;task&#32;is&#32;blocked&#32;waiting&#32;for&#32;a&#32;notification&#32;then</emphasis>
<anchor xml:id="_tasks_8c_source_1l04789"/>04789 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xNextTaskUnblockTime&#32;might&#32;be&#32;set&#32;to&#32;the&#32;blocked&#32;task&apos;s&#32;time</emphasis>
<anchor xml:id="_tasks_8c_source_1l04790"/>04790 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out&#32;time.&#32;&#32;If&#32;the&#32;task&#32;is&#32;unblocked&#32;for&#32;a&#32;reason&#32;other&#32;than</emphasis>
<anchor xml:id="_tasks_8c_source_1l04791"/>04791 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;timeout&#32;xNextTaskUnblockTime&#32;is&#32;normally&#32;left&#32;unchanged,</emphasis>
<anchor xml:id="_tasks_8c_source_1l04792"/>04792 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;because&#32;it&#32;will&#32;automatically&#32;get&#32;reset&#32;to&#32;a&#32;new&#32;value&#32;when</emphasis>
<anchor xml:id="_tasks_8c_source_1l04793"/>04793 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;tick&#32;count&#32;equals&#32;xNextTaskUnblockTime.&#32;&#32;However&#32;if</emphasis>
<anchor xml:id="_tasks_8c_source_1l04794"/>04794 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tickless&#32;idling&#32;is&#32;used&#32;it&#32;might&#32;be&#32;more&#32;important&#32;to&#32;enter</emphasis>
<anchor xml:id="_tasks_8c_source_1l04795"/>04795 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sleep&#32;mode&#32;at&#32;the&#32;earliest&#32;possible&#32;time&#32;-&#32;so&#32;reset</emphasis>
<anchor xml:id="_tasks_8c_source_1l04796"/>04796 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xNextTaskUnblockTime&#32;here&#32;to&#32;ensure&#32;it&#32;is&#32;updated&#32;at&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l04797"/>04797 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;earliest&#32;possible&#32;time.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04798"/>04798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1ad1b2e4995f863a99cf980836efe330d7">prvResetNextTaskUnblockTime</link>();
<anchor xml:id="_tasks_8c_source_1l04799"/>04799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04800"/>04800 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l04801"/>04801 
<anchor xml:id="_tasks_8c_source_1l04802"/>04802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;&gt;&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l04803"/>04803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04804"/>04804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;notified&#32;task&#32;has&#32;a&#32;priority&#32;above&#32;the&#32;currently</emphasis>
<anchor xml:id="_tasks_8c_source_1l04805"/>04805 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;executing&#32;task&#32;so&#32;a&#32;yield&#32;is&#32;required.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04806"/>04806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1acd0c920e40647de517ac633965b52273">taskYIELD_IF_USING_PREEMPTION</link>();
<anchor xml:id="_tasks_8c_source_1l04807"/>04807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04808"/>04808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04809"/>04809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04810"/>04810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04811"/>04811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04812"/>04812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04813"/>04813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04814"/>04814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04815"/>04815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04816"/>04816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04817"/>04817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04818"/>04818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l04819"/>04819 
<anchor xml:id="_tasks_8c_source_1l04820"/>04820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l04821"/>04821 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04822"/>04822 
<anchor xml:id="_tasks_8c_source_1l04823"/>04823 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TASK_NOTIFICATIONS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l04824"/>04824 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04825"/>04825 
<anchor xml:id="_tasks_8c_source_1l04826"/>04826 <emphasis role="preprocessor">#if(&#32;configUSE_TASK_NOTIFICATIONS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l04827"/>04827 
<anchor xml:id="_tasks_8c_source_1l04828"/><link linkend="_task_8h_1a959c55f7950abffbc4107ce61ca52e97">04828</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_tasks_8c_1a23102158140aa66fb3b9fd132cd53695">xTaskGenericNotifyFromISR</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTaskToNotify,&#32;uint32_t&#32;ulValue,&#32;<link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233">eNotifyAction</link>&#32;eAction,&#32;uint32_t&#32;*pulPreviousNotificationValue,&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;*pxHigherPriorityTaskWoken&#32;)
<anchor xml:id="_tasks_8c_source_1l04829"/>04829 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04830"/>04830 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*&#32;pxTCB;
<anchor xml:id="_tasks_8c_source_1l04831"/>04831 &#32;&#32;&#32;&#32;uint8_t&#32;ucOriginalNotifyState;
<anchor xml:id="_tasks_8c_source_1l04832"/>04832 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>;
<anchor xml:id="_tasks_8c_source_1l04833"/>04833 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxSavedInterruptStatus;
<anchor xml:id="_tasks_8c_source_1l04834"/>04834 
<anchor xml:id="_tasks_8c_source_1l04835"/>04835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xTaskToNotify&#32;);
<anchor xml:id="_tasks_8c_source_1l04836"/>04836 
<anchor xml:id="_tasks_8c_source_1l04837"/>04837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;RTOS&#32;ports&#32;that&#32;support&#32;interrupt&#32;nesting&#32;have&#32;the&#32;concept&#32;of&#32;a</emphasis>
<anchor xml:id="_tasks_8c_source_1l04838"/>04838 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maximum&#32;system&#32;call&#32;(or&#32;maximum&#32;API&#32;call)&#32;interrupt&#32;priority.</emphasis>
<anchor xml:id="_tasks_8c_source_1l04839"/>04839 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Interrupts&#32;that&#32;are&#32;above&#32;the&#32;maximum&#32;system&#32;call&#32;priority&#32;are&#32;keep</emphasis>
<anchor xml:id="_tasks_8c_source_1l04840"/>04840 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;permanently&#32;enabled,&#32;even&#32;when&#32;the&#32;RTOS&#32;kernel&#32;is&#32;in&#32;a&#32;critical&#32;section,</emphasis>
<anchor xml:id="_tasks_8c_source_1l04841"/>04841 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;but&#32;cannot&#32;make&#32;any&#32;calls&#32;to&#32;FreeRTOS&#32;API&#32;functions.&#32;&#32;If&#32;configASSERT()</emphasis>
<anchor xml:id="_tasks_8c_source_1l04842"/>04842 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;defined&#32;in&#32;FreeRTOSConfig.h&#32;then</emphasis>
<anchor xml:id="_tasks_8c_source_1l04843"/>04843 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;portASSERT_IF_INTERRUPT_PRIORITY_INVALID()&#32;will&#32;result&#32;in&#32;an&#32;assertion</emphasis>
<anchor xml:id="_tasks_8c_source_1l04844"/>04844 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;failure&#32;if&#32;a&#32;FreeRTOS&#32;API&#32;function&#32;is&#32;called&#32;from&#32;an&#32;interrupt&#32;that&#32;has</emphasis>
<anchor xml:id="_tasks_8c_source_1l04845"/>04845 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;been&#32;assigned&#32;a&#32;priority&#32;above&#32;the&#32;configured&#32;maximum&#32;system&#32;call</emphasis>
<anchor xml:id="_tasks_8c_source_1l04846"/>04846 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;priority.&#32;&#32;Only&#32;FreeRTOS&#32;functions&#32;that&#32;end&#32;in&#32;FromISR&#32;can&#32;be&#32;called</emphasis>
<anchor xml:id="_tasks_8c_source_1l04847"/>04847 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;from&#32;interrupts&#32;that&#32;have&#32;been&#32;assigned&#32;a&#32;priority&#32;at&#32;or&#32;(logically)</emphasis>
<anchor xml:id="_tasks_8c_source_1l04848"/>04848 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;below&#32;the&#32;maximum&#32;system&#32;call&#32;interrupt&#32;priority.&#32;&#32;FreeRTOS&#32;maintains&#32;a</emphasis>
<anchor xml:id="_tasks_8c_source_1l04849"/>04849 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;separate&#32;interrupt&#32;safe&#32;API&#32;to&#32;ensure&#32;interrupt&#32;entry&#32;is&#32;as&#32;fast&#32;and&#32;as</emphasis>
<anchor xml:id="_tasks_8c_source_1l04850"/>04850 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;simple&#32;as&#32;possible.&#32;&#32;More&#32;information&#32;(albeit&#32;Cortex-M&#32;specific)&#32;is</emphasis>
<anchor xml:id="_tasks_8c_source_1l04851"/>04851 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;provided&#32;on&#32;the&#32;following&#32;link:</emphasis>
<anchor xml:id="_tasks_8c_source_1l04852"/>04852 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;http://www.freertos.org/RTOS-Cortex-M3-M4.html&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04853"/>04853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a10f75d20c71c4289f96d1b89cb6c62e2">portASSERT_IF_INTERRUPT_PRIORITY_INVALID</link>();
<anchor xml:id="_tasks_8c_source_1l04854"/>04854 
<anchor xml:id="_tasks_8c_source_1l04855"/>04855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;xTaskToNotify;
<anchor xml:id="_tasks_8c_source_1l04856"/>04856 
<anchor xml:id="_tasks_8c_source_1l04857"/>04857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxSavedInterruptStatus&#32;=&#32;<link linkend="_portmacro_8h_1a31b4260dbc1823ba80b578f86eb15a98">portSET_INTERRUPT_MASK_FROM_ISR</link>();
<anchor xml:id="_tasks_8c_source_1l04858"/>04858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04859"/>04859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pulPreviousNotificationValue&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l04860"/>04860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04861"/>04861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pulPreviousNotificationValue&#32;=&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a7c571b992f90bfe77414cab060ca2af8">ulNotifiedValue</link>;
<anchor xml:id="_tasks_8c_source_1l04862"/>04862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04863"/>04863 
<anchor xml:id="_tasks_8c_source_1l04864"/>04864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ucOriginalNotifyState&#32;=&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1adab5291f06b774ed8f5bb6f76a77496f">ucNotifyState</link>;
<anchor xml:id="_tasks_8c_source_1l04865"/>04865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1adab5291f06b774ed8f5bb6f76a77496f">ucNotifyState</link>&#32;=&#32;<link linkend="_tasks_8c_1aa62ac91d5f644c98b5459c28ae4f689e">taskNOTIFICATION_RECEIVED</link>;
<anchor xml:id="_tasks_8c_source_1l04866"/>04866 
<anchor xml:id="_tasks_8c_source_1l04867"/>04867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(&#32;eAction&#32;)
<anchor xml:id="_tasks_8c_source_1l04868"/>04868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04869"/>04869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233ab7b1af2eeee53ae78eeff37c1cb6f79b">eSetBits</link>&#32;&#32;&#32;:
<anchor xml:id="_tasks_8c_source_1l04870"/>04870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a7c571b992f90bfe77414cab060ca2af8">ulNotifiedValue</link>&#32;|=&#32;ulValue;
<anchor xml:id="_tasks_8c_source_1l04871"/>04871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_tasks_8c_source_1l04872"/>04872 
<anchor xml:id="_tasks_8c_source_1l04873"/>04873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233a04fb0e98d2400e4cd28f1593bc868822">eIncrement</link>&#32;:
<anchor xml:id="_tasks_8c_source_1l04874"/>04874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a7c571b992f90bfe77414cab060ca2af8">ulNotifiedValue</link>&#32;)++;
<anchor xml:id="_tasks_8c_source_1l04875"/>04875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_tasks_8c_source_1l04876"/>04876 
<anchor xml:id="_tasks_8c_source_1l04877"/>04877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233ab61fc296ef909186b5824c823b33e130">eSetValueWithOverwrite</link>&#32;:
<anchor xml:id="_tasks_8c_source_1l04878"/>04878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a7c571b992f90bfe77414cab060ca2af8">ulNotifiedValue</link>&#32;=&#32;ulValue;
<anchor xml:id="_tasks_8c_source_1l04879"/>04879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_tasks_8c_source_1l04880"/>04880 
<anchor xml:id="_tasks_8c_source_1l04881"/>04881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233acc4dd3fe71b62c751187a2c4c515abac">eSetValueWithoutOverwrite</link>&#32;:
<anchor xml:id="_tasks_8c_source_1l04882"/>04882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;ucOriginalNotifyState&#32;!=&#32;<link linkend="_tasks_8c_1aa62ac91d5f644c98b5459c28ae4f689e">taskNOTIFICATION_RECEIVED</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l04883"/>04883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04884"/>04884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a7c571b992f90bfe77414cab060ca2af8">ulNotifiedValue</link>&#32;=&#32;ulValue;
<anchor xml:id="_tasks_8c_source_1l04885"/>04885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04886"/>04886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04887"/>04887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04888"/>04888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;value&#32;could&#32;not&#32;be&#32;written&#32;to&#32;the&#32;task.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04889"/>04889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6">pdFAIL</link>;
<anchor xml:id="_tasks_8c_source_1l04890"/>04890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04891"/>04891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_tasks_8c_source_1l04892"/>04892 
<anchor xml:id="_tasks_8c_source_1l04893"/>04893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233abac2b17ab15444724b6f35d47cd0a64a">eNoAction</link>&#32;:
<anchor xml:id="_tasks_8c_source_1l04894"/>04894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;is&#32;being&#32;notified&#32;without&#32;its&#32;notify&#32;value&#32;being</emphasis>
<anchor xml:id="_tasks_8c_source_1l04895"/>04895 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;updated.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04896"/>04896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_tasks_8c_source_1l04897"/>04897 
<anchor xml:id="_tasks_8c_source_1l04898"/>04898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="_tasks_8c_source_1l04899"/>04899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Should&#32;not&#32;get&#32;here&#32;if&#32;all&#32;enums&#32;are&#32;handled.</emphasis>
<anchor xml:id="_tasks_8c_source_1l04900"/>04900 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Artificially&#32;force&#32;an&#32;assert&#32;by&#32;testing&#32;a&#32;value&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l04901"/>04901 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;compiler&#32;can&apos;t&#32;assume&#32;is&#32;const.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04902"/>04902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a7c571b992f90bfe77414cab060ca2af8">ulNotifiedValue</link>&#32;==&#32;~0UL&#32;);
<anchor xml:id="_tasks_8c_source_1l04903"/>04903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_tasks_8c_source_1l04904"/>04904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04905"/>04905 
<anchor xml:id="_tasks_8c_source_1l04906"/>04906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1aad4d3ae692f3500f4644070fe971b646">traceTASK_NOTIFY_FROM_ISR</link>();
<anchor xml:id="_tasks_8c_source_1l04907"/>04907 
<anchor xml:id="_tasks_8c_source_1l04908"/>04908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;task&#32;is&#32;in&#32;the&#32;blocked&#32;state&#32;specifically&#32;to&#32;wait&#32;for&#32;a</emphasis>
<anchor xml:id="_tasks_8c_source_1l04909"/>04909 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;notification&#32;then&#32;unblock&#32;it&#32;now.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04910"/>04910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;ucOriginalNotifyState&#32;==&#32;<link linkend="_tasks_8c_1acee66205293e253c13626e74798a0cf0">taskWAITING_NOTIFICATION</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l04911"/>04911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04912"/>04912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;should&#32;not&#32;have&#32;been&#32;on&#32;an&#32;event&#32;list.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04913"/>04913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;<link linkend="_list_8h_1a7c4dff11380cd843ed0b6a8dc065916b">listLIST_ITEM_CONTAINER</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;)&#32;==&#32;NULL&#32;);
<anchor xml:id="_tasks_8c_source_1l04914"/>04914 
<anchor xml:id="_tasks_8c_source_1l04915"/>04915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a7522707fcf80b216e3a5b25ba464ec85">uxSchedulerSuspended</link>&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l04916"/>04916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04917"/>04917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_list_8c_1a274fdced76bbdd9d8a4c4840ded2920c">uxListRemove</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l04918"/>04918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a94afc7269fff7c906c5eb0d9d315624b">prvAddTaskToReadyList</link>(&#32;pxTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l04919"/>04919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04920"/>04920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04921"/>04921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04922"/>04922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;delayed&#32;and&#32;ready&#32;lists&#32;cannot&#32;be&#32;accessed,&#32;so&#32;hold</emphasis>
<anchor xml:id="_tasks_8c_source_1l04923"/>04923 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this&#32;task&#32;pending&#32;until&#32;the&#32;scheduler&#32;is&#32;resumed.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04924"/>04924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8c_1a3240bc0f43fcf755be02bfc6de7dc6ef">vListInsertEnd</link>(&#32;&amp;(&#32;<link linkend="_tasks_8c_1a73880e71e7ed72242d1a078685107421">xPendingReadyList</link>&#32;),&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l04925"/>04925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04926"/>04926 
<anchor xml:id="_tasks_8c_source_1l04927"/>04927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;&gt;&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l04928"/>04928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04929"/>04929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;notified&#32;task&#32;has&#32;a&#32;priority&#32;above&#32;the&#32;currently</emphasis>
<anchor xml:id="_tasks_8c_source_1l04930"/>04930 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;executing&#32;task&#32;so&#32;a&#32;yield&#32;is&#32;required.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04931"/>04931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxHigherPriorityTaskWoken&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l04932"/>04932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04933"/>04933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pxHigherPriorityTaskWoken&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l04934"/>04934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04935"/>04935 
<anchor xml:id="_tasks_8c_source_1l04936"/>04936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Mark&#32;that&#32;a&#32;yield&#32;is&#32;pending&#32;in&#32;case&#32;the&#32;user&#32;is&#32;not</emphasis>
<anchor xml:id="_tasks_8c_source_1l04937"/>04937 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;using&#32;the&#32;&quot;xHigherPriorityTaskWoken&quot;&#32;parameter&#32;to&#32;an&#32;ISR</emphasis>
<anchor xml:id="_tasks_8c_source_1l04938"/>04938 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;safe&#32;FreeRTOS&#32;function.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04939"/>04939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a25abc99b92e910c1602028081e13b1b0">xYieldPending</link>&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l04940"/>04940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04941"/>04941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l04942"/>04942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04943"/>04943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l04944"/>04944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04945"/>04945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04946"/>04946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04947"/>04947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a79d65a5d0f6f9133a0739832e9d8367e">portCLEAR_INTERRUPT_MASK_FROM_ISR</link>(&#32;uxSavedInterruptStatus&#32;);
<anchor xml:id="_tasks_8c_source_1l04948"/>04948 
<anchor xml:id="_tasks_8c_source_1l04949"/>04949 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l04950"/>04950 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l04951"/>04951 
<anchor xml:id="_tasks_8c_source_1l04952"/>04952 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TASK_NOTIFICATIONS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l04953"/>04953 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04954"/>04954 
<anchor xml:id="_tasks_8c_source_1l04955"/>04955 <emphasis role="preprocessor">#if(&#32;configUSE_TASK_NOTIFICATIONS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l04956"/>04956 
<anchor xml:id="_tasks_8c_source_1l04957"/><link linkend="_task_8h_1a4a4bcf98ad282a596e13f3f30582a11b">04957</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1a0c31cb4be76285f05909de23ede05331">vTaskNotifyGiveFromISR</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTaskToNotify,&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;*pxHigherPriorityTaskWoken&#32;)
<anchor xml:id="_tasks_8c_source_1l04958"/>04958 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04959"/>04959 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*&#32;pxTCB;
<anchor xml:id="_tasks_8c_source_1l04960"/>04960 &#32;&#32;&#32;&#32;uint8_t&#32;ucOriginalNotifyState;
<anchor xml:id="_tasks_8c_source_1l04961"/>04961 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxSavedInterruptStatus;
<anchor xml:id="_tasks_8c_source_1l04962"/>04962 
<anchor xml:id="_tasks_8c_source_1l04963"/>04963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xTaskToNotify&#32;);
<anchor xml:id="_tasks_8c_source_1l04964"/>04964 
<anchor xml:id="_tasks_8c_source_1l04965"/>04965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;RTOS&#32;ports&#32;that&#32;support&#32;interrupt&#32;nesting&#32;have&#32;the&#32;concept&#32;of&#32;a</emphasis>
<anchor xml:id="_tasks_8c_source_1l04966"/>04966 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maximum&#32;system&#32;call&#32;(or&#32;maximum&#32;API&#32;call)&#32;interrupt&#32;priority.</emphasis>
<anchor xml:id="_tasks_8c_source_1l04967"/>04967 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Interrupts&#32;that&#32;are&#32;above&#32;the&#32;maximum&#32;system&#32;call&#32;priority&#32;are&#32;keep</emphasis>
<anchor xml:id="_tasks_8c_source_1l04968"/>04968 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;permanently&#32;enabled,&#32;even&#32;when&#32;the&#32;RTOS&#32;kernel&#32;is&#32;in&#32;a&#32;critical&#32;section,</emphasis>
<anchor xml:id="_tasks_8c_source_1l04969"/>04969 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;but&#32;cannot&#32;make&#32;any&#32;calls&#32;to&#32;FreeRTOS&#32;API&#32;functions.&#32;&#32;If&#32;configASSERT()</emphasis>
<anchor xml:id="_tasks_8c_source_1l04970"/>04970 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;defined&#32;in&#32;FreeRTOSConfig.h&#32;then</emphasis>
<anchor xml:id="_tasks_8c_source_1l04971"/>04971 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;portASSERT_IF_INTERRUPT_PRIORITY_INVALID()&#32;will&#32;result&#32;in&#32;an&#32;assertion</emphasis>
<anchor xml:id="_tasks_8c_source_1l04972"/>04972 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;failure&#32;if&#32;a&#32;FreeRTOS&#32;API&#32;function&#32;is&#32;called&#32;from&#32;an&#32;interrupt&#32;that&#32;has</emphasis>
<anchor xml:id="_tasks_8c_source_1l04973"/>04973 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;been&#32;assigned&#32;a&#32;priority&#32;above&#32;the&#32;configured&#32;maximum&#32;system&#32;call</emphasis>
<anchor xml:id="_tasks_8c_source_1l04974"/>04974 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;priority.&#32;&#32;Only&#32;FreeRTOS&#32;functions&#32;that&#32;end&#32;in&#32;FromISR&#32;can&#32;be&#32;called</emphasis>
<anchor xml:id="_tasks_8c_source_1l04975"/>04975 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;from&#32;interrupts&#32;that&#32;have&#32;been&#32;assigned&#32;a&#32;priority&#32;at&#32;or&#32;(logically)</emphasis>
<anchor xml:id="_tasks_8c_source_1l04976"/>04976 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;below&#32;the&#32;maximum&#32;system&#32;call&#32;interrupt&#32;priority.&#32;&#32;FreeRTOS&#32;maintains&#32;a</emphasis>
<anchor xml:id="_tasks_8c_source_1l04977"/>04977 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;separate&#32;interrupt&#32;safe&#32;API&#32;to&#32;ensure&#32;interrupt&#32;entry&#32;is&#32;as&#32;fast&#32;and&#32;as</emphasis>
<anchor xml:id="_tasks_8c_source_1l04978"/>04978 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;simple&#32;as&#32;possible.&#32;&#32;More&#32;information&#32;(albeit&#32;Cortex-M&#32;specific)&#32;is</emphasis>
<anchor xml:id="_tasks_8c_source_1l04979"/>04979 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;provided&#32;on&#32;the&#32;following&#32;link:</emphasis>
<anchor xml:id="_tasks_8c_source_1l04980"/>04980 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;http://www.freertos.org/RTOS-Cortex-M3-M4.html&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04981"/>04981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a10f75d20c71c4289f96d1b89cb6c62e2">portASSERT_IF_INTERRUPT_PRIORITY_INVALID</link>();
<anchor xml:id="_tasks_8c_source_1l04982"/>04982 
<anchor xml:id="_tasks_8c_source_1l04983"/>04983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;xTaskToNotify;
<anchor xml:id="_tasks_8c_source_1l04984"/>04984 
<anchor xml:id="_tasks_8c_source_1l04985"/>04985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxSavedInterruptStatus&#32;=&#32;<link linkend="_portmacro_8h_1a31b4260dbc1823ba80b578f86eb15a98">portSET_INTERRUPT_MASK_FROM_ISR</link>();
<anchor xml:id="_tasks_8c_source_1l04986"/>04986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l04987"/>04987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ucOriginalNotifyState&#32;=&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1adab5291f06b774ed8f5bb6f76a77496f">ucNotifyState</link>;
<anchor xml:id="_tasks_8c_source_1l04988"/>04988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1adab5291f06b774ed8f5bb6f76a77496f">ucNotifyState</link>&#32;=&#32;<link linkend="_tasks_8c_1aa62ac91d5f644c98b5459c28ae4f689e">taskNOTIFICATION_RECEIVED</link>;
<anchor xml:id="_tasks_8c_source_1l04989"/>04989 
<anchor xml:id="_tasks_8c_source_1l04990"/>04990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&apos;Giving&apos;&#32;is&#32;equivalent&#32;to&#32;incrementing&#32;a&#32;count&#32;in&#32;a&#32;counting</emphasis>
<anchor xml:id="_tasks_8c_source_1l04991"/>04991 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;semaphore.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04992"/>04992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a7c571b992f90bfe77414cab060ca2af8">ulNotifiedValue</link>&#32;)++;
<anchor xml:id="_tasks_8c_source_1l04993"/>04993 
<anchor xml:id="_tasks_8c_source_1l04994"/>04994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a99d95526db9937c96ba110f46bb59ee5">traceTASK_NOTIFY_GIVE_FROM_ISR</link>();
<anchor xml:id="_tasks_8c_source_1l04995"/>04995 
<anchor xml:id="_tasks_8c_source_1l04996"/>04996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;task&#32;is&#32;in&#32;the&#32;blocked&#32;state&#32;specifically&#32;to&#32;wait&#32;for&#32;a</emphasis>
<anchor xml:id="_tasks_8c_source_1l04997"/>04997 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;notification&#32;then&#32;unblock&#32;it&#32;now.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l04998"/>04998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;ucOriginalNotifyState&#32;==&#32;<link linkend="_tasks_8c_1acee66205293e253c13626e74798a0cf0">taskWAITING_NOTIFICATION</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l04999"/>04999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05000"/>05000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;should&#32;not&#32;have&#32;been&#32;on&#32;an&#32;event&#32;list.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l05001"/>05001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;<link linkend="_list_8h_1a7c4dff11380cd843ed0b6a8dc065916b">listLIST_ITEM_CONTAINER</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;)&#32;==&#32;NULL&#32;);
<anchor xml:id="_tasks_8c_source_1l05002"/>05002 
<anchor xml:id="_tasks_8c_source_1l05003"/>05003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_tasks_8c_1a7522707fcf80b216e3a5b25ba464ec85">uxSchedulerSuspended</link>&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l05004"/>05004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05005"/>05005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_list_8c_1a274fdced76bbdd9d8a4c4840ded2920c">uxListRemove</link>(&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l05006"/>05006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a94afc7269fff7c906c5eb0d9d315624b">prvAddTaskToReadyList</link>(&#32;pxTCB&#32;);
<anchor xml:id="_tasks_8c_source_1l05007"/>05007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05008"/>05008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l05009"/>05009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05010"/>05010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;delayed&#32;and&#32;ready&#32;lists&#32;cannot&#32;be&#32;accessed,&#32;so&#32;hold</emphasis>
<anchor xml:id="_tasks_8c_source_1l05011"/>05011 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this&#32;task&#32;pending&#32;until&#32;the&#32;scheduler&#32;is&#32;resumed.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l05012"/>05012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8c_1a3240bc0f43fcf755be02bfc6de7dc6ef">vListInsertEnd</link>(&#32;&amp;(&#32;<link linkend="_tasks_8c_1a73880e71e7ed72242d1a078685107421">xPendingReadyList</link>&#32;),&#32;&amp;(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a1a1612b6081a13683808284d93a9b28f">xEventListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l05013"/>05013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05014"/>05014 
<anchor xml:id="_tasks_8c_source_1l05015"/>05015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;&gt;&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l05016"/>05016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05017"/>05017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;notified&#32;task&#32;has&#32;a&#32;priority&#32;above&#32;the&#32;currently</emphasis>
<anchor xml:id="_tasks_8c_source_1l05018"/>05018 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;executing&#32;task&#32;so&#32;a&#32;yield&#32;is&#32;required.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l05019"/>05019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxHigherPriorityTaskWoken&#32;!=&#32;NULL&#32;)
<anchor xml:id="_tasks_8c_source_1l05020"/>05020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05021"/>05021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pxHigherPriorityTaskWoken&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l05022"/>05022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05023"/>05023 
<anchor xml:id="_tasks_8c_source_1l05024"/>05024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Mark&#32;that&#32;a&#32;yield&#32;is&#32;pending&#32;in&#32;case&#32;the&#32;user&#32;is&#32;not</emphasis>
<anchor xml:id="_tasks_8c_source_1l05025"/>05025 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;using&#32;the&#32;&quot;xHigherPriorityTaskWoken&quot;&#32;parameter&#32;in&#32;an&#32;ISR</emphasis>
<anchor xml:id="_tasks_8c_source_1l05026"/>05026 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;safe&#32;FreeRTOS&#32;function.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l05027"/>05027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a25abc99b92e910c1602028081e13b1b0">xYieldPending</link>&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_tasks_8c_source_1l05028"/>05028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05029"/>05029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l05030"/>05030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05031"/>05031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l05032"/>05032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05033"/>05033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05034"/>05034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05035"/>05035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a79d65a5d0f6f9133a0739832e9d8367e">portCLEAR_INTERRUPT_MASK_FROM_ISR</link>(&#32;uxSavedInterruptStatus&#32;);
<anchor xml:id="_tasks_8c_source_1l05036"/>05036 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05037"/>05037 
<anchor xml:id="_tasks_8c_source_1l05038"/>05038 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TASK_NOTIFICATIONS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l05039"/>05039 
<anchor xml:id="_tasks_8c_source_1l05040"/>05040 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l05041"/>05041 
<anchor xml:id="_tasks_8c_source_1l05042"/>05042 <emphasis role="preprocessor">#if(&#32;configUSE_TASK_NOTIFICATIONS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l05043"/>05043 
<anchor xml:id="_tasks_8c_source_1l05044"/><link linkend="_task_8h_1a4cb6c908a9d2d733e9d519d7dc27bb34">05044</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_tasks_8c_1a4cb6c908a9d2d733e9d519d7dc27bb34">xTaskNotifyStateClear</link>(&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;xTask&#32;)
<anchor xml:id="_tasks_8c_source_1l05045"/>05045 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05046"/>05046 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TCB_t</link>&#32;*pxTCB;
<anchor xml:id="_tasks_8c_source_1l05047"/>05047 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l05048"/>05048 
<anchor xml:id="_tasks_8c_source_1l05049"/>05049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;null&#32;is&#32;passed&#32;in&#32;here&#32;then&#32;it&#32;is&#32;the&#32;calling&#32;task&#32;that&#32;is&#32;having</emphasis>
<anchor xml:id="_tasks_8c_source_1l05050"/>05050 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;its&#32;notification&#32;state&#32;cleared.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l05051"/>05051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB&#32;=&#32;<link linkend="_tasks_8c_1ad910f5e908283f1dfabd642fe1b11c6b">prvGetTCBFromHandle</link>(&#32;xTask&#32;);
<anchor xml:id="_tasks_8c_source_1l05052"/>05052 
<anchor xml:id="_tasks_8c_source_1l05053"/>05053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l05054"/>05054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05055"/>05055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1adab5291f06b774ed8f5bb6f76a77496f">ucNotifyState</link>&#32;==&#32;<link linkend="_tasks_8c_1aa62ac91d5f644c98b5459c28ae4f689e">taskNOTIFICATION_RECEIVED</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l05056"/>05056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05057"/>05057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxTCB-&gt;<link linkend="_structtsk_task_control_block_1adab5291f06b774ed8f5bb6f76a77496f">ucNotifyState</link>&#32;=&#32;<link linkend="_tasks_8c_1a4f2f023143b2cd2367a441e104f8cf2c">taskNOT_WAITING_NOTIFICATION</link>;
<anchor xml:id="_tasks_8c_source_1l05058"/>05058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>;
<anchor xml:id="_tasks_8c_source_1l05059"/>05059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05060"/>05060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l05061"/>05061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05062"/>05062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6">pdFAIL</link>;
<anchor xml:id="_tasks_8c_source_1l05063"/>05063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05064"/>05064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05065"/>05065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_tasks_8c_source_1l05066"/>05066 
<anchor xml:id="_tasks_8c_source_1l05067"/>05067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_tasks_8c_source_1l05068"/>05068 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05069"/>05069 
<anchor xml:id="_tasks_8c_source_1l05070"/>05070 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TASK_NOTIFICATIONS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l05071"/>05071 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l05072"/>05072 
<anchor xml:id="_tasks_8c_source_1l05073"/>05073 <emphasis role="preprocessor">#if(&#32;(&#32;configGENERATE_RUN_TIME_STATS&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;INCLUDE_xTaskGetIdleTaskHandle&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l05074"/>05074 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;<link linkend="_task_8h_1adcf1216358a193db9dea4ccdccd85dfd">xTaskGetIdleRunTimeCounter</link>(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)
<anchor xml:id="_tasks_8c_source_1l05075"/>05075 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05076"/>05076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_tasks_8c_1ab1afeb7ccc3b00411775f107e31134ad">xIdleTaskHandle</link>-&gt;ulRunTimeCounter;
<anchor xml:id="_tasks_8c_source_1l05077"/>05077 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05078"/>05078 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l05079"/>05079 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l05080"/>05080 
<anchor xml:id="_tasks_8c_source_1l05081"/><link linkend="_tasks_8c_1ab4574e77d9aea876272e563c68f639da">05081</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tasks_8c_1ab4574e77d9aea876272e563c68f639da">prvAddCurrentTaskToDelayedList</link>(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xCanBlockIndefinitely&#32;)
<anchor xml:id="_tasks_8c_source_1l05082"/>05082 {
<anchor xml:id="_tasks_8c_source_1l05083"/>05083 <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTimeToWake;
<anchor xml:id="_tasks_8c_source_1l05084"/>05084 <emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xConstTickCount&#32;=&#32;<link linkend="_tasks_8c_1aaa88969a9b48aea401dbb1ff2b0ef4de">xTickCount</link>;
<anchor xml:id="_tasks_8c_source_1l05085"/>05085 
<anchor xml:id="_tasks_8c_source_1l05086"/>05086 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if(&#32;INCLUDE_xTaskAbortDelay&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l05087"/>05087 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05088"/>05088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;About&#32;to&#32;enter&#32;a&#32;delayed&#32;list,&#32;so&#32;ensure&#32;the&#32;ucDelayAborted&#32;flag&#32;is</emphasis>
<anchor xml:id="_tasks_8c_source_1l05089"/>05089 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reset&#32;to&#32;pdFALSE&#32;so&#32;it&#32;can&#32;be&#32;detected&#32;as&#32;having&#32;been&#32;set&#32;to&#32;pdTRUE</emphasis>
<anchor xml:id="_tasks_8c_source_1l05090"/>05090 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;when&#32;the&#32;task&#32;leaves&#32;the&#32;Blocked&#32;state.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l05091"/>05091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;ucDelayAborted&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_tasks_8c_source_1l05092"/>05092 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05093"/>05093 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l05094"/>05094 
<anchor xml:id="_tasks_8c_source_1l05095"/>05095 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Remove&#32;the&#32;task&#32;from&#32;the&#32;ready&#32;list&#32;before&#32;adding&#32;it&#32;to&#32;the&#32;blocked&#32;list</emphasis>
<anchor xml:id="_tasks_8c_source_1l05096"/>05096 <emphasis role="comment">&#32;&#32;&#32;&#32;as&#32;the&#32;same&#32;list&#32;item&#32;is&#32;used&#32;for&#32;both&#32;lists.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l05097"/>05097 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8c_1a274fdced76bbdd9d8a4c4840ded2920c">uxListRemove</link>(&#32;&amp;(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;)&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_tasks_8c_source_1l05098"/>05098 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05099"/>05099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;current&#32;task&#32;must&#32;be&#32;in&#32;a&#32;ready&#32;list,&#32;so&#32;there&#32;is&#32;no&#32;need&#32;to</emphasis>
<anchor xml:id="_tasks_8c_source_1l05100"/>05100 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;check,&#32;and&#32;the&#32;port&#32;reset&#32;macro&#32;can&#32;be&#32;called&#32;directly.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l05101"/>05101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1aab771d12c0912d93d52a586628fb18a6">portRESET_READY_PRIORITY</link>(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a79187811e3d2a15595942e3b44237d85">uxPriority</link>,&#32;<link linkend="_tasks_8c_1a3fffd96ac9ae0d8b352ae10896ed4531">uxTopReadyPriority</link>&#32;);&#32;<emphasis role="comment">/*lint&#32;!e931&#32;pxCurrentTCB&#32;cannot&#32;change&#32;as&#32;it&#32;is&#32;the&#32;calling&#32;task.&#32;&#32;pxCurrentTCB-&gt;uxPriority&#32;and&#32;uxTopReadyPriority&#32;cannot&#32;change&#32;as&#32;called&#32;with&#32;scheduler&#32;suspended&#32;or&#32;in&#32;a&#32;critical&#32;section.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l05102"/>05102 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05103"/>05103 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l05104"/>05104 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05105"/>05105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l05106"/>05106 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05107"/>05107 
<anchor xml:id="_tasks_8c_source_1l05108"/>05108 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;INCLUDE_vTaskSuspend&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l05109"/>05109 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05110"/>05110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;xTicksToWait&#32;==&#32;<link linkend="_portmacro_8h_1a72723ba1e4a85ca14f25c2b9e066613d">portMAX_DELAY</link>&#32;)&#32;&amp;&amp;&#32;(&#32;xCanBlockIndefinitely&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)&#32;)
<anchor xml:id="_tasks_8c_source_1l05111"/>05111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05112"/>05112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Add&#32;the&#32;task&#32;to&#32;the&#32;suspended&#32;task&#32;list&#32;instead&#32;of&#32;a&#32;delayed&#32;task</emphasis>
<anchor xml:id="_tasks_8c_source_1l05113"/>05113 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list&#32;to&#32;ensure&#32;it&#32;is&#32;not&#32;woken&#32;by&#32;a&#32;timing&#32;event.&#32;&#32;It&#32;will&#32;block</emphasis>
<anchor xml:id="_tasks_8c_source_1l05114"/>05114 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;indefinitely.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l05115"/>05115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8c_1a3240bc0f43fcf755be02bfc6de7dc6ef">vListInsertEnd</link>(&#32;&amp;<link linkend="_tasks_8c_1aeeff59d101a1407ffc42f81fda83baca">xSuspendedTaskList</link>,&#32;&amp;(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l05116"/>05116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05117"/>05117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l05118"/>05118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05119"/>05119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Calculate&#32;the&#32;time&#32;at&#32;which&#32;the&#32;task&#32;should&#32;be&#32;woken&#32;if&#32;the&#32;event</emphasis>
<anchor xml:id="_tasks_8c_source_1l05120"/>05120 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;does&#32;not&#32;occur.&#32;&#32;This&#32;may&#32;overflow&#32;but&#32;this&#32;doesn&apos;t&#32;matter,&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l05121"/>05121 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;kernel&#32;will&#32;manage&#32;it&#32;correctly.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l05122"/>05122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xTimeToWake&#32;=&#32;xConstTickCount&#32;+&#32;xTicksToWait;
<anchor xml:id="_tasks_8c_source_1l05123"/>05123 
<anchor xml:id="_tasks_8c_source_1l05124"/>05124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;list&#32;item&#32;will&#32;be&#32;inserted&#32;in&#32;wake&#32;time&#32;order.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l05125"/>05125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8h_1a83e95e61652f032fdc26aa622f5e2610">listSET_LIST_ITEM_VALUE</link>(&#32;&amp;(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;),&#32;xTimeToWake&#32;);
<anchor xml:id="_tasks_8c_source_1l05126"/>05126 
<anchor xml:id="_tasks_8c_source_1l05127"/>05127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTimeToWake&#32;&lt;&#32;xConstTickCount&#32;)
<anchor xml:id="_tasks_8c_source_1l05128"/>05128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05129"/>05129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Wake&#32;time&#32;has&#32;overflowed.&#32;&#32;Place&#32;this&#32;item&#32;in&#32;the&#32;overflow</emphasis>
<anchor xml:id="_tasks_8c_source_1l05130"/>05130 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l05131"/>05131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8c_1a28faa70d3ec4b4f39e53b0fc52d62ecf">vListInsert</link>(&#32;<link linkend="_tasks_8c_1aae5cac9860aec54036f49920561a9705">pxOverflowDelayedTaskList</link>,&#32;&amp;(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l05132"/>05132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05133"/>05133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l05134"/>05134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05135"/>05135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;wake&#32;time&#32;has&#32;not&#32;overflowed,&#32;so&#32;the&#32;current&#32;block&#32;list</emphasis>
<anchor xml:id="_tasks_8c_source_1l05136"/>05136 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;used.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l05137"/>05137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8c_1a28faa70d3ec4b4f39e53b0fc52d62ecf">vListInsert</link>(&#32;<link linkend="_tasks_8c_1a30b4b716a99940e93fc9d4a13c1f81db">pxDelayedTaskList</link>,&#32;&amp;(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l05138"/>05138 
<anchor xml:id="_tasks_8c_source_1l05139"/>05139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;task&#32;entering&#32;the&#32;blocked&#32;state&#32;was&#32;placed&#32;at&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l05140"/>05140 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;head&#32;of&#32;the&#32;list&#32;of&#32;blocked&#32;tasks&#32;then&#32;xNextTaskUnblockTime</emphasis>
<anchor xml:id="_tasks_8c_source_1l05141"/>05141 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;needs&#32;to&#32;be&#32;updated&#32;too.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l05142"/>05142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTimeToWake&#32;&lt;&#32;<link linkend="_tasks_8c_1ac27aa725d8922f33f880005e72edec68">xNextTaskUnblockTime</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l05143"/>05143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05144"/>05144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1ac27aa725d8922f33f880005e72edec68">xNextTaskUnblockTime</link>&#32;=&#32;xTimeToWake;
<anchor xml:id="_tasks_8c_source_1l05145"/>05145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05146"/>05146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l05147"/>05147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05148"/>05148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l05149"/>05149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05150"/>05150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05151"/>05151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05152"/>05152 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05153"/>05153 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#else&#32;</emphasis><emphasis role="comment">/*&#32;INCLUDE_vTaskSuspend&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l05154"/>05154 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05155"/>05155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Calculate&#32;the&#32;time&#32;at&#32;which&#32;the&#32;task&#32;should&#32;be&#32;woken&#32;if&#32;the&#32;event</emphasis>
<anchor xml:id="_tasks_8c_source_1l05156"/>05156 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;does&#32;not&#32;occur.&#32;&#32;This&#32;may&#32;overflow&#32;but&#32;this&#32;doesn&apos;t&#32;matter,&#32;the&#32;kernel</emphasis>
<anchor xml:id="_tasks_8c_source_1l05157"/>05157 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;will&#32;manage&#32;it&#32;correctly.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l05158"/>05158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xTimeToWake&#32;=&#32;xConstTickCount&#32;+&#32;xTicksToWait;
<anchor xml:id="_tasks_8c_source_1l05159"/>05159 
<anchor xml:id="_tasks_8c_source_1l05160"/>05160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;list&#32;item&#32;will&#32;be&#32;inserted&#32;in&#32;wake&#32;time&#32;order.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l05161"/>05161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8h_1a83e95e61652f032fdc26aa622f5e2610">listSET_LIST_ITEM_VALUE</link>(&#32;&amp;(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;),&#32;xTimeToWake&#32;);
<anchor xml:id="_tasks_8c_source_1l05162"/>05162 
<anchor xml:id="_tasks_8c_source_1l05163"/>05163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTimeToWake&#32;&lt;&#32;xConstTickCount&#32;)
<anchor xml:id="_tasks_8c_source_1l05164"/>05164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05165"/>05165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Wake&#32;time&#32;has&#32;overflowed.&#32;&#32;Place&#32;this&#32;item&#32;in&#32;the&#32;overflow&#32;list.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l05166"/>05166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8c_1a28faa70d3ec4b4f39e53b0fc52d62ecf">vListInsert</link>(&#32;<link linkend="_tasks_8c_1aae5cac9860aec54036f49920561a9705">pxOverflowDelayedTaskList</link>,&#32;&amp;(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l05167"/>05167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05168"/>05168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l05169"/>05169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05170"/>05170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;wake&#32;time&#32;has&#32;not&#32;overflowed,&#32;so&#32;the&#32;current&#32;block&#32;list&#32;is&#32;used.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l05171"/>05171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8c_1a28faa70d3ec4b4f39e53b0fc52d62ecf">vListInsert</link>(&#32;<link linkend="_tasks_8c_1a30b4b716a99940e93fc9d4a13c1f81db">pxDelayedTaskList</link>,&#32;&amp;(&#32;<link linkend="_tasks_8c_1a1f2284b749c9706d04510853bd8e8f91">pxCurrentTCB</link>-&gt;<link linkend="_structtsk_task_control_block_1a16e0d20425d53ac78537e1fdb8834cf6">xStateListItem</link>&#32;)&#32;);
<anchor xml:id="_tasks_8c_source_1l05172"/>05172 
<anchor xml:id="_tasks_8c_source_1l05173"/>05173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;task&#32;entering&#32;the&#32;blocked&#32;state&#32;was&#32;placed&#32;at&#32;the&#32;head&#32;of&#32;the</emphasis>
<anchor xml:id="_tasks_8c_source_1l05174"/>05174 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list&#32;of&#32;blocked&#32;tasks&#32;then&#32;xNextTaskUnblockTime&#32;needs&#32;to&#32;be&#32;updated</emphasis>
<anchor xml:id="_tasks_8c_source_1l05175"/>05175 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;too.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l05176"/>05176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTimeToWake&#32;&lt;&#32;<link linkend="_tasks_8c_1ac27aa725d8922f33f880005e72edec68">xNextTaskUnblockTime</link>&#32;)
<anchor xml:id="_tasks_8c_source_1l05177"/>05177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05178"/>05178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tasks_8c_1ac27aa725d8922f33f880005e72edec68">xNextTaskUnblockTime</link>&#32;=&#32;xTimeToWake;
<anchor xml:id="_tasks_8c_source_1l05179"/>05179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05180"/>05180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tasks_8c_source_1l05181"/>05181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05182"/>05182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_tasks_8c_source_1l05183"/>05183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05184"/>05184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05185"/>05185 
<anchor xml:id="_tasks_8c_source_1l05186"/>05186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Avoid&#32;compiler&#32;warning&#32;when&#32;INCLUDE_vTaskSuspend&#32;is&#32;not&#32;1.&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l05187"/>05187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;xCanBlockIndefinitely;
<anchor xml:id="_tasks_8c_source_1l05188"/>05188 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05189"/>05189 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;INCLUDE_vTaskSuspend&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_tasks_8c_source_1l05190"/>05190 }
<anchor xml:id="_tasks_8c_source_1l05191"/>05191 
<anchor xml:id="_tasks_8c_source_1l05192"/>05192 <emphasis role="comment">/*&#32;Code&#32;below&#32;here&#32;allows&#32;additional&#32;code&#32;to&#32;be&#32;inserted&#32;into&#32;this&#32;source&#32;file,</emphasis>
<anchor xml:id="_tasks_8c_source_1l05193"/>05193 <emphasis role="comment">especially&#32;where&#32;access&#32;to&#32;file&#32;scope&#32;functions&#32;and&#32;data&#32;is&#32;needed&#32;(for&#32;example</emphasis>
<anchor xml:id="_tasks_8c_source_1l05194"/>05194 <emphasis role="comment">when&#32;performing&#32;module&#32;tests).&#32;*/</emphasis>
<anchor xml:id="_tasks_8c_source_1l05195"/>05195 
<anchor xml:id="_tasks_8c_source_1l05196"/>05196 <emphasis role="preprocessor">#ifdef&#32;FREERTOS_MODULE_TEST</emphasis>
<anchor xml:id="_tasks_8c_source_1l05197"/>05197 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#include&#32;&quot;tasks_test_access_functions.h&quot;</emphasis>
<anchor xml:id="_tasks_8c_source_1l05198"/>05198 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l05199"/>05199 
<anchor xml:id="_tasks_8c_source_1l05200"/>05200 
<anchor xml:id="_tasks_8c_source_1l05201"/>05201 <emphasis role="preprocessor">#if(&#32;configINCLUDE_FREERTOS_TASK_C_ADDITIONS_H&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_tasks_8c_source_1l05202"/>05202 
<anchor xml:id="_tasks_8c_source_1l05203"/>05203 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#include&#32;&quot;freertos_tasks_c_additions.h&quot;</emphasis>
<anchor xml:id="_tasks_8c_source_1l05204"/>05204 
<anchor xml:id="_tasks_8c_source_1l05205"/>05205 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;FREERTOS_TASKS_C_ADDITIONS_INIT</emphasis>
<anchor xml:id="_tasks_8c_source_1l05206"/>05206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;freertos_tasks_c_additions_init(&#32;<emphasis role="keywordtype">void</emphasis>&#32;)
<anchor xml:id="_tasks_8c_source_1l05207"/>05207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tasks_8c_source_1l05208"/>05208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FREERTOS_TASKS_C_ADDITIONS_INIT();
<anchor xml:id="_tasks_8c_source_1l05209"/>05209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tasks_8c_source_1l05210"/>05210 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l05211"/>05211 
<anchor xml:id="_tasks_8c_source_1l05212"/>05212 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_tasks_8c_source_1l05213"/>05213 
<anchor xml:id="_tasks_8c_source_1l05214"/>05214 
</programlisting></section>
