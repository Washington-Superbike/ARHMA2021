<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_stream__buffer_8c_source" xml:lang="en-US">
<title>stream_buffer.c</title>
<indexterm><primary>FreeRTOS/stream_buffer.c</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_stream__buffer_8c_source_1l00001"/>00001 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00002"/>00002 <emphasis role="comment">&#32;*&#32;FreeRTOS&#32;Kernel&#32;V10.2.0</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00003"/>00003 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;2019&#32;Amazon.com,&#32;Inc.&#32;or&#32;its&#32;affiliates.&#32;&#32;All&#32;Rights&#32;Reserved.</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00004"/>00004 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00005"/>00005 <emphasis role="comment">&#32;*&#32;Permission&#32;is&#32;hereby&#32;granted,&#32;free&#32;of&#32;charge,&#32;to&#32;any&#32;person&#32;obtaining&#32;a&#32;copy&#32;of</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00006"/>00006 <emphasis role="comment">&#32;*&#32;this&#32;software&#32;and&#32;associated&#32;documentation&#32;files&#32;(the&#32;&quot;Software&quot;),&#32;to&#32;deal&#32;in</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00007"/>00007 <emphasis role="comment">&#32;*&#32;the&#32;Software&#32;without&#32;restriction,&#32;including&#32;without&#32;limitation&#32;the&#32;rights&#32;to</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00008"/>00008 <emphasis role="comment">&#32;*&#32;use,&#32;copy,&#32;modify,&#32;merge,&#32;publish,&#32;distribute,&#32;sublicense,&#32;and/or&#32;sell&#32;copies&#32;of</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00009"/>00009 <emphasis role="comment">&#32;*&#32;the&#32;Software,&#32;and&#32;to&#32;permit&#32;persons&#32;to&#32;whom&#32;the&#32;Software&#32;is&#32;furnished&#32;to&#32;do&#32;so,</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00010"/>00010 <emphasis role="comment">&#32;*&#32;subject&#32;to&#32;the&#32;following&#32;conditions:</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00011"/>00011 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00012"/>00012 <emphasis role="comment">&#32;*&#32;The&#32;above&#32;copyright&#32;notice&#32;and&#32;this&#32;permission&#32;notice&#32;shall&#32;be&#32;included&#32;in&#32;all</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00013"/>00013 <emphasis role="comment">&#32;*&#32;copies&#32;or&#32;substantial&#32;portions&#32;of&#32;the&#32;Software.</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00014"/>00014 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00015"/>00015 <emphasis role="comment">&#32;*&#32;THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;&quot;AS&#32;IS&quot;,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00016"/>00016 <emphasis role="comment">&#32;*&#32;IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,&#32;FITNESS</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00017"/>00017 <emphasis role="comment">&#32;*&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL&#32;THE&#32;AUTHORS&#32;OR</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00018"/>00018 <emphasis role="comment">&#32;*&#32;COPYRIGHT&#32;HOLDERS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER&#32;LIABILITY,&#32;WHETHER</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00019"/>00019 <emphasis role="comment">&#32;*&#32;IN&#32;AN&#32;ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING&#32;FROM,&#32;OUT&#32;OF&#32;OR&#32;IN</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00020"/>00020 <emphasis role="comment">&#32;*&#32;CONNECTION&#32;WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS&#32;IN&#32;THE&#32;SOFTWARE.</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00021"/>00021 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00022"/>00022 <emphasis role="comment">&#32;*&#32;http://www.FreeRTOS.org</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00023"/>00023 <emphasis role="comment">&#32;*&#32;http://aws.amazon.com/freertos</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00024"/>00024 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00025"/>00025 <emphasis role="comment">&#32;*&#32;1&#32;tab&#32;==&#32;4&#32;spaces!</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00026"/>00026 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00027"/>00027 
<anchor xml:id="_stream__buffer_8c_source_1l00028"/>00028 <emphasis role="comment">/*&#32;Standard&#32;includes.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00029"/>00029 <emphasis role="preprocessor">#include&#32;&lt;stdint.h&gt;</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00030"/>00030 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00031"/>00031 
<anchor xml:id="_stream__buffer_8c_source_1l00032"/>00032 <emphasis role="comment">/*&#32;Defining&#32;MPU_WRAPPERS_INCLUDED_FROM_API_FILE&#32;prevents&#32;task.h&#32;from&#32;redefining</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00033"/>00033 <emphasis role="comment">all&#32;the&#32;API&#32;functions&#32;to&#32;use&#32;the&#32;MPU&#32;wrappers.&#32;&#32;That&#32;should&#32;only&#32;be&#32;done&#32;when</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00034"/>00034 <emphasis role="comment">task.h&#32;is&#32;included&#32;from&#32;an&#32;application&#32;file.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00035"/><link linkend="_stream__buffer_8c_1ab622d8c674f2a417a666a7ed89109e79">00035</link> <emphasis role="preprocessor">#define&#32;MPU_WRAPPERS_INCLUDED_FROM_API_FILE</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00036"/>00036 
<anchor xml:id="_stream__buffer_8c_source_1l00037"/>00037 <emphasis role="comment">/*&#32;FreeRTOS&#32;includes.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00038"/>00038 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__free_r_t_o_s_8h">FreeRTOS.h</link>&quot;</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00039"/>00039 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_task_8h">task.h</link>&quot;</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_stream__buffer_8h">stream_buffer.h</link>&quot;</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00041"/>00041 
<anchor xml:id="_stream__buffer_8c_source_1l00042"/>00042 <emphasis role="preprocessor">#if(&#32;configUSE_TASK_NOTIFICATIONS&#32;!=&#32;1&#32;)</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00043"/>00043 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#error&#32;configUSE_TASK_NOTIFICATIONS&#32;must&#32;be&#32;set&#32;to&#32;1&#32;to&#32;build&#32;stream_buffer.c</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00044"/>00044 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00045"/>00045 
<anchor xml:id="_stream__buffer_8c_source_1l00046"/>00046 <emphasis role="comment">/*&#32;Lint&#32;e961,&#32;e9021&#32;and&#32;e750&#32;are&#32;suppressed&#32;as&#32;a&#32;MISRA&#32;exception&#32;justified</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00047"/>00047 <emphasis role="comment">because&#32;the&#32;MPU&#32;ports&#32;require&#32;MPU_WRAPPERS_INCLUDED_FROM_API_FILE&#32;to&#32;be&#32;defined</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00048"/>00048 <emphasis role="comment">for&#32;the&#32;header&#32;files&#32;above,&#32;but&#32;not&#32;in&#32;this&#32;file,&#32;in&#32;order&#32;to&#32;generate&#32;the</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00049"/>00049 <emphasis role="comment">correct&#32;privileged&#32;Vs&#32;unprivileged&#32;linkage&#32;and&#32;placement.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00050"/>00050 <emphasis role="preprocessor">#undef&#32;MPU_WRAPPERS_INCLUDED_FROM_API_FILE&#32;</emphasis><emphasis role="comment">/*lint&#32;!e961&#32;!e750&#32;!e9021.&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00051"/>00051 
<anchor xml:id="_stream__buffer_8c_source_1l00052"/>00052 <emphasis role="comment">/*&#32;If&#32;the&#32;user&#32;has&#32;not&#32;provided&#32;application&#32;specific&#32;Rx&#32;notification&#32;macros,</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00053"/>00053 <emphasis role="comment">or&#32;#defined&#32;the&#32;notification&#32;macros&#32;away,&#32;them&#32;provide&#32;default&#32;implementations</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00054"/>00054 <emphasis role="comment">that&#32;uses&#32;task&#32;notifications.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00055"/>00055 <emphasis role="comment">/*lint&#32;-save&#32;-e9026&#32;Function&#32;like&#32;macros&#32;allowed&#32;and&#32;needed&#32;here&#32;so&#32;they&#32;can&#32;be&#32;overidden.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00056"/>00056 <emphasis role="preprocessor">#ifndef&#32;sbRECEIVE_COMPLETED</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00057"/><link linkend="_stream__buffer_8c_1a4d6a29d283acfa2d4ef576476eedc789">00057</link> <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;sbRECEIVE_COMPLETED(&#32;pxStreamBuffer&#32;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00058"/>00058 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vTaskSuspendAll();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00059"/>00059 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00060"/>00060 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(&#32;(&#32;pxStreamBuffer&#32;)-&gt;xTaskWaitingToSend&#32;!=&#32;NULL&#32;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00061"/>00061 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00062"/>00062 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;xTaskNotify(&#32;(&#32;pxStreamBuffer&#32;)-&gt;xTaskWaitingToSend,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00063"/>00063 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;uint32_t&#32;)&#32;0,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00064"/>00064 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eNoAction&#32;);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00065"/>00065 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;pxStreamBuffer&#32;)-&gt;xTaskWaitingToSend&#32;=&#32;NULL;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00066"/>00066 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00067"/>00067 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00068"/>00068 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;xTaskResumeAll();</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00069"/>00069 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;sbRECEIVE_COMPLETED&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00070"/>00070 
<anchor xml:id="_stream__buffer_8c_source_1l00071"/>00071 <emphasis role="preprocessor">#ifndef&#32;sbRECEIVE_COMPLETED_FROM_ISR</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00072"/><link linkend="_stream__buffer_8c_1ab72c363566113705c021596f90c6eb5a">00072</link> <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;sbRECEIVE_COMPLETED_FROM_ISR(&#32;pxStreamBuffer,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00073"/>00073 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxHigherPriorityTaskWoken&#32;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00074"/>00074 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00075"/>00075 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;UBaseType_t&#32;uxSavedInterruptStatus;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00076"/>00076 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00077"/>00077 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxSavedInterruptStatus&#32;=&#32;(&#32;UBaseType_t&#32;)&#32;portSET_INTERRUPT_MASK_FROM_ISR();&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00078"/>00078 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00079"/>00079 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(&#32;(&#32;pxStreamBuffer&#32;)-&gt;xTaskWaitingToSend&#32;!=&#32;NULL&#32;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00080"/>00080 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00081"/>00081 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;xTaskNotifyFromISR(&#32;(&#32;pxStreamBuffer&#32;)-&gt;xTaskWaitingToSend,&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00082"/>00082 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;uint32_t&#32;)&#32;0,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00083"/>00083 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eNoAction,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00084"/>00084 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxHigherPriorityTaskWoken&#32;);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00085"/>00085 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;pxStreamBuffer&#32;)-&gt;xTaskWaitingToSend&#32;=&#32;NULL;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00086"/>00086 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00087"/>00087 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00088"/>00088 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;portCLEAR_INTERRUPT_MASK_FROM_ISR(&#32;uxSavedInterruptStatus&#32;);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00089"/>00089 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00090"/>00090 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;sbRECEIVE_COMPLETED_FROM_ISR&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00091"/>00091 
<anchor xml:id="_stream__buffer_8c_source_1l00092"/>00092 <emphasis role="comment">/*&#32;If&#32;the&#32;user&#32;has&#32;not&#32;provided&#32;an&#32;application&#32;specific&#32;Tx&#32;notification&#32;macro,</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00093"/>00093 <emphasis role="comment">or&#32;#defined&#32;the&#32;notification&#32;macro&#32;away,&#32;them&#32;provide&#32;a&#32;default&#32;implementation</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00094"/>00094 <emphasis role="comment">that&#32;uses&#32;task&#32;notifications.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00095"/>00095 <emphasis role="preprocessor">#ifndef&#32;sbSEND_COMPLETED</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00096"/><link linkend="_stream__buffer_8c_1aa75273dfbcd92710254df0165ae1da5d">00096</link> <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;sbSEND_COMPLETED(&#32;pxStreamBuffer&#32;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00097"/>00097 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vTaskSuspendAll();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00098"/>00098 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00099"/>00099 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(&#32;(&#32;pxStreamBuffer&#32;)-&gt;xTaskWaitingToReceive&#32;!=&#32;NULL&#32;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00100"/>00100 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00101"/>00101 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;xTaskNotify(&#32;(&#32;pxStreamBuffer&#32;)-&gt;xTaskWaitingToReceive,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00102"/>00102 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;uint32_t&#32;)&#32;0,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00103"/>00103 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eNoAction&#32;);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00104"/>00104 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;pxStreamBuffer&#32;)-&gt;xTaskWaitingToReceive&#32;=&#32;NULL;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00105"/>00105 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00106"/>00106 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00107"/>00107 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;xTaskResumeAll();</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00108"/>00108 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;sbSEND_COMPLETED&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00109"/>00109 
<anchor xml:id="_stream__buffer_8c_source_1l00110"/>00110 <emphasis role="preprocessor">#ifndef&#32;sbSEND_COMPLETE_FROM_ISR</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00111"/><link linkend="_stream__buffer_8c_1aadd3cf567c5086402552c463c55dda7c">00111</link> <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;sbSEND_COMPLETE_FROM_ISR(&#32;pxStreamBuffer,&#32;pxHigherPriorityTaskWoken&#32;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00112"/>00112 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00113"/>00113 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;UBaseType_t&#32;uxSavedInterruptStatus;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00114"/>00114 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00115"/>00115 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxSavedInterruptStatus&#32;=&#32;(&#32;UBaseType_t&#32;)&#32;portSET_INTERRUPT_MASK_FROM_ISR();&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00116"/>00116 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00117"/>00117 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(&#32;(&#32;pxStreamBuffer&#32;)-&gt;xTaskWaitingToReceive&#32;!=&#32;NULL&#32;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00118"/>00118 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00119"/>00119 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;xTaskNotifyFromISR(&#32;(&#32;pxStreamBuffer&#32;)-&gt;xTaskWaitingToReceive,&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00120"/>00120 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;uint32_t&#32;)&#32;0,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00121"/>00121 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eNoAction,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00122"/>00122 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxHigherPriorityTaskWoken&#32;);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00123"/>00123 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;pxStreamBuffer&#32;)-&gt;xTaskWaitingToReceive&#32;=&#32;NULL;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00124"/>00124 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00125"/>00125 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00126"/>00126 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;portCLEAR_INTERRUPT_MASK_FROM_ISR(&#32;uxSavedInterruptStatus&#32;);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00127"/>00127 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00128"/>00128 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;sbSEND_COMPLETE_FROM_ISR&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00129"/>00129 <emphasis role="comment">/*lint&#32;-restore&#32;(9026)&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00130"/>00130 
<anchor xml:id="_stream__buffer_8c_source_1l00131"/>00131 <emphasis role="comment">/*&#32;The&#32;number&#32;of&#32;bytes&#32;used&#32;to&#32;hold&#32;the&#32;length&#32;of&#32;a&#32;message&#32;in&#32;the&#32;buffer.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00132"/><link linkend="_stream__buffer_8c_1aaa21967227eb06d02cdd038047b836f6">00132</link> <emphasis role="preprocessor">#define&#32;sbBYTES_TO_STORE_MESSAGE_LENGTH&#32;(&#32;sizeof(&#32;configMESSAGE_BUFFER_LENGTH_TYPE&#32;)&#32;)</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00133"/>00133 
<anchor xml:id="_stream__buffer_8c_source_1l00134"/>00134 <emphasis role="comment">/*&#32;Bits&#32;stored&#32;in&#32;the&#32;ucFlags&#32;field&#32;of&#32;the&#32;stream&#32;buffer.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00135"/><link linkend="_stream__buffer_8c_1a4954c04e3f9f6b0d4a98b9441b35d896">00135</link> <emphasis role="preprocessor">#define&#32;sbFLAGS_IS_MESSAGE_BUFFER&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(&#32;uint8_t&#32;)&#32;1&#32;)&#32;</emphasis><emphasis role="comment">/*&#32;Set&#32;if&#32;the&#32;stream&#32;buffer&#32;was&#32;created&#32;as&#32;a&#32;message&#32;buffer,&#32;in&#32;which&#32;case&#32;it&#32;holds&#32;discrete&#32;messages&#32;rather&#32;than&#32;a&#32;stream.&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00136"/><link linkend="_stream__buffer_8c_1a80943e49aae8a493f02d78527b3fc01e">00136</link> <emphasis role="preprocessor">#define&#32;sbFLAGS_IS_STATICALLY_ALLOCATED&#32;(&#32;(&#32;uint8_t&#32;)&#32;2&#32;)&#32;</emphasis><emphasis role="comment">/*&#32;Set&#32;if&#32;the&#32;stream&#32;buffer&#32;was&#32;created&#32;using&#32;statically&#32;allocated&#32;memory.&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00137"/>00137 
<anchor xml:id="_stream__buffer_8c_source_1l00138"/>00138 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00139"/>00139 
<anchor xml:id="_stream__buffer_8c_source_1l00140"/>00140 <emphasis role="comment">/*&#32;Structure&#32;that&#32;hold&#32;state&#32;information&#32;on&#32;the&#32;buffer.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00141"/><link linkend="_struct_stream_buffer_def__t">00141</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_stream_buffer_def__t">StreamBufferDef_t</link>&#32;<emphasis role="comment">/*lint&#32;!e9058&#32;Style&#32;convention&#32;uses&#32;tag.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00142"/>00142 {
<anchor xml:id="_stream__buffer_8c_source_1l00143"/><link linkend="_struct_stream_buffer_def__t_1a937e441ed6c946a099d52b5955d7302c">00143</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">volatile</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_struct_stream_buffer_def__t_1a937e441ed6c946a099d52b5955d7302c">xTail</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Index&#32;to&#32;the&#32;next&#32;item&#32;to&#32;read&#32;within&#32;the&#32;buffer.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00144"/><link linkend="_struct_stream_buffer_def__t_1a75aafb9fdee8f0666837302bd9b12341">00144</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">volatile</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_struct_stream_buffer_def__t_1a75aafb9fdee8f0666837302bd9b12341">xHead</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Index&#32;to&#32;the&#32;next&#32;item&#32;to&#32;write&#32;within&#32;the&#32;buffer.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00145"/><link linkend="_struct_stream_buffer_def__t_1a6eedf41c877edd42b3b460780d1b6555">00145</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_struct_stream_buffer_def__t_1a6eedf41c877edd42b3b460780d1b6555">xLength</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;length&#32;of&#32;the&#32;buffer&#32;pointed&#32;to&#32;by&#32;pucBuffer.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00146"/><link linkend="_struct_stream_buffer_def__t_1a4a7ee9b374cc0b358d049811def8d595">00146</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_struct_stream_buffer_def__t_1a4a7ee9b374cc0b358d049811def8d595">xTriggerLevelBytes</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;number&#32;of&#32;bytes&#32;that&#32;must&#32;be&#32;in&#32;the&#32;stream&#32;buffer&#32;before&#32;a&#32;task&#32;that&#32;is&#32;waiting&#32;for&#32;data&#32;is&#32;unblocked.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00147"/><link linkend="_struct_stream_buffer_def__t_1a8377ae8625121efa22d66e678add4057">00147</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">volatile</emphasis>&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;<link linkend="_struct_stream_buffer_def__t_1a8377ae8625121efa22d66e678add4057">xTaskWaitingToReceive</link>;&#32;<emphasis role="comment">/*&#32;Holds&#32;the&#32;handle&#32;of&#32;a&#32;task&#32;waiting&#32;for&#32;data,&#32;or&#32;NULL&#32;if&#32;no&#32;tasks&#32;are&#32;waiting.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00148"/><link linkend="_struct_stream_buffer_def__t_1a85b1cf05c0222f8d67a64f7d01722e52">00148</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">volatile</emphasis>&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;<link linkend="_struct_stream_buffer_def__t_1a85b1cf05c0222f8d67a64f7d01722e52">xTaskWaitingToSend</link>;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Holds&#32;the&#32;handle&#32;of&#32;a&#32;task&#32;waiting&#32;to&#32;send&#32;data&#32;to&#32;a&#32;message&#32;buffer&#32;that&#32;is&#32;full.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00149"/><link linkend="_struct_stream_buffer_def__t_1a4e05054a8a3d61a5cec0c18a70bbdb67">00149</link> &#32;&#32;&#32;&#32;uint8_t&#32;*<link linkend="_struct_stream_buffer_def__t_1a4e05054a8a3d61a5cec0c18a70bbdb67">pucBuffer</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Points&#32;to&#32;the&#32;buffer&#32;itself&#32;-&#32;that&#32;is&#32;-&#32;the&#32;RAM&#32;that&#32;stores&#32;the&#32;data&#32;passed&#32;through&#32;the&#32;buffer.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00150"/><link linkend="_struct_stream_buffer_def__t_1a1afd02d997a1cb3149e3cf203c681d58">00150</link> &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_struct_stream_buffer_def__t_1a1afd02d997a1cb3149e3cf203c681d58">ucFlags</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00151"/>00151 
<anchor xml:id="_stream__buffer_8c_source_1l00152"/>00152 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00153"/><link linkend="_struct_stream_buffer_def__t_1aee83da827fa7eb47682250297d6961b0">00153</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_struct_stream_buffer_def__t_1aee83da827fa7eb47682250297d6961b0">uxStreamBufferNumber</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Used&#32;for&#32;tracing&#32;purposes.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00154"/>00154 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00155"/><link linkend="_stream__buffer_8c_1ac30372f81bb381115f91d7daa384db2d">00155</link> }&#32;<link linkend="_stream__buffer_8c_1ac30372f81bb381115f91d7daa384db2d">StreamBuffer_t</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00156"/>00156 
<anchor xml:id="_stream__buffer_8c_source_1l00157"/>00157 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00158"/>00158 <emphasis role="comment">&#32;*&#32;The&#32;number&#32;of&#32;bytes&#32;available&#32;to&#32;be&#32;read&#32;from&#32;the&#32;buffer.</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00159"/>00159 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00160"/>00160 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_stream__buffer_8c_1ab588e6a51ba9c8e7796aa05e5c600c36">prvBytesInBuffer</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxStreamBuffer&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00161"/>00161 
<anchor xml:id="_stream__buffer_8c_source_1l00162"/>00162 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00163"/>00163 <emphasis role="comment">&#32;*&#32;Add&#32;xCount&#32;bytes&#32;from&#32;pucData&#32;into&#32;the&#32;pxStreamBuffer&#32;message&#32;buffer.</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00164"/>00164 <emphasis role="comment">&#32;*&#32;Returns&#32;the&#32;number&#32;of&#32;bytes&#32;written,&#32;which&#32;will&#32;either&#32;equal&#32;xCount&#32;in&#32;the</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00165"/>00165 <emphasis role="comment">&#32;*&#32;success&#32;case,&#32;or&#32;0&#32;if&#32;there&#32;was&#32;not&#32;enough&#32;space&#32;in&#32;the&#32;buffer&#32;(in&#32;which&#32;case</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00166"/>00166 <emphasis role="comment">&#32;*&#32;no&#32;data&#32;is&#32;written&#32;into&#32;the&#32;buffer).</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00167"/>00167 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00168"/>00168 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_stream__buffer_8c_1a4e311fb1b4587477fd167f249e02286b">prvWriteBytesToBuffer</link>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxStreamBuffer,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;*pucData,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xCount&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00169"/>00169 
<anchor xml:id="_stream__buffer_8c_source_1l00170"/>00170 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00171"/>00171 <emphasis role="comment">&#32;*&#32;If&#32;the&#32;stream&#32;buffer&#32;is&#32;being&#32;used&#32;as&#32;a&#32;message&#32;buffer,&#32;then&#32;reads&#32;an&#32;entire</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00172"/>00172 <emphasis role="comment">&#32;*&#32;message&#32;out&#32;of&#32;the&#32;buffer.&#32;&#32;If&#32;the&#32;stream&#32;buffer&#32;is&#32;being&#32;used&#32;as&#32;a&#32;stream</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00173"/>00173 <emphasis role="comment">&#32;*&#32;buffer&#32;then&#32;read&#32;as&#32;many&#32;bytes&#32;as&#32;possible&#32;from&#32;the&#32;buffer.</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00174"/>00174 <emphasis role="comment">&#32;*&#32;prvReadBytesFromBuffer()&#32;is&#32;called&#32;to&#32;actually&#32;extract&#32;the&#32;bytes&#32;from&#32;the</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00175"/>00175 <emphasis role="comment">&#32;*&#32;buffer&apos;s&#32;data&#32;storage&#32;area.</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00176"/>00176 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00177"/>00177 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_stream__buffer_8c_1a5823b1fb23f6468eb0447db4adb95ebd">prvReadMessageFromBuffer</link>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*pxStreamBuffer,
<anchor xml:id="_stream__buffer_8c_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pvRxData,
<anchor xml:id="_stream__buffer_8c_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xBufferLengthBytes,
<anchor xml:id="_stream__buffer_8c_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xBytesAvailable,
<anchor xml:id="_stream__buffer_8c_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xBytesToStoreMessageLength&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00182"/>00182 
<anchor xml:id="_stream__buffer_8c_source_1l00183"/>00183 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00184"/>00184 <emphasis role="comment">&#32;*&#32;If&#32;the&#32;stream&#32;buffer&#32;is&#32;being&#32;used&#32;as&#32;a&#32;message&#32;buffer,&#32;then&#32;writes&#32;an&#32;entire</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00185"/>00185 <emphasis role="comment">&#32;*&#32;message&#32;to&#32;the&#32;buffer.&#32;&#32;If&#32;the&#32;stream&#32;buffer&#32;is&#32;being&#32;used&#32;as&#32;a&#32;stream</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00186"/>00186 <emphasis role="comment">&#32;*&#32;buffer&#32;then&#32;write&#32;as&#32;many&#32;bytes&#32;as&#32;possible&#32;to&#32;the&#32;buffer.</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00187"/>00187 <emphasis role="comment">&#32;*&#32;prvWriteBytestoBuffer()&#32;is&#32;called&#32;to&#32;actually&#32;send&#32;the&#32;bytes&#32;to&#32;the&#32;buffer&apos;s</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00188"/>00188 <emphasis role="comment">&#32;*&#32;data&#32;storage&#32;area.</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00189"/>00189 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00190"/>00190 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_stream__buffer_8c_1a0982313ee374e6edf9296d3ce4fefd3e">prvWriteMessageToBuffer</link>(&#32;&#32;<link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxStreamBuffer,
<anchor xml:id="_stream__buffer_8c_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;pvTxData,
<anchor xml:id="_stream__buffer_8c_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xDataLengthBytes,
<anchor xml:id="_stream__buffer_8c_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xSpace,
<anchor xml:id="_stream__buffer_8c_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xRequiredSpace&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00195"/>00195 
<anchor xml:id="_stream__buffer_8c_source_1l00196"/>00196 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00197"/>00197 <emphasis role="comment">&#32;*&#32;Read&#32;xMaxCount&#32;bytes&#32;from&#32;the&#32;pxStreamBuffer&#32;message&#32;buffer&#32;and&#32;write&#32;them</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00198"/>00198 <emphasis role="comment">&#32;*&#32;to&#32;pucData.</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00199"/>00199 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00200"/>00200 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_stream__buffer_8c_1a7d74bf9ad861552245f1e382c4c0f7fa">prvReadBytesFromBuffer</link>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*pxStreamBuffer,
<anchor xml:id="_stream__buffer_8c_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;*pucData,
<anchor xml:id="_stream__buffer_8c_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xMaxCount,
<anchor xml:id="_stream__buffer_8c_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xBytesAvailable&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00204"/>00204 
<anchor xml:id="_stream__buffer_8c_source_1l00205"/>00205 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00206"/>00206 <emphasis role="comment">&#32;*&#32;Called&#32;by&#32;both&#32;pxStreamBufferCreate()&#32;and&#32;pxStreamBufferCreateStatic()&#32;to</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00207"/>00207 <emphasis role="comment">&#32;*&#32;initialise&#32;the&#32;members&#32;of&#32;the&#32;newly&#32;created&#32;stream&#32;buffer&#32;structure.</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00208"/>00208 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00209"/>00209 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_stream__buffer_8c_1a788f6b7c88760204fc60aa514c5849b7">prvInitialiseNewStreamBuffer</link>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxStreamBuffer,
<anchor xml:id="_stream__buffer_8c_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pucBuffer,
<anchor xml:id="_stream__buffer_8c_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xBufferSizeBytes,
<anchor xml:id="_stream__buffer_8c_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xTriggerLevelBytes,
<anchor xml:id="_stream__buffer_8c_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;ucFlags&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00214"/>00214 
<anchor xml:id="_stream__buffer_8c_source_1l00215"/>00215 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00216"/>00216 
<anchor xml:id="_stream__buffer_8c_source_1l00217"/>00217 <emphasis role="preprocessor">#if(&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00218"/>00218 
<anchor xml:id="_stream__buffer_8c_source_1l00219"/><link linkend="_stream__buffer_8c_1a4387e6f3c52bd8755a014673c97aa497">00219</link> &#32;&#32;&#32;&#32;<link linkend="_struct_stream_buffer_def__t">StreamBufferHandle_t</link>&#32;<link linkend="_stream__buffer_8c_1a4387e6f3c52bd8755a014673c97aa497">xStreamBufferGenericCreate</link>(&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xBufferSizeBytes,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xTriggerLevelBytes,&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xIsMessageBuffer&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00220"/>00220 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00221"/>00221 &#32;&#32;&#32;&#32;uint8_t&#32;*pucAllocatedMemory;
<anchor xml:id="_stream__buffer_8c_source_1l00222"/>00222 &#32;&#32;&#32;&#32;uint8_t&#32;ucFlags;
<anchor xml:id="_stream__buffer_8c_source_1l00223"/>00223 
<anchor xml:id="_stream__buffer_8c_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;In&#32;case&#32;the&#32;stream&#32;buffer&#32;is&#32;going&#32;to&#32;be&#32;used&#32;as&#32;a&#32;message&#32;buffer</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00225"/>00225 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(that&#32;is,&#32;it&#32;will&#32;hold&#32;discrete&#32;messages&#32;with&#32;a&#32;little&#32;meta&#32;data&#32;that</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00226"/>00226 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;says&#32;how&#32;big&#32;the&#32;next&#32;message&#32;is)&#32;check&#32;the&#32;buffer&#32;will&#32;be&#32;large&#32;enough</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00227"/>00227 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;hold&#32;at&#32;least&#32;one&#32;message.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xIsMessageBuffer&#32;==&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Is&#32;a&#32;message&#32;buffer&#32;but&#32;not&#32;statically&#32;allocated.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ucFlags&#32;=&#32;<link linkend="_stream__buffer_8c_1a4954c04e3f9f6b0d4a98b9441b35d896">sbFLAGS_IS_MESSAGE_BUFFER</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xBufferSizeBytes&#32;&gt;&#32;<link linkend="_stream__buffer_8c_1aaa21967227eb06d02cdd038047b836f6">sbBYTES_TO_STORE_MESSAGE_LENGTH</link>&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Not&#32;a&#32;message&#32;buffer&#32;and&#32;not&#32;statically&#32;allocated.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ucFlags&#32;=&#32;0;
<anchor xml:id="_stream__buffer_8c_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xBufferSizeBytes&#32;&gt;&#32;0&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xTriggerLevelBytes&#32;&lt;=&#32;xBufferSizeBytes&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00241"/>00241 
<anchor xml:id="_stream__buffer_8c_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;trigger&#32;level&#32;of&#32;0&#32;would&#32;cause&#32;a&#32;waiting&#32;task&#32;to&#32;unblock&#32;even&#32;when</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00243"/>00243 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;buffer&#32;was&#32;empty.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTriggerLevelBytes&#32;==&#32;(&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;)&#32;0&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xTriggerLevelBytes&#32;=&#32;(&#32;size_t&#32;)&#32;1;
<anchor xml:id="_stream__buffer_8c_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00248"/>00248 
<anchor xml:id="_stream__buffer_8c_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;stream&#32;buffer&#32;requires&#32;a&#32;StreamBuffer_t&#32;structure&#32;and&#32;a&#32;buffer.</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00250"/>00250 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Both&#32;are&#32;allocated&#32;in&#32;a&#32;single&#32;call&#32;to&#32;pvPortMalloc().&#32;&#32;The</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00251"/>00251 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StreamBuffer_t&#32;structure&#32;is&#32;placed&#32;at&#32;the&#32;start&#32;of&#32;the&#32;allocated&#32;memory</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00252"/>00252 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;the&#32;buffer&#32;follows&#32;immediately&#32;after.&#32;&#32;The&#32;requested&#32;size&#32;is</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00253"/>00253 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;incremented&#32;so&#32;the&#32;free&#32;space&#32;is&#32;returned&#32;as&#32;the&#32;user&#32;would&#32;expect&#32;-</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00254"/>00254 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this&#32;is&#32;a&#32;quirk&#32;of&#32;the&#32;implementation&#32;that&#32;means&#32;otherwise&#32;the&#32;free</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00255"/>00255 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;space&#32;would&#32;be&#32;reported&#32;as&#32;one&#32;byte&#32;smaller&#32;than&#32;would&#32;be&#32;logically</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00256"/>00256 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;expected.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xBufferSizeBytes++;
<anchor xml:id="_stream__buffer_8c_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pucAllocatedMemory&#32;=&#32;(&#32;uint8_t&#32;*&#32;)&#32;<link linkend="_heap__3_8c_1ac56bcb7515f081a5b3df83935499fa4a">pvPortMalloc</link>(&#32;xBufferSizeBytes&#32;+&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;)&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9079&#32;malloc()&#32;only&#32;returns&#32;void*.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00259"/>00259 
<anchor xml:id="_stream__buffer_8c_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pucAllocatedMemory&#32;!=&#32;NULL&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stream__buffer_8c_1a788f6b7c88760204fc60aa514c5849b7">prvInitialiseNewStreamBuffer</link>(&#32;(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*&#32;)&#32;pucAllocatedMemory,&#32;<emphasis role="comment">/*&#32;Structure&#32;at&#32;the&#32;start&#32;of&#32;the&#32;allocated&#32;memory.&#32;*/</emphasis>&#32;<emphasis role="comment">/*lint&#32;!e9087&#32;Safe&#32;cast&#32;as&#32;allocated&#32;memory&#32;is&#32;aligned.&#32;*/</emphasis>&#32;<emphasis role="comment">/*lint&#32;!e826&#32;Area&#32;is&#32;not&#32;too&#32;small&#32;and&#32;alignment&#32;is&#32;guaranteed&#32;provided&#32;malloc()&#32;behaves&#32;as&#32;expected&#32;and&#32;returns&#32;aligned&#32;buffer.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pucAllocatedMemory&#32;+&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;),&#32;&#32;<emphasis role="comment">/*&#32;Storage&#32;area&#32;follows.&#32;*/</emphasis>&#32;<emphasis role="comment">/*lint&#32;!e9016&#32;Indexing&#32;past&#32;structure&#32;valid&#32;for&#32;uint8_t&#32;pointer,&#32;also&#32;storage&#32;area&#32;has&#32;no&#32;alignment&#32;requirement.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xBufferSizeBytes,
<anchor xml:id="_stream__buffer_8c_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xTriggerLevelBytes,
<anchor xml:id="_stream__buffer_8c_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ucFlags&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00267"/>00267 
<anchor xml:id="_stream__buffer_8c_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a3666750a606dd4323b011db1b146e7b9">traceSTREAM_BUFFER_CREATE</link>(&#32;(&#32;(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*&#32;)&#32;pucAllocatedMemory&#32;),&#32;xIsMessageBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a2bc57023bb903e717940ac8aa13a3016">traceSTREAM_BUFFER_CREATE_FAILED</link>(&#32;xIsMessageBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00274"/>00274 
<anchor xml:id="_stream__buffer_8c_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBufferHandle_t</link>&#32;)&#32;pucAllocatedMemory;&#32;<emphasis role="comment">/*lint&#32;!e9087&#32;!e826&#32;Safe&#32;cast&#32;as&#32;allocated&#32;memory&#32;is&#32;aligned.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00276"/>00276 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00277"/>00277 
<anchor xml:id="_stream__buffer_8c_source_1l00278"/>00278 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00279"/>00279 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00280"/>00280 
<anchor xml:id="_stream__buffer_8c_source_1l00281"/>00281 <emphasis role="preprocessor">#if(&#32;configSUPPORT_STATIC_ALLOCATION&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00282"/>00282 
<anchor xml:id="_stream__buffer_8c_source_1l00283"/>00283 &#32;&#32;&#32;&#32;<link linkend="_struct_stream_buffer_def__t">StreamBufferHandle_t</link>&#32;<link linkend="_stream__buffer_8h_1a1263847a3f77a4f34462df326d78c48c">xStreamBufferGenericCreateStatic</link>(&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xBufferSizeBytes,
<anchor xml:id="_stream__buffer_8c_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xTriggerLevelBytes,
<anchor xml:id="_stream__buffer_8c_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xIsMessageBuffer,
<anchor xml:id="_stream__buffer_8c_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pucStreamBufferStorageArea,
<anchor xml:id="_stream__buffer_8c_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structx_s_t_a_t_i_c___s_t_r_e_a_m___b_u_f_f_e_r">StaticStreamBuffer_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxStaticStreamBuffer&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00288"/>00288 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00289"/>00289 &#32;&#32;&#32;&#32;<link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxStreamBuffer&#32;=&#32;(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*&#32;)&#32;pxStaticStreamBuffer;&#32;<emphasis role="comment">/*lint&#32;!e740&#32;!e9087&#32;Safe&#32;cast&#32;as&#32;StaticStreamBuffer_t&#32;is&#32;opaque&#32;Streambuffer_t.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00290"/>00290 &#32;&#32;&#32;&#32;<link linkend="_struct_stream_buffer_def__t">StreamBufferHandle_t</link>&#32;xReturn;
<anchor xml:id="_stream__buffer_8c_source_1l00291"/>00291 &#32;&#32;&#32;&#32;uint8_t&#32;ucFlags;
<anchor xml:id="_stream__buffer_8c_source_1l00292"/>00292 
<anchor xml:id="_stream__buffer_8c_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pucStreamBufferStorageArea&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxStaticStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xTriggerLevelBytes&#32;&lt;=&#32;xBufferSizeBytes&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00296"/>00296 
<anchor xml:id="_stream__buffer_8c_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;trigger&#32;level&#32;of&#32;0&#32;would&#32;cause&#32;a&#32;waiting&#32;task&#32;to&#32;unblock&#32;even&#32;when</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00298"/>00298 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;buffer&#32;was&#32;empty.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTriggerLevelBytes&#32;==&#32;(&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;)&#32;0&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xTriggerLevelBytes&#32;=&#32;(&#32;size_t&#32;)&#32;1;
<anchor xml:id="_stream__buffer_8c_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00303"/>00303 
<anchor xml:id="_stream__buffer_8c_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xIsMessageBuffer&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Statically&#32;allocated&#32;message&#32;buffer.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ucFlags&#32;=&#32;<link linkend="_stream__buffer_8c_1a4954c04e3f9f6b0d4a98b9441b35d896">sbFLAGS_IS_MESSAGE_BUFFER</link>&#32;|&#32;<link linkend="_stream__buffer_8c_1a80943e49aae8a493f02d78527b3fc01e">sbFLAGS_IS_STATICALLY_ALLOCATED</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Statically&#32;allocated&#32;stream&#32;buffer.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ucFlags&#32;=&#32;<link linkend="_stream__buffer_8c_1a80943e49aae8a493f02d78527b3fc01e">sbFLAGS_IS_STATICALLY_ALLOCATED</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00314"/>00314 
<anchor xml:id="_stream__buffer_8c_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;In&#32;case&#32;the&#32;stream&#32;buffer&#32;is&#32;going&#32;to&#32;be&#32;used&#32;as&#32;a&#32;message&#32;buffer</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00316"/>00316 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(that&#32;is,&#32;it&#32;will&#32;hold&#32;discrete&#32;messages&#32;with&#32;a&#32;little&#32;meta&#32;data&#32;that</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00317"/>00317 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;says&#32;how&#32;big&#32;the&#32;next&#32;message&#32;is)&#32;check&#32;the&#32;buffer&#32;will&#32;be&#32;large&#32;enough</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00318"/>00318 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;hold&#32;at&#32;least&#32;one&#32;message.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xBufferSizeBytes&#32;&gt;&#32;<link linkend="_stream__buffer_8c_1aaa21967227eb06d02cdd038047b836f6">sbBYTES_TO_STORE_MESSAGE_LENGTH</link>&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00320"/>00320 
<anchor xml:id="_stream__buffer_8c_source_1l00321"/>00321 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;configASSERT_DEFINED&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Sanity&#32;check&#32;that&#32;the&#32;size&#32;of&#32;the&#32;structure&#32;used&#32;to&#32;declare&#32;a</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00324"/>00324 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;variable&#32;of&#32;type&#32;StaticStreamBuffer_t&#32;equals&#32;the&#32;size&#32;of&#32;the&#32;real</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00325"/>00325 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;message&#32;buffer&#32;structure.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">volatile</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xSize&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<link linkend="__free_r_t_o_s_8h_1a3675ce07f6d3e0e7130bc6ea01162d34">StaticStreamBuffer_t</link>&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xSize&#32;==&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;)&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">/*lint&#32;!e529&#32;xSize&#32;is&#32;referenced&#32;is&#32;configASSERT()&#32;is&#32;defined.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00329"/>00329 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configASSERT_DEFINED&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00330"/>00330 
<anchor xml:id="_stream__buffer_8c_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;pucStreamBufferStorageArea&#32;!=&#32;NULL&#32;)&#32;&amp;&amp;&#32;(&#32;pxStaticStreamBuffer&#32;!=&#32;NULL&#32;)&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stream__buffer_8c_1a788f6b7c88760204fc60aa514c5849b7">prvInitialiseNewStreamBuffer</link>(&#32;pxStreamBuffer,
<anchor xml:id="_stream__buffer_8c_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pucStreamBufferStorageArea,
<anchor xml:id="_stream__buffer_8c_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xBufferSizeBytes,
<anchor xml:id="_stream__buffer_8c_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xTriggerLevelBytes,
<anchor xml:id="_stream__buffer_8c_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ucFlags&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00338"/>00338 
<anchor xml:id="_stream__buffer_8c_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Remember&#32;this&#32;was&#32;statically&#32;allocated&#32;in&#32;case&#32;it&#32;is&#32;ever&#32;deleted</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00340"/>00340 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;again.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a1afd02d997a1cb3149e3cf203c681d58">ucFlags</link>&#32;|=&#32;<link linkend="_stream__buffer_8c_1a80943e49aae8a493f02d78527b3fc01e">sbFLAGS_IS_STATICALLY_ALLOCATED</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00342"/>00342 
<anchor xml:id="_stream__buffer_8c_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a3666750a606dd4323b011db1b146e7b9">traceSTREAM_BUFFER_CREATE</link>(&#32;pxStreamBuffer,&#32;xIsMessageBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00344"/>00344 
<anchor xml:id="_stream__buffer_8c_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;(&#32;<link linkend="_stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f">StreamBufferHandle_t</link>&#32;)&#32;pxStaticStreamBuffer;&#32;<emphasis role="comment">/*lint&#32;!e9087&#32;Data&#32;hiding&#32;requires&#32;cast&#32;to&#32;opaque&#32;type.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;NULL;
<anchor xml:id="_stream__buffer_8c_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a8437a62aa94288842b56a2d63786c118">traceSTREAM_BUFFER_CREATE_STATIC_FAILED</link>(&#32;xReturn,&#32;xIsMessageBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00352"/>00352 
<anchor xml:id="_stream__buffer_8c_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_stream__buffer_8c_source_1l00354"/>00354 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00355"/>00355 
<anchor xml:id="_stream__buffer_8c_source_1l00356"/>00356 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;(&#32;configSUPPORT_STATIC_ALLOCATION&#32;==&#32;1&#32;)&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00357"/>00357 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00358"/>00358 
<anchor xml:id="_stream__buffer_8c_source_1l00359"/><link linkend="_stream__buffer_8c_1a7e66db41c3fd13acf3b9f814d650f77d">00359</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_stream__buffer_8c_1a7e66db41c3fd13acf3b9f814d650f77d">vStreamBufferDelete</link>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBufferHandle_t</link>&#32;xStreamBuffer&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00360"/>00360 {
<anchor xml:id="_stream__buffer_8c_source_1l00361"/>00361 <link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*&#32;pxStreamBuffer&#32;=&#32;xStreamBuffer;
<anchor xml:id="_stream__buffer_8c_source_1l00362"/>00362 
<anchor xml:id="_stream__buffer_8c_source_1l00363"/>00363 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00364"/>00364 
<anchor xml:id="_stream__buffer_8c_source_1l00365"/>00365 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ae919bd00b51b396ff237bc8ec3b6b439">traceSTREAM_BUFFER_DELETE</link>(&#32;xStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00366"/>00366 
<anchor xml:id="_stream__buffer_8c_source_1l00367"/>00367 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a1afd02d997a1cb3149e3cf203c681d58">ucFlags</link>&#32;&amp;&#32;<link linkend="_stream__buffer_8c_1a80943e49aae8a493f02d78527b3fc01e">sbFLAGS_IS_STATICALLY_ALLOCATED</link>&#32;)&#32;==&#32;(&#32;uint8_t&#32;)&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00368"/>00368 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00369"/>00369 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Both&#32;the&#32;structure&#32;and&#32;the&#32;buffer&#32;were&#32;allocated&#32;using&#32;a&#32;single&#32;call</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00372"/>00372 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;pvPortMalloc(),&#32;hence&#32;only&#32;one&#32;call&#32;to&#32;vPortFree()&#32;is&#32;required.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_heap__3_8c_1a1e7cea2fd1bc894ea3b5f5e8179d259b">vPortFree</link>(&#32;(&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;)&#32;pxStreamBuffer&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9087&#32;Standard&#32;free()&#32;semantics&#32;require&#32;void&#32;*,&#32;plus&#32;pxStreamBuffer&#32;was&#32;allocated&#32;by&#32;pvPortMalloc().&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00375"/>00375 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Should&#32;not&#32;be&#32;possible&#32;to&#32;get&#32;here,&#32;ucFlags&#32;must&#32;be&#32;corrupt.</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00378"/>00378 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Force&#32;an&#32;assert.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xStreamBuffer&#32;==&#32;(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBufferHandle_t</link>&#32;)&#32;~0&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00381"/>00381 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00382"/>00382 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00383"/>00383 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00384"/>00384 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;structure&#32;and&#32;buffer&#32;were&#32;not&#32;allocated&#32;dynamically&#32;and&#32;cannot&#32;be</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00386"/>00386 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;freed&#32;-&#32;just&#32;scrub&#32;the&#32;structure&#32;so&#32;future&#32;use&#32;will&#32;assert.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;memset(&#32;pxStreamBuffer,&#32;0x00,&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;)&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00388"/>00388 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00389"/>00389 }
<anchor xml:id="_stream__buffer_8c_source_1l00390"/>00390 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00391"/>00391 
<anchor xml:id="_stream__buffer_8c_source_1l00392"/><link linkend="_stream__buffer_8c_1a05ed4d42963aa4aaf50e49700d44659c">00392</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_stream__buffer_8c_1a05ed4d42963aa4aaf50e49700d44659c">xStreamBufferReset</link>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBufferHandle_t</link>&#32;xStreamBuffer&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00393"/>00393 {
<anchor xml:id="_stream__buffer_8c_source_1l00394"/>00394 <link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxStreamBuffer&#32;=&#32;xStreamBuffer;
<anchor xml:id="_stream__buffer_8c_source_1l00395"/>00395 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6">pdFAIL</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00396"/>00396 
<anchor xml:id="_stream__buffer_8c_source_1l00397"/>00397 <emphasis role="preprocessor">#if(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00398"/>00398 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxStreamBufferNumber;
<anchor xml:id="_stream__buffer_8c_source_1l00399"/>00399 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00400"/>00400 
<anchor xml:id="_stream__buffer_8c_source_1l00401"/>00401 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00402"/>00402 
<anchor xml:id="_stream__buffer_8c_source_1l00403"/>00403 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00404"/>00404 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Store&#32;the&#32;stream&#32;buffer&#32;number&#32;so&#32;it&#32;can&#32;be&#32;restored&#32;after&#32;the</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00406"/>00406 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reset.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxStreamBufferNumber&#32;=&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1aee83da827fa7eb47682250297d6961b0">uxStreamBufferNumber</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00408"/>00408 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00409"/>00409 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00410"/>00410 
<anchor xml:id="_stream__buffer_8c_source_1l00411"/>00411 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Can&#32;only&#32;reset&#32;a&#32;message&#32;buffer&#32;if&#32;there&#32;are&#32;no&#32;tasks&#32;blocked&#32;on&#32;it.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00412"/>00412 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_stream__buffer_8c_source_1l00413"/>00413 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a8377ae8625121efa22d66e678add4057">xTaskWaitingToReceive</link>&#32;==&#32;NULL&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a85b1cf05c0222f8d67a64f7d01722e52">xTaskWaitingToSend</link>&#32;==&#32;NULL&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stream__buffer_8c_1a788f6b7c88760204fc60aa514c5849b7">prvInitialiseNewStreamBuffer</link>(&#32;pxStreamBuffer,
<anchor xml:id="_stream__buffer_8c_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a4e05054a8a3d61a5cec0c18a70bbdb67">pucBuffer</link>,
<anchor xml:id="_stream__buffer_8c_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a6eedf41c877edd42b3b460780d1b6555">xLength</link>,
<anchor xml:id="_stream__buffer_8c_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a4a7ee9b374cc0b358d049811def8d595">xTriggerLevelBytes</link>,
<anchor xml:id="_stream__buffer_8c_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a1afd02d997a1cb3149e3cf203c681d58">ucFlags</link>&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00424"/>00424 
<anchor xml:id="_stream__buffer_8c_source_1l00425"/>00425 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1aee83da827fa7eb47682250297d6961b0">uxStreamBufferNumber</link>&#32;=&#32;uxStreamBufferNumber;
<anchor xml:id="_stream__buffer_8c_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00429"/>00429 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00430"/>00430 
<anchor xml:id="_stream__buffer_8c_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a2ef92acbaa66efdb85be7f8256fe91ba">traceSTREAM_BUFFER_RESET</link>(&#32;xStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00434"/>00434 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00435"/>00435 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_stream__buffer_8c_source_1l00436"/>00436 
<anchor xml:id="_stream__buffer_8c_source_1l00437"/>00437 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_stream__buffer_8c_source_1l00438"/>00438 }
<anchor xml:id="_stream__buffer_8c_source_1l00439"/>00439 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00440"/>00440 
<anchor xml:id="_stream__buffer_8c_source_1l00441"/><link linkend="_stream__buffer_8c_1a375b92e87b73351a6a30c8a2ba7d2ce0">00441</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_stream__buffer_8c_1a375b92e87b73351a6a30c8a2ba7d2ce0">xStreamBufferSetTriggerLevel</link>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBufferHandle_t</link>&#32;xStreamBuffer,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xTriggerLevel&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00442"/>00442 {
<anchor xml:id="_stream__buffer_8c_source_1l00443"/>00443 <link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxStreamBuffer&#32;=&#32;xStreamBuffer;
<anchor xml:id="_stream__buffer_8c_source_1l00444"/>00444 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_stream__buffer_8c_source_1l00445"/>00445 
<anchor xml:id="_stream__buffer_8c_source_1l00446"/>00446 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00447"/>00447 
<anchor xml:id="_stream__buffer_8c_source_1l00448"/>00448 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;It&#32;is&#32;not&#32;valid&#32;for&#32;the&#32;trigger&#32;level&#32;to&#32;be&#32;0.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00449"/>00449 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTriggerLevel&#32;==&#32;(&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;)&#32;0&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00450"/>00450 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xTriggerLevel&#32;=&#32;(&#32;size_t&#32;)&#32;1;
<anchor xml:id="_stream__buffer_8c_source_1l00452"/>00452 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00453"/>00453 
<anchor xml:id="_stream__buffer_8c_source_1l00454"/>00454 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;trigger&#32;level&#32;is&#32;the&#32;number&#32;of&#32;bytes&#32;that&#32;must&#32;be&#32;in&#32;the&#32;stream</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00455"/>00455 <emphasis role="comment">&#32;&#32;&#32;&#32;buffer&#32;before&#32;a&#32;task&#32;that&#32;is&#32;waiting&#32;for&#32;data&#32;is&#32;unblocked.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00456"/>00456 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTriggerLevel&#32;&lt;=&#32;pxStreamBuffer-&gt;xLength&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00457"/>00457 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a4a7ee9b374cc0b358d049811def8d595">xTriggerLevelBytes</link>&#32;=&#32;xTriggerLevel;
<anchor xml:id="_stream__buffer_8c_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00460"/>00460 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00461"/>00461 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00462"/>00462 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00464"/>00464 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00465"/>00465 
<anchor xml:id="_stream__buffer_8c_source_1l00466"/>00466 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_stream__buffer_8c_source_1l00467"/>00467 }
<anchor xml:id="_stream__buffer_8c_source_1l00468"/>00468 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00469"/>00469 
<anchor xml:id="_stream__buffer_8c_source_1l00470"/><link linkend="_stream__buffer_8c_1a8fb90892c74eb94fb063b2a018a10509">00470</link> <emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_stream__buffer_8c_1a8fb90892c74eb94fb063b2a018a10509">xStreamBufferSpacesAvailable</link>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBufferHandle_t</link>&#32;xStreamBuffer&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00471"/>00471 {
<anchor xml:id="_stream__buffer_8c_source_1l00472"/>00472 <emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxStreamBuffer&#32;=&#32;xStreamBuffer;
<anchor xml:id="_stream__buffer_8c_source_1l00473"/>00473 <emphasis role="keywordtype">size_t</emphasis>&#32;xSpace;
<anchor xml:id="_stream__buffer_8c_source_1l00474"/>00474 
<anchor xml:id="_stream__buffer_8c_source_1l00475"/>00475 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00476"/>00476 
<anchor xml:id="_stream__buffer_8c_source_1l00477"/>00477 &#32;&#32;&#32;&#32;xSpace&#32;=&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a6eedf41c877edd42b3b460780d1b6555">xLength</link>&#32;+&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a937e441ed6c946a099d52b5955d7302c">xTail</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00478"/>00478 &#32;&#32;&#32;&#32;xSpace&#32;-=&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a75aafb9fdee8f0666837302bd9b12341">xHead</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00479"/>00479 &#32;&#32;&#32;&#32;xSpace&#32;-=&#32;(&#32;size_t&#32;)&#32;1;
<anchor xml:id="_stream__buffer_8c_source_1l00480"/>00480 
<anchor xml:id="_stream__buffer_8c_source_1l00481"/>00481 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xSpace&#32;&gt;=&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a6eedf41c877edd42b3b460780d1b6555">xLength</link>&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00482"/>00482 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xSpace&#32;-=&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a6eedf41c877edd42b3b460780d1b6555">xLength</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00484"/>00484 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00485"/>00485 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00486"/>00486 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00487"/>00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_stream__buffer_8c_source_1l00488"/>00488 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00489"/>00489 
<anchor xml:id="_stream__buffer_8c_source_1l00490"/>00490 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xSpace;
<anchor xml:id="_stream__buffer_8c_source_1l00491"/>00491 }
<anchor xml:id="_stream__buffer_8c_source_1l00492"/>00492 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00493"/>00493 
<anchor xml:id="_stream__buffer_8c_source_1l00494"/><link linkend="_stream__buffer_8c_1a5c473cb971d8a20b0528a1abc890833c">00494</link> <emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_stream__buffer_8c_1a5c473cb971d8a20b0528a1abc890833c">xStreamBufferBytesAvailable</link>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBufferHandle_t</link>&#32;xStreamBuffer&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00495"/>00495 {
<anchor xml:id="_stream__buffer_8c_source_1l00496"/>00496 <emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxStreamBuffer&#32;=&#32;xStreamBuffer;
<anchor xml:id="_stream__buffer_8c_source_1l00497"/>00497 <emphasis role="keywordtype">size_t</emphasis>&#32;xReturn;
<anchor xml:id="_stream__buffer_8c_source_1l00498"/>00498 
<anchor xml:id="_stream__buffer_8c_source_1l00499"/>00499 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00500"/>00500 
<anchor xml:id="_stream__buffer_8c_source_1l00501"/>00501 &#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_stream__buffer_8c_1ab588e6a51ba9c8e7796aa05e5c600c36">prvBytesInBuffer</link>(&#32;pxStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00502"/>00502 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_stream__buffer_8c_source_1l00503"/>00503 }
<anchor xml:id="_stream__buffer_8c_source_1l00504"/>00504 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00505"/>00505 
<anchor xml:id="_stream__buffer_8c_source_1l00506"/><link linkend="_stream__buffer_8c_1adf807ecf262fcd5df2584d5d3e6ed6c5">00506</link> <emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_stream__buffer_8c_1adf807ecf262fcd5df2584d5d3e6ed6c5">xStreamBufferSend</link>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBufferHandle_t</link>&#32;xStreamBuffer,
<anchor xml:id="_stream__buffer_8c_source_1l00507"/>00507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pvTxData,
<anchor xml:id="_stream__buffer_8c_source_1l00508"/>00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xDataLengthBytes,
<anchor xml:id="_stream__buffer_8c_source_1l00509"/>00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00510"/>00510 {
<anchor xml:id="_stream__buffer_8c_source_1l00511"/>00511 <link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxStreamBuffer&#32;=&#32;xStreamBuffer;
<anchor xml:id="_stream__buffer_8c_source_1l00512"/>00512 <emphasis role="keywordtype">size_t</emphasis>&#32;xReturn,&#32;xSpace&#32;=&#32;0;
<anchor xml:id="_stream__buffer_8c_source_1l00513"/>00513 <emphasis role="keywordtype">size_t</emphasis>&#32;xRequiredSpace&#32;=&#32;xDataLengthBytes;
<anchor xml:id="_stream__buffer_8c_source_1l00514"/>00514 <link linkend="_structx_t_i_m_e___o_u_t">TimeOut_t</link>&#32;xTimeOut;
<anchor xml:id="_stream__buffer_8c_source_1l00515"/>00515 
<anchor xml:id="_stream__buffer_8c_source_1l00516"/>00516 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pvTxData&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00517"/>00517 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00518"/>00518 
<anchor xml:id="_stream__buffer_8c_source_1l00519"/>00519 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;send&#32;function&#32;is&#32;used&#32;to&#32;write&#32;to&#32;both&#32;message&#32;buffers&#32;and&#32;stream</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00520"/>00520 <emphasis role="comment">&#32;&#32;&#32;&#32;buffers.&#32;&#32;If&#32;this&#32;is&#32;a&#32;message&#32;buffer&#32;then&#32;the&#32;space&#32;needed&#32;must&#32;be</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00521"/>00521 <emphasis role="comment">&#32;&#32;&#32;&#32;increased&#32;by&#32;the&#32;amount&#32;of&#32;bytes&#32;needed&#32;to&#32;store&#32;the&#32;length&#32;of&#32;the</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00522"/>00522 <emphasis role="comment">&#32;&#32;&#32;&#32;message.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00523"/>00523 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a1afd02d997a1cb3149e3cf203c681d58">ucFlags</link>&#32;&amp;&#32;<link linkend="_stream__buffer_8c_1a4954c04e3f9f6b0d4a98b9441b35d896">sbFLAGS_IS_MESSAGE_BUFFER</link>&#32;)&#32;!=&#32;(&#32;uint8_t&#32;)&#32;0&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00524"/>00524 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xRequiredSpace&#32;+=&#32;<link linkend="_stream__buffer_8c_1aaa21967227eb06d02cdd038047b836f6">sbBYTES_TO_STORE_MESSAGE_LENGTH</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00526"/>00526 
<anchor xml:id="_stream__buffer_8c_source_1l00527"/>00527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Overflow?&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00528"/>00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xRequiredSpace&#32;&gt;&#32;xDataLengthBytes&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00529"/>00529 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00530"/>00530 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00531"/>00531 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00532"/>00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_stream__buffer_8c_source_1l00533"/>00533 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00534"/>00534 
<anchor xml:id="_stream__buffer_8c_source_1l00535"/>00535 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTicksToWait&#32;!=&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00536"/>00536 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1a67155ad4ea2482b5f4597a69f2152be0">vTaskSetTimeOutState</link>(&#32;&amp;xTimeOut&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00538"/>00538 
<anchor xml:id="_stream__buffer_8c_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Wait&#32;until&#32;the&#32;required&#32;number&#32;of&#32;bytes&#32;are&#32;free&#32;in&#32;the&#32;message</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00542"/>00542 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00543"/>00543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_stream__buffer_8c_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00545"/>00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xSpace&#32;=&#32;<link linkend="_stream__buffer_8c_1a8fb90892c74eb94fb063b2a018a10509">xStreamBufferSpacesAvailable</link>(&#32;pxStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00546"/>00546 
<anchor xml:id="_stream__buffer_8c_source_1l00547"/>00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xSpace&#32;&lt;&#32;xRequiredSpace&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00548"/>00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00549"/>00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Clear&#32;notification&#32;state&#32;as&#32;going&#32;to&#32;wait&#32;for&#32;space.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00550"/>00550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_task_8h_1a4cb6c908a9d2d733e9d519d7dc27bb34">xTaskNotifyStateClear</link>(&#32;NULL&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00551"/>00551 
<anchor xml:id="_stream__buffer_8c_source_1l00552"/>00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Should&#32;only&#32;be&#32;one&#32;writer.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a85b1cf05c0222f8d67a64f7d01722e52">xTaskWaitingToSend</link>&#32;==&#32;NULL&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a85b1cf05c0222f8d67a64f7d01722e52">xTaskWaitingToSend</link>&#32;=&#32;<link linkend="_task_8h_1a85a0f9c9f817b18686efbf8f37c72dfc">xTaskGetCurrentTaskHandle</link>();
<anchor xml:id="_stream__buffer_8c_source_1l00555"/>00555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00556"/>00556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00557"/>00557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00558"/>00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_stream__buffer_8c_source_1l00559"/>00559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_stream__buffer_8c_source_1l00560"/>00560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_stream__buffer_8c_source_1l00563"/>00563 
<anchor xml:id="_stream__buffer_8c_source_1l00564"/>00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a5788bf0db92eda90675aa5f3caa42eeb">traceBLOCKING_ON_STREAM_BUFFER_SEND</link>(&#32;xStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00565"/>00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_task_8h_1a0475fcda9718f403521c270a7270ff93">xTaskNotifyWait</link>(&#32;(&#32;uint32_t&#32;)&#32;0,&#32;(&#32;uint32_t&#32;)&#32;0,&#32;NULL,&#32;xTicksToWait&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00566"/>00566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a85b1cf05c0222f8d67a64f7d01722e52">xTaskWaitingToSend</link>&#32;=&#32;NULL;
<anchor xml:id="_stream__buffer_8c_source_1l00567"/>00567 
<anchor xml:id="_stream__buffer_8c_source_1l00568"/>00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(&#32;<link linkend="_task_8h_1a3b018a85d339e536a6c05748dd666a3a">xTaskCheckForTimeOut</link>(&#32;&amp;xTimeOut,&#32;&amp;xTicksToWait&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00569"/>00569 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00570"/>00570 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00571"/>00571 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_stream__buffer_8c_source_1l00573"/>00573 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00574"/>00574 
<anchor xml:id="_stream__buffer_8c_source_1l00575"/>00575 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xSpace&#32;==&#32;(&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;)&#32;0&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00576"/>00576 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xSpace&#32;=&#32;<link linkend="_stream__buffer_8c_1a8fb90892c74eb94fb063b2a018a10509">xStreamBufferSpacesAvailable</link>(&#32;pxStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00578"/>00578 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00579"/>00579 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00580"/>00580 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00581"/>00581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_stream__buffer_8c_source_1l00582"/>00582 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00583"/>00583 
<anchor xml:id="_stream__buffer_8c_source_1l00584"/>00584 &#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_stream__buffer_8c_1a0982313ee374e6edf9296d3ce4fefd3e">prvWriteMessageToBuffer</link>(&#32;pxStreamBuffer,&#32;pvTxData,&#32;xDataLengthBytes,&#32;xSpace,&#32;xRequiredSpace&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00585"/>00585 
<anchor xml:id="_stream__buffer_8c_source_1l00586"/>00586 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xReturn&#32;&gt;&#32;(&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;)&#32;0&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00587"/>00587 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00588"/>00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a4f4fc6954ae7c5b8a4819f70afd37c1f">traceSTREAM_BUFFER_SEND</link>(&#32;xStreamBuffer,&#32;xReturn&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00589"/>00589 
<anchor xml:id="_stream__buffer_8c_source_1l00590"/>00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Was&#32;a&#32;task&#32;waiting&#32;for&#32;the&#32;data?&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00591"/>00591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_stream__buffer_8c_1ab588e6a51ba9c8e7796aa05e5c600c36">prvBytesInBuffer</link>(&#32;pxStreamBuffer&#32;)&#32;&gt;=&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a4a7ee9b374cc0b358d049811def8d595">xTriggerLevelBytes</link>&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00592"/>00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stream__buffer_8c_1aa75273dfbcd92710254df0165ae1da5d">sbSEND_COMPLETED</link>(&#32;pxStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00594"/>00594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00595"/>00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00596"/>00596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00597"/>00597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_stream__buffer_8c_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00599"/>00599 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00600"/>00600 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00601"/>00601 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00602"/>00602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_stream__buffer_8c_source_1l00603"/>00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a527e8f19c9b9b339985c2b8e47bff02a">traceSTREAM_BUFFER_SEND_FAILED</link>(&#32;xStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00604"/>00604 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00605"/>00605 
<anchor xml:id="_stream__buffer_8c_source_1l00606"/>00606 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_stream__buffer_8c_source_1l00607"/>00607 }
<anchor xml:id="_stream__buffer_8c_source_1l00608"/>00608 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00609"/>00609 
<anchor xml:id="_stream__buffer_8c_source_1l00610"/><link linkend="_stream__buffer_8c_1a3072d8c5cedf79a72550da051a0866b4">00610</link> <emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_stream__buffer_8c_1a3072d8c5cedf79a72550da051a0866b4">xStreamBufferSendFromISR</link>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBufferHandle_t</link>&#32;xStreamBuffer,
<anchor xml:id="_stream__buffer_8c_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pvTxData,
<anchor xml:id="_stream__buffer_8c_source_1l00612"/>00612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xDataLengthBytes,
<anchor xml:id="_stream__buffer_8c_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxHigherPriorityTaskWoken&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00614"/>00614 {
<anchor xml:id="_stream__buffer_8c_source_1l00615"/>00615 <link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxStreamBuffer&#32;=&#32;xStreamBuffer;
<anchor xml:id="_stream__buffer_8c_source_1l00616"/>00616 <emphasis role="keywordtype">size_t</emphasis>&#32;xReturn,&#32;xSpace;
<anchor xml:id="_stream__buffer_8c_source_1l00617"/>00617 <emphasis role="keywordtype">size_t</emphasis>&#32;xRequiredSpace&#32;=&#32;xDataLengthBytes;
<anchor xml:id="_stream__buffer_8c_source_1l00618"/>00618 
<anchor xml:id="_stream__buffer_8c_source_1l00619"/>00619 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pvTxData&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00620"/>00620 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00621"/>00621 
<anchor xml:id="_stream__buffer_8c_source_1l00622"/>00622 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;send&#32;function&#32;is&#32;used&#32;to&#32;write&#32;to&#32;both&#32;message&#32;buffers&#32;and&#32;stream</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00623"/>00623 <emphasis role="comment">&#32;&#32;&#32;&#32;buffers.&#32;&#32;If&#32;this&#32;is&#32;a&#32;message&#32;buffer&#32;then&#32;the&#32;space&#32;needed&#32;must&#32;be</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00624"/>00624 <emphasis role="comment">&#32;&#32;&#32;&#32;increased&#32;by&#32;the&#32;amount&#32;of&#32;bytes&#32;needed&#32;to&#32;store&#32;the&#32;length&#32;of&#32;the</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00625"/>00625 <emphasis role="comment">&#32;&#32;&#32;&#32;message.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00626"/>00626 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a1afd02d997a1cb3149e3cf203c681d58">ucFlags</link>&#32;&amp;&#32;<link linkend="_stream__buffer_8c_1a4954c04e3f9f6b0d4a98b9441b35d896">sbFLAGS_IS_MESSAGE_BUFFER</link>&#32;)&#32;!=&#32;(&#32;uint8_t&#32;)&#32;0&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00627"/>00627 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xRequiredSpace&#32;+=&#32;<link linkend="_stream__buffer_8c_1aaa21967227eb06d02cdd038047b836f6">sbBYTES_TO_STORE_MESSAGE_LENGTH</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00629"/>00629 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00630"/>00630 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00631"/>00631 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_stream__buffer_8c_source_1l00633"/>00633 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00634"/>00634 
<anchor xml:id="_stream__buffer_8c_source_1l00635"/>00635 &#32;&#32;&#32;&#32;xSpace&#32;=&#32;<link linkend="_stream__buffer_8c_1a8fb90892c74eb94fb063b2a018a10509">xStreamBufferSpacesAvailable</link>(&#32;pxStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00636"/>00636 &#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_stream__buffer_8c_1a0982313ee374e6edf9296d3ce4fefd3e">prvWriteMessageToBuffer</link>(&#32;pxStreamBuffer,&#32;pvTxData,&#32;xDataLengthBytes,&#32;xSpace,&#32;xRequiredSpace&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00637"/>00637 
<anchor xml:id="_stream__buffer_8c_source_1l00638"/>00638 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xReturn&#32;&gt;&#32;(&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;)&#32;0&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00639"/>00639 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Was&#32;a&#32;task&#32;waiting&#32;for&#32;the&#32;data?&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_stream__buffer_8c_1ab588e6a51ba9c8e7796aa05e5c600c36">prvBytesInBuffer</link>(&#32;pxStreamBuffer&#32;)&#32;&gt;=&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a4a7ee9b374cc0b358d049811def8d595">xTriggerLevelBytes</link>&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stream__buffer_8c_1aadd3cf567c5086402552c463c55dda7c">sbSEND_COMPLETE_FROM_ISR</link>(&#32;pxStreamBuffer,&#32;pxHigherPriorityTaskWoken&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00646"/>00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_stream__buffer_8c_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00649"/>00649 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00650"/>00650 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00651"/>00651 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_stream__buffer_8c_source_1l00653"/>00653 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00654"/>00654 
<anchor xml:id="_stream__buffer_8c_source_1l00655"/>00655 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ab79a8d87f1c865b1a76af02932b3dda6">traceSTREAM_BUFFER_SEND_FROM_ISR</link>(&#32;xStreamBuffer,&#32;xReturn&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00656"/>00656 
<anchor xml:id="_stream__buffer_8c_source_1l00657"/>00657 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_stream__buffer_8c_source_1l00658"/>00658 }
<anchor xml:id="_stream__buffer_8c_source_1l00659"/>00659 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00660"/>00660 
<anchor xml:id="_stream__buffer_8c_source_1l00661"/><link linkend="_stream__buffer_8c_1a0982313ee374e6edf9296d3ce4fefd3e">00661</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_stream__buffer_8c_1a0982313ee374e6edf9296d3ce4fefd3e">prvWriteMessageToBuffer</link>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxStreamBuffer,
<anchor xml:id="_stream__buffer_8c_source_1l00662"/>00662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;pvTxData,
<anchor xml:id="_stream__buffer_8c_source_1l00663"/>00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xDataLengthBytes,
<anchor xml:id="_stream__buffer_8c_source_1l00664"/>00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xSpace,
<anchor xml:id="_stream__buffer_8c_source_1l00665"/>00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xRequiredSpace&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00666"/>00666 {
<anchor xml:id="_stream__buffer_8c_source_1l00667"/>00667 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xShouldWrite;
<anchor xml:id="_stream__buffer_8c_source_1l00668"/>00668 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xReturn;
<anchor xml:id="_stream__buffer_8c_source_1l00669"/>00669 
<anchor xml:id="_stream__buffer_8c_source_1l00670"/>00670 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xSpace&#32;==&#32;(&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;)&#32;0&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00671"/>00671 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00672"/>00672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Doesn&apos;t&#32;matter&#32;if&#32;this&#32;is&#32;a&#32;stream&#32;buffer&#32;or&#32;a&#32;message&#32;buffer,&#32;there</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00673"/>00673 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;no&#32;space&#32;to&#32;write.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00674"/>00674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xShouldWrite&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00675"/>00675 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00676"/>00676 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a1afd02d997a1cb3149e3cf203c681d58">ucFlags</link>&#32;&amp;&#32;<link linkend="_stream__buffer_8c_1a4954c04e3f9f6b0d4a98b9441b35d896">sbFLAGS_IS_MESSAGE_BUFFER</link>&#32;)&#32;==&#32;(&#32;uint8_t&#32;)&#32;0&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00677"/>00677 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00678"/>00678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;is&#32;a&#32;stream&#32;buffer,&#32;as&#32;opposed&#32;to&#32;a&#32;message&#32;buffer,&#32;so&#32;writing&#32;a</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00679"/>00679 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream&#32;of&#32;bytes&#32;rather&#32;than&#32;discrete&#32;messages.&#32;&#32;Write&#32;as&#32;many&#32;bytes&#32;as</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00680"/>00680 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;possible.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00681"/>00681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xShouldWrite&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00682"/>00682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xDataLengthBytes&#32;=&#32;<link linkend="__free_r_t_o_s_8h_1a101a57cef3f76ec13110cec59ce49edf">configMIN</link>(&#32;xDataLengthBytes,&#32;xSpace&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00683"/>00683 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00684"/>00684 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xSpace&#32;&gt;=&#32;xRequiredSpace&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00685"/>00685 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00686"/>00686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;is&#32;a&#32;message&#32;buffer,&#32;as&#32;opposed&#32;to&#32;a&#32;stream&#32;buffer,&#32;and&#32;there</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00687"/>00687 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;enough&#32;space&#32;to&#32;write&#32;both&#32;the&#32;message&#32;length&#32;and&#32;the&#32;message&#32;itself</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00688"/>00688 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;into&#32;the&#32;buffer.&#32;&#32;Start&#32;by&#32;writing&#32;the&#32;length&#32;of&#32;the&#32;data,&#32;the&#32;data</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00689"/>00689 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;itself&#32;will&#32;be&#32;written&#32;later&#32;in&#32;this&#32;function.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00690"/>00690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xShouldWrite&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00691"/>00691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_stream__buffer_8c_1a4e311fb1b4587477fd167f249e02286b">prvWriteBytesToBuffer</link>(&#32;pxStreamBuffer,&#32;(&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;*&#32;)&#32;&amp;(&#32;xDataLengthBytes&#32;),&#32;<link linkend="_stream__buffer_8c_1aaa21967227eb06d02cdd038047b836f6">sbBYTES_TO_STORE_MESSAGE_LENGTH</link>&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00692"/>00692 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00693"/>00693 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00694"/>00694 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00695"/>00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;There&#32;is&#32;space&#32;available,&#32;but&#32;not&#32;enough&#32;space.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00696"/>00696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xShouldWrite&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00697"/>00697 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00698"/>00698 
<anchor xml:id="_stream__buffer_8c_source_1l00699"/>00699 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xShouldWrite&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00700"/>00700 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00701"/>00701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Writes&#32;the&#32;data&#32;itself.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00702"/>00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_stream__buffer_8c_1a4e311fb1b4587477fd167f249e02286b">prvWriteBytesToBuffer</link>(&#32;pxStreamBuffer,&#32;(&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;*&#32;)&#32;pvTxData,&#32;xDataLengthBytes&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9079&#32;Storage&#32;buffer&#32;is&#32;implemented&#32;as&#32;uint8_t&#32;for&#32;ease&#32;of&#32;sizing,&#32;alighment&#32;and&#32;access.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00703"/>00703 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00704"/>00704 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00705"/>00705 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00706"/>00706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;0;
<anchor xml:id="_stream__buffer_8c_source_1l00707"/>00707 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00708"/>00708 
<anchor xml:id="_stream__buffer_8c_source_1l00709"/>00709 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_stream__buffer_8c_source_1l00710"/>00710 }
<anchor xml:id="_stream__buffer_8c_source_1l00711"/>00711 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00712"/>00712 
<anchor xml:id="_stream__buffer_8c_source_1l00713"/><link linkend="_stream__buffer_8c_1afcfcf6f4bc80ec5e31e5e1f8093cacac">00713</link> <emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_stream__buffer_8c_1afcfcf6f4bc80ec5e31e5e1f8093cacac">xStreamBufferReceive</link>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBufferHandle_t</link>&#32;xStreamBuffer,
<anchor xml:id="_stream__buffer_8c_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pvRxData,
<anchor xml:id="_stream__buffer_8c_source_1l00715"/>00715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xBufferLengthBytes,
<anchor xml:id="_stream__buffer_8c_source_1l00716"/>00716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00717"/>00717 {
<anchor xml:id="_stream__buffer_8c_source_1l00718"/>00718 <link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxStreamBuffer&#32;=&#32;xStreamBuffer;
<anchor xml:id="_stream__buffer_8c_source_1l00719"/>00719 <emphasis role="keywordtype">size_t</emphasis>&#32;xReceivedLength&#32;=&#32;0,&#32;xBytesAvailable,&#32;xBytesToStoreMessageLength;
<anchor xml:id="_stream__buffer_8c_source_1l00720"/>00720 
<anchor xml:id="_stream__buffer_8c_source_1l00721"/>00721 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pvRxData&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00722"/>00722 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00723"/>00723 
<anchor xml:id="_stream__buffer_8c_source_1l00724"/>00724 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;receive&#32;function&#32;is&#32;used&#32;by&#32;both&#32;message&#32;buffers,&#32;which&#32;store</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00725"/>00725 <emphasis role="comment">&#32;&#32;&#32;&#32;discrete&#32;messages,&#32;and&#32;stream&#32;buffers,&#32;which&#32;store&#32;a&#32;continuous&#32;stream&#32;of</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00726"/>00726 <emphasis role="comment">&#32;&#32;&#32;&#32;bytes.&#32;&#32;Discrete&#32;messages&#32;include&#32;an&#32;additional</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00727"/>00727 <emphasis role="comment">&#32;&#32;&#32;&#32;sbBYTES_TO_STORE_MESSAGE_LENGTH&#32;bytes&#32;that&#32;hold&#32;the&#32;length&#32;of&#32;the</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00728"/>00728 <emphasis role="comment">&#32;&#32;&#32;&#32;message.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00729"/>00729 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a1afd02d997a1cb3149e3cf203c681d58">ucFlags</link>&#32;&amp;&#32;<link linkend="_stream__buffer_8c_1a4954c04e3f9f6b0d4a98b9441b35d896">sbFLAGS_IS_MESSAGE_BUFFER</link>&#32;)&#32;!=&#32;(&#32;uint8_t&#32;)&#32;0&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00730"/>00730 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00731"/>00731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xBytesToStoreMessageLength&#32;=&#32;<link linkend="_stream__buffer_8c_1aaa21967227eb06d02cdd038047b836f6">sbBYTES_TO_STORE_MESSAGE_LENGTH</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00732"/>00732 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00733"/>00733 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00734"/>00734 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00735"/>00735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xBytesToStoreMessageLength&#32;=&#32;0;
<anchor xml:id="_stream__buffer_8c_source_1l00736"/>00736 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00737"/>00737 
<anchor xml:id="_stream__buffer_8c_source_1l00738"/>00738 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTicksToWait&#32;!=&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00739"/>00739 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00740"/>00740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Checking&#32;if&#32;there&#32;is&#32;data&#32;and&#32;clearing&#32;the&#32;notification&#32;state&#32;must&#32;be</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00741"/>00741 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;performed&#32;atomically.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00742"/>00742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_stream__buffer_8c_source_1l00743"/>00743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00744"/>00744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xBytesAvailable&#32;=&#32;<link linkend="_stream__buffer_8c_1ab588e6a51ba9c8e7796aa05e5c600c36">prvBytesInBuffer</link>(&#32;pxStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00745"/>00745 
<anchor xml:id="_stream__buffer_8c_source_1l00746"/>00746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;this&#32;function&#32;was&#32;invoked&#32;by&#32;a&#32;message&#32;buffer&#32;read&#32;then</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00747"/>00747 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xBytesToStoreMessageLength&#32;holds&#32;the&#32;number&#32;of&#32;bytes&#32;used&#32;to&#32;hold</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00748"/>00748 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;length&#32;of&#32;the&#32;next&#32;discrete&#32;message.&#32;&#32;If&#32;this&#32;function&#32;was</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00749"/>00749 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;invoked&#32;by&#32;a&#32;stream&#32;buffer&#32;read&#32;then&#32;xBytesToStoreMessageLength&#32;will</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00750"/>00750 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;be&#32;0.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00751"/>00751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xBytesAvailable&#32;&lt;=&#32;xBytesToStoreMessageLength&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00752"/>00752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00753"/>00753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Clear&#32;notification&#32;state&#32;as&#32;going&#32;to&#32;wait&#32;for&#32;data.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00754"/>00754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_task_8h_1a4cb6c908a9d2d733e9d519d7dc27bb34">xTaskNotifyStateClear</link>(&#32;NULL&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00755"/>00755 
<anchor xml:id="_stream__buffer_8c_source_1l00756"/>00756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Should&#32;only&#32;be&#32;one&#32;reader.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00757"/>00757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a8377ae8625121efa22d66e678add4057">xTaskWaitingToReceive</link>&#32;==&#32;NULL&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00758"/>00758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a8377ae8625121efa22d66e678add4057">xTaskWaitingToReceive</link>&#32;=&#32;<link linkend="_task_8h_1a85a0f9c9f817b18686efbf8f37c72dfc">xTaskGetCurrentTaskHandle</link>();
<anchor xml:id="_stream__buffer_8c_source_1l00759"/>00759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00760"/>00760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00761"/>00761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00762"/>00762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_stream__buffer_8c_source_1l00763"/>00763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00764"/>00764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00765"/>00765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_stream__buffer_8c_source_1l00766"/>00766 
<anchor xml:id="_stream__buffer_8c_source_1l00767"/>00767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xBytesAvailable&#32;&lt;=&#32;xBytesToStoreMessageLength&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00768"/>00768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00769"/>00769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Wait&#32;for&#32;data&#32;to&#32;be&#32;available.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00770"/>00770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a80419264672cb0ddd2b865048483b537">traceBLOCKING_ON_STREAM_BUFFER_RECEIVE</link>(&#32;xStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00771"/>00771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_task_8h_1a0475fcda9718f403521c270a7270ff93">xTaskNotifyWait</link>(&#32;(&#32;uint32_t&#32;)&#32;0,&#32;(&#32;uint32_t&#32;)&#32;0,&#32;NULL,&#32;xTicksToWait&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00772"/>00772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a8377ae8625121efa22d66e678add4057">xTaskWaitingToReceive</link>&#32;=&#32;NULL;
<anchor xml:id="_stream__buffer_8c_source_1l00773"/>00773 
<anchor xml:id="_stream__buffer_8c_source_1l00774"/>00774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Recheck&#32;the&#32;data&#32;available&#32;after&#32;blocking.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00775"/>00775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xBytesAvailable&#32;=&#32;<link linkend="_stream__buffer_8c_1ab588e6a51ba9c8e7796aa05e5c600c36">prvBytesInBuffer</link>(&#32;pxStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00776"/>00776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00777"/>00777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00778"/>00778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00779"/>00779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_stream__buffer_8c_source_1l00780"/>00780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00781"/>00781 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00782"/>00782 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00783"/>00783 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00784"/>00784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xBytesAvailable&#32;=&#32;<link linkend="_stream__buffer_8c_1ab588e6a51ba9c8e7796aa05e5c600c36">prvBytesInBuffer</link>(&#32;pxStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00785"/>00785 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00786"/>00786 
<anchor xml:id="_stream__buffer_8c_source_1l00787"/>00787 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Whether&#32;receiving&#32;a&#32;discrete&#32;message&#32;(where&#32;xBytesToStoreMessageLength</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00788"/>00788 <emphasis role="comment">&#32;&#32;&#32;&#32;holds&#32;the&#32;number&#32;of&#32;bytes&#32;used&#32;to&#32;store&#32;the&#32;message&#32;length)&#32;or&#32;a&#32;stream&#32;of</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00789"/>00789 <emphasis role="comment">&#32;&#32;&#32;&#32;bytes&#32;(where&#32;xBytesToStoreMessageLength&#32;is&#32;zero),&#32;the&#32;number&#32;of&#32;bytes</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00790"/>00790 <emphasis role="comment">&#32;&#32;&#32;&#32;available&#32;must&#32;be&#32;greater&#32;than&#32;xBytesToStoreMessageLength&#32;to&#32;be&#32;able&#32;to</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00791"/>00791 <emphasis role="comment">&#32;&#32;&#32;&#32;read&#32;bytes&#32;from&#32;the&#32;buffer.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00792"/>00792 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xBytesAvailable&#32;&gt;&#32;xBytesToStoreMessageLength&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00793"/>00793 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00794"/>00794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReceivedLength&#32;=&#32;<link linkend="_stream__buffer_8c_1a5823b1fb23f6468eb0447db4adb95ebd">prvReadMessageFromBuffer</link>(&#32;pxStreamBuffer,&#32;pvRxData,&#32;xBufferLengthBytes,&#32;xBytesAvailable,&#32;xBytesToStoreMessageLength&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00795"/>00795 
<anchor xml:id="_stream__buffer_8c_source_1l00796"/>00796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Was&#32;a&#32;task&#32;waiting&#32;for&#32;space&#32;in&#32;the&#32;buffer?&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00797"/>00797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xReceivedLength&#32;!=&#32;(&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;)&#32;0&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00798"/>00798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00799"/>00799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a6ecefd3df93cb11986cca1b41f215138">traceSTREAM_BUFFER_RECEIVE</link>(&#32;xStreamBuffer,&#32;xReceivedLength&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00800"/>00800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stream__buffer_8c_1a4d6a29d283acfa2d4ef576476eedc789">sbRECEIVE_COMPLETED</link>(&#32;pxStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00801"/>00801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00802"/>00802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00803"/>00803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00804"/>00804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_stream__buffer_8c_source_1l00805"/>00805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00806"/>00806 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00807"/>00807 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00808"/>00808 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00809"/>00809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a57e5d8ccc74dd8e04bd3a8534de79bb4">traceSTREAM_BUFFER_RECEIVE_FAILED</link>(&#32;xStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00810"/>00810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_stream__buffer_8c_source_1l00811"/>00811 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00812"/>00812 
<anchor xml:id="_stream__buffer_8c_source_1l00813"/>00813 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReceivedLength;
<anchor xml:id="_stream__buffer_8c_source_1l00814"/>00814 }
<anchor xml:id="_stream__buffer_8c_source_1l00815"/>00815 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00816"/>00816 
<anchor xml:id="_stream__buffer_8c_source_1l00817"/><link linkend="_stream__buffer_8c_1afe4f32e931b684bc32189f086e5ec41c">00817</link> <emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_stream__buffer_8c_1afe4f32e931b684bc32189f086e5ec41c">xStreamBufferNextMessageLengthBytes</link>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBufferHandle_t</link>&#32;xStreamBuffer&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00818"/>00818 {
<anchor xml:id="_stream__buffer_8c_source_1l00819"/>00819 <link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxStreamBuffer&#32;=&#32;xStreamBuffer;
<anchor xml:id="_stream__buffer_8c_source_1l00820"/>00820 <emphasis role="keywordtype">size_t</emphasis>&#32;xReturn,&#32;xBytesAvailable,&#32;xOriginalTail;
<anchor xml:id="_stream__buffer_8c_source_1l00821"/>00821 <link linkend="__free_r_t_o_s_8h_1a019c8bfcdd8eca676c7b9993bda95967">configMESSAGE_BUFFER_LENGTH_TYPE</link>&#32;xTempReturn;
<anchor xml:id="_stream__buffer_8c_source_1l00822"/>00822 
<anchor xml:id="_stream__buffer_8c_source_1l00823"/>00823 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00824"/>00824 
<anchor xml:id="_stream__buffer_8c_source_1l00825"/>00825 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Ensure&#32;the&#32;stream&#32;buffer&#32;is&#32;being&#32;used&#32;as&#32;a&#32;message&#32;buffer.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00826"/>00826 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a1afd02d997a1cb3149e3cf203c681d58">ucFlags</link>&#32;&amp;&#32;<link linkend="_stream__buffer_8c_1a4954c04e3f9f6b0d4a98b9441b35d896">sbFLAGS_IS_MESSAGE_BUFFER</link>&#32;)&#32;!=&#32;(&#32;uint8_t&#32;)&#32;0&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00827"/>00827 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00828"/>00828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xBytesAvailable&#32;=&#32;<link linkend="_stream__buffer_8c_1ab588e6a51ba9c8e7796aa05e5c600c36">prvBytesInBuffer</link>(&#32;pxStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00829"/>00829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xBytesAvailable&#32;&gt;&#32;<link linkend="_stream__buffer_8c_1aaa21967227eb06d02cdd038047b836f6">sbBYTES_TO_STORE_MESSAGE_LENGTH</link>&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00830"/>00830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00831"/>00831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;number&#32;of&#32;bytes&#32;available&#32;is&#32;greater&#32;than&#32;the&#32;number&#32;of&#32;bytes</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00832"/>00832 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;required&#32;to&#32;hold&#32;the&#32;length&#32;of&#32;the&#32;next&#32;message,&#32;so&#32;another&#32;message</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00833"/>00833 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;available.&#32;&#32;Return&#32;its&#32;length&#32;without&#32;removing&#32;the&#32;length&#32;bytes</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00834"/>00834 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;from&#32;the&#32;buffer.&#32;&#32;A&#32;copy&#32;of&#32;the&#32;tail&#32;is&#32;stored&#32;so&#32;the&#32;buffer&#32;can&#32;be</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00835"/>00835 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;returned&#32;to&#32;its&#32;prior&#32;state&#32;as&#32;the&#32;message&#32;is&#32;not&#32;actually&#32;being</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00836"/>00836 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;removed&#32;from&#32;the&#32;buffer.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00837"/>00837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xOriginalTail&#32;=&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a937e441ed6c946a099d52b5955d7302c">xTail</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00838"/>00838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_stream__buffer_8c_1a7d74bf9ad861552245f1e382c4c0f7fa">prvReadBytesFromBuffer</link>(&#32;pxStreamBuffer,&#32;(&#32;uint8_t&#32;*&#32;)&#32;&amp;xTempReturn,&#32;<link linkend="_stream__buffer_8c_1aaa21967227eb06d02cdd038047b836f6">sbBYTES_TO_STORE_MESSAGE_LENGTH</link>,&#32;xBytesAvailable&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00839"/>00839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;(&#32;size_t&#32;)&#32;xTempReturn;
<anchor xml:id="_stream__buffer_8c_source_1l00840"/>00840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a937e441ed6c946a099d52b5955d7302c">xTail</link>&#32;=&#32;xOriginalTail;
<anchor xml:id="_stream__buffer_8c_source_1l00841"/>00841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00842"/>00842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00843"/>00843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00844"/>00844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;minimum&#32;amount&#32;of&#32;bytes&#32;in&#32;a&#32;message&#32;buffer&#32;is</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00845"/>00845 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;sbBYTES_TO_STORE_MESSAGE_LENGTH&#32;+&#32;1&#32;),&#32;so&#32;if&#32;xBytesAvailable&#32;is</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00846"/>00846 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;less&#32;than&#32;sbBYTES_TO_STORE_MESSAGE_LENGTH&#32;the&#32;only&#32;other&#32;valid</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00847"/>00847 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;is&#32;0.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00848"/>00848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xBytesAvailable&#32;==&#32;0&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00849"/>00849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;0;
<anchor xml:id="_stream__buffer_8c_source_1l00850"/>00850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00851"/>00851 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00852"/>00852 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00853"/>00853 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00854"/>00854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;0;
<anchor xml:id="_stream__buffer_8c_source_1l00855"/>00855 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00856"/>00856 
<anchor xml:id="_stream__buffer_8c_source_1l00857"/>00857 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_stream__buffer_8c_source_1l00858"/>00858 }
<anchor xml:id="_stream__buffer_8c_source_1l00859"/>00859 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00860"/>00860 
<anchor xml:id="_stream__buffer_8c_source_1l00861"/><link linkend="_stream__buffer_8c_1a06c67a59495190f8359322184fe0462b">00861</link> <emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_stream__buffer_8c_1a06c67a59495190f8359322184fe0462b">xStreamBufferReceiveFromISR</link>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBufferHandle_t</link>&#32;xStreamBuffer,
<anchor xml:id="_stream__buffer_8c_source_1l00862"/>00862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pvRxData,
<anchor xml:id="_stream__buffer_8c_source_1l00863"/>00863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xBufferLengthBytes,
<anchor xml:id="_stream__buffer_8c_source_1l00864"/>00864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxHigherPriorityTaskWoken&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00865"/>00865 {
<anchor xml:id="_stream__buffer_8c_source_1l00866"/>00866 <link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxStreamBuffer&#32;=&#32;xStreamBuffer;
<anchor xml:id="_stream__buffer_8c_source_1l00867"/>00867 <emphasis role="keywordtype">size_t</emphasis>&#32;xReceivedLength&#32;=&#32;0,&#32;xBytesAvailable,&#32;xBytesToStoreMessageLength;
<anchor xml:id="_stream__buffer_8c_source_1l00868"/>00868 
<anchor xml:id="_stream__buffer_8c_source_1l00869"/>00869 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pvRxData&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00870"/>00870 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00871"/>00871 
<anchor xml:id="_stream__buffer_8c_source_1l00872"/>00872 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;receive&#32;function&#32;is&#32;used&#32;by&#32;both&#32;message&#32;buffers,&#32;which&#32;store</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00873"/>00873 <emphasis role="comment">&#32;&#32;&#32;&#32;discrete&#32;messages,&#32;and&#32;stream&#32;buffers,&#32;which&#32;store&#32;a&#32;continuous&#32;stream&#32;of</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00874"/>00874 <emphasis role="comment">&#32;&#32;&#32;&#32;bytes.&#32;&#32;Discrete&#32;messages&#32;include&#32;an&#32;additional</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00875"/>00875 <emphasis role="comment">&#32;&#32;&#32;&#32;sbBYTES_TO_STORE_MESSAGE_LENGTH&#32;bytes&#32;that&#32;hold&#32;the&#32;length&#32;of&#32;the</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00876"/>00876 <emphasis role="comment">&#32;&#32;&#32;&#32;message.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00877"/>00877 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a1afd02d997a1cb3149e3cf203c681d58">ucFlags</link>&#32;&amp;&#32;<link linkend="_stream__buffer_8c_1a4954c04e3f9f6b0d4a98b9441b35d896">sbFLAGS_IS_MESSAGE_BUFFER</link>&#32;)&#32;!=&#32;(&#32;uint8_t&#32;)&#32;0&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00878"/>00878 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00879"/>00879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xBytesToStoreMessageLength&#32;=&#32;<link linkend="_stream__buffer_8c_1aaa21967227eb06d02cdd038047b836f6">sbBYTES_TO_STORE_MESSAGE_LENGTH</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00880"/>00880 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00881"/>00881 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00882"/>00882 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00883"/>00883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xBytesToStoreMessageLength&#32;=&#32;0;
<anchor xml:id="_stream__buffer_8c_source_1l00884"/>00884 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00885"/>00885 
<anchor xml:id="_stream__buffer_8c_source_1l00886"/>00886 &#32;&#32;&#32;&#32;xBytesAvailable&#32;=&#32;<link linkend="_stream__buffer_8c_1ab588e6a51ba9c8e7796aa05e5c600c36">prvBytesInBuffer</link>(&#32;pxStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00887"/>00887 
<anchor xml:id="_stream__buffer_8c_source_1l00888"/>00888 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Whether&#32;receiving&#32;a&#32;discrete&#32;message&#32;(where&#32;xBytesToStoreMessageLength</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00889"/>00889 <emphasis role="comment">&#32;&#32;&#32;&#32;holds&#32;the&#32;number&#32;of&#32;bytes&#32;used&#32;to&#32;store&#32;the&#32;message&#32;length)&#32;or&#32;a&#32;stream&#32;of</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00890"/>00890 <emphasis role="comment">&#32;&#32;&#32;&#32;bytes&#32;(where&#32;xBytesToStoreMessageLength&#32;is&#32;zero),&#32;the&#32;number&#32;of&#32;bytes</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00891"/>00891 <emphasis role="comment">&#32;&#32;&#32;&#32;available&#32;must&#32;be&#32;greater&#32;than&#32;xBytesToStoreMessageLength&#32;to&#32;be&#32;able&#32;to</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00892"/>00892 <emphasis role="comment">&#32;&#32;&#32;&#32;read&#32;bytes&#32;from&#32;the&#32;buffer.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00893"/>00893 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xBytesAvailable&#32;&gt;&#32;xBytesToStoreMessageLength&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00894"/>00894 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00895"/>00895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReceivedLength&#32;=&#32;<link linkend="_stream__buffer_8c_1a5823b1fb23f6468eb0447db4adb95ebd">prvReadMessageFromBuffer</link>(&#32;pxStreamBuffer,&#32;pvRxData,&#32;xBufferLengthBytes,&#32;xBytesAvailable,&#32;xBytesToStoreMessageLength&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00896"/>00896 
<anchor xml:id="_stream__buffer_8c_source_1l00897"/>00897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Was&#32;a&#32;task&#32;waiting&#32;for&#32;space&#32;in&#32;the&#32;buffer?&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00898"/>00898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xReceivedLength&#32;!=&#32;(&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;)&#32;0&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00899"/>00899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00900"/>00900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_stream__buffer_8c_1ab72c363566113705c021596f90c6eb5a">sbRECEIVE_COMPLETED_FROM_ISR</link>(&#32;pxStreamBuffer,&#32;pxHigherPriorityTaskWoken&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00901"/>00901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00902"/>00902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00903"/>00903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00904"/>00904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_stream__buffer_8c_source_1l00905"/>00905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00906"/>00906 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00907"/>00907 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00908"/>00908 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00909"/>00909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_stream__buffer_8c_source_1l00910"/>00910 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00911"/>00911 
<anchor xml:id="_stream__buffer_8c_source_1l00912"/>00912 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a30fe3a49605cf2c232d190e4f6565a0d">traceSTREAM_BUFFER_RECEIVE_FROM_ISR</link>(&#32;xStreamBuffer,&#32;xReceivedLength&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00913"/>00913 
<anchor xml:id="_stream__buffer_8c_source_1l00914"/>00914 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReceivedLength;
<anchor xml:id="_stream__buffer_8c_source_1l00915"/>00915 }
<anchor xml:id="_stream__buffer_8c_source_1l00916"/>00916 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00917"/>00917 
<anchor xml:id="_stream__buffer_8c_source_1l00918"/><link linkend="_stream__buffer_8c_1a5823b1fb23f6468eb0447db4adb95ebd">00918</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_stream__buffer_8c_1a5823b1fb23f6468eb0447db4adb95ebd">prvReadMessageFromBuffer</link>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*pxStreamBuffer,
<anchor xml:id="_stream__buffer_8c_source_1l00919"/>00919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pvRxData,
<anchor xml:id="_stream__buffer_8c_source_1l00920"/>00920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xBufferLengthBytes,
<anchor xml:id="_stream__buffer_8c_source_1l00921"/>00921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xBytesAvailable,
<anchor xml:id="_stream__buffer_8c_source_1l00922"/>00922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xBytesToStoreMessageLength&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00923"/>00923 {
<anchor xml:id="_stream__buffer_8c_source_1l00924"/>00924 <emphasis role="keywordtype">size_t</emphasis>&#32;xOriginalTail,&#32;xReceivedLength,&#32;xNextMessageLength;
<anchor xml:id="_stream__buffer_8c_source_1l00925"/>00925 <link linkend="__free_r_t_o_s_8h_1a019c8bfcdd8eca676c7b9993bda95967">configMESSAGE_BUFFER_LENGTH_TYPE</link>&#32;xTempNextMessageLength;
<anchor xml:id="_stream__buffer_8c_source_1l00926"/>00926 
<anchor xml:id="_stream__buffer_8c_source_1l00927"/>00927 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xBytesToStoreMessageLength&#32;!=&#32;(&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;)&#32;0&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00928"/>00928 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00929"/>00929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;discrete&#32;message&#32;is&#32;being&#32;received.&#32;&#32;First&#32;receive&#32;the&#32;length</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00930"/>00930 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;of&#32;the&#32;message.&#32;&#32;A&#32;copy&#32;of&#32;the&#32;tail&#32;is&#32;stored&#32;so&#32;the&#32;buffer&#32;can&#32;be</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00931"/>00931 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;returned&#32;to&#32;its&#32;prior&#32;state&#32;if&#32;the&#32;length&#32;of&#32;the&#32;message&#32;is&#32;too</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00932"/>00932 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;large&#32;for&#32;the&#32;provided&#32;buffer.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00933"/>00933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xOriginalTail&#32;=&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a937e441ed6c946a099d52b5955d7302c">xTail</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00934"/>00934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_stream__buffer_8c_1a7d74bf9ad861552245f1e382c4c0f7fa">prvReadBytesFromBuffer</link>(&#32;pxStreamBuffer,&#32;(&#32;uint8_t&#32;*&#32;)&#32;&amp;xTempNextMessageLength,&#32;xBytesToStoreMessageLength,&#32;xBytesAvailable&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00935"/>00935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xNextMessageLength&#32;=&#32;(&#32;size_t&#32;)&#32;xTempNextMessageLength;
<anchor xml:id="_stream__buffer_8c_source_1l00936"/>00936 
<anchor xml:id="_stream__buffer_8c_source_1l00937"/>00937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Reduce&#32;the&#32;number&#32;of&#32;bytes&#32;available&#32;by&#32;the&#32;number&#32;of&#32;bytes&#32;just</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00938"/>00938 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;read&#32;out.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00939"/>00939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xBytesAvailable&#32;-=&#32;xBytesToStoreMessageLength;
<anchor xml:id="_stream__buffer_8c_source_1l00940"/>00940 
<anchor xml:id="_stream__buffer_8c_source_1l00941"/>00941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Check&#32;there&#32;is&#32;enough&#32;space&#32;in&#32;the&#32;buffer&#32;provided&#32;by&#32;the</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00942"/>00942 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;user.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00943"/>00943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xNextMessageLength&#32;&gt;&#32;xBufferLengthBytes&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00944"/>00944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00945"/>00945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;user&#32;has&#32;provided&#32;insufficient&#32;space&#32;to&#32;read&#32;the&#32;message</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00946"/>00946 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;so&#32;return&#32;the&#32;buffer&#32;to&#32;its&#32;previous&#32;state&#32;(so&#32;the&#32;length&#32;of</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00947"/>00947 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;message&#32;is&#32;in&#32;the&#32;buffer&#32;again).&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00948"/>00948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a937e441ed6c946a099d52b5955d7302c">xTail</link>&#32;=&#32;xOriginalTail;
<anchor xml:id="_stream__buffer_8c_source_1l00949"/>00949 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xNextMessageLength&#32;=&#32;0;
<anchor xml:id="_stream__buffer_8c_source_1l00950"/>00950 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00951"/>00951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00952"/>00952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00953"/>00953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_stream__buffer_8c_source_1l00954"/>00954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00955"/>00955 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00956"/>00956 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00957"/>00957 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00958"/>00958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;stream&#32;of&#32;bytes&#32;is&#32;being&#32;received&#32;(as&#32;opposed&#32;to&#32;a&#32;discrete</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00959"/>00959 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;message),&#32;so&#32;read&#32;as&#32;many&#32;bytes&#32;as&#32;possible.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00960"/>00960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xNextMessageLength&#32;=&#32;xBufferLengthBytes;
<anchor xml:id="_stream__buffer_8c_source_1l00961"/>00961 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00962"/>00962 
<anchor xml:id="_stream__buffer_8c_source_1l00963"/>00963 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Read&#32;the&#32;actual&#32;data.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00964"/>00964 &#32;&#32;&#32;&#32;xReceivedLength&#32;=&#32;<link linkend="_stream__buffer_8c_1a7d74bf9ad861552245f1e382c4c0f7fa">prvReadBytesFromBuffer</link>(&#32;pxStreamBuffer,&#32;(&#32;uint8_t&#32;*&#32;)&#32;pvRxData,&#32;xNextMessageLength,&#32;xBytesAvailable&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9079&#32;Data&#32;storage&#32;area&#32;is&#32;implemented&#32;as&#32;uint8_t&#32;array&#32;for&#32;ease&#32;of&#32;sizing,&#32;indexing&#32;and&#32;alignment.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00965"/>00965 
<anchor xml:id="_stream__buffer_8c_source_1l00966"/>00966 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReceivedLength;
<anchor xml:id="_stream__buffer_8c_source_1l00967"/>00967 }
<anchor xml:id="_stream__buffer_8c_source_1l00968"/>00968 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00969"/>00969 
<anchor xml:id="_stream__buffer_8c_source_1l00970"/><link linkend="_stream__buffer_8c_1a95465cd3702e3eae08afb8e69e1c6525">00970</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_stream__buffer_8c_1a95465cd3702e3eae08afb8e69e1c6525">xStreamBufferIsEmpty</link>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBufferHandle_t</link>&#32;xStreamBuffer&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00971"/>00971 {
<anchor xml:id="_stream__buffer_8c_source_1l00972"/>00972 <emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxStreamBuffer&#32;=&#32;xStreamBuffer;
<anchor xml:id="_stream__buffer_8c_source_1l00973"/>00973 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_stream__buffer_8c_source_1l00974"/>00974 <emphasis role="keywordtype">size_t</emphasis>&#32;xTail;
<anchor xml:id="_stream__buffer_8c_source_1l00975"/>00975 
<anchor xml:id="_stream__buffer_8c_source_1l00976"/>00976 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l00977"/>00977 
<anchor xml:id="_stream__buffer_8c_source_1l00978"/>00978 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;True&#32;if&#32;no&#32;bytes&#32;are&#32;available.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00979"/>00979 &#32;&#32;&#32;&#32;xTail&#32;=&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a937e441ed6c946a099d52b5955d7302c">xTail</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00980"/>00980 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a75aafb9fdee8f0666837302bd9b12341">xHead</link>&#32;==&#32;xTail&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00981"/>00981 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00982"/>00982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00983"/>00983 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00984"/>00984 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00985"/>00985 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l00986"/>00986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_stream__buffer_8c_source_1l00987"/>00987 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l00988"/>00988 
<anchor xml:id="_stream__buffer_8c_source_1l00989"/>00989 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_stream__buffer_8c_source_1l00990"/>00990 }
<anchor xml:id="_stream__buffer_8c_source_1l00991"/>00991 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l00992"/>00992 
<anchor xml:id="_stream__buffer_8c_source_1l00993"/><link linkend="_stream__buffer_8c_1a77c2ae33c45c948e7af4d61fdd6cf1f1">00993</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_stream__buffer_8c_1a77c2ae33c45c948e7af4d61fdd6cf1f1">xStreamBufferIsFull</link>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBufferHandle_t</link>&#32;xStreamBuffer&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l00994"/>00994 {
<anchor xml:id="_stream__buffer_8c_source_1l00995"/>00995 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_stream__buffer_8c_source_1l00996"/>00996 <emphasis role="keywordtype">size_t</emphasis>&#32;xBytesToStoreMessageLength;
<anchor xml:id="_stream__buffer_8c_source_1l00997"/>00997 <emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxStreamBuffer&#32;=&#32;xStreamBuffer;
<anchor xml:id="_stream__buffer_8c_source_1l00998"/>00998 
<anchor xml:id="_stream__buffer_8c_source_1l00999"/>00999 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l01000"/>01000 
<anchor xml:id="_stream__buffer_8c_source_1l01001"/>01001 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;generic&#32;version&#32;of&#32;the&#32;receive&#32;function&#32;is&#32;used&#32;by&#32;both&#32;message</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01002"/>01002 <emphasis role="comment">&#32;&#32;&#32;&#32;buffers,&#32;which&#32;store&#32;discrete&#32;messages,&#32;and&#32;stream&#32;buffers,&#32;which&#32;store&#32;a</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01003"/>01003 <emphasis role="comment">&#32;&#32;&#32;&#32;continuous&#32;stream&#32;of&#32;bytes.&#32;&#32;Discrete&#32;messages&#32;include&#32;an&#32;additional</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01004"/>01004 <emphasis role="comment">&#32;&#32;&#32;&#32;sbBYTES_TO_STORE_MESSAGE_LENGTH&#32;bytes&#32;that&#32;hold&#32;the&#32;length&#32;of&#32;the&#32;message.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01005"/>01005 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a1afd02d997a1cb3149e3cf203c681d58">ucFlags</link>&#32;&amp;&#32;<link linkend="_stream__buffer_8c_1a4954c04e3f9f6b0d4a98b9441b35d896">sbFLAGS_IS_MESSAGE_BUFFER</link>&#32;)&#32;!=&#32;(&#32;uint8_t&#32;)&#32;0&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l01006"/>01006 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l01007"/>01007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xBytesToStoreMessageLength&#32;=&#32;<link linkend="_stream__buffer_8c_1aaa21967227eb06d02cdd038047b836f6">sbBYTES_TO_STORE_MESSAGE_LENGTH</link>;
<anchor xml:id="_stream__buffer_8c_source_1l01008"/>01008 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l01009"/>01009 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01010"/>01010 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l01011"/>01011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xBytesToStoreMessageLength&#32;=&#32;0;
<anchor xml:id="_stream__buffer_8c_source_1l01012"/>01012 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l01013"/>01013 
<anchor xml:id="_stream__buffer_8c_source_1l01014"/>01014 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;True&#32;if&#32;the&#32;available&#32;space&#32;equals&#32;zero.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01015"/>01015 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_stream__buffer_8c_1a8fb90892c74eb94fb063b2a018a10509">xStreamBufferSpacesAvailable</link>(&#32;xStreamBuffer&#32;)&#32;&lt;=&#32;xBytesToStoreMessageLength&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l01016"/>01016 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l01017"/>01017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_stream__buffer_8c_source_1l01018"/>01018 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l01019"/>01019 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01020"/>01020 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l01021"/>01021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_stream__buffer_8c_source_1l01022"/>01022 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l01023"/>01023 
<anchor xml:id="_stream__buffer_8c_source_1l01024"/>01024 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_stream__buffer_8c_source_1l01025"/>01025 }
<anchor xml:id="_stream__buffer_8c_source_1l01026"/>01026 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01027"/>01027 
<anchor xml:id="_stream__buffer_8c_source_1l01028"/><link linkend="_stream__buffer_8c_1a734bf1bcef16810abb6d53781b8f1f07">01028</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_stream__buffer_8c_1a734bf1bcef16810abb6d53781b8f1f07">xStreamBufferSendCompletedFromISR</link>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBufferHandle_t</link>&#32;xStreamBuffer,&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;*pxHigherPriorityTaskWoken&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l01029"/>01029 {
<anchor xml:id="_stream__buffer_8c_source_1l01030"/>01030 <link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxStreamBuffer&#32;=&#32;xStreamBuffer;
<anchor xml:id="_stream__buffer_8c_source_1l01031"/>01031 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_stream__buffer_8c_source_1l01032"/>01032 <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxSavedInterruptStatus;
<anchor xml:id="_stream__buffer_8c_source_1l01033"/>01033 
<anchor xml:id="_stream__buffer_8c_source_1l01034"/>01034 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l01035"/>01035 
<anchor xml:id="_stream__buffer_8c_source_1l01036"/>01036 &#32;&#32;&#32;&#32;uxSavedInterruptStatus&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="_portmacro_8h_1a31b4260dbc1823ba80b578f86eb15a98">portSET_INTERRUPT_MASK_FROM_ISR</link>();
<anchor xml:id="_stream__buffer_8c_source_1l01037"/>01037 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l01038"/>01038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;pxStreamBuffer&#32;)-&gt;xTaskWaitingToReceive&#32;!=&#32;NULL&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l01039"/>01039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l01040"/>01040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_task_8h_1a1ed9129068b96a909356bd0369c5ecb0">xTaskNotifyFromISR</link>(&#32;(&#32;pxStreamBuffer&#32;)-&gt;xTaskWaitingToReceive,
<anchor xml:id="_stream__buffer_8c_source_1l01041"/>01041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;uint32_t&#32;)&#32;0,
<anchor xml:id="_stream__buffer_8c_source_1l01042"/>01042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233abac2b17ab15444724b6f35d47cd0a64a">eNoAction</link>,
<anchor xml:id="_stream__buffer_8c_source_1l01043"/>01043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxHigherPriorityTaskWoken&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l01044"/>01044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;pxStreamBuffer&#32;)-&gt;xTaskWaitingToReceive&#32;=&#32;NULL;
<anchor xml:id="_stream__buffer_8c_source_1l01045"/>01045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_stream__buffer_8c_source_1l01046"/>01046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l01047"/>01047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01048"/>01048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l01049"/>01049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_stream__buffer_8c_source_1l01050"/>01050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l01051"/>01051 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l01052"/>01052 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a79d65a5d0f6f9133a0739832e9d8367e">portCLEAR_INTERRUPT_MASK_FROM_ISR</link>(&#32;uxSavedInterruptStatus&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l01053"/>01053 
<anchor xml:id="_stream__buffer_8c_source_1l01054"/>01054 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_stream__buffer_8c_source_1l01055"/>01055 }
<anchor xml:id="_stream__buffer_8c_source_1l01056"/>01056 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01057"/>01057 
<anchor xml:id="_stream__buffer_8c_source_1l01058"/><link linkend="_stream__buffer_8c_1adbcf08da91cb0b9c179d012e0c99237d">01058</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_stream__buffer_8c_1adbcf08da91cb0b9c179d012e0c99237d">xStreamBufferReceiveCompletedFromISR</link>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBufferHandle_t</link>&#32;xStreamBuffer,&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;*pxHigherPriorityTaskWoken&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l01059"/>01059 {
<anchor xml:id="_stream__buffer_8c_source_1l01060"/>01060 <link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxStreamBuffer&#32;=&#32;xStreamBuffer;
<anchor xml:id="_stream__buffer_8c_source_1l01061"/>01061 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_stream__buffer_8c_source_1l01062"/>01062 <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxSavedInterruptStatus;
<anchor xml:id="_stream__buffer_8c_source_1l01063"/>01063 
<anchor xml:id="_stream__buffer_8c_source_1l01064"/>01064 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxStreamBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l01065"/>01065 
<anchor xml:id="_stream__buffer_8c_source_1l01066"/>01066 &#32;&#32;&#32;&#32;uxSavedInterruptStatus&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="_portmacro_8h_1a31b4260dbc1823ba80b578f86eb15a98">portSET_INTERRUPT_MASK_FROM_ISR</link>();
<anchor xml:id="_stream__buffer_8c_source_1l01067"/>01067 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l01068"/>01068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;pxStreamBuffer&#32;)-&gt;xTaskWaitingToSend&#32;!=&#32;NULL&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l01069"/>01069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l01070"/>01070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_task_8h_1a1ed9129068b96a909356bd0369c5ecb0">xTaskNotifyFromISR</link>(&#32;(&#32;pxStreamBuffer&#32;)-&gt;xTaskWaitingToSend,
<anchor xml:id="_stream__buffer_8c_source_1l01071"/>01071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;uint32_t&#32;)&#32;0,
<anchor xml:id="_stream__buffer_8c_source_1l01072"/>01072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233abac2b17ab15444724b6f35d47cd0a64a">eNoAction</link>,
<anchor xml:id="_stream__buffer_8c_source_1l01073"/>01073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxHigherPriorityTaskWoken&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l01074"/>01074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;pxStreamBuffer&#32;)-&gt;xTaskWaitingToSend&#32;=&#32;NULL;
<anchor xml:id="_stream__buffer_8c_source_1l01075"/>01075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_stream__buffer_8c_source_1l01076"/>01076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l01077"/>01077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01078"/>01078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l01079"/>01079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_stream__buffer_8c_source_1l01080"/>01080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l01081"/>01081 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l01082"/>01082 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a79d65a5d0f6f9133a0739832e9d8367e">portCLEAR_INTERRUPT_MASK_FROM_ISR</link>(&#32;uxSavedInterruptStatus&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l01083"/>01083 
<anchor xml:id="_stream__buffer_8c_source_1l01084"/>01084 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_stream__buffer_8c_source_1l01085"/>01085 }
<anchor xml:id="_stream__buffer_8c_source_1l01086"/>01086 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01087"/>01087 
<anchor xml:id="_stream__buffer_8c_source_1l01088"/><link linkend="_stream__buffer_8c_1a4e311fb1b4587477fd167f249e02286b">01088</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_stream__buffer_8c_1a4e311fb1b4587477fd167f249e02286b">prvWriteBytesToBuffer</link>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxStreamBuffer,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;*pucData,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xCount&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l01089"/>01089 {
<anchor xml:id="_stream__buffer_8c_source_1l01090"/>01090 <emphasis role="keywordtype">size_t</emphasis>&#32;xNextHead,&#32;xFirstLength;
<anchor xml:id="_stream__buffer_8c_source_1l01091"/>01091 
<anchor xml:id="_stream__buffer_8c_source_1l01092"/>01092 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xCount&#32;&gt;&#32;(&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;)&#32;0&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l01093"/>01093 
<anchor xml:id="_stream__buffer_8c_source_1l01094"/>01094 &#32;&#32;&#32;&#32;xNextHead&#32;=&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a75aafb9fdee8f0666837302bd9b12341">xHead</link>;
<anchor xml:id="_stream__buffer_8c_source_1l01095"/>01095 
<anchor xml:id="_stream__buffer_8c_source_1l01096"/>01096 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Calculate&#32;the&#32;number&#32;of&#32;bytes&#32;that&#32;can&#32;be&#32;added&#32;in&#32;the&#32;first&#32;write&#32;-</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01097"/>01097 <emphasis role="comment">&#32;&#32;&#32;&#32;which&#32;may&#32;be&#32;less&#32;than&#32;the&#32;total&#32;number&#32;of&#32;bytes&#32;that&#32;need&#32;to&#32;be&#32;added&#32;if</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01098"/>01098 <emphasis role="comment">&#32;&#32;&#32;&#32;the&#32;buffer&#32;will&#32;wrap&#32;back&#32;to&#32;the&#32;beginning.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01099"/>01099 &#32;&#32;&#32;&#32;xFirstLength&#32;=&#32;<link linkend="__free_r_t_o_s_8h_1a101a57cef3f76ec13110cec59ce49edf">configMIN</link>(&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a6eedf41c877edd42b3b460780d1b6555">xLength</link>&#32;-&#32;xNextHead,&#32;xCount&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l01100"/>01100 
<anchor xml:id="_stream__buffer_8c_source_1l01101"/>01101 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Write&#32;as&#32;many&#32;bytes&#32;as&#32;can&#32;be&#32;written&#32;in&#32;the&#32;first&#32;write.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01102"/>01102 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;(&#32;xNextHead&#32;+&#32;xFirstLength&#32;)&#32;&lt;=&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a6eedf41c877edd42b3b460780d1b6555">xLength</link>&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l01103"/>01103 &#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;memcpy(&#32;(&#32;<emphasis role="keywordtype">void</emphasis>*&#32;)&#32;(&#32;&amp;(&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a4e05054a8a3d61a5cec0c18a70bbdb67">pucBuffer</link>[&#32;xNextHead&#32;]&#32;)&#32;),&#32;(&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;)&#32;pucData,&#32;xFirstLength&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9087&#32;memcpy()&#32;requires&#32;void&#32;*.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01104"/>01104 
<anchor xml:id="_stream__buffer_8c_source_1l01105"/>01105 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;number&#32;of&#32;bytes&#32;written&#32;was&#32;less&#32;than&#32;the&#32;number&#32;that&#32;could&#32;be</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01106"/>01106 <emphasis role="comment">&#32;&#32;&#32;&#32;written&#32;in&#32;the&#32;first&#32;write...&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01107"/>01107 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xCount&#32;&gt;&#32;xFirstLength&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l01108"/>01108 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l01109"/>01109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;...then&#32;write&#32;the&#32;remaining&#32;bytes&#32;to&#32;the&#32;start&#32;of&#32;the&#32;buffer.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01110"/>01110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;(&#32;xCount&#32;-&#32;xFirstLength&#32;)&#32;&lt;=&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a6eedf41c877edd42b3b460780d1b6555">xLength</link>&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l01111"/>01111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;memcpy(&#32;(&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;)&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a4e05054a8a3d61a5cec0c18a70bbdb67">pucBuffer</link>,&#32;(&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;)&#32;&amp;(&#32;pucData[&#32;xFirstLength&#32;]&#32;),&#32;xCount&#32;-&#32;xFirstLength&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9087&#32;memcpy()&#32;requires&#32;void&#32;*.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01112"/>01112 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l01113"/>01113 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01114"/>01114 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l01115"/>01115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_stream__buffer_8c_source_1l01116"/>01116 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l01117"/>01117 
<anchor xml:id="_stream__buffer_8c_source_1l01118"/>01118 &#32;&#32;&#32;&#32;xNextHead&#32;+=&#32;xCount;
<anchor xml:id="_stream__buffer_8c_source_1l01119"/>01119 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xNextHead&#32;&gt;=&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a6eedf41c877edd42b3b460780d1b6555">xLength</link>&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l01120"/>01120 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l01121"/>01121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xNextHead&#32;-=&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a6eedf41c877edd42b3b460780d1b6555">xLength</link>;
<anchor xml:id="_stream__buffer_8c_source_1l01122"/>01122 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l01123"/>01123 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01124"/>01124 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l01125"/>01125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_stream__buffer_8c_source_1l01126"/>01126 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l01127"/>01127 
<anchor xml:id="_stream__buffer_8c_source_1l01128"/>01128 &#32;&#32;&#32;&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a75aafb9fdee8f0666837302bd9b12341">xHead</link>&#32;=&#32;xNextHead;
<anchor xml:id="_stream__buffer_8c_source_1l01129"/>01129 
<anchor xml:id="_stream__buffer_8c_source_1l01130"/>01130 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xCount;
<anchor xml:id="_stream__buffer_8c_source_1l01131"/>01131 }
<anchor xml:id="_stream__buffer_8c_source_1l01132"/>01132 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01133"/>01133 
<anchor xml:id="_stream__buffer_8c_source_1l01134"/><link linkend="_stream__buffer_8c_1a7d74bf9ad861552245f1e382c4c0f7fa">01134</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_stream__buffer_8c_1a7d74bf9ad861552245f1e382c4c0f7fa">prvReadBytesFromBuffer</link>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*pxStreamBuffer,&#32;uint8_t&#32;*pucData,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xMaxCount,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xBytesAvailable&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l01135"/>01135 {
<anchor xml:id="_stream__buffer_8c_source_1l01136"/>01136 <emphasis role="keywordtype">size_t</emphasis>&#32;xCount,&#32;xFirstLength,&#32;xNextTail;
<anchor xml:id="_stream__buffer_8c_source_1l01137"/>01137 
<anchor xml:id="_stream__buffer_8c_source_1l01138"/>01138 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Use&#32;the&#32;minimum&#32;of&#32;the&#32;wanted&#32;bytes&#32;and&#32;the&#32;available&#32;bytes.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01139"/>01139 &#32;&#32;&#32;&#32;xCount&#32;=&#32;<link linkend="__free_r_t_o_s_8h_1a101a57cef3f76ec13110cec59ce49edf">configMIN</link>(&#32;xBytesAvailable,&#32;xMaxCount&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l01140"/>01140 
<anchor xml:id="_stream__buffer_8c_source_1l01141"/>01141 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xCount&#32;&gt;&#32;(&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;)&#32;0&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l01142"/>01142 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l01143"/>01143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xNextTail&#32;=&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a937e441ed6c946a099d52b5955d7302c">xTail</link>;
<anchor xml:id="_stream__buffer_8c_source_1l01144"/>01144 
<anchor xml:id="_stream__buffer_8c_source_1l01145"/>01145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Calculate&#32;the&#32;number&#32;of&#32;bytes&#32;that&#32;can&#32;be&#32;read&#32;-&#32;which&#32;may&#32;be</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01146"/>01146 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;less&#32;than&#32;the&#32;number&#32;wanted&#32;if&#32;the&#32;data&#32;wraps&#32;around&#32;to&#32;the&#32;start&#32;of</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01147"/>01147 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;buffer.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01148"/>01148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xFirstLength&#32;=&#32;<link linkend="__free_r_t_o_s_8h_1a101a57cef3f76ec13110cec59ce49edf">configMIN</link>(&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a6eedf41c877edd42b3b460780d1b6555">xLength</link>&#32;-&#32;xNextTail,&#32;xCount&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l01149"/>01149 
<anchor xml:id="_stream__buffer_8c_source_1l01150"/>01150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Obtain&#32;the&#32;number&#32;of&#32;bytes&#32;it&#32;is&#32;possible&#32;to&#32;obtain&#32;in&#32;the&#32;first</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01151"/>01151 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;read.&#32;&#32;Asserts&#32;check&#32;bounds&#32;of&#32;read&#32;and&#32;write.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01152"/>01152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xFirstLength&#32;&lt;=&#32;xMaxCount&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l01153"/>01153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;(&#32;xNextTail&#32;+&#32;xFirstLength&#32;)&#32;&lt;=&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a6eedf41c877edd42b3b460780d1b6555">xLength</link>&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l01154"/>01154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;memcpy(&#32;(&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;)&#32;pucData,&#32;(&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;)&#32;&amp;(&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a4e05054a8a3d61a5cec0c18a70bbdb67">pucBuffer</link>[&#32;xNextTail&#32;]&#32;),&#32;xFirstLength&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9087&#32;memcpy()&#32;requires&#32;void&#32;*.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01155"/>01155 
<anchor xml:id="_stream__buffer_8c_source_1l01156"/>01156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;total&#32;number&#32;of&#32;wanted&#32;bytes&#32;is&#32;greater&#32;than&#32;the&#32;number</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01157"/>01157 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;that&#32;could&#32;be&#32;read&#32;in&#32;the&#32;first&#32;read...&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01158"/>01158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xCount&#32;&gt;&#32;xFirstLength&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l01159"/>01159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l01160"/>01160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*...then&#32;read&#32;the&#32;remaining&#32;bytes&#32;from&#32;the&#32;start&#32;of&#32;the&#32;buffer.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01161"/>01161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xCount&#32;&lt;=&#32;xMaxCount&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l01162"/>01162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;memcpy(&#32;(&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;)&#32;&amp;(&#32;pucData[&#32;xFirstLength&#32;]&#32;),&#32;(&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;)&#32;(&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a4e05054a8a3d61a5cec0c18a70bbdb67">pucBuffer</link>&#32;),&#32;xCount&#32;-&#32;xFirstLength&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9087&#32;memcpy()&#32;requires&#32;void&#32;*.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01163"/>01163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l01164"/>01164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01165"/>01165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l01166"/>01166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_stream__buffer_8c_source_1l01167"/>01167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l01168"/>01168 
<anchor xml:id="_stream__buffer_8c_source_1l01169"/>01169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Move&#32;the&#32;tail&#32;pointer&#32;to&#32;effectively&#32;remove&#32;the&#32;data&#32;read&#32;from</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01170"/>01170 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;buffer.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01171"/>01171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xNextTail&#32;+=&#32;xCount;
<anchor xml:id="_stream__buffer_8c_source_1l01172"/>01172 
<anchor xml:id="_stream__buffer_8c_source_1l01173"/>01173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xNextTail&#32;&gt;=&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a6eedf41c877edd42b3b460780d1b6555">xLength</link>&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l01174"/>01174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l01175"/>01175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xNextTail&#32;-=&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a6eedf41c877edd42b3b460780d1b6555">xLength</link>;
<anchor xml:id="_stream__buffer_8c_source_1l01176"/>01176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l01177"/>01177 
<anchor xml:id="_stream__buffer_8c_source_1l01178"/>01178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a937e441ed6c946a099d52b5955d7302c">xTail</link>&#32;=&#32;xNextTail;
<anchor xml:id="_stream__buffer_8c_source_1l01179"/>01179 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l01180"/>01180 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01181"/>01181 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l01182"/>01182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_stream__buffer_8c_source_1l01183"/>01183 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l01184"/>01184 
<anchor xml:id="_stream__buffer_8c_source_1l01185"/>01185 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xCount;
<anchor xml:id="_stream__buffer_8c_source_1l01186"/>01186 }
<anchor xml:id="_stream__buffer_8c_source_1l01187"/>01187 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01188"/>01188 
<anchor xml:id="_stream__buffer_8c_source_1l01189"/><link linkend="_stream__buffer_8c_1ab588e6a51ba9c8e7796aa05e5c600c36">01189</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_stream__buffer_8c_1ab588e6a51ba9c8e7796aa05e5c600c36">prvBytesInBuffer</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxStreamBuffer&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l01190"/>01190 {
<anchor xml:id="_stream__buffer_8c_source_1l01191"/>01191 <emphasis role="comment">/*&#32;Returns&#32;the&#32;distance&#32;between&#32;xTail&#32;and&#32;xHead.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01192"/>01192 <emphasis role="keywordtype">size_t</emphasis>&#32;xCount;
<anchor xml:id="_stream__buffer_8c_source_1l01193"/>01193 
<anchor xml:id="_stream__buffer_8c_source_1l01194"/>01194 &#32;&#32;&#32;&#32;xCount&#32;=&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a6eedf41c877edd42b3b460780d1b6555">xLength</link>&#32;+&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a75aafb9fdee8f0666837302bd9b12341">xHead</link>;
<anchor xml:id="_stream__buffer_8c_source_1l01195"/>01195 &#32;&#32;&#32;&#32;xCount&#32;-=&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a937e441ed6c946a099d52b5955d7302c">xTail</link>;
<anchor xml:id="_stream__buffer_8c_source_1l01196"/>01196 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;xCount&#32;&gt;=&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a6eedf41c877edd42b3b460780d1b6555">xLength</link>&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l01197"/>01197 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l01198"/>01198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xCount&#32;-=&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a6eedf41c877edd42b3b460780d1b6555">xLength</link>;
<anchor xml:id="_stream__buffer_8c_source_1l01199"/>01199 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l01200"/>01200 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01201"/>01201 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l01202"/>01202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_stream__buffer_8c_source_1l01203"/>01203 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l01204"/>01204 
<anchor xml:id="_stream__buffer_8c_source_1l01205"/>01205 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xCount;
<anchor xml:id="_stream__buffer_8c_source_1l01206"/>01206 }
<anchor xml:id="_stream__buffer_8c_source_1l01207"/>01207 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01208"/>01208 
<anchor xml:id="_stream__buffer_8c_source_1l01209"/><link linkend="_stream__buffer_8c_1a788f6b7c88760204fc60aa514c5849b7">01209</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_stream__buffer_8c_1a788f6b7c88760204fc60aa514c5849b7">prvInitialiseNewStreamBuffer</link>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBuffer_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxStreamBuffer,
<anchor xml:id="_stream__buffer_8c_source_1l01210"/>01210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pucBuffer,
<anchor xml:id="_stream__buffer_8c_source_1l01211"/>01211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xBufferSizeBytes,
<anchor xml:id="_stream__buffer_8c_source_1l01212"/>01212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xTriggerLevelBytes,
<anchor xml:id="_stream__buffer_8c_source_1l01213"/>01213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;ucFlags&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l01214"/>01214 {
<anchor xml:id="_stream__buffer_8c_source_1l01215"/>01215 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Assert&#32;here&#32;is&#32;deliberately&#32;writing&#32;to&#32;the&#32;entire&#32;buffer&#32;to&#32;ensure&#32;it&#32;can</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01216"/>01216 <emphasis role="comment">&#32;&#32;&#32;&#32;be&#32;written&#32;to&#32;without&#32;generating&#32;exceptions,&#32;and&#32;is&#32;setting&#32;the&#32;buffer&#32;to&#32;a</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01217"/>01217 <emphasis role="comment">&#32;&#32;&#32;&#32;known&#32;value&#32;to&#32;assist&#32;in&#32;development/debugging.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01218"/>01218 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if(&#32;configASSERT_DEFINED&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01219"/>01219 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l01220"/>01220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;value&#32;written&#32;just&#32;has&#32;to&#32;be&#32;identifiable&#32;when&#32;looking&#32;at&#32;the</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01221"/>01221 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memory.&#32;&#32;Don&apos;t&#32;use&#32;0xA5&#32;as&#32;that&#32;is&#32;the&#32;stack&#32;fill&#32;value&#32;and&#32;could</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01222"/>01222 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;in&#32;confusion&#32;as&#32;to&#32;what&#32;is&#32;actually&#32;being&#32;observed.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01223"/>01223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xWriteValue&#32;=&#32;0x55;
<anchor xml:id="_stream__buffer_8c_source_1l01224"/>01224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;memset(&#32;pucBuffer,&#32;(&#32;<emphasis role="keywordtype">int</emphasis>&#32;)&#32;xWriteValue,&#32;xBufferSizeBytes&#32;)&#32;==&#32;pucBuffer&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l01225"/>01225 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">/*lint&#32;!e529&#32;!e438&#32;xWriteValue&#32;is&#32;only&#32;used&#32;if&#32;configASSERT()&#32;is&#32;defined.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01226"/>01226 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01227"/>01227 
<anchor xml:id="_stream__buffer_8c_source_1l01228"/>01228 &#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;memset(&#32;(&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;)&#32;pxStreamBuffer,&#32;0x00,&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<link linkend="_stream__buffer_8c_1ac30372f81bb381115f91d7daa384db2d">StreamBuffer_t</link>&#32;)&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9087&#32;memset()&#32;requires&#32;void&#32;*.&#32;*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01229"/>01229 &#32;&#32;&#32;&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a4e05054a8a3d61a5cec0c18a70bbdb67">pucBuffer</link>&#32;=&#32;pucBuffer;
<anchor xml:id="_stream__buffer_8c_source_1l01230"/>01230 &#32;&#32;&#32;&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a6eedf41c877edd42b3b460780d1b6555">xLength</link>&#32;=&#32;xBufferSizeBytes;
<anchor xml:id="_stream__buffer_8c_source_1l01231"/>01231 &#32;&#32;&#32;&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a4a7ee9b374cc0b358d049811def8d595">xTriggerLevelBytes</link>&#32;=&#32;xTriggerLevelBytes;
<anchor xml:id="_stream__buffer_8c_source_1l01232"/>01232 &#32;&#32;&#32;&#32;pxStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a1afd02d997a1cb3149e3cf203c681d58">ucFlags</link>&#32;=&#32;ucFlags;
<anchor xml:id="_stream__buffer_8c_source_1l01233"/>01233 }
<anchor xml:id="_stream__buffer_8c_source_1l01234"/>01234 
<anchor xml:id="_stream__buffer_8c_source_1l01235"/>01235 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01236"/>01236 
<anchor xml:id="_stream__buffer_8c_source_1l01237"/><link linkend="_stream__buffer_8c_1a4fa4d3119b6d1b35f886f0d03a60172e">01237</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_stream__buffer_8c_1a4fa4d3119b6d1b35f886f0d03a60172e">uxStreamBufferGetStreamBufferNumber</link>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBufferHandle_t</link>&#32;xStreamBuffer&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l01238"/>01238 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l01239"/>01239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1aee83da827fa7eb47682250297d6961b0">uxStreamBufferNumber</link>;
<anchor xml:id="_stream__buffer_8c_source_1l01240"/>01240 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l01241"/>01241 
<anchor xml:id="_stream__buffer_8c_source_1l01242"/>01242 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TRACE_FACILITY&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01243"/>01243 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01244"/>01244 
<anchor xml:id="_stream__buffer_8c_source_1l01245"/>01245 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01246"/>01246 
<anchor xml:id="_stream__buffer_8c_source_1l01247"/><link linkend="_stream__buffer_8c_1a950e5f7b820b821025cd0bc0c797653c">01247</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_stream__buffer_8c_1a950e5f7b820b821025cd0bc0c797653c">vStreamBufferSetStreamBufferNumber</link>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBufferHandle_t</link>&#32;xStreamBuffer,&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxStreamBufferNumber&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l01248"/>01248 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l01249"/>01249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1aee83da827fa7eb47682250297d6961b0">uxStreamBufferNumber</link>&#32;=&#32;uxStreamBufferNumber;
<anchor xml:id="_stream__buffer_8c_source_1l01250"/>01250 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l01251"/>01251 
<anchor xml:id="_stream__buffer_8c_source_1l01252"/>01252 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TRACE_FACILITY&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01253"/>01253 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01254"/>01254 
<anchor xml:id="_stream__buffer_8c_source_1l01255"/>01255 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01256"/>01256 
<anchor xml:id="_stream__buffer_8c_source_1l01257"/><link linkend="_stream__buffer_8c_1ae0cd387d75e89534b6332aac4a3a03b3">01257</link> &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_stream__buffer_8c_1ae0cd387d75e89534b6332aac4a3a03b3">ucStreamBufferGetStreamBufferType</link>(&#32;<link linkend="_struct_stream_buffer_def__t">StreamBufferHandle_t</link>&#32;xStreamBuffer&#32;)
<anchor xml:id="_stream__buffer_8c_source_1l01258"/>01258 &#32;&#32;&#32;&#32;{
<anchor xml:id="_stream__buffer_8c_source_1l01259"/>01259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(&#32;xStreamBuffer-&gt;<link linkend="_struct_stream_buffer_def__t_1a1afd02d997a1cb3149e3cf203c681d58">ucFlags</link>&#32;&amp;&#32;<link linkend="_stream__buffer_8c_1a4954c04e3f9f6b0d4a98b9441b35d896">sbFLAGS_IS_MESSAGE_BUFFER</link>&#32;);
<anchor xml:id="_stream__buffer_8c_source_1l01260"/>01260 &#32;&#32;&#32;&#32;}
<anchor xml:id="_stream__buffer_8c_source_1l01261"/>01261 
<anchor xml:id="_stream__buffer_8c_source_1l01262"/>01262 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TRACE_FACILITY&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stream__buffer_8c_source_1l01263"/>01263 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
</programlisting></section>
