<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_portable_8h" xml:lang="en-US">
<title>FreeRTOS/portable.h File Reference</title>
<indexterm><primary>FreeRTOS/portable.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;deprecated_definitions.h&quot;
#include &quot;portmacro.h&quot;
#include &quot;mpu_wrappers.h&quot;
</programlisting><simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_heap_region">HeapRegion</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_portable_8h_1a92f6cfc08bf7459db3227a18ae8b6b59">portBYTE_ALIGNMENT_MASK</link>   ( 0x0003 )</para>
</listitem>
            <listitem><para>#define <link linkend="_portable_8h_1aca7e1a8a568a38b74cc9db10c8efebda">portNUM_CONFIGURABLE_REGIONS</link>   1</para>
</listitem>
            <listitem><para>#define <link linkend="_portable_8h_1a19b8150e9a84001333b8728be1882da0">portHAS_STACK_OVERFLOW_CHECKING</link>   0</para>
</listitem>
            <listitem><para>#define <link linkend="_portable_8h_1a2d5be0d247f2bf84b3d699be1378e8c4">portARCH_NAME</link>   NULL</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef struct <link linkend="_struct_heap_region">HeapRegion</link> <link linkend="_portable_8h_1acce46e1bf21496c11f2b1e49ded2882b">HeapRegion_t</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_portmacro_8h_1aa73b01e0200940d619095fb74fb3030b">StackType_t</link> * <link linkend="_portable_8h_1aec89de59377079f7dc6a71dfbefd9a6f">pxPortInitialiseStack</link> (<link linkend="_portmacro_8h_1aa73b01e0200940d619095fb74fb3030b">StackType_t</link> *pxTopOfStack, <link linkend="_projdefs_8h_1a9b32502ff92c255c686dacde53c1cba0">TaskFunction_t</link> pxCode, void *pvParameters)</para>
</listitem>
            <listitem><para>void <link linkend="_portable_8h_1ab13f7c55a8661da7bba3ef95f1282aee">vPortDefineHeapRegions</link> (const <link linkend="_portable_8h_1acce46e1bf21496c11f2b1e49ded2882b">HeapRegion_t</link> *const pxHeapRegions)</para>
</listitem>
            <listitem><para>void * <link linkend="_portable_8h_1ac59aab2e8ca1f2585bc5a650a14b02b8">pvPortMalloc</link> (size_t xSize)</para>
</listitem>
            <listitem><para>void <link linkend="_portable_8h_1a1e7cea2fd1bc894ea3b5f5e8179d259b">vPortFree</link> (void *pv)</para>
</listitem>
            <listitem><para>void <link linkend="_portable_8h_1a8bf103ce32ce8473574e9920af8b4eec">vPortInitialiseBlocks</link> (void)</para>
</listitem>
            <listitem><para>size_t <link linkend="_portable_8h_1a0c28a12b313bc248be0cb7a37ed81bb7">xPortGetFreeHeapSize</link> (void)</para>
</listitem>
            <listitem><para>size_t <link linkend="_portable_8h_1ab222e4545b8ff12b62fd000fea6b34eb">xPortGetMinimumEverFreeHeapSize</link> (void)</para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_portable_8h_1ade5a8c6666e7413a0355cc252029c5c6">xPortStartScheduler</link> (void)</para>
</listitem>
            <listitem><para>void <link linkend="_portable_8h_1af76f3c0b44c5b5c06fc046a4ee1a6423">vPortEndScheduler</link> (void)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_portable_8h_1a2d5be0d247f2bf84b3d699be1378e8c4"/><section>
    <title>portARCH_NAME</title>
<indexterm><primary>portARCH_NAME</primary><secondary>portable.h</secondary></indexterm>
<indexterm><primary>portable.h</primary><secondary>portARCH_NAME</secondary></indexterm>
<para><computeroutput>#define portARCH_NAME   NULL</computeroutput></para><para>
Definition at line <link linkend="_portable_8h_source_1l00092">92</link> of file <link linkend="_portable_8h_source">portable.h</link>.</para>
</section>
<anchor xml:id="_portable_8h_1a92f6cfc08bf7459db3227a18ae8b6b59"/><section>
    <title>portBYTE_ALIGNMENT_MASK</title>
<indexterm><primary>portBYTE_ALIGNMENT_MASK</primary><secondary>portable.h</secondary></indexterm>
<indexterm><primary>portable.h</primary><secondary>portBYTE_ALIGNMENT_MASK</secondary></indexterm>
<para><computeroutput>#define portBYTE_ALIGNMENT_MASK   ( 0x0003 )</computeroutput></para><para>
Definition at line <link linkend="_portable_8h_source_1l00068">68</link> of file <link linkend="_portable_8h_source">portable.h</link>.</para>
</section>
<anchor xml:id="_portable_8h_1a19b8150e9a84001333b8728be1882da0"/><section>
    <title>portHAS_STACK_OVERFLOW_CHECKING</title>
<indexterm><primary>portHAS_STACK_OVERFLOW_CHECKING</primary><secondary>portable.h</secondary></indexterm>
<indexterm><primary>portable.h</primary><secondary>portHAS_STACK_OVERFLOW_CHECKING</secondary></indexterm>
<para><computeroutput>#define portHAS_STACK_OVERFLOW_CHECKING   0</computeroutput></para><para>
Definition at line <link linkend="_portable_8h_source_1l00088">88</link> of file <link linkend="_portable_8h_source">portable.h</link>.</para>
</section>
<anchor xml:id="_portable_8h_1aca7e1a8a568a38b74cc9db10c8efebda"/><section>
    <title>portNUM_CONFIGURABLE_REGIONS</title>
<indexterm><primary>portNUM_CONFIGURABLE_REGIONS</primary><secondary>portable.h</secondary></indexterm>
<indexterm><primary>portable.h</primary><secondary>portNUM_CONFIGURABLE_REGIONS</secondary></indexterm>
<para><computeroutput>#define portNUM_CONFIGURABLE_REGIONS   1</computeroutput></para><para>
Definition at line <link linkend="_portable_8h_source_1l00084">84</link> of file <link linkend="_portable_8h_source">portable.h</link>.</para>
</section>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_portable_8h_1acce46e1bf21496c11f2b1e49ded2882b"/><section>
    <title>HeapRegion_t</title>
<indexterm><primary>HeapRegion_t</primary><secondary>portable.h</secondary></indexterm>
<indexterm><primary>portable.h</primary><secondary>HeapRegion_t</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct_heap_region">HeapRegion</link> <link linkend="_portable_8h_1acce46e1bf21496c11f2b1e49ded2882b">HeapRegion_t</link></computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_portable_8h_1ac59aab2e8ca1f2585bc5a650a14b02b8"/><section>
    <title>pvPortMalloc()</title>
<indexterm><primary>pvPortMalloc</primary><secondary>portable.h</secondary></indexterm>
<indexterm><primary>portable.h</primary><secondary>pvPortMalloc</secondary></indexterm>
<para><computeroutput>void * pvPortMalloc (size_t xSize)</computeroutput></para><para>
Definition at line <link linkend="_heap__3_8c_source_1l00100">100</link> of file <link linkend="_heap__3_8c_source">heap_3.c</link>.</para>
</section>
<anchor xml:id="_portable_8h_1aec89de59377079f7dc6a71dfbefd9a6f"/><section>
    <title>pxPortInitialiseStack()</title>
<indexterm><primary>pxPortInitialiseStack</primary><secondary>portable.h</secondary></indexterm>
<indexterm><primary>portable.h</primary><secondary>pxPortInitialiseStack</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1aa73b01e0200940d619095fb74fb3030b">StackType_t</link> * pxPortInitialiseStack (<link linkend="_portmacro_8h_1aa73b01e0200940d619095fb74fb3030b">StackType_t</link> * pxTopOfStack, <link linkend="_projdefs_8h_1a9b32502ff92c255c686dacde53c1cba0">TaskFunction_t</link> pxCode, void * pvParameters)</computeroutput></para></section>
<anchor xml:id="_portable_8h_1ab13f7c55a8661da7bba3ef95f1282aee"/><section>
    <title>vPortDefineHeapRegions()</title>
<indexterm><primary>vPortDefineHeapRegions</primary><secondary>portable.h</secondary></indexterm>
<indexterm><primary>portable.h</primary><secondary>vPortDefineHeapRegions</secondary></indexterm>
<para><computeroutput>void vPortDefineHeapRegions (const <link linkend="_portable_8h_1acce46e1bf21496c11f2b1e49ded2882b">HeapRegion_t</link> *const pxHeapRegions)</computeroutput></para></section>
<anchor xml:id="_portable_8h_1af76f3c0b44c5b5c06fc046a4ee1a6423"/><section>
    <title>vPortEndScheduler()</title>
<indexterm><primary>vPortEndScheduler</primary><secondary>portable.h</secondary></indexterm>
<indexterm><primary>portable.h</primary><secondary>vPortEndScheduler</secondary></indexterm>
<para><computeroutput>void vPortEndScheduler (void )</computeroutput></para><para>
Definition at line <link linkend="_port_8c_source_1l00491">491</link> of file <link linkend="_port_8c_source">port.c</link>.</para>
</section>
<anchor xml:id="_portable_8h_1a1e7cea2fd1bc894ea3b5f5e8179d259b"/><section>
    <title>vPortFree()</title>
<indexterm><primary>vPortFree</primary><secondary>portable.h</secondary></indexterm>
<indexterm><primary>portable.h</primary><secondary>vPortFree</secondary></indexterm>
<para><computeroutput>void vPortFree (void * pv)</computeroutput></para><para>
Definition at line <link linkend="_heap__3_8c_source_1l00125">125</link> of file <link linkend="_heap__3_8c_source">heap_3.c</link>.</para>
</section>
<anchor xml:id="_portable_8h_1a8bf103ce32ce8473574e9920af8b4eec"/><section>
    <title>vPortInitialiseBlocks()</title>
<indexterm><primary>vPortInitialiseBlocks</primary><secondary>portable.h</secondary></indexterm>
<indexterm><primary>portable.h</primary><secondary>vPortInitialiseBlocks</secondary></indexterm>
<para><computeroutput>void vPortInitialiseBlocks (void )</computeroutput></para></section>
<anchor xml:id="_portable_8h_1a0c28a12b313bc248be0cb7a37ed81bb7"/><section>
    <title>xPortGetFreeHeapSize()</title>
<indexterm><primary>xPortGetFreeHeapSize</primary><secondary>portable.h</secondary></indexterm>
<indexterm><primary>portable.h</primary><secondary>xPortGetFreeHeapSize</secondary></indexterm>
<para><computeroutput>size_t xPortGetFreeHeapSize (void )</computeroutput></para></section>
<anchor xml:id="_portable_8h_1ab222e4545b8ff12b62fd000fea6b34eb"/><section>
    <title>xPortGetMinimumEverFreeHeapSize()</title>
<indexterm><primary>xPortGetMinimumEverFreeHeapSize</primary><secondary>portable.h</secondary></indexterm>
<indexterm><primary>portable.h</primary><secondary>xPortGetMinimumEverFreeHeapSize</secondary></indexterm>
<para><computeroutput>size_t xPortGetMinimumEverFreeHeapSize (void )</computeroutput></para></section>
<anchor xml:id="_portable_8h_1ade5a8c6666e7413a0355cc252029c5c6"/><section>
    <title>xPortStartScheduler()</title>
<indexterm><primary>xPortStartScheduler</primary><secondary>portable.h</secondary></indexterm>
<indexterm><primary>portable.h</primary><secondary>xPortStartScheduler</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> xPortStartScheduler (void )</computeroutput></para><para>
Definition at line <link linkend="_port_8c_source_1l00350">350</link> of file <link linkend="_port_8c_source">port.c</link>.</para>
</section>
</section>
</section>
