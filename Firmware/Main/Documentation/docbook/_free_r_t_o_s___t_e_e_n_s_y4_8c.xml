<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__free_r_t_o_s___t_e_e_n_s_y4_8c" xml:lang="en-US">
<title>C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/FreeRTOS_TEENSY4.c File Reference</title>
<indexterm><primary>C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/FreeRTOS_TEENSY4.c</primary></indexterm>
<para>

<para>FreeRTOS for Teensy 4.0. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &quot;FreeRTOS_TEENSY4.h&quot;<?linebreak?>#include &lt;Arduino.h&gt;<?linebreak?></programlisting><simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_1a232ceee9e10a97b8ec8f14503861e699">CAL_FACTOR</link>&#160;&#160;&#160;(<link linkend="__free_r_t_o_s_config__default_8h_1a43bafb28b29491ec7f871319b5a3b2f8">F_CPU</link>/7000)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>static void <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_1a4d5e82901421218561290929a1b12548">delayMS</link> (uint32_t millis)</para>
</listitem>
            <listitem><para>static void <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_1a5da8b1b72bfdb1d8a8f7b8581e4160c2">errorBlink</link> (int n)</para>
</listitem>
            <listitem><para>void <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_1aa8cad1e2decb59c70b8247133b61157c">assertBlink</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_1a73f6aa45470ada02a5d6f3a522d8f13c">vApplicationMallocFailedHook</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_1a201468129b483039afc5a619e2d31097">__attribute__</link> ((weak))</para>
</listitem>
            <listitem><para>void <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_1a306672a74bdd13ce210c05fca3385c59">vApplicationStackOverflowHook</link> (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> pxTask, char *pcTaskName)</para>
</listitem>
            <listitem><para>void <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_1a5b27d72b205084efd5c6b2f18838724b">hard_fault_isr</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_1a2af56a8bf3197b2f06cac4c0b84ffc3e">HardFault_Handler</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_1ae2d60774bb61a4f46e670ea245570f95">bus_fault_isr</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_1a12baaa0dec32c007fbc333df880025c9">BusFault_Handler</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_1af556591e06c5d6cad7fd16bdc3f2da1e">usage_fault_isr</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_1ac4b80575ac8f7fdb0c96faa95810d0e4">UsageFault_Handler</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_1ab042bd469054b754e2710fa560fd3ff7">vMainConfigureTimerForRunTimeStats</link> (void)</para>
</listitem>
            <listitem><para>unsigned long <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_1a128013062564ee200ba30d0369b9865c">ulMainGetRunTimeCounterValue</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>FreeRTOS for Teensy 4.0. </para>
<para>
Definition in file <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source">FreeRTOS_TEENSY4.c</link>.</para>
</section>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="__free_r_t_o_s___t_e_e_n_s_y4_8c_1a232ceee9e10a97b8ec8f14503861e699"/><section>
    <title>CAL_FACTOR</title>
<indexterm><primary>CAL_FACTOR</primary><secondary>FreeRTOS_TEENSY4.c</secondary></indexterm>
<indexterm><primary>FreeRTOS_TEENSY4.c</primary><secondary>CAL_FACTOR</secondary></indexterm>
<para><computeroutput>#define CAL_FACTOR&#160;&#160;&#160;(<link linkend="__free_r_t_o_s_config__default_8h_1a43bafb28b29491ec7f871319b5a3b2f8">F_CPU</link>/7000)</computeroutput></para>
<para>calibration factor for delayMS </para>
<para>
Definition at line <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source_1l00009">9</link> of file <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source">FreeRTOS_TEENSY4.c</link>.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="__free_r_t_o_s___t_e_e_n_s_y4_8c_1a201468129b483039afc5a619e2d31097"/><section>
    <title>__attribute__()</title>
<indexterm><primary>__attribute__</primary><secondary>FreeRTOS_TEENSY4.c</secondary></indexterm>
<indexterm><primary>FreeRTOS_TEENSY4.c</primary><secondary>__attribute__</secondary></indexterm>
<para><computeroutput>void __attribute__ ((weak) )</computeroutput></para>
<para>vApplicationIdleHook() will only be called if configUSE_IDLE_HOOK is set to 1 in <link linkend="__free_r_t_o_s_config_8h">FreeRTOSConfig.h</link>. It will be called on each iteration of the idle task. It is essential that code added to this hook function never attempts to block in any way (for example, call <link linkend="_queue_8c_1ad0a166f3b1219a5e37e31f8090d4800d">xQueueReceive()</link> with a block time specified, or call <link linkend="_task_8h_1aa154068cecd7f31446a7a84af44ab1a3">vTaskDelay()</link>). If the application makes use of the <link linkend="_task_8h_1a27ff4ebce26565bef136bda84201ff80">vTaskDelete()</link> API function (as this demo application does) then it is also important that vApplicationIdleHook() is permitted to return to its calling function, because it is the responsibility of the idle task to clean up memory allocated by the kernel to any task that has since been deleted.</para>

<para>This function will be called by each tick interrupt if configUSE_TICK_HOOK is set to 1 in <link linkend="__free_r_t_o_s_config_8h">FreeRTOSConfig.h</link>. User code can be added here, but the tick hook is called from an interrupt context, so code must not attempt to block, and only the interrupt safe FreeRTOS API functions can be used (those that end in FromISR()). </para>
<para>
Definition at line <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source_1l00074">74</link> of file <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source">FreeRTOS_TEENSY4.c</link>.</para>
</section>
<anchor xml:id="__free_r_t_o_s___t_e_e_n_s_y4_8c_1aa8cad1e2decb59c70b8247133b61157c"/><section>
    <title>assertBlink()</title>
<indexterm><primary>assertBlink</primary><secondary>FreeRTOS_TEENSY4.c</secondary></indexterm>
<indexterm><primary>FreeRTOS_TEENSY4.c</primary><secondary>assertBlink</secondary></indexterm>
<para><computeroutput>void assertBlink ( )</computeroutput></para>
<para>assertBlink Blink one short pulse every two seconds if configASSERT fails. </para>
<para>
Definition at line <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source_1l00043">43</link> of file <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source">FreeRTOS_TEENSY4.c</link>.</para>
</section>
<anchor xml:id="__free_r_t_o_s___t_e_e_n_s_y4_8c_1ae2d60774bb61a4f46e670ea245570f95"/><section>
    <title>bus_fault_isr()</title>
<indexterm><primary>bus_fault_isr</primary><secondary>FreeRTOS_TEENSY4.c</secondary></indexterm>
<indexterm><primary>FreeRTOS_TEENSY4.c</primary><secondary>bus_fault_isr</secondary></indexterm>
<para><computeroutput>void bus_fault_isr ( )</computeroutput></para>
<para>Bus fault - blink five short flashes every two seconds </para>
<para>
Definition at line <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source_1l00099">99</link> of file <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source">FreeRTOS_TEENSY4.c</link>.</para>
</section>
<anchor xml:id="__free_r_t_o_s___t_e_e_n_s_y4_8c_1a12baaa0dec32c007fbc333df880025c9"/><section>
    <title>BusFault_Handler()</title>
<indexterm><primary>BusFault_Handler</primary><secondary>FreeRTOS_TEENSY4.c</secondary></indexterm>
<indexterm><primary>FreeRTOS_TEENSY4.c</primary><secondary>BusFault_Handler</secondary></indexterm>
<para><computeroutput>void BusFault_Handler ( )</computeroutput></para>
<para>Bus fault - blink five short flashes every two seconds </para>
<para>
Definition at line <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source_1l00101">101</link> of file <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source">FreeRTOS_TEENSY4.c</link>.</para>
</section>
<anchor xml:id="__free_r_t_o_s___t_e_e_n_s_y4_8c_1a4d5e82901421218561290929a1b12548"/><section>
    <title>delayMS()</title>
<indexterm><primary>delayMS</primary><secondary>FreeRTOS_TEENSY4.c</secondary></indexterm>
<indexterm><primary>FreeRTOS_TEENSY4.c</primary><secondary>delayMS</secondary></indexterm>
<para><computeroutput>static void delayMS (uint32_t millis)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>delay between led error flashes 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>millis</entry><entry>
<para>milliseconds to delay </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source_1l00013">13</link> of file <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source">FreeRTOS_TEENSY4.c</link>.</para>
</section>
<anchor xml:id="__free_r_t_o_s___t_e_e_n_s_y4_8c_1a5da8b1b72bfdb1d8a8f7b8581e4160c2"/><section>
    <title>errorBlink()</title>
<indexterm><primary>errorBlink</primary><secondary>FreeRTOS_TEENSY4.c</secondary></indexterm>
<indexterm><primary>FreeRTOS_TEENSY4.c</primary><secondary>errorBlink</secondary></indexterm>
<para><computeroutput>static void errorBlink (int n)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Blink error pattern</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>n</entry><entry>
<para>number of short pulses </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source_1l00025">25</link> of file <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source">FreeRTOS_TEENSY4.c</link>.</para>
</section>
<anchor xml:id="__free_r_t_o_s___t_e_e_n_s_y4_8c_1a5b27d72b205084efd5c6b2f18838724b"/><section>
    <title>hard_fault_isr()</title>
<indexterm><primary>hard_fault_isr</primary><secondary>FreeRTOS_TEENSY4.c</secondary></indexterm>
<indexterm><primary>FreeRTOS_TEENSY4.c</primary><secondary>hard_fault_isr</secondary></indexterm>
<para><computeroutput>void hard_fault_isr ( )</computeroutput></para>
<para>Hard fault - blink four short flash every two seconds </para>
<para>
Definition at line <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source_1l00094">94</link> of file <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source">FreeRTOS_TEENSY4.c</link>.</para>
</section>
<anchor xml:id="__free_r_t_o_s___t_e_e_n_s_y4_8c_1a2af56a8bf3197b2f06cac4c0b84ffc3e"/><section>
    <title>HardFault_Handler()</title>
<indexterm><primary>HardFault_Handler</primary><secondary>FreeRTOS_TEENSY4.c</secondary></indexterm>
<indexterm><primary>FreeRTOS_TEENSY4.c</primary><secondary>HardFault_Handler</secondary></indexterm>
<para><computeroutput>void HardFault_Handler ( )</computeroutput></para>
<para>Hard fault - blink four short flash every two seconds </para>
<para>
Definition at line <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source_1l00096">96</link> of file <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source">FreeRTOS_TEENSY4.c</link>.</para>
</section>
<anchor xml:id="__free_r_t_o_s___t_e_e_n_s_y4_8c_1a128013062564ee200ba30d0369b9865c"/><section>
    <title>ulMainGetRunTimeCounterValue()</title>
<indexterm><primary>ulMainGetRunTimeCounterValue</primary><secondary>FreeRTOS_TEENSY4.c</secondary></indexterm>
<indexterm><primary>FreeRTOS_TEENSY4.c</primary><secondary>ulMainGetRunTimeCounterValue</secondary></indexterm>
<para><computeroutput>unsigned long ulMainGetRunTimeCounterValue ( )</computeroutput></para>
<para>Dummy function <formalpara><title>Returns</title>

<para>zero </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source_1l00122">122</link> of file <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source">FreeRTOS_TEENSY4.c</link>.</para>
</section>
<anchor xml:id="__free_r_t_o_s___t_e_e_n_s_y4_8c_1af556591e06c5d6cad7fd16bdc3f2da1e"/><section>
    <title>usage_fault_isr()</title>
<indexterm><primary>usage_fault_isr</primary><secondary>FreeRTOS_TEENSY4.c</secondary></indexterm>
<indexterm><primary>FreeRTOS_TEENSY4.c</primary><secondary>usage_fault_isr</secondary></indexterm>
<para><computeroutput>void usage_fault_isr ( )</computeroutput></para>
<para>Usage fault - blink six short flashes every two seconds </para>
<para>
Definition at line <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source_1l00104">104</link> of file <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source">FreeRTOS_TEENSY4.c</link>.</para>
</section>
<anchor xml:id="__free_r_t_o_s___t_e_e_n_s_y4_8c_1ac4b80575ac8f7fdb0c96faa95810d0e4"/><section>
    <title>UsageFault_Handler()</title>
<indexterm><primary>UsageFault_Handler</primary><secondary>FreeRTOS_TEENSY4.c</secondary></indexterm>
<indexterm><primary>FreeRTOS_TEENSY4.c</primary><secondary>UsageFault_Handler</secondary></indexterm>
<para><computeroutput>void UsageFault_Handler ( )</computeroutput></para>
<para>Usage fault - blink six short flashes every two seconds </para>
<para>
Definition at line <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source_1l00106">106</link> of file <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source">FreeRTOS_TEENSY4.c</link>.</para>
</section>
<anchor xml:id="__free_r_t_o_s___t_e_e_n_s_y4_8c_1a73f6aa45470ada02a5d6f3a522d8f13c"/><section>
    <title>vApplicationMallocFailedHook()</title>
<indexterm><primary>vApplicationMallocFailedHook</primary><secondary>FreeRTOS_TEENSY4.c</secondary></indexterm>
<indexterm><primary>FreeRTOS_TEENSY4.c</primary><secondary>vApplicationMallocFailedHook</secondary></indexterm>
<para><computeroutput>void vApplicationMallocFailedHook ( )</computeroutput></para>
<para><link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_1a73f6aa45470ada02a5d6f3a522d8f13c">vApplicationMallocFailedHook()</link> Blink two short pulses if malloc fails.</para>

<para>will only be called if configUSE_MALLOC_FAILED_HOOK is set to 1 in <link linkend="__free_r_t_o_s_config_8h">FreeRTOSConfig.h</link>. It is a hook function that will get called if a call to <link linkend="_heap__3_8c_1ac56bcb7515f081a5b3df83935499fa4a">pvPortMalloc()</link> fails. <link linkend="_heap__3_8c_1ac56bcb7515f081a5b3df83935499fa4a">pvPortMalloc()</link> is called internally by the kernel whenever a task, queue, timer or semaphore is created. It is also called by various parts of the demo application. If heap_1.c or heap_2.c are used, then the size of the heap available to <link linkend="_heap__3_8c_1ac56bcb7515f081a5b3df83935499fa4a">pvPortMalloc()</link> is defined by configTOTAL_HEAP_SIZE in <link linkend="__free_r_t_o_s_config_8h">FreeRTOSConfig.h</link>, and the <link linkend="_portable_8h_1a0c28a12b313bc248be0cb7a37ed81bb7">xPortGetFreeHeapSize()</link> API function can be used to query the size of free heap space that remains (although it does not provide information on how the remaining heap might be fragmented). </para>
<para>
Definition at line <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source_1l00060">60</link> of file <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source">FreeRTOS_TEENSY4.c</link>.</para>
</section>
<anchor xml:id="__free_r_t_o_s___t_e_e_n_s_y4_8c_1a306672a74bdd13ce210c05fca3385c59"/><section>
    <title>vApplicationStackOverflowHook()</title>
<indexterm><primary>vApplicationStackOverflowHook</primary><secondary>FreeRTOS_TEENSY4.c</secondary></indexterm>
<indexterm><primary>FreeRTOS_TEENSY4.c</primary><secondary>vApplicationStackOverflowHook</secondary></indexterm>
<para><computeroutput>void vApplicationStackOverflowHook (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> pxTask, char * pcTaskName)</computeroutput></para>
<para>Blink three short pulses if stack overflow is detected. Run time stack overflow checking is performed if configCHECK_FOR_STACK_OVERFLOW is defined to 1 or 2. This hook function is called if a stack overflow is detected. 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>pxTask</entry><entry>
<para>Task handle </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>pcTaskName</entry><entry>
<para>Task name </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source_1l00086">86</link> of file <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source">FreeRTOS_TEENSY4.c</link>.</para>
</section>
<anchor xml:id="__free_r_t_o_s___t_e_e_n_s_y4_8c_1ab042bd469054b754e2710fa560fd3ff7"/><section>
    <title>vMainConfigureTimerForRunTimeStats()</title>
<indexterm><primary>vMainConfigureTimerForRunTimeStats</primary><secondary>FreeRTOS_TEENSY4.c</secondary></indexterm>
<indexterm><primary>FreeRTOS_TEENSY4.c</primary><secondary>vMainConfigureTimerForRunTimeStats</secondary></indexterm>
<para><computeroutput>void vMainConfigureTimerForRunTimeStats (void )</computeroutput></para>
<para>Dummy time stats gathering functions need to be defined to keep the linker happy. Could edit <link linkend="__free_r_t_o_s_config_8h">FreeRTOSConfig.h</link> to remove these. </para>
<para>
Definition at line <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source_1l00118">118</link> of file <link linkend="__free_r_t_o_s___t_e_e_n_s_y4_8c_source">FreeRTOS_TEENSY4.c</link>.</para>
</section>
</section>
</section>
