<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__data_logging_8h" xml:lang="en-US">
<title>DataLogging.h File Reference</title>
<indexterm><primary>DataLogging.h</primary></indexterm>
<para>

<para>The <link linkend="__data_logging_8h">DataLogging.h</link> config file for CAN bus for the bike&apos;s firmware. This initializes all variables that are passed along to all other files as pointers. Then it runs the setup methods for all those files and then it sets up RTOS to run all the different files as individual tasks. These tasks are: datalogging, display, precharge, CAN, idle. These tasks will be further described in the documentation for their individual files. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &quot;SdFat.h&quot;
</programlisting><simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_c_s_v_writer">CSVWriter</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_data_logging_task_data">DataLoggingTaskData</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="__data_logging_8h_1af4a74cae27161ee93cd63ef70a0082e2">DATALOGGING_TASK_STACK_SIZE</link>   <link linkend="__free_r_t_o_s_config__default_8h_1a6c534a6cf8a00528fe0be42083484f9a">configMINIMAL_STACK_SIZE</link> + 32368</para>
</listitem>
            <listitem><para>#define <link linkend="__data_logging_8h_1af00c3fd81cebf8f7797f97204750ba99">MOTOR_TEMPERATURE_LOG</link>   &quot;motor_temperature_log.csv&quot;</para>
</listitem>
            <listitem><para>#define <link linkend="__data_logging_8h_1ab9b2c0322cedfd8d3cd1c9dbb513b10f">MOTOR_CONTROLLER_TEMPERATURE_LOG</link>   &quot;motor_controller_temperature_log.csv&quot;</para>
</listitem>
            <listitem><para>#define <link linkend="__data_logging_8h_1ad345eeebe4d36d151827e130e6082a1b">BMS_VOLTAGE_LOG</link>   &quot;bms_voltage_log.csv&quot;</para>
</listitem>
            <listitem><para>#define <link linkend="__data_logging_8h_1a34f856128abdd56434d31edd1f4ce549">MOTOR_CONTROLLER_VOLTAGE_LOG</link>   &quot;motor_controller_voltage_log.csv&quot;</para>
</listitem>
            <listitem><para>#define <link linkend="__data_logging_8h_1aa98fafae382d16d375eeef356bf55917">MOTOR_CURRENT_LOG</link>   &quot;current_log.csv&quot;</para>
</listitem>
            <listitem><para>#define <link linkend="__data_logging_8h_1a2665461802b5e24f2d0f9d8f1ca8351d">THERMISTOR_LOG</link>   &quot;thermistor_log.csv&quot;</para>
</listitem>
            <listitem><para>#define <link linkend="__data_logging_8h_1af7b33dd28efa07f171323d23a5f714d2">RPM_LOG</link>   &quot;rpm_log.csv&quot;</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="__data_logging_8h_1ac2ad7f431e3446fddcd9b6b9f93c4c14">data_type</link> { <link linkend="__data_logging_8h_1ac2ad7f431e3446fddcd9b6b9f93c4c14afd5a5f51ce25953f3db2c7e93eb7864a">INT</link>
, <link linkend="__data_logging_8h_1ac2ad7f431e3446fddcd9b6b9f93c4c14a9cf4a0866224b0bb4a7a895da27c9c4c">FLOAT</link>
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="__data_logging_8h_1a24f7ab7e53619e5770ad9acc25b9b819">dataLoggingTask</link> (void *dlData)</para>
</listitem>
            <listitem><para>bool <link linkend="__data_logging_8h_1a0d2a3a213399ec010b89dede4ba4de77">startSD</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="__data_logging_8h_1ac579da51eca1f113da5d315ab23b8b1e">openFile</link> (<link linkend="_struct_c_s_v_writer">CSVWriter</link> *writer)</para>
</listitem>
            <listitem><para>void <link linkend="__data_logging_8h_1a10c88f7cc0c34cd0a584f78997f13827">closeFile</link> (<link linkend="_struct_c_s_v_writer">CSVWriter</link> *writer)</para>
</listitem>
            <listitem><para>void <link linkend="__data_logging_8h_1a678245415389e1bbd75b088a980b008a">saveFile</link> (<link linkend="_struct_c_s_v_writer">CSVWriter</link> *writer)</para>
</listitem>
            <listitem><para>void <link linkend="__data_logging_8h_1a52d8bf385131a3543793f22ee432100a">saveFiles</link> (<link linkend="_struct_c_s_v_writer">CSVWriter</link> **writers, int writersLen)</para>
</listitem>
            <listitem><para>void <link linkend="__data_logging_8h_1a8777416fb5b01666e7b28ada9f3b552a">printFile</link> (<link linkend="_struct_c_s_v_writer">CSVWriter</link> *writer)</para>
</listitem>
            <listitem><para>void <link linkend="__data_logging_8h_1aa394fd0868d0e097f701cb3f21d9c451">addRecord</link> (<link linkend="_struct_c_s_v_writer">CSVWriter</link> *writer, int sTime)</para>
</listitem>
            <listitem><para>void <link linkend="__data_logging_8h_1ab91616c118b701c2afd9136393d1f19b">startRecording</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>const uint8_t <link linkend="__data_logging_8h_1a587c91dc29e14d8227957fbe22af6f45">SD_CS_PIN</link> = SS</para>
</listitem>
            <listitem><para>const size_t <link linkend="__data_logging_8h_1a888ed23a146630d5e36a08aed19ff638">BUF_DIM</link> = 4096</para>
</listitem>
            <listitem><para>SdFat <link linkend="__data_logging_8h_1a15e6b7e1f0fb2d1e0fe1654721bb5302">sd</link></para>
</listitem>
            <listitem><para>unsigned long <link linkend="__data_logging_8h_1a90b197693eeaad244ff381d5645b1c16">epochTime</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>The <link linkend="__data_logging_8h">DataLogging.h</link> config file for CAN bus for the bike&apos;s firmware. This initializes all variables that are passed along to all other files as pointers. Then it runs the setup methods for all those files and then it sets up RTOS to run all the different files as individual tasks. These tasks are: datalogging, display, precharge, CAN, idle. These tasks will be further described in the documentation for their individual files. </para>

<para><formalpara><title>Author</title>

<para>Washington Superbike </para>
</formalpara>
<formalpara><title>Date</title>

<para>1-March-2023</para>
</formalpara>
<note><title>Note</title>

<para>up all members to be able to use it without any trouble.</para>
</note>
<para><link linkend="_todo_1_todo000003">Todo</link> 
<para>Goal 1. 
<literallayout>&#160;&#xa;</literallayout>
 
<literallayout>&#160;&#xa;</literallayout>
 Goal 2. 
<literallayout>&#160;&#xa;</literallayout>
 
<literallayout>&#160;&#xa;</literallayout>
 Goal 3. 
<literallayout>&#160;&#xa;</literallayout>
 
<literallayout>&#160;&#xa;</literallayout>
 Final Goal. </para>
</para></para>
<para>
Definition in file <link linkend="__data_logging_8h_source">DataLogging.h</link>.</para>
</section>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="__data_logging_8h_1ad345eeebe4d36d151827e130e6082a1b"/><section>
    <title>BMS_VOLTAGE_LOG</title>
<indexterm><primary>BMS_VOLTAGE_LOG</primary><secondary>DataLogging.h</secondary></indexterm>
<indexterm><primary>DataLogging.h</primary><secondary>BMS_VOLTAGE_LOG</secondary></indexterm>
<para><computeroutput>#define BMS_VOLTAGE_LOG   &quot;bms_voltage_log.csv&quot;</computeroutput></para><para>
Definition at line <link linkend="__data_logging_8h_source_1l00038">38</link> of file <link linkend="__data_logging_8h_source">DataLogging.h</link>.</para>
</section>
<anchor xml:id="__data_logging_8h_1af4a74cae27161ee93cd63ef70a0082e2"/><section>
    <title>DATALOGGING_TASK_STACK_SIZE</title>
<indexterm><primary>DATALOGGING_TASK_STACK_SIZE</primary><secondary>DataLogging.h</secondary></indexterm>
<indexterm><primary>DataLogging.h</primary><secondary>DATALOGGING_TASK_STACK_SIZE</secondary></indexterm>
<para><computeroutput>#define DATALOGGING_TASK_STACK_SIZE   <link linkend="__free_r_t_o_s_config__default_8h_1a6c534a6cf8a00528fe0be42083484f9a">configMINIMAL_STACK_SIZE</link> + 32368</computeroutput></para><para>
Definition at line <link linkend="__data_logging_8h_source_1l00033">33</link> of file <link linkend="__data_logging_8h_source">DataLogging.h</link>.</para>
</section>
<anchor xml:id="__data_logging_8h_1ab9b2c0322cedfd8d3cd1c9dbb513b10f"/><section>
    <title>MOTOR_CONTROLLER_TEMPERATURE_LOG</title>
<indexterm><primary>MOTOR_CONTROLLER_TEMPERATURE_LOG</primary><secondary>DataLogging.h</secondary></indexterm>
<indexterm><primary>DataLogging.h</primary><secondary>MOTOR_CONTROLLER_TEMPERATURE_LOG</secondary></indexterm>
<para><computeroutput>#define MOTOR_CONTROLLER_TEMPERATURE_LOG   &quot;motor_controller_temperature_log.csv&quot;</computeroutput></para><para>
Definition at line <link linkend="__data_logging_8h_source_1l00037">37</link> of file <link linkend="__data_logging_8h_source">DataLogging.h</link>.</para>
</section>
<anchor xml:id="__data_logging_8h_1a34f856128abdd56434d31edd1f4ce549"/><section>
    <title>MOTOR_CONTROLLER_VOLTAGE_LOG</title>
<indexterm><primary>MOTOR_CONTROLLER_VOLTAGE_LOG</primary><secondary>DataLogging.h</secondary></indexterm>
<indexterm><primary>DataLogging.h</primary><secondary>MOTOR_CONTROLLER_VOLTAGE_LOG</secondary></indexterm>
<para><computeroutput>#define MOTOR_CONTROLLER_VOLTAGE_LOG   &quot;motor_controller_voltage_log.csv&quot;</computeroutput></para><para>
Definition at line <link linkend="__data_logging_8h_source_1l00039">39</link> of file <link linkend="__data_logging_8h_source">DataLogging.h</link>.</para>
</section>
<anchor xml:id="__data_logging_8h_1aa98fafae382d16d375eeef356bf55917"/><section>
    <title>MOTOR_CURRENT_LOG</title>
<indexterm><primary>MOTOR_CURRENT_LOG</primary><secondary>DataLogging.h</secondary></indexterm>
<indexterm><primary>DataLogging.h</primary><secondary>MOTOR_CURRENT_LOG</secondary></indexterm>
<para><computeroutput>#define MOTOR_CURRENT_LOG   &quot;current_log.csv&quot;</computeroutput></para><para>
Definition at line <link linkend="__data_logging_8h_source_1l00040">40</link> of file <link linkend="__data_logging_8h_source">DataLogging.h</link>.</para>
</section>
<anchor xml:id="__data_logging_8h_1af00c3fd81cebf8f7797f97204750ba99"/><section>
    <title>MOTOR_TEMPERATURE_LOG</title>
<indexterm><primary>MOTOR_TEMPERATURE_LOG</primary><secondary>DataLogging.h</secondary></indexterm>
<indexterm><primary>DataLogging.h</primary><secondary>MOTOR_TEMPERATURE_LOG</secondary></indexterm>
<para><computeroutput>#define MOTOR_TEMPERATURE_LOG   &quot;motor_temperature_log.csv&quot;</computeroutput></para><para>
Definition at line <link linkend="__data_logging_8h_source_1l00036">36</link> of file <link linkend="__data_logging_8h_source">DataLogging.h</link>.</para>
</section>
<anchor xml:id="__data_logging_8h_1af7b33dd28efa07f171323d23a5f714d2"/><section>
    <title>RPM_LOG</title>
<indexterm><primary>RPM_LOG</primary><secondary>DataLogging.h</secondary></indexterm>
<indexterm><primary>DataLogging.h</primary><secondary>RPM_LOG</secondary></indexterm>
<para><computeroutput>#define RPM_LOG   &quot;rpm_log.csv&quot;</computeroutput></para><para>
Definition at line <link linkend="__data_logging_8h_source_1l00042">42</link> of file <link linkend="__data_logging_8h_source">DataLogging.h</link>.</para>
</section>
<anchor xml:id="__data_logging_8h_1a2665461802b5e24f2d0f9d8f1ca8351d"/><section>
    <title>THERMISTOR_LOG</title>
<indexterm><primary>THERMISTOR_LOG</primary><secondary>DataLogging.h</secondary></indexterm>
<indexterm><primary>DataLogging.h</primary><secondary>THERMISTOR_LOG</secondary></indexterm>
<para><computeroutput>#define THERMISTOR_LOG   &quot;thermistor_log.csv&quot;</computeroutput></para><para>
Definition at line <link linkend="__data_logging_8h_source_1l00041">41</link> of file <link linkend="__data_logging_8h_source">DataLogging.h</link>.</para>
</section>
</section>
<section>
<title>Enumeration Type Documentation</title>
<anchor xml:id="__data_logging_8h_1ac2ad7f431e3446fddcd9b6b9f93c4c14"/><section>
    <title>data_type</title>
<indexterm><primary>data_type</primary><secondary>DataLogging.h</secondary></indexterm>
<indexterm><primary>DataLogging.h</primary><secondary>data_type</secondary></indexterm>
<para><computeroutput>enum <link linkend="__data_logging_8h_1ac2ad7f431e3446fddcd9b6b9f93c4c14">data_type</link></computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>INT</primary><secondary>DataLogging.h</secondary></indexterm>
<indexterm><primary>DataLogging.h</primary><secondary>INT</secondary></indexterm>
<anchor xml:id="__data_logging_8h_1ac2ad7f431e3446fddcd9b6b9f93c4c14afd5a5f51ce25953f3db2c7e93eb7864a"/>INT</entry><entry></entry></row><row><entry><indexterm><primary>FLOAT</primary><secondary>DataLogging.h</secondary></indexterm>
<indexterm><primary>DataLogging.h</primary><secondary>FLOAT</secondary></indexterm>
<anchor xml:id="__data_logging_8h_1ac2ad7f431e3446fddcd9b6b9f93c4c14a9cf4a0866224b0bb4a7a895da27c9c4c"/>FLOAT</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line <link linkend="__data_logging_8h_source_1l00067">67</link> of file <link linkend="__data_logging_8h_source">DataLogging.h</link>.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="__data_logging_8h_1aa394fd0868d0e097f701cb3f21d9c451"/><section>
    <title>addRecord()</title>
<indexterm><primary>addRecord</primary><secondary>DataLogging.h</secondary></indexterm>
<indexterm><primary>DataLogging.h</primary><secondary>addRecord</secondary></indexterm>
<para><computeroutput>void addRecord (<link linkend="_struct_c_s_v_writer">CSVWriter</link> * writer, int sTime)</computeroutput></para><para>
Definition at line <link linkend="__data_logging_8ino_source_1l00095">95</link> of file <link linkend="__data_logging_8ino_source">DataLogging.ino</link>.</para>
</section>
<anchor xml:id="__data_logging_8h_1a10c88f7cc0c34cd0a584f78997f13827"/><section>
    <title>closeFile()</title>
<indexterm><primary>closeFile</primary><secondary>DataLogging.h</secondary></indexterm>
<indexterm><primary>DataLogging.h</primary><secondary>closeFile</secondary></indexterm>
<para><computeroutput>void closeFile (<link linkend="_struct_c_s_v_writer">CSVWriter</link> * writer)</computeroutput></para><para>
Definition at line <link linkend="__data_logging_8ino_source_1l00071">71</link> of file <link linkend="__data_logging_8ino_source">DataLogging.ino</link>.</para>
</section>
<anchor xml:id="__data_logging_8h_1a24f7ab7e53619e5770ad9acc25b9b819"/><section>
    <title>dataLoggingTask()</title>
<indexterm><primary>dataLoggingTask</primary><secondary>DataLogging.h</secondary></indexterm>
<indexterm><primary>DataLogging.h</primary><secondary>dataLoggingTask</secondary></indexterm>
<para><computeroutput>void dataLoggingTask (void * dlData)</computeroutput></para><para>
Definition at line <link linkend="__data_logging_8ino_source_1l00033">33</link> of file <link linkend="__data_logging_8ino_source">DataLogging.ino</link>.</para>
</section>
<anchor xml:id="__data_logging_8h_1ac579da51eca1f113da5d315ab23b8b1e"/><section>
    <title>openFile()</title>
<indexterm><primary>openFile</primary><secondary>DataLogging.h</secondary></indexterm>
<indexterm><primary>DataLogging.h</primary><secondary>openFile</secondary></indexterm>
<para><computeroutput>bool openFile (<link linkend="_struct_c_s_v_writer">CSVWriter</link> * writer)</computeroutput></para><para>
Definition at line <link linkend="__data_logging_8ino_source_1l00065">65</link> of file <link linkend="__data_logging_8ino_source">DataLogging.ino</link>.</para>
</section>
<anchor xml:id="__data_logging_8h_1a8777416fb5b01666e7b28ada9f3b552a"/><section>
    <title>printFile()</title>
<indexterm><primary>printFile</primary><secondary>DataLogging.h</secondary></indexterm>
<indexterm><primary>DataLogging.h</primary><secondary>printFile</secondary></indexterm>
<para><computeroutput>void printFile (<link linkend="_struct_c_s_v_writer">CSVWriter</link> * writer)</computeroutput></para><para>
Definition at line <link linkend="__data_logging_8ino_source_1l00085">85</link> of file <link linkend="__data_logging_8ino_source">DataLogging.ino</link>.</para>
</section>
<anchor xml:id="__data_logging_8h_1a678245415389e1bbd75b088a980b008a"/><section>
    <title>saveFile()</title>
<indexterm><primary>saveFile</primary><secondary>DataLogging.h</secondary></indexterm>
<indexterm><primary>DataLogging.h</primary><secondary>saveFile</secondary></indexterm>
<para><computeroutput>void saveFile (<link linkend="_struct_c_s_v_writer">CSVWriter</link> * writer)</computeroutput></para><para>
Definition at line <link linkend="__data_logging_8ino_source_1l00075">75</link> of file <link linkend="__data_logging_8ino_source">DataLogging.ino</link>.</para>
</section>
<anchor xml:id="__data_logging_8h_1a52d8bf385131a3543793f22ee432100a"/><section>
    <title>saveFiles()</title>
<indexterm><primary>saveFiles</primary><secondary>DataLogging.h</secondary></indexterm>
<indexterm><primary>DataLogging.h</primary><secondary>saveFiles</secondary></indexterm>
<para><computeroutput>void saveFiles (<link linkend="_struct_c_s_v_writer">CSVWriter</link> ** writers, int writersLen)</computeroutput></para><para>
Definition at line <link linkend="__data_logging_8ino_source_1l00079">79</link> of file <link linkend="__data_logging_8ino_source">DataLogging.ino</link>.</para>
</section>
<anchor xml:id="__data_logging_8h_1ab91616c118b701c2afd9136393d1f19b"/><section>
    <title>startRecording()</title>
<indexterm><primary>startRecording</primary><secondary>DataLogging.h</secondary></indexterm>
<indexterm><primary>DataLogging.h</primary><secondary>startRecording</secondary></indexterm>
<para><computeroutput>void startRecording ( )</computeroutput></para><para>
Definition at line <link linkend="__data_logging_8ino_source_1l00136">136</link> of file <link linkend="__data_logging_8ino_source">DataLogging.ino</link>.</para>
</section>
<anchor xml:id="__data_logging_8h_1a0d2a3a213399ec010b89dede4ba4de77"/><section>
    <title>startSD()</title>
<indexterm><primary>startSD</primary><secondary>DataLogging.h</secondary></indexterm>
<indexterm><primary>DataLogging.h</primary><secondary>startSD</secondary></indexterm>
<para><computeroutput>bool startSD ( )</computeroutput></para><para>
Definition at line <link linkend="__data_logging_8ino_source_1l00059">59</link> of file <link linkend="__data_logging_8ino_source">DataLogging.ino</link>.</para>
</section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="__data_logging_8h_1a888ed23a146630d5e36a08aed19ff638"/><section>
    <title>BUF_DIM</title>
<indexterm><primary>BUF_DIM</primary><secondary>DataLogging.h</secondary></indexterm>
<indexterm><primary>DataLogging.h</primary><secondary>BUF_DIM</secondary></indexterm>
<para><computeroutput>const size_t BUF_DIM = 4096</computeroutput></para><para>
Definition at line <link linkend="__data_logging_8h_source_1l00054">54</link> of file <link linkend="__data_logging_8h_source">DataLogging.h</link>.</para>
</section>
<anchor xml:id="__data_logging_8h_1a90b197693eeaad244ff381d5645b1c16"/><section>
    <title>epochTime</title>
<indexterm><primary>epochTime</primary><secondary>DataLogging.h</secondary></indexterm>
<indexterm><primary>DataLogging.h</primary><secondary>epochTime</secondary></indexterm>
<para><computeroutput>unsigned long epochTime</computeroutput></para><para>
Definition at line <link linkend="__data_logging_8h_source_1l00059">59</link> of file <link linkend="__data_logging_8h_source">DataLogging.h</link>.</para>
</section>
<anchor xml:id="__data_logging_8h_1a15e6b7e1f0fb2d1e0fe1654721bb5302"/><section>
    <title>sd</title>
<indexterm><primary>sd</primary><secondary>DataLogging.h</secondary></indexterm>
<indexterm><primary>DataLogging.h</primary><secondary>sd</secondary></indexterm>
<para><computeroutput>SdFat sd</computeroutput></para><para>
Definition at line <link linkend="__data_logging_8h_source_1l00057">57</link> of file <link linkend="__data_logging_8h_source">DataLogging.h</link>.</para>
</section>
<anchor xml:id="__data_logging_8h_1a587c91dc29e14d8227957fbe22af6f45"/><section>
    <title>SD_CS_PIN</title>
<indexterm><primary>SD_CS_PIN</primary><secondary>DataLogging.h</secondary></indexterm>
<indexterm><primary>DataLogging.h</primary><secondary>SD_CS_PIN</secondary></indexterm>
<para><computeroutput>const uint8_t SD_CS_PIN = SS</computeroutput></para><para>
Definition at line <link linkend="__data_logging_8h_source_1l00048">48</link> of file <link linkend="__data_logging_8h_source">DataLogging.h</link>.</para>
</section>
</section>
</section>
