<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_queue_8h_source" xml:lang="en-US">
<title>queue.h</title>
<indexterm><primary>C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/queue.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_queue_8h_source_1l00001"/>00001 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8h_source_1l00002"/>00002 <emphasis role="comment">&#32;*&#32;FreeRTOS&#32;Kernel&#32;V10.2.0</emphasis>
<anchor xml:id="_queue_8h_source_1l00003"/>00003 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;2019&#32;Amazon.com,&#32;Inc.&#32;or&#32;its&#32;affiliates.&#32;&#32;All&#32;Rights&#32;Reserved.</emphasis>
<anchor xml:id="_queue_8h_source_1l00004"/>00004 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l00005"/>00005 <emphasis role="comment">&#32;*&#32;Permission&#32;is&#32;hereby&#32;granted,&#32;free&#32;of&#32;charge,&#32;to&#32;any&#32;person&#32;obtaining&#32;a&#32;copy&#32;of</emphasis>
<anchor xml:id="_queue_8h_source_1l00006"/>00006 <emphasis role="comment">&#32;*&#32;this&#32;software&#32;and&#32;associated&#32;documentation&#32;files&#32;(the&#32;&quot;Software&quot;),&#32;to&#32;deal&#32;in</emphasis>
<anchor xml:id="_queue_8h_source_1l00007"/>00007 <emphasis role="comment">&#32;*&#32;the&#32;Software&#32;without&#32;restriction,&#32;including&#32;without&#32;limitation&#32;the&#32;rights&#32;to</emphasis>
<anchor xml:id="_queue_8h_source_1l00008"/>00008 <emphasis role="comment">&#32;*&#32;use,&#32;copy,&#32;modify,&#32;merge,&#32;publish,&#32;distribute,&#32;sublicense,&#32;and/or&#32;sell&#32;copies&#32;of</emphasis>
<anchor xml:id="_queue_8h_source_1l00009"/>00009 <emphasis role="comment">&#32;*&#32;the&#32;Software,&#32;and&#32;to&#32;permit&#32;persons&#32;to&#32;whom&#32;the&#32;Software&#32;is&#32;furnished&#32;to&#32;do&#32;so,</emphasis>
<anchor xml:id="_queue_8h_source_1l00010"/>00010 <emphasis role="comment">&#32;*&#32;subject&#32;to&#32;the&#32;following&#32;conditions:</emphasis>
<anchor xml:id="_queue_8h_source_1l00011"/>00011 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l00012"/>00012 <emphasis role="comment">&#32;*&#32;The&#32;above&#32;copyright&#32;notice&#32;and&#32;this&#32;permission&#32;notice&#32;shall&#32;be&#32;included&#32;in&#32;all</emphasis>
<anchor xml:id="_queue_8h_source_1l00013"/>00013 <emphasis role="comment">&#32;*&#32;copies&#32;or&#32;substantial&#32;portions&#32;of&#32;the&#32;Software.</emphasis>
<anchor xml:id="_queue_8h_source_1l00014"/>00014 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l00015"/>00015 <emphasis role="comment">&#32;*&#32;THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;&quot;AS&#32;IS&quot;,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
<anchor xml:id="_queue_8h_source_1l00016"/>00016 <emphasis role="comment">&#32;*&#32;IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,&#32;FITNESS</emphasis>
<anchor xml:id="_queue_8h_source_1l00017"/>00017 <emphasis role="comment">&#32;*&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL&#32;THE&#32;AUTHORS&#32;OR</emphasis>
<anchor xml:id="_queue_8h_source_1l00018"/>00018 <emphasis role="comment">&#32;*&#32;COPYRIGHT&#32;HOLDERS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER&#32;LIABILITY,&#32;WHETHER</emphasis>
<anchor xml:id="_queue_8h_source_1l00019"/>00019 <emphasis role="comment">&#32;*&#32;IN&#32;AN&#32;ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING&#32;FROM,&#32;OUT&#32;OF&#32;OR&#32;IN</emphasis>
<anchor xml:id="_queue_8h_source_1l00020"/>00020 <emphasis role="comment">&#32;*&#32;CONNECTION&#32;WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS&#32;IN&#32;THE&#32;SOFTWARE.</emphasis>
<anchor xml:id="_queue_8h_source_1l00021"/>00021 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l00022"/>00022 <emphasis role="comment">&#32;*&#32;http://www.FreeRTOS.org</emphasis>
<anchor xml:id="_queue_8h_source_1l00023"/>00023 <emphasis role="comment">&#32;*&#32;http://aws.amazon.com/freertos</emphasis>
<anchor xml:id="_queue_8h_source_1l00024"/>00024 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l00025"/>00025 <emphasis role="comment">&#32;*&#32;1&#32;tab&#32;==&#32;4&#32;spaces!</emphasis>
<anchor xml:id="_queue_8h_source_1l00026"/>00026 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8h_source_1l00027"/>00027 
<anchor xml:id="_queue_8h_source_1l00028"/>00028 
<anchor xml:id="_queue_8h_source_1l00029"/>00029 <emphasis role="preprocessor">#ifndef&#32;QUEUE_H</emphasis>
<anchor xml:id="_queue_8h_source_1l00030"/>00030 <emphasis role="preprocessor">#define&#32;QUEUE_H</emphasis>
<anchor xml:id="_queue_8h_source_1l00031"/>00031 
<anchor xml:id="_queue_8h_source_1l00032"/>00032 <emphasis role="preprocessor">#ifndef&#32;INC_FREERTOS_H</emphasis>
<anchor xml:id="_queue_8h_source_1l00033"/>00033 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#error&#32;&quot;include&#32;FreeRTOS.h&quot;</emphasis>&#32;must&#32;appear&#32;in&#32;source&#32;files&#32;before&#32;&quot;include&#32;queue.h&quot;
<anchor xml:id="_queue_8h_source_1l00034"/>00034 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_queue_8h_source_1l00035"/>00035 
<anchor xml:id="_queue_8h_source_1l00036"/>00036 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
<anchor xml:id="_queue_8h_source_1l00037"/>00037 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>&#32;{
<anchor xml:id="_queue_8h_source_1l00038"/>00038 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_queue_8h_source_1l00039"/>00039 
<anchor xml:id="_queue_8h_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_task_8h">task.h</link>&quot;</emphasis>
<anchor xml:id="_queue_8h_source_1l00041"/>00041 
<anchor xml:id="_queue_8h_source_1l00047"/>00047 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_queue_definition">QueueDefinition</link>;&#32;<emphasis role="comment">/*&#32;Using&#32;old&#32;naming&#32;convention&#32;so&#32;as&#32;not&#32;to&#32;break&#32;kernel&#32;aware&#32;debuggers.&#32;*/</emphasis>
<anchor xml:id="_queue_8h_source_1l00048"/><link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">00048</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_queue_definition">QueueDefinition</link>&#32;*&#32;<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link>;
<anchor xml:id="_queue_8h_source_1l00049"/>00049 
<anchor xml:id="_queue_8h_source_1l00055"/><link linkend="_queue_8h_1a1ae056fb02b2467993003b85111dde16">00055</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_queue_definition">QueueDefinition</link>&#32;*&#32;<link linkend="_queue_8h_1a1ae056fb02b2467993003b85111dde16">QueueSetHandle_t</link>;
<anchor xml:id="_queue_8h_source_1l00056"/>00056 
<anchor xml:id="_queue_8h_source_1l00062"/><link linkend="_queue_8h_1afac7ec7649e5c57381315eb011c36ef5">00062</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_queue_definition">QueueDefinition</link>&#32;*&#32;<link linkend="_queue_8h_1afac7ec7649e5c57381315eb011c36ef5">QueueSetMemberHandle_t</link>;
<anchor xml:id="_queue_8h_source_1l00063"/>00063 
<anchor xml:id="_queue_8h_source_1l00064"/>00064 <emphasis role="comment">/*&#32;For&#32;internal&#32;use&#32;only.&#32;*/</emphasis>
<anchor xml:id="_queue_8h_source_1l00065"/><link linkend="_queue_8h_1a4d78fa863fbeb90425a2dda08fae8b12">00065</link> <emphasis role="preprocessor">#define&#32;queueSEND_TO_BACK&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(&#32;BaseType_t&#32;)&#32;0&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l00066"/><link linkend="_queue_8h_1a6bae395a00f1a4455f0e7fe3c9e76c14">00066</link> <emphasis role="preprocessor">#define&#32;queueSEND_TO_FRONT&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(&#32;BaseType_t&#32;)&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l00067"/><link linkend="_queue_8h_1a5bb1c4a46d4b08b6d35cf586983476ef">00067</link> <emphasis role="preprocessor">#define&#32;queueOVERWRITE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(&#32;BaseType_t&#32;)&#32;2&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l00068"/>00068 
<anchor xml:id="_queue_8h_source_1l00069"/>00069 <emphasis role="comment">/*&#32;For&#32;internal&#32;use&#32;only.&#32;&#32;These&#32;definitions&#32;*must*&#32;match&#32;those&#32;in&#32;queue.c.&#32;*/</emphasis>
<anchor xml:id="_queue_8h_source_1l00070"/><link linkend="_queue_8h_1a3f926bea6ffa4e2f1af900431d0d90a5">00070</link> <emphasis role="preprocessor">#define&#32;queueQUEUE_TYPE_BASE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(&#32;uint8_t&#32;)&#32;0U&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l00071"/><link linkend="_queue_8h_1a9b8e1b1d5d9952bd0121ae71cf3aba8d">00071</link> <emphasis role="preprocessor">#define&#32;queueQUEUE_TYPE_SET&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(&#32;uint8_t&#32;)&#32;0U&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l00072"/><link linkend="_queue_8h_1ae9c10f504e758fb69271024dc8d8a8c9">00072</link> <emphasis role="preprocessor">#define&#32;queueQUEUE_TYPE_MUTEX&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(&#32;uint8_t&#32;)&#32;1U&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l00073"/><link linkend="_queue_8h_1abccf1c95aa0942f8df163d414010542b">00073</link> <emphasis role="preprocessor">#define&#32;queueQUEUE_TYPE_COUNTING_SEMAPHORE&#32;&#32;(&#32;(&#32;uint8_t&#32;)&#32;2U&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l00074"/><link linkend="_queue_8h_1a8af9c6a83fce59c386da4f22248b56ae">00074</link> <emphasis role="preprocessor">#define&#32;queueQUEUE_TYPE_BINARY_SEMAPHORE&#32;&#32;&#32;&#32;(&#32;(&#32;uint8_t&#32;)&#32;3U&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l00075"/><link linkend="_queue_8h_1a6f68aa65394f83b57e34061d9ff44b47">00075</link> <emphasis role="preprocessor">#define&#32;queueQUEUE_TYPE_RECURSIVE_MUTEX&#32;&#32;&#32;&#32;&#32;(&#32;(&#32;uint8_t&#32;)&#32;4U&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l00076"/>00076 
<anchor xml:id="_queue_8h_source_1l00145"/>00145 <emphasis role="preprocessor">#if(&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l00146"/>00146 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;xQueueCreate(&#32;uxQueueLength,&#32;uxItemSize&#32;)&#32;xQueueGenericCreate(&#32;(&#32;uxQueueLength&#32;),&#32;(&#32;uxItemSize&#32;),&#32;(&#32;queueQUEUE_TYPE_BASE&#32;)&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l00147"/>00147 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_queue_8h_source_1l00148"/>00148 
<anchor xml:id="_queue_8h_source_1l00231"/>00231 <emphasis role="preprocessor">#if(&#32;configSUPPORT_STATIC_ALLOCATION&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l00232"/>00232 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;xQueueCreateStatic(&#32;uxQueueLength,&#32;uxItemSize,&#32;pucQueueStorage,&#32;pxQueueBuffer&#32;)&#32;xQueueGenericCreateStatic(&#32;(&#32;uxQueueLength&#32;),&#32;(&#32;uxItemSize&#32;),&#32;(&#32;pucQueueStorage&#32;),&#32;(&#32;pxQueueBuffer&#32;),&#32;(&#32;queueQUEUE_TYPE_BASE&#32;)&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l00233"/>00233 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configSUPPORT_STATIC_ALLOCATION&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8h_source_1l00234"/>00234 
<anchor xml:id="_queue_8h_source_1l00313"/><link linkend="_queue_8h_1aa612fcc2b1ceee0200f34b942e300b41">00313</link> <emphasis role="preprocessor">#define&#32;xQueueSendToFront(&#32;xQueue,&#32;pvItemToQueue,&#32;xTicksToWait&#32;)&#32;xQueueGenericSend(&#32;(&#32;xQueue&#32;),&#32;(&#32;pvItemToQueue&#32;),&#32;(&#32;xTicksToWait&#32;),&#32;queueSEND_TO_FRONT&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l00314"/>00314 
<anchor xml:id="_queue_8h_source_1l00395"/><link linkend="_queue_8h_1a81d24a2c1199d58efb76fbee15853112">00395</link> <emphasis role="preprocessor">#define&#32;xQueueSendToBack(&#32;xQueue,&#32;pvItemToQueue,&#32;xTicksToWait&#32;)&#32;xQueueGenericSend(&#32;(&#32;xQueue&#32;),&#32;(&#32;pvItemToQueue&#32;),&#32;(&#32;xTicksToWait&#32;),&#32;queueSEND_TO_BACK&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l00396"/>00396 
<anchor xml:id="_queue_8h_source_1l00479"/><link linkend="_queue_8h_1af7eb49d3249351176992950d9185abe9">00479</link> <emphasis role="preprocessor">#define&#32;xQueueSend(&#32;xQueue,&#32;pvItemToQueue,&#32;xTicksToWait&#32;)&#32;xQueueGenericSend(&#32;(&#32;xQueue&#32;),&#32;(&#32;pvItemToQueue&#32;),&#32;(&#32;xTicksToWait&#32;),&#32;queueSEND_TO_BACK&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l00480"/>00480 
<anchor xml:id="_queue_8h_source_1l00562"/><link linkend="_queue_8h_1a8e9ced123b5a0e37a36d3bbdb2e56b4e">00562</link> <emphasis role="preprocessor">#define&#32;xQueueOverwrite(&#32;xQueue,&#32;pvItemToQueue&#32;)&#32;xQueueGenericSend(&#32;(&#32;xQueue&#32;),&#32;(&#32;pvItemToQueue&#32;),&#32;0,&#32;queueOVERWRITE&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l00563"/>00563 
<anchor xml:id="_queue_8h_source_1l00564"/>00564 
<anchor xml:id="_queue_8h_source_1l00650"/>00650 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8h_1a7ce86d1026e0c3055a523935bf53c0b3">xQueueGenericSend</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pvItemToQueue,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xCopyPosition&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l00651"/>00651 
<anchor xml:id="_queue_8h_source_1l00744"/>00744 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8h_1a3f9e430276fe5244417fd82644ec8a75">xQueuePeek</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pvBuffer,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l00745"/>00745 
<anchor xml:id="_queue_8h_source_1l00777"/>00777 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8h_1ac402adf98be1fb8ca0345f30dc11a9dc">xQueuePeekFromISR</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pvBuffer&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l00778"/>00778 
<anchor xml:id="_queue_8h_source_1l00868"/>00868 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8h_1ae8364d988c6f9b63c771cc2b3dfe5df9">xQueueReceive</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pvBuffer,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l00869"/>00869 
<anchor xml:id="_queue_8h_source_1l00883"/>00883 <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_queue_8h_1add7ee0701ba35904d190811b9e5a4eda">uxQueueMessagesWaiting</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l00884"/>00884 
<anchor xml:id="_queue_8h_source_1l00900"/>00900 <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_queue_8h_1aae75791e91707c1e0bb31d761921531c">uxQueueSpacesAvailable</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l00901"/>00901 
<anchor xml:id="_queue_8h_source_1l00914"/>00914 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_queue_8h_1a707cbcfe3aed6b877b6aa6d9d75a3f22">vQueueDelete</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l00915"/>00915 
<anchor xml:id="_queue_8h_source_1l00984"/><link linkend="_queue_8h_1af03b83396462affe9e28302660e7b9c6">00984</link> <emphasis role="preprocessor">#define&#32;xQueueSendToFrontFromISR(&#32;xQueue,&#32;pvItemToQueue,&#32;pxHigherPriorityTaskWoken&#32;)&#32;xQueueGenericSendFromISR(&#32;(&#32;xQueue&#32;),&#32;(&#32;pvItemToQueue&#32;),&#32;(&#32;pxHigherPriorityTaskWoken&#32;),&#32;queueSEND_TO_FRONT&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l00985"/>00985 
<anchor xml:id="_queue_8h_source_1l00986"/>00986 
<anchor xml:id="_queue_8h_source_1l01055"/><link linkend="_queue_8h_1a51e9f73417b11441a181cdc4f33a68e9">01055</link> <emphasis role="preprocessor">#define&#32;xQueueSendToBackFromISR(&#32;xQueue,&#32;pvItemToQueue,&#32;pxHigherPriorityTaskWoken&#32;)&#32;xQueueGenericSendFromISR(&#32;(&#32;xQueue&#32;),&#32;(&#32;pvItemToQueue&#32;),&#32;(&#32;pxHigherPriorityTaskWoken&#32;),&#32;queueSEND_TO_BACK&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l01056"/>01056 
<anchor xml:id="_queue_8h_source_1l01142"/><link linkend="_queue_8h_1abdcd6a86ef82034d002193e79cfd3ce8">01142</link> <emphasis role="preprocessor">#define&#32;xQueueOverwriteFromISR(&#32;xQueue,&#32;pvItemToQueue,&#32;pxHigherPriorityTaskWoken&#32;)&#32;xQueueGenericSendFromISR(&#32;(&#32;xQueue&#32;),&#32;(&#32;pvItemToQueue&#32;),&#32;(&#32;pxHigherPriorityTaskWoken&#32;),&#32;queueOVERWRITE&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l01143"/>01143 
<anchor xml:id="_queue_8h_source_1l01216"/><link linkend="_queue_8h_1a21d5919ed26c21d121df4a4debeb643c">01216</link> <emphasis role="preprocessor">#define&#32;xQueueSendFromISR(&#32;xQueue,&#32;pvItemToQueue,&#32;pxHigherPriorityTaskWoken&#32;)&#32;xQueueGenericSendFromISR(&#32;(&#32;xQueue&#32;),&#32;(&#32;pvItemToQueue&#32;),&#32;(&#32;pxHigherPriorityTaskWoken&#32;),&#32;queueSEND_TO_BACK&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l01217"/>01217 
<anchor xml:id="_queue_8h_source_1l01295"/>01295 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8h_1a263711eb0124112e828a18fd4b8ab29d">xQueueGenericSendFromISR</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pvItemToQueue,&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxHigherPriorityTaskWoken,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xCopyPosition&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01296"/>01296 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8h_1ad14ae1174c2772cffc9e0c2c45dc55a6">xQueueGiveFromISR</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>,&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxHigherPriorityTaskWoken&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01297"/>01297 
<anchor xml:id="_queue_8h_source_1l01385"/>01385 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8h_1acdf528f5c91131ae2f31c669cfd65758">xQueueReceiveFromISR</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pvBuffer,&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxHigherPriorityTaskWoken&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01386"/>01386 
<anchor xml:id="_queue_8h_source_1l01387"/>01387 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8h_source_1l01388"/>01388 <emphasis role="comment">&#32;*&#32;Utilities&#32;to&#32;query&#32;queues&#32;that&#32;are&#32;safe&#32;to&#32;use&#32;from&#32;an&#32;ISR.&#32;&#32;These&#32;utilities</emphasis>
<anchor xml:id="_queue_8h_source_1l01389"/>01389 <emphasis role="comment">&#32;*&#32;should&#32;be&#32;used&#32;only&#32;from&#32;witin&#32;an&#32;ISR,&#32;or&#32;within&#32;a&#32;critical&#32;section.</emphasis>
<anchor xml:id="_queue_8h_source_1l01390"/>01390 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8h_source_1l01391"/>01391 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8h_1aa11139c58f4eecaa0c50078f2976d010">xQueueIsQueueEmptyFromISR</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01392"/>01392 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8h_1a81319b3aa562733957c5a12a088516d3">xQueueIsQueueFullFromISR</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01393"/>01393 <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_queue_8h_1a3e89b6189166f9544f283435e2732f9a">uxQueueMessagesWaitingFromISR</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01394"/>01394 
<anchor xml:id="_queue_8h_source_1l01395"/>01395 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8h_source_1l01396"/>01396 <emphasis role="comment">&#32;*&#32;The&#32;functions&#32;defined&#32;above&#32;are&#32;for&#32;passing&#32;data&#32;to&#32;and&#32;from&#32;tasks.&#32;&#32;The</emphasis>
<anchor xml:id="_queue_8h_source_1l01397"/>01397 <emphasis role="comment">&#32;*&#32;functions&#32;below&#32;are&#32;the&#32;equivalents&#32;for&#32;passing&#32;data&#32;to&#32;and&#32;from</emphasis>
<anchor xml:id="_queue_8h_source_1l01398"/>01398 <emphasis role="comment">&#32;*&#32;co-routines.</emphasis>
<anchor xml:id="_queue_8h_source_1l01399"/>01399 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01400"/>01400 <emphasis role="comment">&#32;*&#32;These&#32;functions&#32;are&#32;called&#32;from&#32;the&#32;co-routine&#32;macro&#32;implementation&#32;and</emphasis>
<anchor xml:id="_queue_8h_source_1l01401"/>01401 <emphasis role="comment">&#32;*&#32;should&#32;not&#32;be&#32;called&#32;directly&#32;from&#32;application&#32;code.&#32;&#32;Instead&#32;use&#32;the&#32;macro</emphasis>
<anchor xml:id="_queue_8h_source_1l01402"/>01402 <emphasis role="comment">&#32;*&#32;wrappers&#32;defined&#32;within&#32;croutine.h.</emphasis>
<anchor xml:id="_queue_8h_source_1l01403"/>01403 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8h_source_1l01404"/><link linkend="_queue_8h_1a80af2aff3f472600a12dea0642fa8b27">01404</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8h_1a80af2aff3f472600a12dea0642fa8b27">xQueueCRSendFromISR</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pvItemToQueue,&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xCoRoutinePreviouslyWoken&#32;);
<anchor xml:id="_queue_8h_source_1l01405"/><link linkend="_queue_8h_1ad66b08c1d6a17efa8985605bf182b997">01405</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8h_1ad66b08c1d6a17efa8985605bf182b997">xQueueCRReceiveFromISR</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pvBuffer,&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;*pxTaskWoken&#32;);
<anchor xml:id="_queue_8h_source_1l01406"/><link linkend="_queue_8h_1abb5d7bd9b62f2b642104fde73c1c666b">01406</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8h_1abb5d7bd9b62f2b642104fde73c1c666b">xQueueCRSend</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pvItemToQueue,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait&#32;);
<anchor xml:id="_queue_8h_source_1l01407"/><link linkend="_queue_8h_1a88a02b37c486c38b8c4112e16dfed099">01407</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8h_1a88a02b37c486c38b8c4112e16dfed099">xQueueCRReceive</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pvBuffer,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait&#32;);
<anchor xml:id="_queue_8h_source_1l01408"/>01408 
<anchor xml:id="_queue_8h_source_1l01409"/>01409 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8h_source_1l01410"/>01410 <emphasis role="comment">&#32;*&#32;For&#32;internal&#32;use&#32;only.&#32;&#32;Use&#32;xSemaphoreCreateMutex(),</emphasis>
<anchor xml:id="_queue_8h_source_1l01411"/>01411 <emphasis role="comment">&#32;*&#32;xSemaphoreCreateCounting()&#32;or&#32;xSemaphoreGetMutexHolder()&#32;instead&#32;of&#32;calling</emphasis>
<anchor xml:id="_queue_8h_source_1l01412"/>01412 <emphasis role="comment">&#32;*&#32;these&#32;functions&#32;directly.</emphasis>
<anchor xml:id="_queue_8h_source_1l01413"/>01413 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8h_source_1l01414"/>01414 <link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_queue_8h_1acac7df114346b4219bc2aab79cac35b5">xQueueCreateMutex</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;<link linkend="_struct_queue_definition_1a337a8dc6af8fc327a92412275e86fe81">ucQueueType</link>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01415"/><link linkend="_queue_8h_1af92945589381b740932a7cc41e212a37">01415</link> <link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_queue_8h_1af92945589381b740932a7cc41e212a37">xQueueCreateMutexStatic</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;<link linkend="_struct_queue_definition_1a337a8dc6af8fc327a92412275e86fe81">ucQueueType</link>,&#32;<link linkend="_structx_s_t_a_t_i_c___q_u_e_u_e">StaticQueue_t</link>&#32;*pxStaticQueue&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01416"/>01416 <link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_queue_8h_1ac74677a8d243c76843c25fdb06436043">xQueueCreateCountingSemaphore</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxMaxCount,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxInitialCount&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01417"/><link linkend="_queue_8h_1a601cb15993988a393676a9df74b067bd">01417</link> <link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_queue_8h_1a601cb15993988a393676a9df74b067bd">xQueueCreateCountingSemaphoreStatic</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxMaxCount,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxInitialCount,&#32;<link linkend="_structx_s_t_a_t_i_c___q_u_e_u_e">StaticQueue_t</link>&#32;*pxStaticQueue&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01418"/>01418 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8h_1a124567e9fc3a37b99f7e184ae98de9f8">xQueueSemaphoreTake</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01419"/><link linkend="_queue_8h_1ac49b15e4005be658fd04e68407ef4fb1">01419</link> <link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;<link linkend="_queue_8h_1ac49b15e4005be658fd04e68407ef4fb1">xQueueGetMutexHolder</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1adb2c0818274974553c619ff953b6f477">xSemaphore</link>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01420"/><link linkend="_queue_8h_1a8ccb06cf46ba1c052809a3809954bd07">01420</link> <link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;<link linkend="_queue_8h_1a8ccb06cf46ba1c052809a3809954bd07">xQueueGetMutexHolderFromISR</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1adb2c0818274974553c619ff953b6f477">xSemaphore</link>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01421"/>01421 
<anchor xml:id="_queue_8h_source_1l01422"/>01422 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8h_source_1l01423"/>01423 <emphasis role="comment">&#32;*&#32;For&#32;internal&#32;use&#32;only.&#32;&#32;Use&#32;xSemaphoreTakeMutexRecursive()&#32;or</emphasis>
<anchor xml:id="_queue_8h_source_1l01424"/>01424 <emphasis role="comment">&#32;*&#32;xSemaphoreGiveMutexRecursive()&#32;instead&#32;of&#32;calling&#32;these&#32;functions&#32;directly.</emphasis>
<anchor xml:id="_queue_8h_source_1l01425"/>01425 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8h_source_1l01426"/>01426 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8h_1a74e27d539a884589ebbbdfcc371a48cd">xQueueTakeMutexRecursive</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xMutex,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01427"/>01427 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8h_1a51adeb17e9d3bb1077969e6e53f61c3b">xQueueGiveMutexRecursive</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xMutex&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01428"/>01428 
<anchor xml:id="_queue_8h_source_1l01429"/>01429 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8h_source_1l01430"/>01430 <emphasis role="comment">&#32;*&#32;Reset&#32;a&#32;queue&#32;back&#32;to&#32;its&#32;original&#32;empty&#32;state.&#32;&#32;The&#32;return&#32;value&#32;is&#32;now</emphasis>
<anchor xml:id="_queue_8h_source_1l01431"/>01431 <emphasis role="comment">&#32;*&#32;obsolete&#32;and&#32;is&#32;always&#32;set&#32;to&#32;pdPASS.</emphasis>
<anchor xml:id="_queue_8h_source_1l01432"/>01432 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8h_source_1l01433"/><link linkend="_queue_8h_1a94df8d8bc938424151f8196db2f1177b">01433</link> <emphasis role="preprocessor">#define&#32;xQueueReset(&#32;xQueue&#32;)&#32;xQueueGenericReset(&#32;xQueue,&#32;pdFALSE&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l01434"/>01434 
<anchor xml:id="_queue_8h_source_1l01435"/>01435 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8h_source_1l01436"/>01436 <emphasis role="comment">&#32;*&#32;The&#32;registry&#32;is&#32;provided&#32;as&#32;a&#32;means&#32;for&#32;kernel&#32;aware&#32;debuggers&#32;to</emphasis>
<anchor xml:id="_queue_8h_source_1l01437"/>01437 <emphasis role="comment">&#32;*&#32;locate&#32;queues,&#32;semaphores&#32;and&#32;mutexes.&#32;&#32;Call&#32;vQueueAddToRegistry()&#32;add</emphasis>
<anchor xml:id="_queue_8h_source_1l01438"/>01438 <emphasis role="comment">&#32;*&#32;a&#32;queue,&#32;semaphore&#32;or&#32;mutex&#32;handle&#32;to&#32;the&#32;registry&#32;if&#32;you&#32;want&#32;the&#32;handle</emphasis>
<anchor xml:id="_queue_8h_source_1l01439"/>01439 <emphasis role="comment">&#32;*&#32;to&#32;be&#32;available&#32;to&#32;a&#32;kernel&#32;aware&#32;debugger.&#32;&#32;If&#32;you&#32;are&#32;not&#32;using&#32;a&#32;kernel</emphasis>
<anchor xml:id="_queue_8h_source_1l01440"/>01440 <emphasis role="comment">&#32;*&#32;aware&#32;debugger&#32;then&#32;this&#32;function&#32;can&#32;be&#32;ignored.</emphasis>
<anchor xml:id="_queue_8h_source_1l01441"/>01441 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01442"/>01442 <emphasis role="comment">&#32;*&#32;configQUEUE_REGISTRY_SIZE&#32;defines&#32;the&#32;maximum&#32;number&#32;of&#32;handles&#32;the</emphasis>
<anchor xml:id="_queue_8h_source_1l01443"/>01443 <emphasis role="comment">&#32;*&#32;registry&#32;can&#32;hold.&#32;&#32;configQUEUE_REGISTRY_SIZE&#32;must&#32;be&#32;greater&#32;than&#32;0</emphasis>
<anchor xml:id="_queue_8h_source_1l01444"/>01444 <emphasis role="comment">&#32;*&#32;within&#32;FreeRTOSConfig.h&#32;for&#32;the&#32;registry&#32;to&#32;be&#32;available.&#32;&#32;Its&#32;value</emphasis>
<anchor xml:id="_queue_8h_source_1l01445"/>01445 <emphasis role="comment">&#32;*&#32;does&#32;not&#32;effect&#32;the&#32;number&#32;of&#32;queues,&#32;semaphores&#32;and&#32;mutexes&#32;that&#32;can&#32;be</emphasis>
<anchor xml:id="_queue_8h_source_1l01446"/>01446 <emphasis role="comment">&#32;*&#32;created&#32;-&#32;just&#32;the&#32;number&#32;that&#32;the&#32;registry&#32;can&#32;hold.</emphasis>
<anchor xml:id="_queue_8h_source_1l01447"/>01447 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01448"/>01448 <emphasis role="comment">&#32;*&#32;@param&#32;xQueue&#32;The&#32;handle&#32;of&#32;the&#32;queue&#32;being&#32;added&#32;to&#32;the&#32;registry.&#32;&#32;This</emphasis>
<anchor xml:id="_queue_8h_source_1l01449"/>01449 <emphasis role="comment">&#32;*&#32;is&#32;the&#32;handle&#32;returned&#32;by&#32;a&#32;call&#32;to&#32;xQueueCreate().&#32;&#32;Semaphore&#32;and&#32;mutex</emphasis>
<anchor xml:id="_queue_8h_source_1l01450"/>01450 <emphasis role="comment">&#32;*&#32;handles&#32;can&#32;also&#32;be&#32;passed&#32;in&#32;here.</emphasis>
<anchor xml:id="_queue_8h_source_1l01451"/>01451 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01452"/>01452 <emphasis role="comment">&#32;*&#32;@param&#32;pcName&#32;The&#32;name&#32;to&#32;be&#32;associated&#32;with&#32;the&#32;handle.&#32;&#32;This&#32;is&#32;the</emphasis>
<anchor xml:id="_queue_8h_source_1l01453"/>01453 <emphasis role="comment">&#32;*&#32;name&#32;that&#32;the&#32;kernel&#32;aware&#32;debugger&#32;will&#32;display.&#32;&#32;The&#32;queue&#32;registry&#32;only</emphasis>
<anchor xml:id="_queue_8h_source_1l01454"/>01454 <emphasis role="comment">&#32;*&#32;stores&#32;a&#32;pointer&#32;to&#32;the&#32;string&#32;-&#32;so&#32;the&#32;string&#32;must&#32;be&#32;persistent&#32;(global&#32;or</emphasis>
<anchor xml:id="_queue_8h_source_1l01455"/>01455 <emphasis role="comment">&#32;*&#32;preferably&#32;in&#32;ROM/Flash),&#32;not&#32;on&#32;the&#32;stack.</emphasis>
<anchor xml:id="_queue_8h_source_1l01456"/>01456 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8h_source_1l01457"/>01457 <emphasis role="preprocessor">#if(&#32;configQUEUE_REGISTRY_SIZE&#32;&gt;&#32;0&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l01458"/>01458 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_queue_8c_1a1d5e2402c801e7a0ab079f6944b97f93">vQueueAddToRegistry</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*pcQueueName&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;&#32;<emphasis role="comment">/*lint&#32;!e971&#32;Unqualified&#32;char&#32;types&#32;are&#32;allowed&#32;for&#32;strings&#32;and&#32;single&#32;characters&#32;only.&#32;*/</emphasis>
<anchor xml:id="_queue_8h_source_1l01459"/>01459 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_queue_8h_source_1l01460"/>01460 
<anchor xml:id="_queue_8h_source_1l01461"/>01461 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8h_source_1l01462"/>01462 <emphasis role="comment">&#32;*&#32;The&#32;registry&#32;is&#32;provided&#32;as&#32;a&#32;means&#32;for&#32;kernel&#32;aware&#32;debuggers&#32;to</emphasis>
<anchor xml:id="_queue_8h_source_1l01463"/>01463 <emphasis role="comment">&#32;*&#32;locate&#32;queues,&#32;semaphores&#32;and&#32;mutexes.&#32;&#32;Call&#32;vQueueAddToRegistry()&#32;add</emphasis>
<anchor xml:id="_queue_8h_source_1l01464"/>01464 <emphasis role="comment">&#32;*&#32;a&#32;queue,&#32;semaphore&#32;or&#32;mutex&#32;handle&#32;to&#32;the&#32;registry&#32;if&#32;you&#32;want&#32;the&#32;handle</emphasis>
<anchor xml:id="_queue_8h_source_1l01465"/>01465 <emphasis role="comment">&#32;*&#32;to&#32;be&#32;available&#32;to&#32;a&#32;kernel&#32;aware&#32;debugger,&#32;and&#32;vQueueUnregisterQueue()&#32;to</emphasis>
<anchor xml:id="_queue_8h_source_1l01466"/>01466 <emphasis role="comment">&#32;*&#32;remove&#32;the&#32;queue,&#32;semaphore&#32;or&#32;mutex&#32;from&#32;the&#32;register.&#32;&#32;If&#32;you&#32;are&#32;not&#32;using</emphasis>
<anchor xml:id="_queue_8h_source_1l01467"/>01467 <emphasis role="comment">&#32;*&#32;a&#32;kernel&#32;aware&#32;debugger&#32;then&#32;this&#32;function&#32;can&#32;be&#32;ignored.</emphasis>
<anchor xml:id="_queue_8h_source_1l01468"/>01468 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01469"/>01469 <emphasis role="comment">&#32;*&#32;@param&#32;xQueue&#32;The&#32;handle&#32;of&#32;the&#32;queue&#32;being&#32;removed&#32;from&#32;the&#32;registry.</emphasis>
<anchor xml:id="_queue_8h_source_1l01470"/>01470 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8h_source_1l01471"/>01471 <emphasis role="preprocessor">#if(&#32;configQUEUE_REGISTRY_SIZE&#32;&gt;&#32;0&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l01472"/>01472 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_queue_8c_1ac695c7cde3c32b32a1db4689239603ed">vQueueUnregisterQueue</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01473"/>01473 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_queue_8h_source_1l01474"/>01474 
<anchor xml:id="_queue_8h_source_1l01475"/>01475 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8h_source_1l01476"/>01476 <emphasis role="comment">&#32;*&#32;The&#32;queue&#32;registry&#32;is&#32;provided&#32;as&#32;a&#32;means&#32;for&#32;kernel&#32;aware&#32;debuggers&#32;to</emphasis>
<anchor xml:id="_queue_8h_source_1l01477"/>01477 <emphasis role="comment">&#32;*&#32;locate&#32;queues,&#32;semaphores&#32;and&#32;mutexes.&#32;&#32;Call&#32;pcQueueGetName()&#32;to&#32;look</emphasis>
<anchor xml:id="_queue_8h_source_1l01478"/>01478 <emphasis role="comment">&#32;*&#32;up&#32;and&#32;return&#32;the&#32;name&#32;of&#32;a&#32;queue&#32;in&#32;the&#32;queue&#32;registry&#32;from&#32;the&#32;queue&apos;s</emphasis>
<anchor xml:id="_queue_8h_source_1l01479"/>01479 <emphasis role="comment">&#32;*&#32;handle.</emphasis>
<anchor xml:id="_queue_8h_source_1l01480"/>01480 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01481"/>01481 <emphasis role="comment">&#32;*&#32;@param&#32;xQueue&#32;The&#32;handle&#32;of&#32;the&#32;queue&#32;the&#32;name&#32;of&#32;which&#32;will&#32;be&#32;returned.</emphasis>
<anchor xml:id="_queue_8h_source_1l01482"/>01482 <emphasis role="comment">&#32;*&#32;@return&#32;If&#32;the&#32;queue&#32;is&#32;in&#32;the&#32;registry&#32;then&#32;a&#32;pointer&#32;to&#32;the&#32;name&#32;of&#32;the</emphasis>
<anchor xml:id="_queue_8h_source_1l01483"/>01483 <emphasis role="comment">&#32;*&#32;queue&#32;is&#32;returned.&#32;&#32;If&#32;the&#32;queue&#32;is&#32;not&#32;in&#32;the&#32;registry&#32;then&#32;NULL&#32;is</emphasis>
<anchor xml:id="_queue_8h_source_1l01484"/>01484 <emphasis role="comment">&#32;*&#32;returned.</emphasis>
<anchor xml:id="_queue_8h_source_1l01485"/>01485 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8h_source_1l01486"/>01486 <emphasis role="preprocessor">#if(&#32;configQUEUE_REGISTRY_SIZE&#32;&gt;&#32;0&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l01487"/>01487 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_queue_8c_1a6cd1431e6d0f46927d6260d49f0d6df3">pcQueueGetName</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;&#32;<emphasis role="comment">/*lint&#32;!e971&#32;Unqualified&#32;char&#32;types&#32;are&#32;allowed&#32;for&#32;strings&#32;and&#32;single&#32;characters&#32;only.&#32;*/</emphasis>
<anchor xml:id="_queue_8h_source_1l01488"/>01488 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_queue_8h_source_1l01489"/>01489 
<anchor xml:id="_queue_8h_source_1l01490"/>01490 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8h_source_1l01491"/>01491 <emphasis role="comment">&#32;*&#32;Generic&#32;version&#32;of&#32;the&#32;function&#32;used&#32;to&#32;creaet&#32;a&#32;queue&#32;using&#32;dynamic&#32;memory</emphasis>
<anchor xml:id="_queue_8h_source_1l01492"/>01492 <emphasis role="comment">&#32;*&#32;allocation.&#32;&#32;This&#32;is&#32;called&#32;by&#32;other&#32;functions&#32;and&#32;macros&#32;that&#32;create&#32;other</emphasis>
<anchor xml:id="_queue_8h_source_1l01493"/>01493 <emphasis role="comment">&#32;*&#32;RTOS&#32;objects&#32;that&#32;use&#32;the&#32;queue&#32;structure&#32;as&#32;their&#32;base.</emphasis>
<anchor xml:id="_queue_8h_source_1l01494"/>01494 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8h_source_1l01495"/>01495 <emphasis role="preprocessor">#if(&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l01496"/>01496 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_queue_8c_1ac999cdfbb09fff396fa818bb9a30b4e5">xQueueGenericCreate</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxQueueLength,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">uxItemSize</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;<link linkend="_struct_queue_definition_1a337a8dc6af8fc327a92412275e86fe81">ucQueueType</link>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01497"/>01497 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_queue_8h_source_1l01498"/>01498 
<anchor xml:id="_queue_8h_source_1l01499"/>01499 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8h_source_1l01500"/>01500 <emphasis role="comment">&#32;*&#32;Generic&#32;version&#32;of&#32;the&#32;function&#32;used&#32;to&#32;creaet&#32;a&#32;queue&#32;using&#32;dynamic&#32;memory</emphasis>
<anchor xml:id="_queue_8h_source_1l01501"/>01501 <emphasis role="comment">&#32;*&#32;allocation.&#32;&#32;This&#32;is&#32;called&#32;by&#32;other&#32;functions&#32;and&#32;macros&#32;that&#32;create&#32;other</emphasis>
<anchor xml:id="_queue_8h_source_1l01502"/>01502 <emphasis role="comment">&#32;*&#32;RTOS&#32;objects&#32;that&#32;use&#32;the&#32;queue&#32;structure&#32;as&#32;their&#32;base.</emphasis>
<anchor xml:id="_queue_8h_source_1l01503"/>01503 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8h_source_1l01504"/>01504 <emphasis role="preprocessor">#if(&#32;configSUPPORT_STATIC_ALLOCATION&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8h_source_1l01505"/>01505 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueueGenericCreateStatic(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxQueueLength,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">uxItemSize</link>,&#32;uint8_t&#32;*pucQueueStorage,&#32;<link linkend="_structx_s_t_a_t_i_c___q_u_e_u_e">StaticQueue_t</link>&#32;*pxStaticQueue,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;<link linkend="_struct_queue_definition_1a337a8dc6af8fc327a92412275e86fe81">ucQueueType</link>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01506"/>01506 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_queue_8h_source_1l01507"/>01507 
<anchor xml:id="_queue_8h_source_1l01508"/>01508 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8h_source_1l01509"/>01509 <emphasis role="comment">&#32;*&#32;Queue&#32;sets&#32;provide&#32;a&#32;mechanism&#32;to&#32;allow&#32;a&#32;task&#32;to&#32;block&#32;(pend)&#32;on&#32;a&#32;read</emphasis>
<anchor xml:id="_queue_8h_source_1l01510"/>01510 <emphasis role="comment">&#32;*&#32;operation&#32;from&#32;multiple&#32;queues&#32;or&#32;semaphores&#32;simultaneously.</emphasis>
<anchor xml:id="_queue_8h_source_1l01511"/>01511 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01512"/>01512 <emphasis role="comment">&#32;*&#32;See&#32;FreeRTOS/Source/Demo/Common/Minimal/QueueSet.c&#32;for&#32;an&#32;example&#32;using&#32;this</emphasis>
<anchor xml:id="_queue_8h_source_1l01513"/>01513 <emphasis role="comment">&#32;*&#32;function.</emphasis>
<anchor xml:id="_queue_8h_source_1l01514"/>01514 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01515"/>01515 <emphasis role="comment">&#32;*&#32;A&#32;queue&#32;set&#32;must&#32;be&#32;explicitly&#32;created&#32;using&#32;a&#32;call&#32;to&#32;xQueueCreateSet()</emphasis>
<anchor xml:id="_queue_8h_source_1l01516"/>01516 <emphasis role="comment">&#32;*&#32;before&#32;it&#32;can&#32;be&#32;used.&#32;&#32;Once&#32;created,&#32;standard&#32;FreeRTOS&#32;queues&#32;and&#32;semaphores</emphasis>
<anchor xml:id="_queue_8h_source_1l01517"/>01517 <emphasis role="comment">&#32;*&#32;can&#32;be&#32;added&#32;to&#32;the&#32;set&#32;using&#32;calls&#32;to&#32;xQueueAddToSet().</emphasis>
<anchor xml:id="_queue_8h_source_1l01518"/>01518 <emphasis role="comment">&#32;*&#32;xQueueSelectFromSet()&#32;is&#32;then&#32;used&#32;to&#32;determine&#32;which,&#32;if&#32;any,&#32;of&#32;the&#32;queues</emphasis>
<anchor xml:id="_queue_8h_source_1l01519"/>01519 <emphasis role="comment">&#32;*&#32;or&#32;semaphores&#32;contained&#32;in&#32;the&#32;set&#32;is&#32;in&#32;a&#32;state&#32;where&#32;a&#32;queue&#32;read&#32;or</emphasis>
<anchor xml:id="_queue_8h_source_1l01520"/>01520 <emphasis role="comment">&#32;*&#32;semaphore&#32;take&#32;operation&#32;would&#32;be&#32;successful.</emphasis>
<anchor xml:id="_queue_8h_source_1l01521"/>01521 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01522"/>01522 <emphasis role="comment">&#32;*&#32;Note&#32;1:&#32;&#32;See&#32;the&#32;documentation&#32;on&#32;http://wwwFreeRTOS.org/RTOS-queue-sets.html</emphasis>
<anchor xml:id="_queue_8h_source_1l01523"/>01523 <emphasis role="comment">&#32;*&#32;for&#32;reasons&#32;why&#32;queue&#32;sets&#32;are&#32;very&#32;rarely&#32;needed&#32;in&#32;practice&#32;as&#32;there&#32;are</emphasis>
<anchor xml:id="_queue_8h_source_1l01524"/>01524 <emphasis role="comment">&#32;*&#32;simpler&#32;methods&#32;of&#32;blocking&#32;on&#32;multiple&#32;objects.</emphasis>
<anchor xml:id="_queue_8h_source_1l01525"/>01525 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01526"/>01526 <emphasis role="comment">&#32;*&#32;Note&#32;2:&#32;&#32;Blocking&#32;on&#32;a&#32;queue&#32;set&#32;that&#32;contains&#32;a&#32;mutex&#32;will&#32;not&#32;cause&#32;the</emphasis>
<anchor xml:id="_queue_8h_source_1l01527"/>01527 <emphasis role="comment">&#32;*&#32;mutex&#32;holder&#32;to&#32;inherit&#32;the&#32;priority&#32;of&#32;the&#32;blocked&#32;task.</emphasis>
<anchor xml:id="_queue_8h_source_1l01528"/>01528 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01529"/>01529 <emphasis role="comment">&#32;*&#32;Note&#32;3:&#32;&#32;An&#32;additional&#32;4&#32;bytes&#32;of&#32;RAM&#32;is&#32;required&#32;for&#32;each&#32;space&#32;in&#32;a&#32;every</emphasis>
<anchor xml:id="_queue_8h_source_1l01530"/>01530 <emphasis role="comment">&#32;*&#32;queue&#32;added&#32;to&#32;a&#32;queue&#32;set.&#32;&#32;Therefore&#32;counting&#32;semaphores&#32;that&#32;have&#32;a&#32;high</emphasis>
<anchor xml:id="_queue_8h_source_1l01531"/>01531 <emphasis role="comment">&#32;*&#32;maximum&#32;count&#32;value&#32;should&#32;not&#32;be&#32;added&#32;to&#32;a&#32;queue&#32;set.</emphasis>
<anchor xml:id="_queue_8h_source_1l01532"/>01532 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01533"/>01533 <emphasis role="comment">&#32;*&#32;Note&#32;4:&#32;&#32;A&#32;receive&#32;(in&#32;the&#32;case&#32;of&#32;a&#32;queue)&#32;or&#32;take&#32;(in&#32;the&#32;case&#32;of&#32;a</emphasis>
<anchor xml:id="_queue_8h_source_1l01534"/>01534 <emphasis role="comment">&#32;*&#32;semaphore)&#32;operation&#32;must&#32;not&#32;be&#32;performed&#32;on&#32;a&#32;member&#32;of&#32;a&#32;queue&#32;set&#32;unless</emphasis>
<anchor xml:id="_queue_8h_source_1l01535"/>01535 <emphasis role="comment">&#32;*&#32;a&#32;call&#32;to&#32;xQueueSelectFromSet()&#32;has&#32;first&#32;returned&#32;a&#32;handle&#32;to&#32;that&#32;set&#32;member.</emphasis>
<anchor xml:id="_queue_8h_source_1l01536"/>01536 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01537"/>01537 <emphasis role="comment">&#32;*&#32;@param&#32;uxEventQueueLength&#32;Queue&#32;sets&#32;store&#32;events&#32;that&#32;occur&#32;on</emphasis>
<anchor xml:id="_queue_8h_source_1l01538"/>01538 <emphasis role="comment">&#32;*&#32;the&#32;queues&#32;and&#32;semaphores&#32;contained&#32;in&#32;the&#32;set.&#32;&#32;uxEventQueueLength&#32;specifies</emphasis>
<anchor xml:id="_queue_8h_source_1l01539"/>01539 <emphasis role="comment">&#32;*&#32;the&#32;maximum&#32;number&#32;of&#32;events&#32;that&#32;can&#32;be&#32;queued&#32;at&#32;once.&#32;&#32;To&#32;be&#32;absolutely</emphasis>
<anchor xml:id="_queue_8h_source_1l01540"/>01540 <emphasis role="comment">&#32;*&#32;certain&#32;that&#32;events&#32;are&#32;not&#32;lost&#32;uxEventQueueLength&#32;should&#32;be&#32;set&#32;to&#32;the</emphasis>
<anchor xml:id="_queue_8h_source_1l01541"/>01541 <emphasis role="comment">&#32;*&#32;total&#32;sum&#32;of&#32;the&#32;length&#32;of&#32;the&#32;queues&#32;added&#32;to&#32;the&#32;set,&#32;where&#32;binary</emphasis>
<anchor xml:id="_queue_8h_source_1l01542"/>01542 <emphasis role="comment">&#32;*&#32;semaphores&#32;and&#32;mutexes&#32;have&#32;a&#32;length&#32;of&#32;1,&#32;and&#32;counting&#32;semaphores&#32;have&#32;a</emphasis>
<anchor xml:id="_queue_8h_source_1l01543"/>01543 <emphasis role="comment">&#32;*&#32;length&#32;set&#32;by&#32;their&#32;maximum&#32;count&#32;value.&#32;&#32;Examples:</emphasis>
<anchor xml:id="_queue_8h_source_1l01544"/>01544 <emphasis role="comment">&#32;*&#32;&#32;+&#32;If&#32;a&#32;queue&#32;set&#32;is&#32;to&#32;hold&#32;a&#32;queue&#32;of&#32;length&#32;5,&#32;another&#32;queue&#32;of&#32;length&#32;12,</emphasis>
<anchor xml:id="_queue_8h_source_1l01545"/>01545 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;and&#32;a&#32;binary&#32;semaphore,&#32;then&#32;uxEventQueueLength&#32;should&#32;be&#32;set&#32;to</emphasis>
<anchor xml:id="_queue_8h_source_1l01546"/>01546 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;(5&#32;+&#32;12&#32;+&#32;1),&#32;or&#32;18.</emphasis>
<anchor xml:id="_queue_8h_source_1l01547"/>01547 <emphasis role="comment">&#32;*&#32;&#32;+&#32;If&#32;a&#32;queue&#32;set&#32;is&#32;to&#32;hold&#32;three&#32;binary&#32;semaphores&#32;then&#32;uxEventQueueLength</emphasis>
<anchor xml:id="_queue_8h_source_1l01548"/>01548 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;should&#32;be&#32;set&#32;to&#32;(1&#32;+&#32;1&#32;+&#32;1&#32;),&#32;or&#32;3.</emphasis>
<anchor xml:id="_queue_8h_source_1l01549"/>01549 <emphasis role="comment">&#32;*&#32;&#32;+&#32;If&#32;a&#32;queue&#32;set&#32;is&#32;to&#32;hold&#32;a&#32;counting&#32;semaphore&#32;that&#32;has&#32;a&#32;maximum&#32;count&#32;of</emphasis>
<anchor xml:id="_queue_8h_source_1l01550"/>01550 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;5,&#32;and&#32;a&#32;counting&#32;semaphore&#32;that&#32;has&#32;a&#32;maximum&#32;count&#32;of&#32;3,&#32;then</emphasis>
<anchor xml:id="_queue_8h_source_1l01551"/>01551 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;uxEventQueueLength&#32;should&#32;be&#32;set&#32;to&#32;(5&#32;+&#32;3),&#32;or&#32;8.</emphasis>
<anchor xml:id="_queue_8h_source_1l01552"/>01552 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01553"/>01553 <emphasis role="comment">&#32;*&#32;@return&#32;If&#32;the&#32;queue&#32;set&#32;is&#32;created&#32;successfully&#32;then&#32;a&#32;handle&#32;to&#32;the&#32;created</emphasis>
<anchor xml:id="_queue_8h_source_1l01554"/>01554 <emphasis role="comment">&#32;*&#32;queue&#32;set&#32;is&#32;returned.&#32;&#32;Otherwise&#32;NULL&#32;is&#32;returned.</emphasis>
<anchor xml:id="_queue_8h_source_1l01555"/>01555 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8h_source_1l01556"/><link linkend="_queue_8h_1ad4208ad97f737af942a13e64b45e83e8">01556</link> <link linkend="_struct_queue_definition">QueueSetHandle_t</link>&#32;<link linkend="_queue_8h_1ad4208ad97f737af942a13e64b45e83e8">xQueueCreateSet</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxEventQueueLength&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01557"/>01557 
<anchor xml:id="_queue_8h_source_1l01558"/>01558 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8h_source_1l01559"/>01559 <emphasis role="comment">&#32;*&#32;Adds&#32;a&#32;queue&#32;or&#32;semaphore&#32;to&#32;a&#32;queue&#32;set&#32;that&#32;was&#32;previously&#32;created&#32;by&#32;a</emphasis>
<anchor xml:id="_queue_8h_source_1l01560"/>01560 <emphasis role="comment">&#32;*&#32;call&#32;to&#32;xQueueCreateSet().</emphasis>
<anchor xml:id="_queue_8h_source_1l01561"/>01561 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01562"/>01562 <emphasis role="comment">&#32;*&#32;See&#32;FreeRTOS/Source/Demo/Common/Minimal/QueueSet.c&#32;for&#32;an&#32;example&#32;using&#32;this</emphasis>
<anchor xml:id="_queue_8h_source_1l01563"/>01563 <emphasis role="comment">&#32;*&#32;function.</emphasis>
<anchor xml:id="_queue_8h_source_1l01564"/>01564 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01565"/>01565 <emphasis role="comment">&#32;*&#32;Note&#32;1:&#32;&#32;A&#32;receive&#32;(in&#32;the&#32;case&#32;of&#32;a&#32;queue)&#32;or&#32;take&#32;(in&#32;the&#32;case&#32;of&#32;a</emphasis>
<anchor xml:id="_queue_8h_source_1l01566"/>01566 <emphasis role="comment">&#32;*&#32;semaphore)&#32;operation&#32;must&#32;not&#32;be&#32;performed&#32;on&#32;a&#32;member&#32;of&#32;a&#32;queue&#32;set&#32;unless</emphasis>
<anchor xml:id="_queue_8h_source_1l01567"/>01567 <emphasis role="comment">&#32;*&#32;a&#32;call&#32;to&#32;xQueueSelectFromSet()&#32;has&#32;first&#32;returned&#32;a&#32;handle&#32;to&#32;that&#32;set&#32;member.</emphasis>
<anchor xml:id="_queue_8h_source_1l01568"/>01568 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01569"/>01569 <emphasis role="comment">&#32;*&#32;@param&#32;xQueueOrSemaphore&#32;The&#32;handle&#32;of&#32;the&#32;queue&#32;or&#32;semaphore&#32;being&#32;added&#32;to</emphasis>
<anchor xml:id="_queue_8h_source_1l01570"/>01570 <emphasis role="comment">&#32;*&#32;the&#32;queue&#32;set&#32;(cast&#32;to&#32;an&#32;QueueSetMemberHandle_t&#32;type).</emphasis>
<anchor xml:id="_queue_8h_source_1l01571"/>01571 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01572"/>01572 <emphasis role="comment">&#32;*&#32;@param&#32;xQueueSet&#32;The&#32;handle&#32;of&#32;the&#32;queue&#32;set&#32;to&#32;which&#32;the&#32;queue&#32;or&#32;semaphore</emphasis>
<anchor xml:id="_queue_8h_source_1l01573"/>01573 <emphasis role="comment">&#32;*&#32;is&#32;being&#32;added.</emphasis>
<anchor xml:id="_queue_8h_source_1l01574"/>01574 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01575"/>01575 <emphasis role="comment">&#32;*&#32;@return&#32;If&#32;the&#32;queue&#32;or&#32;semaphore&#32;was&#32;successfully&#32;added&#32;to&#32;the&#32;queue&#32;set</emphasis>
<anchor xml:id="_queue_8h_source_1l01576"/>01576 <emphasis role="comment">&#32;*&#32;then&#32;pdPASS&#32;is&#32;returned.&#32;&#32;If&#32;the&#32;queue&#32;could&#32;not&#32;be&#32;successfully&#32;added&#32;to&#32;the</emphasis>
<anchor xml:id="_queue_8h_source_1l01577"/>01577 <emphasis role="comment">&#32;*&#32;queue&#32;set&#32;because&#32;it&#32;is&#32;already&#32;a&#32;member&#32;of&#32;a&#32;different&#32;queue&#32;set&#32;then&#32;pdFAIL</emphasis>
<anchor xml:id="_queue_8h_source_1l01578"/>01578 <emphasis role="comment">&#32;*&#32;is&#32;returned.</emphasis>
<anchor xml:id="_queue_8h_source_1l01579"/>01579 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8h_source_1l01580"/><link linkend="_queue_8h_1ae07b563e6bbe42a977f7c46853aa11eb">01580</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8h_1ae07b563e6bbe42a977f7c46853aa11eb">xQueueAddToSet</link>(&#32;<link linkend="_struct_queue_definition">QueueSetMemberHandle_t</link>&#32;xQueueOrSemaphore,&#32;<link linkend="_struct_queue_definition">QueueSetHandle_t</link>&#32;xQueueSet&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01581"/>01581 
<anchor xml:id="_queue_8h_source_1l01582"/>01582 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8h_source_1l01583"/>01583 <emphasis role="comment">&#32;*&#32;Removes&#32;a&#32;queue&#32;or&#32;semaphore&#32;from&#32;a&#32;queue&#32;set.&#32;&#32;A&#32;queue&#32;or&#32;semaphore&#32;can&#32;only</emphasis>
<anchor xml:id="_queue_8h_source_1l01584"/>01584 <emphasis role="comment">&#32;*&#32;be&#32;removed&#32;from&#32;a&#32;set&#32;if&#32;the&#32;queue&#32;or&#32;semaphore&#32;is&#32;empty.</emphasis>
<anchor xml:id="_queue_8h_source_1l01585"/>01585 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01586"/>01586 <emphasis role="comment">&#32;*&#32;See&#32;FreeRTOS/Source/Demo/Common/Minimal/QueueSet.c&#32;for&#32;an&#32;example&#32;using&#32;this</emphasis>
<anchor xml:id="_queue_8h_source_1l01587"/>01587 <emphasis role="comment">&#32;*&#32;function.</emphasis>
<anchor xml:id="_queue_8h_source_1l01588"/>01588 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01589"/>01589 <emphasis role="comment">&#32;*&#32;@param&#32;xQueueOrSemaphore&#32;The&#32;handle&#32;of&#32;the&#32;queue&#32;or&#32;semaphore&#32;being&#32;removed</emphasis>
<anchor xml:id="_queue_8h_source_1l01590"/>01590 <emphasis role="comment">&#32;*&#32;from&#32;the&#32;queue&#32;set&#32;(cast&#32;to&#32;an&#32;QueueSetMemberHandle_t&#32;type).</emphasis>
<anchor xml:id="_queue_8h_source_1l01591"/>01591 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01592"/>01592 <emphasis role="comment">&#32;*&#32;@param&#32;xQueueSet&#32;The&#32;handle&#32;of&#32;the&#32;queue&#32;set&#32;in&#32;which&#32;the&#32;queue&#32;or&#32;semaphore</emphasis>
<anchor xml:id="_queue_8h_source_1l01593"/>01593 <emphasis role="comment">&#32;*&#32;is&#32;included.</emphasis>
<anchor xml:id="_queue_8h_source_1l01594"/>01594 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01595"/>01595 <emphasis role="comment">&#32;*&#32;@return&#32;If&#32;the&#32;queue&#32;or&#32;semaphore&#32;was&#32;successfully&#32;removed&#32;from&#32;the&#32;queue&#32;set</emphasis>
<anchor xml:id="_queue_8h_source_1l01596"/>01596 <emphasis role="comment">&#32;*&#32;then&#32;pdPASS&#32;is&#32;returned.&#32;&#32;If&#32;the&#32;queue&#32;was&#32;not&#32;in&#32;the&#32;queue&#32;set,&#32;or&#32;the</emphasis>
<anchor xml:id="_queue_8h_source_1l01597"/>01597 <emphasis role="comment">&#32;*&#32;queue&#32;(or&#32;semaphore)&#32;was&#32;not&#32;empty,&#32;then&#32;pdFAIL&#32;is&#32;returned.</emphasis>
<anchor xml:id="_queue_8h_source_1l01598"/>01598 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8h_source_1l01599"/><link linkend="_queue_8h_1ab16fdd17b9b6d74a82c8366f47cda162">01599</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8h_1ab16fdd17b9b6d74a82c8366f47cda162">xQueueRemoveFromSet</link>(&#32;<link linkend="_struct_queue_definition">QueueSetMemberHandle_t</link>&#32;xQueueOrSemaphore,&#32;<link linkend="_struct_queue_definition">QueueSetHandle_t</link>&#32;xQueueSet&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01600"/>01600 
<anchor xml:id="_queue_8h_source_1l01601"/>01601 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8h_source_1l01602"/>01602 <emphasis role="comment">&#32;*&#32;xQueueSelectFromSet()&#32;selects&#32;from&#32;the&#32;members&#32;of&#32;a&#32;queue&#32;set&#32;a&#32;queue&#32;or</emphasis>
<anchor xml:id="_queue_8h_source_1l01603"/>01603 <emphasis role="comment">&#32;*&#32;semaphore&#32;that&#32;either&#32;contains&#32;data&#32;(in&#32;the&#32;case&#32;of&#32;a&#32;queue)&#32;or&#32;is&#32;available</emphasis>
<anchor xml:id="_queue_8h_source_1l01604"/>01604 <emphasis role="comment">&#32;*&#32;to&#32;take&#32;(in&#32;the&#32;case&#32;of&#32;a&#32;semaphore).&#32;&#32;xQueueSelectFromSet()&#32;effectively</emphasis>
<anchor xml:id="_queue_8h_source_1l01605"/>01605 <emphasis role="comment">&#32;*&#32;allows&#32;a&#32;task&#32;to&#32;block&#32;(pend)&#32;on&#32;a&#32;read&#32;operation&#32;on&#32;all&#32;the&#32;queues&#32;and</emphasis>
<anchor xml:id="_queue_8h_source_1l01606"/>01606 <emphasis role="comment">&#32;*&#32;semaphores&#32;in&#32;a&#32;queue&#32;set&#32;simultaneously.</emphasis>
<anchor xml:id="_queue_8h_source_1l01607"/>01607 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01608"/>01608 <emphasis role="comment">&#32;*&#32;See&#32;FreeRTOS/Source/Demo/Common/Minimal/QueueSet.c&#32;for&#32;an&#32;example&#32;using&#32;this</emphasis>
<anchor xml:id="_queue_8h_source_1l01609"/>01609 <emphasis role="comment">&#32;*&#32;function.</emphasis>
<anchor xml:id="_queue_8h_source_1l01610"/>01610 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01611"/>01611 <emphasis role="comment">&#32;*&#32;Note&#32;1:&#32;&#32;See&#32;the&#32;documentation&#32;on&#32;http://wwwFreeRTOS.org/RTOS-queue-sets.html</emphasis>
<anchor xml:id="_queue_8h_source_1l01612"/>01612 <emphasis role="comment">&#32;*&#32;for&#32;reasons&#32;why&#32;queue&#32;sets&#32;are&#32;very&#32;rarely&#32;needed&#32;in&#32;practice&#32;as&#32;there&#32;are</emphasis>
<anchor xml:id="_queue_8h_source_1l01613"/>01613 <emphasis role="comment">&#32;*&#32;simpler&#32;methods&#32;of&#32;blocking&#32;on&#32;multiple&#32;objects.</emphasis>
<anchor xml:id="_queue_8h_source_1l01614"/>01614 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01615"/>01615 <emphasis role="comment">&#32;*&#32;Note&#32;2:&#32;&#32;Blocking&#32;on&#32;a&#32;queue&#32;set&#32;that&#32;contains&#32;a&#32;mutex&#32;will&#32;not&#32;cause&#32;the</emphasis>
<anchor xml:id="_queue_8h_source_1l01616"/>01616 <emphasis role="comment">&#32;*&#32;mutex&#32;holder&#32;to&#32;inherit&#32;the&#32;priority&#32;of&#32;the&#32;blocked&#32;task.</emphasis>
<anchor xml:id="_queue_8h_source_1l01617"/>01617 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01618"/>01618 <emphasis role="comment">&#32;*&#32;Note&#32;3:&#32;&#32;A&#32;receive&#32;(in&#32;the&#32;case&#32;of&#32;a&#32;queue)&#32;or&#32;take&#32;(in&#32;the&#32;case&#32;of&#32;a</emphasis>
<anchor xml:id="_queue_8h_source_1l01619"/>01619 <emphasis role="comment">&#32;*&#32;semaphore)&#32;operation&#32;must&#32;not&#32;be&#32;performed&#32;on&#32;a&#32;member&#32;of&#32;a&#32;queue&#32;set&#32;unless</emphasis>
<anchor xml:id="_queue_8h_source_1l01620"/>01620 <emphasis role="comment">&#32;*&#32;a&#32;call&#32;to&#32;xQueueSelectFromSet()&#32;has&#32;first&#32;returned&#32;a&#32;handle&#32;to&#32;that&#32;set&#32;member.</emphasis>
<anchor xml:id="_queue_8h_source_1l01621"/>01621 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01622"/>01622 <emphasis role="comment">&#32;*&#32;@param&#32;xQueueSet&#32;The&#32;queue&#32;set&#32;on&#32;which&#32;the&#32;task&#32;will&#32;(potentially)&#32;block.</emphasis>
<anchor xml:id="_queue_8h_source_1l01623"/>01623 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01624"/>01624 <emphasis role="comment">&#32;*&#32;@param&#32;xTicksToWait&#32;The&#32;maximum&#32;time,&#32;in&#32;ticks,&#32;that&#32;the&#32;calling&#32;task&#32;will</emphasis>
<anchor xml:id="_queue_8h_source_1l01625"/>01625 <emphasis role="comment">&#32;*&#32;remain&#32;in&#32;the&#32;Blocked&#32;state&#32;(with&#32;other&#32;tasks&#32;executing)&#32;to&#32;wait&#32;for&#32;a&#32;member</emphasis>
<anchor xml:id="_queue_8h_source_1l01626"/>01626 <emphasis role="comment">&#32;*&#32;of&#32;the&#32;queue&#32;set&#32;to&#32;be&#32;ready&#32;for&#32;a&#32;successful&#32;queue&#32;read&#32;or&#32;semaphore&#32;take</emphasis>
<anchor xml:id="_queue_8h_source_1l01627"/>01627 <emphasis role="comment">&#32;*&#32;operation.</emphasis>
<anchor xml:id="_queue_8h_source_1l01628"/>01628 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8h_source_1l01629"/>01629 <emphasis role="comment">&#32;*&#32;@return&#32;xQueueSelectFromSet()&#32;will&#32;return&#32;the&#32;handle&#32;of&#32;a&#32;queue&#32;(cast&#32;to</emphasis>
<anchor xml:id="_queue_8h_source_1l01630"/>01630 <emphasis role="comment">&#32;*&#32;a&#32;QueueSetMemberHandle_t&#32;type)&#32;contained&#32;in&#32;the&#32;queue&#32;set&#32;that&#32;contains&#32;data,</emphasis>
<anchor xml:id="_queue_8h_source_1l01631"/>01631 <emphasis role="comment">&#32;*&#32;or&#32;the&#32;handle&#32;of&#32;a&#32;semaphore&#32;(cast&#32;to&#32;a&#32;QueueSetMemberHandle_t&#32;type)&#32;contained</emphasis>
<anchor xml:id="_queue_8h_source_1l01632"/>01632 <emphasis role="comment">&#32;*&#32;in&#32;the&#32;queue&#32;set&#32;that&#32;is&#32;available,&#32;or&#32;NULL&#32;if&#32;no&#32;such&#32;queue&#32;or&#32;semaphore</emphasis>
<anchor xml:id="_queue_8h_source_1l01633"/>01633 <emphasis role="comment">&#32;*&#32;exists&#32;before&#32;before&#32;the&#32;specified&#32;block&#32;time&#32;expires.</emphasis>
<anchor xml:id="_queue_8h_source_1l01634"/>01634 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8h_source_1l01635"/><link linkend="_queue_8h_1a71f56e6277ed4e419c707c8d0c785065">01635</link> <link linkend="_struct_queue_definition">QueueSetMemberHandle_t</link>&#32;<link linkend="_queue_8h_1a71f56e6277ed4e419c707c8d0c785065">xQueueSelectFromSet</link>(&#32;<link linkend="_struct_queue_definition">QueueSetHandle_t</link>&#32;xQueueSet,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01636"/>01636 
<anchor xml:id="_queue_8h_source_1l01637"/>01637 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8h_source_1l01638"/>01638 <emphasis role="comment">&#32;*&#32;A&#32;version&#32;of&#32;xQueueSelectFromSet()&#32;that&#32;can&#32;be&#32;used&#32;from&#32;an&#32;ISR.</emphasis>
<anchor xml:id="_queue_8h_source_1l01639"/>01639 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8h_source_1l01640"/><link linkend="_queue_8h_1ac58b34fd733cf460cddab1abb9a899b3">01640</link> <link linkend="_struct_queue_definition">QueueSetMemberHandle_t</link>&#32;<link linkend="_queue_8h_1ac58b34fd733cf460cddab1abb9a899b3">xQueueSelectFromSetFromISR</link>(&#32;<link linkend="_struct_queue_definition">QueueSetHandle_t</link>&#32;xQueueSet&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01641"/>01641 
<anchor xml:id="_queue_8h_source_1l01642"/>01642 <emphasis role="comment">/*&#32;Not&#32;public&#32;API&#32;functions.&#32;*/</emphasis>
<anchor xml:id="_queue_8h_source_1l01643"/>01643 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_queue_8h_1abaa0f8224837d82e60cf799127185546">vQueueWaitForMessageRestricted</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xWaitIndefinitely&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01644"/>01644 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8h_1a3c13a9fe455ec2d35b5f8386a1040599">xQueueGenericReset</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>,&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xNewQueue&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01645"/>01645 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_queue_8h_1a37c8b0ea8f2e6c5fa5082afb9721f986">vQueueSetQueueNumber</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>,&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_struct_queue_definition_1a1b422cf046da7afa63a0646ed6a2e8c6">uxQueueNumber</link>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01646"/>01646 <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_queue_8h_1a7f7a4d9b75dcfbcefb2384da5df5290e">uxQueueGetQueueNumber</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01647"/>01647 uint8_t&#32;<link linkend="_queue_8h_1a9730db0a2f63acbf7197fa4150d7fe08">ucQueueGetQueueType</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8h_source_1l01648"/>01648 
<anchor xml:id="_queue_8h_source_1l01649"/>01649 
<anchor xml:id="_queue_8h_source_1l01650"/>01650 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
<anchor xml:id="_queue_8h_source_1l01651"/>01651 }
<anchor xml:id="_queue_8h_source_1l01652"/>01652 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_queue_8h_source_1l01653"/>01653 
<anchor xml:id="_queue_8h_source_1l01654"/>01654 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;QUEUE_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8h_source_1l01655"/>01655 
</programlisting></section>
