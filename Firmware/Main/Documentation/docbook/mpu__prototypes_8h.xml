<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_mpu__prototypes_8h" xml:lang="en-US">
<title>FreeRTOS/mpu_prototypes.h File Reference</title>
<indexterm><primary>FreeRTOS/mpu_prototypes.h</primary></indexterm>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1a53ce0915f0062120137efcc89b415715">MPU_xTaskCreate</link> (<link linkend="_projdefs_8h_1a9b32502ff92c255c686dacde53c1cba0">TaskFunction_t</link> pxTaskCode, const char *const pcName, const uint16_t usStackDepth, void *const pvParameters, <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxPriority, <link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> *const pxCreatedTask) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> <link linkend="_mpu__prototypes_8h_1a3265dccf6178f6b886cf0743886b7662">MPU_xTaskCreateStatic</link> (<link linkend="_projdefs_8h_1a9b32502ff92c255c686dacde53c1cba0">TaskFunction_t</link> pxTaskCode, const char *const pcName, const uint32_t ulStackDepth, void *const pvParameters, <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxPriority, <link linkend="_portmacro_8h_1aa73b01e0200940d619095fb74fb3030b">StackType_t</link> *const puxStackBuffer, <link linkend="__free_r_t_o_s_8h_1af0002e4ad72220b34b95fcdf43bcd82d">StaticTask_t</link> *const pxTaskBuffer) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1aaf2329942140771305220948bc69b1b0">MPU_xTaskCreateRestricted</link> (const <link linkend="_task_8h_1a388dc3e95bc2a93a2841a8d1e49634f3">TaskParameters_t</link> *const pxTaskDefinition, <link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> *pxCreatedTask) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1a0a1c9271074f19d7d3ec5de2cfd4971f">MPU_xTaskCreateRestrictedStatic</link> (const <link linkend="_task_8h_1a388dc3e95bc2a93a2841a8d1e49634f3">TaskParameters_t</link> *const pxTaskDefinition, <link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> *pxCreatedTask) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>void <link linkend="_mpu__prototypes_8h_1a9960d84fdd937f613a2a1255db733263">MPU_vTaskAllocateMPURegions</link> (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTask, const <link linkend="_task_8h_1abc1e4d1b3f52e2a9101487e1831b992a">MemoryRegion_t</link> *const pxRegions) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>void <link linkend="_mpu__prototypes_8h_1accbd3a6ed5d7bf2f8689a04b6b3f72d3">MPU_vTaskDelete</link> (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTaskToDelete) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>void <link linkend="_mpu__prototypes_8h_1a66ead786f745d188bbd3d0bf30c51069">MPU_vTaskDelay</link> (const <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToDelay) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>void <link linkend="_mpu__prototypes_8h_1ad50c8ffb6798f50f7b0cc901f35c603f">MPU_vTaskDelayUntil</link> (<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> *const pxPreviousWakeTime, const <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTimeIncrement) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1a5789e4f7340c707c713afa6165ca3363">MPU_xTaskAbortDelay</link> (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTask) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> <link linkend="_mpu__prototypes_8h_1a27c701344d8bab83d9cb1d1cd5aca487">MPU_uxTaskPriorityGet</link> (const <link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTask) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_task_8h_1a1749369458e2282a22e862a619a3892c">eTaskState</link> <link linkend="_mpu__prototypes_8h_1a2fa518228b2b8cf0d56868d26744a9b5">MPU_eTaskGetState</link> (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTask) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>void <link linkend="_mpu__prototypes_8h_1a9232f18c3a1657f0b2aa3c6c011a341e">MPU_vTaskGetInfo</link> (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTask, <link linkend="_task_8h_1ae5c0c4b9b2c8af5836583b2984ef5b6e">TaskStatus_t</link> *pxTaskStatus, <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> xGetFreeStackSpace, <link linkend="_task_8h_1a1749369458e2282a22e862a619a3892c">eTaskState</link> eState) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>void <link linkend="_mpu__prototypes_8h_1a8665769af5e4e4dd56ba3b72ba9e933b">MPU_vTaskPrioritySet</link> (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTask, <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxNewPriority) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>void <link linkend="_mpu__prototypes_8h_1a2456fbe3861db2f8e5df961a2fc0ad25">MPU_vTaskSuspend</link> (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTaskToSuspend) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>void <link linkend="_mpu__prototypes_8h_1a5116e0f1df45bba9e351e54fff6e8d14">MPU_vTaskResume</link> (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTaskToResume) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>void <link linkend="_mpu__prototypes_8h_1a67bc097861923c6eee50b87b8655c412">MPU_vTaskStartScheduler</link> (void) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>void <link linkend="_mpu__prototypes_8h_1a383cc2047ccf2b6bcbca1ec65229ab70">MPU_vTaskSuspendAll</link> (void) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1ac0ae320f4e0d00e2f642b7677268a5fc">MPU_xTaskResumeAll</link> (void) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> <link linkend="_mpu__prototypes_8h_1a3f40c6063f43373dc4208989db24eb7d">MPU_xTaskGetTickCount</link> (void) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> <link linkend="_mpu__prototypes_8h_1a034d9f2f59ea4aa37bd67a4c9d4b3cd5">MPU_uxTaskGetNumberOfTasks</link> (void) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>char * <link linkend="_mpu__prototypes_8h_1a1b5d2f4bc4dde0a435298cebcf68073d">MPU_pcTaskGetName</link> (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTaskToQuery) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> <link linkend="_mpu__prototypes_8h_1a64a8ffb45977a187281e0316226f7a9c">MPU_xTaskGetHandle</link> (const char *pcNameToQuery) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> <link linkend="_mpu__prototypes_8h_1ade37d3f7d9b904e7b0a427b8562f6c9d">MPU_uxTaskGetStackHighWaterMark</link> (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTask) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="__free_r_t_o_s_8h_1ae4e85bffd36d76cf2796092f0ccd784a">configSTACK_DEPTH_TYPE</link> <link linkend="_mpu__prototypes_8h_1a99dd993526c3d8b4ebb4e39007faa9ad">MPU_uxTaskGetStackHighWaterMark2</link> (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTask) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>void <link linkend="_mpu__prototypes_8h_1a9db7ba4634b70ce01c3c80b94930ac57">MPU_vTaskSetApplicationTaskTag</link> (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTask, <link linkend="_task_8h_1af984026250bf8fece2e0068874d4661d">TaskHookFunction_t</link> pxHookFunction) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_task_8h_1af984026250bf8fece2e0068874d4661d">TaskHookFunction_t</link> <link linkend="_mpu__prototypes_8h_1ab96febf9ce3574ebbc73f07d798156f6">MPU_xTaskGetApplicationTaskTag</link> (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTask) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>void <link linkend="_mpu__prototypes_8h_1a1c57bdf4ed6db4253d3e7a4968e3770d">MPU_vTaskSetThreadLocalStoragePointer</link> (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTaskToSet, <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> xIndex, void *pvValue) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>void * <link linkend="_mpu__prototypes_8h_1a2acc94cad7d66a2c51018c2d8e0de2a7">MPU_pvTaskGetThreadLocalStoragePointer</link> (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTaskToQuery, <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> xIndex) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1a49c1dbec95aef701cb84a1bd3b5e21b6">MPU_xTaskCallApplicationTaskHook</link> (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTask, void *pvParameter) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> <link linkend="_mpu__prototypes_8h_1adea5fb61044c3b5538d958680b1edd85">MPU_xTaskGetIdleTaskHandle</link> (void) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> <link linkend="_mpu__prototypes_8h_1af76f3597175bac3f84ca4f7494433068">MPU_uxTaskGetSystemState</link> (<link linkend="_task_8h_1ae5c0c4b9b2c8af5836583b2984ef5b6e">TaskStatus_t</link> *const pxTaskStatusArray, const <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxArraySize, uint32_t *const pulTotalRunTime) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> <link linkend="_mpu__prototypes_8h_1a4d85671d7c5ff17b56acacc6a21905f8">MPU_xTaskGetIdleRunTimeCounter</link> (void) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>void <link linkend="_mpu__prototypes_8h_1a21b44bd0c658199fe3b0ffb0266811e7">MPU_vTaskList</link> (char *pcWriteBuffer) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>void <link linkend="_mpu__prototypes_8h_1ae8018fcf78cd91a7c3c256aa6fee1f7a">MPU_vTaskGetRunTimeStats</link> (char *pcWriteBuffer) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1a3e782699de49b0bf8382df0b05c1a967">MPU_xTaskGenericNotify</link> (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTaskToNotify, uint32_t ulValue, <link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233">eNotifyAction</link> eAction, uint32_t *pulPreviousNotificationValue) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1ac160d248a7ac595a078301610aeea5eb">MPU_xTaskNotifyWait</link> (uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t *pulNotificationValue, <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>uint32_t <link linkend="_mpu__prototypes_8h_1aaf2f2946284b2684ffb04dc8b5461dd7">MPU_ulTaskNotifyTake</link> (<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> xClearCountOnExit, <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1a5c5655bc7656778174b357ea86540993">MPU_xTaskNotifyStateClear</link> (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTask) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1a7546d90ed3ddac32550096dc6b37c35e">MPU_xTaskIncrementTick</link> (void) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> <link linkend="_mpu__prototypes_8h_1ae3a1c8aeb60aa75841a2d224bb0765ec">MPU_xTaskGetCurrentTaskHandle</link> (void) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>void <link linkend="_mpu__prototypes_8h_1ace70e5eeb78a37b7d151400cf84ac11c">MPU_vTaskSetTimeOutState</link> (<link linkend="_task_8h_1a558b407b5433bee1696535e3c4816bdf">TimeOut_t</link> *const pxTimeOut) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1a6a32c460aa7ea2dd09aaec9df8c1cf13">MPU_xTaskCheckForTimeOut</link> (<link linkend="_task_8h_1a558b407b5433bee1696535e3c4816bdf">TimeOut_t</link> *const pxTimeOut, <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> *const pxTicksToWait) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>void <link linkend="_mpu__prototypes_8h_1a37c11080d93ec1bec5819ef3f527259f">MPU_vTaskMissedYield</link> (void) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1ae67d37ffe2e61cfc3ffc8bae3b46af83">MPU_xTaskGetSchedulerState</link> (void) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1a8bdf259f59261ca4aa1e558754b4aea1">MPU_xQueueGenericSend</link> (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue, const void *const pvItemToQueue, <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait, const <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> xCopyPosition) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1ad4f20d999158d27585199f957650ceda">MPU_xQueueReceive</link> (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue, void *const pvBuffer, <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1ab43f2a1eabbc923c4f7cea113c29c2a8">MPU_xQueuePeek</link> (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue, void *const pvBuffer, <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1a4109a6df9e1ff8f7469cfe94b4258fe0">MPU_xQueueSemaphoreTake</link> (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue, <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> <link linkend="_mpu__prototypes_8h_1a7db460ed658e169261ecca82fabf277e">MPU_uxQueueMessagesWaiting</link> (const <link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> <link linkend="_mpu__prototypes_8h_1a67aec1ebd939c5f98116a8ff03b2ed58">MPU_uxQueueSpacesAvailable</link> (const <link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>void <link linkend="_mpu__prototypes_8h_1a08116a96ea4b07eda68f3e4aa6897b51">MPU_vQueueDelete</link> (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> <link linkend="_mpu__prototypes_8h_1a16739521de6a7034e0d4181e65d8ed93">MPU_xQueueCreateMutex</link> (const uint8_t ucQueueType) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> <link linkend="_mpu__prototypes_8h_1ab081f53ca41be95c6a47f89b4790ef23">MPU_xQueueCreateMutexStatic</link> (const uint8_t ucQueueType, <link linkend="__free_r_t_o_s_8h_1a22e8979e2849d002747c0dd4c7c37908">StaticQueue_t</link> *pxStaticQueue) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> <link linkend="_mpu__prototypes_8h_1a013ee62a2ce409e0104bcff21dfd5475">MPU_xQueueCreateCountingSemaphore</link> (const <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxMaxCount, const <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxInitialCount) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> <link linkend="_mpu__prototypes_8h_1ad31f76df40e5fb782fe73c9e8bd0aee0">MPU_xQueueCreateCountingSemaphoreStatic</link> (const <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxMaxCount, const <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxInitialCount, <link linkend="__free_r_t_o_s_8h_1a22e8979e2849d002747c0dd4c7c37908">StaticQueue_t</link> *pxStaticQueue) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> <link linkend="_mpu__prototypes_8h_1af26242a4ac286d585bac42296cfb77f3">MPU_xQueueGetMutexHolder</link> (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xSemaphore) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1a70f3b09df93e0432b3b35fe6165cda92">MPU_xQueueTakeMutexRecursive</link> (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xMutex, <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1aeaa5eb80b801575e6174a5fc1f6ce5e9">MPU_xQueueGiveMutexRecursive</link> (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> pxMutex) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>void <link linkend="_mpu__prototypes_8h_1a6fdce2c19119af65e8d212a9f667ec10">MPU_vQueueAddToRegistry</link> (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue, const char *pcName) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>void <link linkend="_mpu__prototypes_8h_1a867c601d5d2b5786ada881721e14bdd7">MPU_vQueueUnregisterQueue</link> (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>const char * <link linkend="_mpu__prototypes_8h_1ab9a042a08bd0c113b7cd9eb4fd9a3ed7">MPU_pcQueueGetName</link> (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> <link linkend="_mpu__prototypes_8h_1a38b0af82b18009ebbb51c18e9f8c4c34">MPU_xQueueGenericCreate</link> (const <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxQueueLength, const <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxItemSize, const uint8_t ucQueueType) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> <link linkend="_mpu__prototypes_8h_1a50251e0cdfe07ba2ac3317425f1c7d8c">MPU_xQueueGenericCreateStatic</link> (const <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxQueueLength, const <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxItemSize, uint8_t *pucQueueStorage, <link linkend="__free_r_t_o_s_8h_1a22e8979e2849d002747c0dd4c7c37908">StaticQueue_t</link> *pxStaticQueue, const uint8_t ucQueueType) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_queue_8h_1a1ae056fb02b2467993003b85111dde16">QueueSetHandle_t</link> <link linkend="_mpu__prototypes_8h_1af593d33910a905d35e2d37cde64f059d">MPU_xQueueCreateSet</link> (const <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxEventQueueLength) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1aec6e3a8dd0c477fd6ef7de0b09871b9d">MPU_xQueueAddToSet</link> (<link linkend="_queue_8h_1afac7ec7649e5c57381315eb011c36ef5">QueueSetMemberHandle_t</link> xQueueOrSemaphore, <link linkend="_queue_8h_1a1ae056fb02b2467993003b85111dde16">QueueSetHandle_t</link> xQueueSet) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1a3fed9edbb48b7328e15d2073526b0e00">MPU_xQueueRemoveFromSet</link> (<link linkend="_queue_8h_1afac7ec7649e5c57381315eb011c36ef5">QueueSetMemberHandle_t</link> xQueueOrSemaphore, <link linkend="_queue_8h_1a1ae056fb02b2467993003b85111dde16">QueueSetHandle_t</link> xQueueSet) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_queue_8h_1afac7ec7649e5c57381315eb011c36ef5">QueueSetMemberHandle_t</link> <link linkend="_mpu__prototypes_8h_1adcaae3a3754d63ab4bc0eb0f1c84c261">MPU_xQueueSelectFromSet</link> (<link linkend="_queue_8h_1a1ae056fb02b2467993003b85111dde16">QueueSetHandle_t</link> xQueueSet, const <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1a7d10ee03f3b7ef49895d74aea86a5627">MPU_xQueueGenericReset</link> (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue, <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> xNewQueue) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>void <link linkend="_mpu__prototypes_8h_1a9c3be1dd3202967efaa54c084a38d0b0">MPU_vQueueSetQueueNumber</link> (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue, <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxQueueNumber) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> <link linkend="_mpu__prototypes_8h_1a86304b09daa9009424fce09e01fdc261">MPU_uxQueueGetQueueNumber</link> (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>uint8_t <link linkend="_mpu__prototypes_8h_1ad6f448261df0ec3f071435664916ca88">MPU_ucQueueGetQueueType</link> (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6">TimerHandle_t</link> <link linkend="_mpu__prototypes_8h_1a7bdcebee972b0961a644e9fcd5ebb841">MPU_xTimerCreate</link> (const char *const pcTimerName, const <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTimerPeriodInTicks, const <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxAutoReload, void *const pvTimerID, <link linkend="_timers_8h_1a5cf6d1f61ccd4871022ed8ad454c6027">TimerCallbackFunction_t</link> pxCallbackFunction) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6">TimerHandle_t</link> <link linkend="_mpu__prototypes_8h_1ae33d477de9b2dd90e9563e06199034b0">MPU_xTimerCreateStatic</link> (const char *const pcTimerName, const <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTimerPeriodInTicks, const <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxAutoReload, void *const pvTimerID, <link linkend="_timers_8h_1a5cf6d1f61ccd4871022ed8ad454c6027">TimerCallbackFunction_t</link> pxCallbackFunction, <link linkend="__free_r_t_o_s_8h_1a85fc227d111ec21647641e0deddcccc6">StaticTimer_t</link> *pxTimerBuffer) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>void * <link linkend="_mpu__prototypes_8h_1ac2d59e15a2cd5f67e17171d56e0caa1e">MPU_pvTimerGetTimerID</link> (const <link linkend="_timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6">TimerHandle_t</link> xTimer) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>void <link linkend="_mpu__prototypes_8h_1adf37969b9e6496069f779ce5b095cc6c">MPU_vTimerSetTimerID</link> (<link linkend="_timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6">TimerHandle_t</link> xTimer, void *pvNewID) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1adde8656afd37de6481ee64c7f7915748">MPU_xTimerIsTimerActive</link> (<link linkend="_timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6">TimerHandle_t</link> xTimer) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> <link linkend="_mpu__prototypes_8h_1a7c25c579e997e4da978f1429786aaab3">MPU_xTimerGetTimerDaemonTaskHandle</link> (void) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1a5c6a5a9e79aede72337f2cf46f519e6f">MPU_xTimerPendFunctionCall</link> (<link linkend="_timers_8h_1af6e8e2be58df2be9f9bb808fcdc51622">PendedFunction_t</link> xFunctionToPend, void *pvParameter1, uint32_t ulParameter2, <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>const char * <link linkend="_mpu__prototypes_8h_1a0b38b36f328cd390d9a7c8b08fcfa252">MPU_pcTimerGetName</link> (<link linkend="_timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6">TimerHandle_t</link> xTimer) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>void <link linkend="_mpu__prototypes_8h_1a5ee11a468b7646ce12c6f9b66f5b8e8b">MPU_vTimerSetReloadMode</link> (<link linkend="_timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6">TimerHandle_t</link> xTimer, const <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxAutoReload) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> <link linkend="_mpu__prototypes_8h_1a2830e439084d1da4cf6ce92ba59ee916">MPU_xTimerGetPeriod</link> (<link linkend="_timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6">TimerHandle_t</link> xTimer) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> <link linkend="_mpu__prototypes_8h_1a41b59bbb282e99aca3fc57e568d5f29c">MPU_xTimerGetExpiryTime</link> (<link linkend="_timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6">TimerHandle_t</link> xTimer) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1a9d1f63646824f4a2cf015def907d9681">MPU_xTimerCreateTimerTask</link> (void) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1aff117583cd279a1afd30d1cebb198d38">MPU_xTimerGenericCommand</link> (<link linkend="_timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6">TimerHandle_t</link> xTimer, const <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> xCommandID, const <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xOptionalValue, <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> *const pxHigherPriorityTaskWoken, const <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed">EventGroupHandle_t</link> <link linkend="_mpu__prototypes_8h_1ab7648c05a9be0e8fd5f81645ca45f475">MPU_xEventGroupCreate</link> (void) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed">EventGroupHandle_t</link> <link linkend="_mpu__prototypes_8h_1a53f543ead37e3ee8b947e3e78a622a2a">MPU_xEventGroupCreateStatic</link> (<link linkend="__free_r_t_o_s_8h_1af87e218149130753afb4a7044e5569e6">StaticEventGroup_t</link> *pxEventGroupBuffer) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link> <link linkend="_mpu__prototypes_8h_1afb424c1d20e00b23d597d63acb06fabb">MPU_xEventGroupWaitBits</link> (<link linkend="_event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed">EventGroupHandle_t</link> xEventGroup, const <link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link> uxBitsToWaitFor, const <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> xClearOnExit, const <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> xWaitForAllBits, <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link> <link linkend="_mpu__prototypes_8h_1adf34d4972866b0605d7a09d544555ccc">MPU_xEventGroupClearBits</link> (<link linkend="_event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed">EventGroupHandle_t</link> xEventGroup, const <link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link> uxBitsToClear) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link> <link linkend="_mpu__prototypes_8h_1a2c5b9a954c46a85f29cf0340aaee108a">MPU_xEventGroupSetBits</link> (<link linkend="_event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed">EventGroupHandle_t</link> xEventGroup, const <link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link> uxBitsToSet) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link> <link linkend="_mpu__prototypes_8h_1a6e8e545c245c8e1edfa21fa2dcc312ce">MPU_xEventGroupSync</link> (<link linkend="_event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed">EventGroupHandle_t</link> xEventGroup, const <link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link> uxBitsToSet, const <link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link> uxBitsToWaitFor, <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>void <link linkend="_mpu__prototypes_8h_1a7ea31095d7d8ec2a662cf3666085d720">MPU_vEventGroupDelete</link> (<link linkend="_event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed">EventGroupHandle_t</link> xEventGroup) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> <link linkend="_mpu__prototypes_8h_1ac29852a476fa4ed087cbe356023e8015">MPU_uxEventGroupGetNumber</link> (void *xEventGroup) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>size_t <link linkend="_mpu__prototypes_8h_1a52e63f26c50a655b89e236008512bffa">MPU_xStreamBufferSend</link> (<link linkend="_stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f">StreamBufferHandle_t</link> xStreamBuffer, const void *pvTxData, size_t xDataLengthBytes, <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>size_t <link linkend="_mpu__prototypes_8h_1a3e0fbebc55f824c250b7eff4b1f7d765">MPU_xStreamBufferReceive</link> (<link linkend="_stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f">StreamBufferHandle_t</link> xStreamBuffer, void *pvRxData, size_t xBufferLengthBytes, <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>size_t <link linkend="_mpu__prototypes_8h_1a2aa538546170875bce7263e959646635">MPU_xStreamBufferNextMessageLengthBytes</link> (<link linkend="_stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f">StreamBufferHandle_t</link> xStreamBuffer) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>void <link linkend="_mpu__prototypes_8h_1a1644bcafaedcc89ff26c3d066ae45bb2">MPU_vStreamBufferDelete</link> (<link linkend="_stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f">StreamBufferHandle_t</link> xStreamBuffer) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1a40bb70472e5399a601a95eecbf6314fa">MPU_xStreamBufferIsFull</link> (<link linkend="_stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f">StreamBufferHandle_t</link> xStreamBuffer) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1a62da4dc560bc0181279b9571c835e8e6">MPU_xStreamBufferIsEmpty</link> (<link linkend="_stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f">StreamBufferHandle_t</link> xStreamBuffer) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1a6264274cc7d35c512555302523c92f8a">MPU_xStreamBufferReset</link> (<link linkend="_stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f">StreamBufferHandle_t</link> xStreamBuffer) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>size_t <link linkend="_mpu__prototypes_8h_1aa66eeea4312467f943cf179b2a8061ef">MPU_xStreamBufferSpacesAvailable</link> (<link linkend="_stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f">StreamBufferHandle_t</link> xStreamBuffer) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para>size_t <link linkend="_mpu__prototypes_8h_1a976371f94aceef5da18188c63bf974f7">MPU_xStreamBufferBytesAvailable</link> (<link linkend="_stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f">StreamBufferHandle_t</link> xStreamBuffer) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> <link linkend="_mpu__prototypes_8h_1ac869cab40fbc949e37b98eac6e10cb0a">MPU_xStreamBufferSetTriggerLevel</link> (<link linkend="_stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f">StreamBufferHandle_t</link> xStreamBuffer, size_t xTriggerLevel) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f">StreamBufferHandle_t</link> <link linkend="_mpu__prototypes_8h_1a573ef004bbddcbb9ba99e914a481b900">MPU_xStreamBufferGenericCreate</link> (size_t xBufferSizeBytes, size_t xTriggerLevelBytes, <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> xIsMessageBuffer) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
            <listitem><para><link linkend="_stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f">StreamBufferHandle_t</link> <link linkend="_mpu__prototypes_8h_1a30c184d8209f81a8e0d105b4cb0cd620">MPU_xStreamBufferGenericCreateStatic</link> (size_t xBufferSizeBytes, size_t xTriggerLevelBytes, <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> xIsMessageBuffer, uint8_t *const pucStreamBufferStorageArea, <link linkend="__free_r_t_o_s_8h_1a3675ce07f6d3e0e7130bc6ea01162d34">StaticStreamBuffer_t</link> *const pxStaticStreamBuffer) <link linkend="_mpu__wrappers_8h_1a89028881b88837beb0733993c8ce5f2b">FREERTOS_SYSTEM_CALL</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_mpu__prototypes_8h_1a2fa518228b2b8cf0d56868d26744a9b5"/><section>
    <title>MPU_eTaskGetState()</title>
<indexterm><primary>MPU_eTaskGetState</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_eTaskGetState</secondary></indexterm>
<para><computeroutput><link linkend="_task_8h_1a1749369458e2282a22e862a619a3892c">eTaskState</link> MPU_eTaskGetState (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTask)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1ab9a042a08bd0c113b7cd9eb4fd9a3ed7"/><section>
    <title>MPU_pcQueueGetName()</title>
<indexterm><primary>MPU_pcQueueGetName</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_pcQueueGetName</secondary></indexterm>
<para><computeroutput>const char * MPU_pcQueueGetName (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a1b5d2f4bc4dde0a435298cebcf68073d"/><section>
    <title>MPU_pcTaskGetName()</title>
<indexterm><primary>MPU_pcTaskGetName</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_pcTaskGetName</secondary></indexterm>
<para><computeroutput>char * MPU_pcTaskGetName (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTaskToQuery)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a0b38b36f328cd390d9a7c8b08fcfa252"/><section>
    <title>MPU_pcTimerGetName()</title>
<indexterm><primary>MPU_pcTimerGetName</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_pcTimerGetName</secondary></indexterm>
<para><computeroutput>const char * MPU_pcTimerGetName (<link linkend="_timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6">TimerHandle_t</link> xTimer)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a2acc94cad7d66a2c51018c2d8e0de2a7"/><section>
    <title>MPU_pvTaskGetThreadLocalStoragePointer()</title>
<indexterm><primary>MPU_pvTaskGetThreadLocalStoragePointer</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_pvTaskGetThreadLocalStoragePointer</secondary></indexterm>
<para><computeroutput>void * MPU_pvTaskGetThreadLocalStoragePointer (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTaskToQuery, <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> xIndex)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1ac2d59e15a2cd5f67e17171d56e0caa1e"/><section>
    <title>MPU_pvTimerGetTimerID()</title>
<indexterm><primary>MPU_pvTimerGetTimerID</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_pvTimerGetTimerID</secondary></indexterm>
<para><computeroutput>void * MPU_pvTimerGetTimerID (const <link linkend="_timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6">TimerHandle_t</link> xTimer)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1ad6f448261df0ec3f071435664916ca88"/><section>
    <title>MPU_ucQueueGetQueueType()</title>
<indexterm><primary>MPU_ucQueueGetQueueType</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_ucQueueGetQueueType</secondary></indexterm>
<para><computeroutput>uint8_t MPU_ucQueueGetQueueType (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1aaf2f2946284b2684ffb04dc8b5461dd7"/><section>
    <title>MPU_ulTaskNotifyTake()</title>
<indexterm><primary>MPU_ulTaskNotifyTake</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_ulTaskNotifyTake</secondary></indexterm>
<para><computeroutput>uint32_t MPU_ulTaskNotifyTake (<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> xClearCountOnExit, <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1ac29852a476fa4ed087cbe356023e8015"/><section>
    <title>MPU_uxEventGroupGetNumber()</title>
<indexterm><primary>MPU_uxEventGroupGetNumber</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_uxEventGroupGetNumber</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> MPU_uxEventGroupGetNumber (void * xEventGroup)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a86304b09daa9009424fce09e01fdc261"/><section>
    <title>MPU_uxQueueGetQueueNumber()</title>
<indexterm><primary>MPU_uxQueueGetQueueNumber</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_uxQueueGetQueueNumber</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> MPU_uxQueueGetQueueNumber (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a7db460ed658e169261ecca82fabf277e"/><section>
    <title>MPU_uxQueueMessagesWaiting()</title>
<indexterm><primary>MPU_uxQueueMessagesWaiting</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_uxQueueMessagesWaiting</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> MPU_uxQueueMessagesWaiting (const <link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a67aec1ebd939c5f98116a8ff03b2ed58"/><section>
    <title>MPU_uxQueueSpacesAvailable()</title>
<indexterm><primary>MPU_uxQueueSpacesAvailable</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_uxQueueSpacesAvailable</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> MPU_uxQueueSpacesAvailable (const <link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a034d9f2f59ea4aa37bd67a4c9d4b3cd5"/><section>
    <title>MPU_uxTaskGetNumberOfTasks()</title>
<indexterm><primary>MPU_uxTaskGetNumberOfTasks</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_uxTaskGetNumberOfTasks</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> MPU_uxTaskGetNumberOfTasks (void )</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1ade37d3f7d9b904e7b0a427b8562f6c9d"/><section>
    <title>MPU_uxTaskGetStackHighWaterMark()</title>
<indexterm><primary>MPU_uxTaskGetStackHighWaterMark</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_uxTaskGetStackHighWaterMark</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> MPU_uxTaskGetStackHighWaterMark (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTask)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a99dd993526c3d8b4ebb4e39007faa9ad"/><section>
    <title>MPU_uxTaskGetStackHighWaterMark2()</title>
<indexterm><primary>MPU_uxTaskGetStackHighWaterMark2</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_uxTaskGetStackHighWaterMark2</secondary></indexterm>
<para><computeroutput><link linkend="__free_r_t_o_s_8h_1ae4e85bffd36d76cf2796092f0ccd784a">configSTACK_DEPTH_TYPE</link> MPU_uxTaskGetStackHighWaterMark2 (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTask)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1af76f3597175bac3f84ca4f7494433068"/><section>
    <title>MPU_uxTaskGetSystemState()</title>
<indexterm><primary>MPU_uxTaskGetSystemState</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_uxTaskGetSystemState</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> MPU_uxTaskGetSystemState (<link linkend="_task_8h_1ae5c0c4b9b2c8af5836583b2984ef5b6e">TaskStatus_t</link> *const pxTaskStatusArray, const <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxArraySize, uint32_t *const pulTotalRunTime)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a27c701344d8bab83d9cb1d1cd5aca487"/><section>
    <title>MPU_uxTaskPriorityGet()</title>
<indexterm><primary>MPU_uxTaskPriorityGet</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_uxTaskPriorityGet</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> MPU_uxTaskPriorityGet (const <link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTask)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a7ea31095d7d8ec2a662cf3666085d720"/><section>
    <title>MPU_vEventGroupDelete()</title>
<indexterm><primary>MPU_vEventGroupDelete</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_vEventGroupDelete</secondary></indexterm>
<para><computeroutput>void MPU_vEventGroupDelete (<link linkend="_event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed">EventGroupHandle_t</link> xEventGroup)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a6fdce2c19119af65e8d212a9f667ec10"/><section>
    <title>MPU_vQueueAddToRegistry()</title>
<indexterm><primary>MPU_vQueueAddToRegistry</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_vQueueAddToRegistry</secondary></indexterm>
<para><computeroutput>void MPU_vQueueAddToRegistry (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue, const char * pcName)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a08116a96ea4b07eda68f3e4aa6897b51"/><section>
    <title>MPU_vQueueDelete()</title>
<indexterm><primary>MPU_vQueueDelete</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_vQueueDelete</secondary></indexterm>
<para><computeroutput>void MPU_vQueueDelete (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a9c3be1dd3202967efaa54c084a38d0b0"/><section>
    <title>MPU_vQueueSetQueueNumber()</title>
<indexterm><primary>MPU_vQueueSetQueueNumber</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_vQueueSetQueueNumber</secondary></indexterm>
<para><computeroutput>void MPU_vQueueSetQueueNumber (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue, <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxQueueNumber)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a867c601d5d2b5786ada881721e14bdd7"/><section>
    <title>MPU_vQueueUnregisterQueue()</title>
<indexterm><primary>MPU_vQueueUnregisterQueue</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_vQueueUnregisterQueue</secondary></indexterm>
<para><computeroutput>void MPU_vQueueUnregisterQueue (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a1644bcafaedcc89ff26c3d066ae45bb2"/><section>
    <title>MPU_vStreamBufferDelete()</title>
<indexterm><primary>MPU_vStreamBufferDelete</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_vStreamBufferDelete</secondary></indexterm>
<para><computeroutput>void MPU_vStreamBufferDelete (<link linkend="_stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f">StreamBufferHandle_t</link> xStreamBuffer)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a9960d84fdd937f613a2a1255db733263"/><section>
    <title>MPU_vTaskAllocateMPURegions()</title>
<indexterm><primary>MPU_vTaskAllocateMPURegions</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_vTaskAllocateMPURegions</secondary></indexterm>
<para><computeroutput>void MPU_vTaskAllocateMPURegions (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTask, const <link linkend="_task_8h_1abc1e4d1b3f52e2a9101487e1831b992a">MemoryRegion_t</link> *const pxRegions)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a66ead786f745d188bbd3d0bf30c51069"/><section>
    <title>MPU_vTaskDelay()</title>
<indexterm><primary>MPU_vTaskDelay</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_vTaskDelay</secondary></indexterm>
<para><computeroutput>void MPU_vTaskDelay (const <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToDelay)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1ad50c8ffb6798f50f7b0cc901f35c603f"/><section>
    <title>MPU_vTaskDelayUntil()</title>
<indexterm><primary>MPU_vTaskDelayUntil</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_vTaskDelayUntil</secondary></indexterm>
<para><computeroutput>void MPU_vTaskDelayUntil (<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> *const pxPreviousWakeTime, const <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTimeIncrement)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1accbd3a6ed5d7bf2f8689a04b6b3f72d3"/><section>
    <title>MPU_vTaskDelete()</title>
<indexterm><primary>MPU_vTaskDelete</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_vTaskDelete</secondary></indexterm>
<para><computeroutput>void MPU_vTaskDelete (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTaskToDelete)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a9232f18c3a1657f0b2aa3c6c011a341e"/><section>
    <title>MPU_vTaskGetInfo()</title>
<indexterm><primary>MPU_vTaskGetInfo</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_vTaskGetInfo</secondary></indexterm>
<para><computeroutput>void MPU_vTaskGetInfo (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTask, <link linkend="_task_8h_1ae5c0c4b9b2c8af5836583b2984ef5b6e">TaskStatus_t</link> * pxTaskStatus, <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> xGetFreeStackSpace, <link linkend="_task_8h_1a1749369458e2282a22e862a619a3892c">eTaskState</link> eState)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1ae8018fcf78cd91a7c3c256aa6fee1f7a"/><section>
    <title>MPU_vTaskGetRunTimeStats()</title>
<indexterm><primary>MPU_vTaskGetRunTimeStats</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_vTaskGetRunTimeStats</secondary></indexterm>
<para><computeroutput>void MPU_vTaskGetRunTimeStats (char * pcWriteBuffer)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a21b44bd0c658199fe3b0ffb0266811e7"/><section>
    <title>MPU_vTaskList()</title>
<indexterm><primary>MPU_vTaskList</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_vTaskList</secondary></indexterm>
<para><computeroutput>void MPU_vTaskList (char * pcWriteBuffer)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a37c11080d93ec1bec5819ef3f527259f"/><section>
    <title>MPU_vTaskMissedYield()</title>
<indexterm><primary>MPU_vTaskMissedYield</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_vTaskMissedYield</secondary></indexterm>
<para><computeroutput>void MPU_vTaskMissedYield (void )</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a8665769af5e4e4dd56ba3b72ba9e933b"/><section>
    <title>MPU_vTaskPrioritySet()</title>
<indexterm><primary>MPU_vTaskPrioritySet</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_vTaskPrioritySet</secondary></indexterm>
<para><computeroutput>void MPU_vTaskPrioritySet (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTask, <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxNewPriority)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a5116e0f1df45bba9e351e54fff6e8d14"/><section>
    <title>MPU_vTaskResume()</title>
<indexterm><primary>MPU_vTaskResume</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_vTaskResume</secondary></indexterm>
<para><computeroutput>void MPU_vTaskResume (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTaskToResume)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a9db7ba4634b70ce01c3c80b94930ac57"/><section>
    <title>MPU_vTaskSetApplicationTaskTag()</title>
<indexterm><primary>MPU_vTaskSetApplicationTaskTag</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_vTaskSetApplicationTaskTag</secondary></indexterm>
<para><computeroutput>void MPU_vTaskSetApplicationTaskTag (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTask, <link linkend="_task_8h_1af984026250bf8fece2e0068874d4661d">TaskHookFunction_t</link> pxHookFunction)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a1c57bdf4ed6db4253d3e7a4968e3770d"/><section>
    <title>MPU_vTaskSetThreadLocalStoragePointer()</title>
<indexterm><primary>MPU_vTaskSetThreadLocalStoragePointer</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_vTaskSetThreadLocalStoragePointer</secondary></indexterm>
<para><computeroutput>void MPU_vTaskSetThreadLocalStoragePointer (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTaskToSet, <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> xIndex, void * pvValue)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1ace70e5eeb78a37b7d151400cf84ac11c"/><section>
    <title>MPU_vTaskSetTimeOutState()</title>
<indexterm><primary>MPU_vTaskSetTimeOutState</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_vTaskSetTimeOutState</secondary></indexterm>
<para><computeroutput>void MPU_vTaskSetTimeOutState (<link linkend="_task_8h_1a558b407b5433bee1696535e3c4816bdf">TimeOut_t</link> *const pxTimeOut)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a67bc097861923c6eee50b87b8655c412"/><section>
    <title>MPU_vTaskStartScheduler()</title>
<indexterm><primary>MPU_vTaskStartScheduler</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_vTaskStartScheduler</secondary></indexterm>
<para><computeroutput>void MPU_vTaskStartScheduler (void )</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a2456fbe3861db2f8e5df961a2fc0ad25"/><section>
    <title>MPU_vTaskSuspend()</title>
<indexterm><primary>MPU_vTaskSuspend</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_vTaskSuspend</secondary></indexterm>
<para><computeroutput>void MPU_vTaskSuspend (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTaskToSuspend)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a383cc2047ccf2b6bcbca1ec65229ab70"/><section>
    <title>MPU_vTaskSuspendAll()</title>
<indexterm><primary>MPU_vTaskSuspendAll</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_vTaskSuspendAll</secondary></indexterm>
<para><computeroutput>void MPU_vTaskSuspendAll (void )</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a5ee11a468b7646ce12c6f9b66f5b8e8b"/><section>
    <title>MPU_vTimerSetReloadMode()</title>
<indexterm><primary>MPU_vTimerSetReloadMode</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_vTimerSetReloadMode</secondary></indexterm>
<para><computeroutput>void MPU_vTimerSetReloadMode (<link linkend="_timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6">TimerHandle_t</link> xTimer, const <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxAutoReload)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1adf37969b9e6496069f779ce5b095cc6c"/><section>
    <title>MPU_vTimerSetTimerID()</title>
<indexterm><primary>MPU_vTimerSetTimerID</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_vTimerSetTimerID</secondary></indexterm>
<para><computeroutput>void MPU_vTimerSetTimerID (<link linkend="_timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6">TimerHandle_t</link> xTimer, void * pvNewID)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1adf34d4972866b0605d7a09d544555ccc"/><section>
    <title>MPU_xEventGroupClearBits()</title>
<indexterm><primary>MPU_xEventGroupClearBits</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xEventGroupClearBits</secondary></indexterm>
<para><computeroutput><link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link> MPU_xEventGroupClearBits (<link linkend="_event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed">EventGroupHandle_t</link> xEventGroup, const <link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link> uxBitsToClear)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1ab7648c05a9be0e8fd5f81645ca45f475"/><section>
    <title>MPU_xEventGroupCreate()</title>
<indexterm><primary>MPU_xEventGroupCreate</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xEventGroupCreate</secondary></indexterm>
<para><computeroutput><link linkend="_event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed">EventGroupHandle_t</link> MPU_xEventGroupCreate (void )</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a53f543ead37e3ee8b947e3e78a622a2a"/><section>
    <title>MPU_xEventGroupCreateStatic()</title>
<indexterm><primary>MPU_xEventGroupCreateStatic</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xEventGroupCreateStatic</secondary></indexterm>
<para><computeroutput><link linkend="_event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed">EventGroupHandle_t</link> MPU_xEventGroupCreateStatic (<link linkend="__free_r_t_o_s_8h_1af87e218149130753afb4a7044e5569e6">StaticEventGroup_t</link> * pxEventGroupBuffer)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a2c5b9a954c46a85f29cf0340aaee108a"/><section>
    <title>MPU_xEventGroupSetBits()</title>
<indexterm><primary>MPU_xEventGroupSetBits</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xEventGroupSetBits</secondary></indexterm>
<para><computeroutput><link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link> MPU_xEventGroupSetBits (<link linkend="_event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed">EventGroupHandle_t</link> xEventGroup, const <link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link> uxBitsToSet)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a6e8e545c245c8e1edfa21fa2dcc312ce"/><section>
    <title>MPU_xEventGroupSync()</title>
<indexterm><primary>MPU_xEventGroupSync</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xEventGroupSync</secondary></indexterm>
<para><computeroutput><link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link> MPU_xEventGroupSync (<link linkend="_event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed">EventGroupHandle_t</link> xEventGroup, const <link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link> uxBitsToSet, const <link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link> uxBitsToWaitFor, <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1afb424c1d20e00b23d597d63acb06fabb"/><section>
    <title>MPU_xEventGroupWaitBits()</title>
<indexterm><primary>MPU_xEventGroupWaitBits</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xEventGroupWaitBits</secondary></indexterm>
<para><computeroutput><link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link> MPU_xEventGroupWaitBits (<link linkend="_event__groups_8h_1acab96e0b6a5cab7f7b29822b79cc78ed">EventGroupHandle_t</link> xEventGroup, const <link linkend="_event__groups_8h_1ab2f21b93db0b2a0ab64d7a81ff32ac2e">EventBits_t</link> uxBitsToWaitFor, const <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> xClearOnExit, const <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> xWaitForAllBits, <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1aec6e3a8dd0c477fd6ef7de0b09871b9d"/><section>
    <title>MPU_xQueueAddToSet()</title>
<indexterm><primary>MPU_xQueueAddToSet</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xQueueAddToSet</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xQueueAddToSet (<link linkend="_queue_8h_1afac7ec7649e5c57381315eb011c36ef5">QueueSetMemberHandle_t</link> xQueueOrSemaphore, <link linkend="_queue_8h_1a1ae056fb02b2467993003b85111dde16">QueueSetHandle_t</link> xQueueSet)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a013ee62a2ce409e0104bcff21dfd5475"/><section>
    <title>MPU_xQueueCreateCountingSemaphore()</title>
<indexterm><primary>MPU_xQueueCreateCountingSemaphore</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xQueueCreateCountingSemaphore</secondary></indexterm>
<para><computeroutput><link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> MPU_xQueueCreateCountingSemaphore (const <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxMaxCount, const <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxInitialCount)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1ad31f76df40e5fb782fe73c9e8bd0aee0"/><section>
    <title>MPU_xQueueCreateCountingSemaphoreStatic()</title>
<indexterm><primary>MPU_xQueueCreateCountingSemaphoreStatic</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xQueueCreateCountingSemaphoreStatic</secondary></indexterm>
<para><computeroutput><link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> MPU_xQueueCreateCountingSemaphoreStatic (const <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxMaxCount, const <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxInitialCount, <link linkend="__free_r_t_o_s_8h_1a22e8979e2849d002747c0dd4c7c37908">StaticQueue_t</link> * pxStaticQueue)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a16739521de6a7034e0d4181e65d8ed93"/><section>
    <title>MPU_xQueueCreateMutex()</title>
<indexterm><primary>MPU_xQueueCreateMutex</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xQueueCreateMutex</secondary></indexterm>
<para><computeroutput><link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> MPU_xQueueCreateMutex (const uint8_t ucQueueType)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1ab081f53ca41be95c6a47f89b4790ef23"/><section>
    <title>MPU_xQueueCreateMutexStatic()</title>
<indexterm><primary>MPU_xQueueCreateMutexStatic</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xQueueCreateMutexStatic</secondary></indexterm>
<para><computeroutput><link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> MPU_xQueueCreateMutexStatic (const uint8_t ucQueueType, <link linkend="__free_r_t_o_s_8h_1a22e8979e2849d002747c0dd4c7c37908">StaticQueue_t</link> * pxStaticQueue)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1af593d33910a905d35e2d37cde64f059d"/><section>
    <title>MPU_xQueueCreateSet()</title>
<indexterm><primary>MPU_xQueueCreateSet</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xQueueCreateSet</secondary></indexterm>
<para><computeroutput><link linkend="_queue_8h_1a1ae056fb02b2467993003b85111dde16">QueueSetHandle_t</link> MPU_xQueueCreateSet (const <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxEventQueueLength)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a38b0af82b18009ebbb51c18e9f8c4c34"/><section>
    <title>MPU_xQueueGenericCreate()</title>
<indexterm><primary>MPU_xQueueGenericCreate</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xQueueGenericCreate</secondary></indexterm>
<para><computeroutput><link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> MPU_xQueueGenericCreate (const <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxQueueLength, const <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxItemSize, const uint8_t ucQueueType)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a50251e0cdfe07ba2ac3317425f1c7d8c"/><section>
    <title>MPU_xQueueGenericCreateStatic()</title>
<indexterm><primary>MPU_xQueueGenericCreateStatic</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xQueueGenericCreateStatic</secondary></indexterm>
<para><computeroutput><link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> MPU_xQueueGenericCreateStatic (const <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxQueueLength, const <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxItemSize, uint8_t * pucQueueStorage, <link linkend="__free_r_t_o_s_8h_1a22e8979e2849d002747c0dd4c7c37908">StaticQueue_t</link> * pxStaticQueue, const uint8_t ucQueueType)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a7d10ee03f3b7ef49895d74aea86a5627"/><section>
    <title>MPU_xQueueGenericReset()</title>
<indexterm><primary>MPU_xQueueGenericReset</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xQueueGenericReset</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xQueueGenericReset (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue, <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> xNewQueue)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a8bdf259f59261ca4aa1e558754b4aea1"/><section>
    <title>MPU_xQueueGenericSend()</title>
<indexterm><primary>MPU_xQueueGenericSend</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xQueueGenericSend</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xQueueGenericSend (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue, const void *const pvItemToQueue, <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait, const <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> xCopyPosition)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1af26242a4ac286d585bac42296cfb77f3"/><section>
    <title>MPU_xQueueGetMutexHolder()</title>
<indexterm><primary>MPU_xQueueGetMutexHolder</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xQueueGetMutexHolder</secondary></indexterm>
<para><computeroutput><link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> MPU_xQueueGetMutexHolder (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xSemaphore)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1aeaa5eb80b801575e6174a5fc1f6ce5e9"/><section>
    <title>MPU_xQueueGiveMutexRecursive()</title>
<indexterm><primary>MPU_xQueueGiveMutexRecursive</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xQueueGiveMutexRecursive</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xQueueGiveMutexRecursive (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> pxMutex)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1ab43f2a1eabbc923c4f7cea113c29c2a8"/><section>
    <title>MPU_xQueuePeek()</title>
<indexterm><primary>MPU_xQueuePeek</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xQueuePeek</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xQueuePeek (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue, void *const pvBuffer, <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1ad4f20d999158d27585199f957650ceda"/><section>
    <title>MPU_xQueueReceive()</title>
<indexterm><primary>MPU_xQueueReceive</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xQueueReceive</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xQueueReceive (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue, void *const pvBuffer, <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a3fed9edbb48b7328e15d2073526b0e00"/><section>
    <title>MPU_xQueueRemoveFromSet()</title>
<indexterm><primary>MPU_xQueueRemoveFromSet</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xQueueRemoveFromSet</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xQueueRemoveFromSet (<link linkend="_queue_8h_1afac7ec7649e5c57381315eb011c36ef5">QueueSetMemberHandle_t</link> xQueueOrSemaphore, <link linkend="_queue_8h_1a1ae056fb02b2467993003b85111dde16">QueueSetHandle_t</link> xQueueSet)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1adcaae3a3754d63ab4bc0eb0f1c84c261"/><section>
    <title>MPU_xQueueSelectFromSet()</title>
<indexterm><primary>MPU_xQueueSelectFromSet</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xQueueSelectFromSet</secondary></indexterm>
<para><computeroutput><link linkend="_queue_8h_1afac7ec7649e5c57381315eb011c36ef5">QueueSetMemberHandle_t</link> MPU_xQueueSelectFromSet (<link linkend="_queue_8h_1a1ae056fb02b2467993003b85111dde16">QueueSetHandle_t</link> xQueueSet, const <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a4109a6df9e1ff8f7469cfe94b4258fe0"/><section>
    <title>MPU_xQueueSemaphoreTake()</title>
<indexterm><primary>MPU_xQueueSemaphoreTake</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xQueueSemaphoreTake</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xQueueSemaphoreTake (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xQueue, <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a70f3b09df93e0432b3b35fe6165cda92"/><section>
    <title>MPU_xQueueTakeMutexRecursive()</title>
<indexterm><primary>MPU_xQueueTakeMutexRecursive</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xQueueTakeMutexRecursive</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xQueueTakeMutexRecursive (<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link> xMutex, <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a976371f94aceef5da18188c63bf974f7"/><section>
    <title>MPU_xStreamBufferBytesAvailable()</title>
<indexterm><primary>MPU_xStreamBufferBytesAvailable</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xStreamBufferBytesAvailable</secondary></indexterm>
<para><computeroutput>size_t MPU_xStreamBufferBytesAvailable (<link linkend="_stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f">StreamBufferHandle_t</link> xStreamBuffer)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a573ef004bbddcbb9ba99e914a481b900"/><section>
    <title>MPU_xStreamBufferGenericCreate()</title>
<indexterm><primary>MPU_xStreamBufferGenericCreate</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xStreamBufferGenericCreate</secondary></indexterm>
<para><computeroutput><link linkend="_stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f">StreamBufferHandle_t</link> MPU_xStreamBufferGenericCreate (size_t xBufferSizeBytes, size_t xTriggerLevelBytes, <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> xIsMessageBuffer)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a30c184d8209f81a8e0d105b4cb0cd620"/><section>
    <title>MPU_xStreamBufferGenericCreateStatic()</title>
<indexterm><primary>MPU_xStreamBufferGenericCreateStatic</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xStreamBufferGenericCreateStatic</secondary></indexterm>
<para><computeroutput><link linkend="_stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f">StreamBufferHandle_t</link> MPU_xStreamBufferGenericCreateStatic (size_t xBufferSizeBytes, size_t xTriggerLevelBytes, <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> xIsMessageBuffer, uint8_t *const pucStreamBufferStorageArea, <link linkend="__free_r_t_o_s_8h_1a3675ce07f6d3e0e7130bc6ea01162d34">StaticStreamBuffer_t</link> *const pxStaticStreamBuffer)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a62da4dc560bc0181279b9571c835e8e6"/><section>
    <title>MPU_xStreamBufferIsEmpty()</title>
<indexterm><primary>MPU_xStreamBufferIsEmpty</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xStreamBufferIsEmpty</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xStreamBufferIsEmpty (<link linkend="_stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f">StreamBufferHandle_t</link> xStreamBuffer)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a40bb70472e5399a601a95eecbf6314fa"/><section>
    <title>MPU_xStreamBufferIsFull()</title>
<indexterm><primary>MPU_xStreamBufferIsFull</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xStreamBufferIsFull</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xStreamBufferIsFull (<link linkend="_stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f">StreamBufferHandle_t</link> xStreamBuffer)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a2aa538546170875bce7263e959646635"/><section>
    <title>MPU_xStreamBufferNextMessageLengthBytes()</title>
<indexterm><primary>MPU_xStreamBufferNextMessageLengthBytes</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xStreamBufferNextMessageLengthBytes</secondary></indexterm>
<para><computeroutput>size_t MPU_xStreamBufferNextMessageLengthBytes (<link linkend="_stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f">StreamBufferHandle_t</link> xStreamBuffer)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a3e0fbebc55f824c250b7eff4b1f7d765"/><section>
    <title>MPU_xStreamBufferReceive()</title>
<indexterm><primary>MPU_xStreamBufferReceive</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xStreamBufferReceive</secondary></indexterm>
<para><computeroutput>size_t MPU_xStreamBufferReceive (<link linkend="_stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f">StreamBufferHandle_t</link> xStreamBuffer, void * pvRxData, size_t xBufferLengthBytes, <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a6264274cc7d35c512555302523c92f8a"/><section>
    <title>MPU_xStreamBufferReset()</title>
<indexterm><primary>MPU_xStreamBufferReset</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xStreamBufferReset</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xStreamBufferReset (<link linkend="_stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f">StreamBufferHandle_t</link> xStreamBuffer)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a52e63f26c50a655b89e236008512bffa"/><section>
    <title>MPU_xStreamBufferSend()</title>
<indexterm><primary>MPU_xStreamBufferSend</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xStreamBufferSend</secondary></indexterm>
<para><computeroutput>size_t MPU_xStreamBufferSend (<link linkend="_stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f">StreamBufferHandle_t</link> xStreamBuffer, const void * pvTxData, size_t xDataLengthBytes, <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1ac869cab40fbc949e37b98eac6e10cb0a"/><section>
    <title>MPU_xStreamBufferSetTriggerLevel()</title>
<indexterm><primary>MPU_xStreamBufferSetTriggerLevel</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xStreamBufferSetTriggerLevel</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xStreamBufferSetTriggerLevel (<link linkend="_stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f">StreamBufferHandle_t</link> xStreamBuffer, size_t xTriggerLevel)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1aa66eeea4312467f943cf179b2a8061ef"/><section>
    <title>MPU_xStreamBufferSpacesAvailable()</title>
<indexterm><primary>MPU_xStreamBufferSpacesAvailable</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xStreamBufferSpacesAvailable</secondary></indexterm>
<para><computeroutput>size_t MPU_xStreamBufferSpacesAvailable (<link linkend="_stream__buffer_8h_1a8b80974e2278f073412293e6580ce56f">StreamBufferHandle_t</link> xStreamBuffer)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a5789e4f7340c707c713afa6165ca3363"/><section>
    <title>MPU_xTaskAbortDelay()</title>
<indexterm><primary>MPU_xTaskAbortDelay</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTaskAbortDelay</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xTaskAbortDelay (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTask)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a49c1dbec95aef701cb84a1bd3b5e21b6"/><section>
    <title>MPU_xTaskCallApplicationTaskHook()</title>
<indexterm><primary>MPU_xTaskCallApplicationTaskHook</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTaskCallApplicationTaskHook</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xTaskCallApplicationTaskHook (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTask, void * pvParameter)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a6a32c460aa7ea2dd09aaec9df8c1cf13"/><section>
    <title>MPU_xTaskCheckForTimeOut()</title>
<indexterm><primary>MPU_xTaskCheckForTimeOut</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTaskCheckForTimeOut</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xTaskCheckForTimeOut (<link linkend="_task_8h_1a558b407b5433bee1696535e3c4816bdf">TimeOut_t</link> *const pxTimeOut, <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> *const pxTicksToWait)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a53ce0915f0062120137efcc89b415715"/><section>
    <title>MPU_xTaskCreate()</title>
<indexterm><primary>MPU_xTaskCreate</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTaskCreate</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xTaskCreate (<link linkend="_projdefs_8h_1a9b32502ff92c255c686dacde53c1cba0">TaskFunction_t</link> pxTaskCode, const char *const pcName, const uint16_t usStackDepth, void *const pvParameters, <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxPriority, <link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> *const pxCreatedTask)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1aaf2329942140771305220948bc69b1b0"/><section>
    <title>MPU_xTaskCreateRestricted()</title>
<indexterm><primary>MPU_xTaskCreateRestricted</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTaskCreateRestricted</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xTaskCreateRestricted (const <link linkend="_task_8h_1a388dc3e95bc2a93a2841a8d1e49634f3">TaskParameters_t</link> *const pxTaskDefinition, <link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> * pxCreatedTask)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a0a1c9271074f19d7d3ec5de2cfd4971f"/><section>
    <title>MPU_xTaskCreateRestrictedStatic()</title>
<indexterm><primary>MPU_xTaskCreateRestrictedStatic</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTaskCreateRestrictedStatic</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xTaskCreateRestrictedStatic (const <link linkend="_task_8h_1a388dc3e95bc2a93a2841a8d1e49634f3">TaskParameters_t</link> *const pxTaskDefinition, <link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> * pxCreatedTask)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a3265dccf6178f6b886cf0743886b7662"/><section>
    <title>MPU_xTaskCreateStatic()</title>
<indexterm><primary>MPU_xTaskCreateStatic</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTaskCreateStatic</secondary></indexterm>
<para><computeroutput><link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> MPU_xTaskCreateStatic (<link linkend="_projdefs_8h_1a9b32502ff92c255c686dacde53c1cba0">TaskFunction_t</link> pxTaskCode, const char *const pcName, const uint32_t ulStackDepth, void *const pvParameters, <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxPriority, <link linkend="_portmacro_8h_1aa73b01e0200940d619095fb74fb3030b">StackType_t</link> *const puxStackBuffer, <link linkend="__free_r_t_o_s_8h_1af0002e4ad72220b34b95fcdf43bcd82d">StaticTask_t</link> *const pxTaskBuffer)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a3e782699de49b0bf8382df0b05c1a967"/><section>
    <title>MPU_xTaskGenericNotify()</title>
<indexterm><primary>MPU_xTaskGenericNotify</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTaskGenericNotify</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xTaskGenericNotify (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTaskToNotify, uint32_t ulValue, <link linkend="_task_8h_1ae8abc4f7da5b6880467daafbf19cd233">eNotifyAction</link> eAction, uint32_t * pulPreviousNotificationValue)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1ab96febf9ce3574ebbc73f07d798156f6"/><section>
    <title>MPU_xTaskGetApplicationTaskTag()</title>
<indexterm><primary>MPU_xTaskGetApplicationTaskTag</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTaskGetApplicationTaskTag</secondary></indexterm>
<para><computeroutput><link linkend="_task_8h_1af984026250bf8fece2e0068874d4661d">TaskHookFunction_t</link> MPU_xTaskGetApplicationTaskTag (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTask)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1ae3a1c8aeb60aa75841a2d224bb0765ec"/><section>
    <title>MPU_xTaskGetCurrentTaskHandle()</title>
<indexterm><primary>MPU_xTaskGetCurrentTaskHandle</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTaskGetCurrentTaskHandle</secondary></indexterm>
<para><computeroutput><link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> MPU_xTaskGetCurrentTaskHandle (void )</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a64a8ffb45977a187281e0316226f7a9c"/><section>
    <title>MPU_xTaskGetHandle()</title>
<indexterm><primary>MPU_xTaskGetHandle</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTaskGetHandle</secondary></indexterm>
<para><computeroutput><link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> MPU_xTaskGetHandle (const char * pcNameToQuery)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a4d85671d7c5ff17b56acacc6a21905f8"/><section>
    <title>MPU_xTaskGetIdleRunTimeCounter()</title>
<indexterm><primary>MPU_xTaskGetIdleRunTimeCounter</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTaskGetIdleRunTimeCounter</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> MPU_xTaskGetIdleRunTimeCounter (void )</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1adea5fb61044c3b5538d958680b1edd85"/><section>
    <title>MPU_xTaskGetIdleTaskHandle()</title>
<indexterm><primary>MPU_xTaskGetIdleTaskHandle</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTaskGetIdleTaskHandle</secondary></indexterm>
<para><computeroutput><link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> MPU_xTaskGetIdleTaskHandle (void )</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1ae67d37ffe2e61cfc3ffc8bae3b46af83"/><section>
    <title>MPU_xTaskGetSchedulerState()</title>
<indexterm><primary>MPU_xTaskGetSchedulerState</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTaskGetSchedulerState</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xTaskGetSchedulerState (void )</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a3f40c6063f43373dc4208989db24eb7d"/><section>
    <title>MPU_xTaskGetTickCount()</title>
<indexterm><primary>MPU_xTaskGetTickCount</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTaskGetTickCount</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> MPU_xTaskGetTickCount (void )</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a7546d90ed3ddac32550096dc6b37c35e"/><section>
    <title>MPU_xTaskIncrementTick()</title>
<indexterm><primary>MPU_xTaskIncrementTick</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTaskIncrementTick</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xTaskIncrementTick (void )</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a5c5655bc7656778174b357ea86540993"/><section>
    <title>MPU_xTaskNotifyStateClear()</title>
<indexterm><primary>MPU_xTaskNotifyStateClear</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTaskNotifyStateClear</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xTaskNotifyStateClear (<link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> xTask)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1ac160d248a7ac595a078301610aeea5eb"/><section>
    <title>MPU_xTaskNotifyWait()</title>
<indexterm><primary>MPU_xTaskNotifyWait</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTaskNotifyWait</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xTaskNotifyWait (uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t * pulNotificationValue, <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1ac0ae320f4e0d00e2f642b7677268a5fc"/><section>
    <title>MPU_xTaskResumeAll()</title>
<indexterm><primary>MPU_xTaskResumeAll</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTaskResumeAll</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xTaskResumeAll (void )</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a7bdcebee972b0961a644e9fcd5ebb841"/><section>
    <title>MPU_xTimerCreate()</title>
<indexterm><primary>MPU_xTimerCreate</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTimerCreate</secondary></indexterm>
<para><computeroutput><link linkend="_timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6">TimerHandle_t</link> MPU_xTimerCreate (const char *const pcTimerName, const <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTimerPeriodInTicks, const <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxAutoReload, void *const pvTimerID, <link linkend="_timers_8h_1a5cf6d1f61ccd4871022ed8ad454c6027">TimerCallbackFunction_t</link> pxCallbackFunction)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1ae33d477de9b2dd90e9563e06199034b0"/><section>
    <title>MPU_xTimerCreateStatic()</title>
<indexterm><primary>MPU_xTimerCreateStatic</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTimerCreateStatic</secondary></indexterm>
<para><computeroutput><link linkend="_timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6">TimerHandle_t</link> MPU_xTimerCreateStatic (const char *const pcTimerName, const <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTimerPeriodInTicks, const <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxAutoReload, void *const pvTimerID, <link linkend="_timers_8h_1a5cf6d1f61ccd4871022ed8ad454c6027">TimerCallbackFunction_t</link> pxCallbackFunction, <link linkend="__free_r_t_o_s_8h_1a85fc227d111ec21647641e0deddcccc6">StaticTimer_t</link> * pxTimerBuffer)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a9d1f63646824f4a2cf015def907d9681"/><section>
    <title>MPU_xTimerCreateTimerTask()</title>
<indexterm><primary>MPU_xTimerCreateTimerTask</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTimerCreateTimerTask</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xTimerCreateTimerTask (void )</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1aff117583cd279a1afd30d1cebb198d38"/><section>
    <title>MPU_xTimerGenericCommand()</title>
<indexterm><primary>MPU_xTimerGenericCommand</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTimerGenericCommand</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xTimerGenericCommand (<link linkend="_timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6">TimerHandle_t</link> xTimer, const <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> xCommandID, const <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xOptionalValue, <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> *const pxHigherPriorityTaskWoken, const <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a41b59bbb282e99aca3fc57e568d5f29c"/><section>
    <title>MPU_xTimerGetExpiryTime()</title>
<indexterm><primary>MPU_xTimerGetExpiryTime</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTimerGetExpiryTime</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> MPU_xTimerGetExpiryTime (<link linkend="_timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6">TimerHandle_t</link> xTimer)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a2830e439084d1da4cf6ce92ba59ee916"/><section>
    <title>MPU_xTimerGetPeriod()</title>
<indexterm><primary>MPU_xTimerGetPeriod</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTimerGetPeriod</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> MPU_xTimerGetPeriod (<link linkend="_timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6">TimerHandle_t</link> xTimer)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a7c25c579e997e4da978f1429786aaab3"/><section>
    <title>MPU_xTimerGetTimerDaemonTaskHandle()</title>
<indexterm><primary>MPU_xTimerGetTimerDaemonTaskHandle</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTimerGetTimerDaemonTaskHandle</secondary></indexterm>
<para><computeroutput><link linkend="_task_8h_1a25b35e6e19ecf894173e7ff95edb96ef">TaskHandle_t</link> MPU_xTimerGetTimerDaemonTaskHandle (void )</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1adde8656afd37de6481ee64c7f7915748"/><section>
    <title>MPU_xTimerIsTimerActive()</title>
<indexterm><primary>MPU_xTimerIsTimerActive</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTimerIsTimerActive</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xTimerIsTimerActive (<link linkend="_timers_8h_1ae2aa96927b4806e5dcfd264ba7bc8bf6">TimerHandle_t</link> xTimer)</computeroutput></para></section>
<anchor xml:id="_mpu__prototypes_8h_1a5c6a5a9e79aede72337f2cf46f519e6f"/><section>
    <title>MPU_xTimerPendFunctionCall()</title>
<indexterm><primary>MPU_xTimerPendFunctionCall</primary><secondary>mpu_prototypes.h</secondary></indexterm>
<indexterm><primary>mpu_prototypes.h</primary><secondary>MPU_xTimerPendFunctionCall</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link> MPU_xTimerPendFunctionCall (<link linkend="_timers_8h_1af6e8e2be58df2be9f9bb808fcdc51622">PendedFunction_t</link> xFunctionToPend, void * pvParameter1, uint32_t ulParameter2, <link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link> xTicksToWait)</computeroutput></para></section>
</section>
</section>
