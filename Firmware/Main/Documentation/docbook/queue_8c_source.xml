<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_queue_8c_source" xml:lang="en-US">
<title>queue.c</title>
<indexterm><primary>C:/Users/ponym/ARHMA2021/Firmware/Main/FreeRTOS/queue.c</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_queue_8c_source_1l00001"/>00001 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8c_source_1l00002"/>00002 <emphasis role="comment">&#32;*&#32;FreeRTOS&#32;Kernel&#32;V10.2.0</emphasis>
<anchor xml:id="_queue_8c_source_1l00003"/>00003 <emphasis role="comment">&#32;*&#32;Copyright&#32;(C)&#32;2019&#32;Amazon.com,&#32;Inc.&#32;or&#32;its&#32;affiliates.&#32;&#32;All&#32;Rights&#32;Reserved.</emphasis>
<anchor xml:id="_queue_8c_source_1l00004"/>00004 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8c_source_1l00005"/>00005 <emphasis role="comment">&#32;*&#32;Permission&#32;is&#32;hereby&#32;granted,&#32;free&#32;of&#32;charge,&#32;to&#32;any&#32;person&#32;obtaining&#32;a&#32;copy&#32;of</emphasis>
<anchor xml:id="_queue_8c_source_1l00006"/>00006 <emphasis role="comment">&#32;*&#32;this&#32;software&#32;and&#32;associated&#32;documentation&#32;files&#32;(the&#32;&quot;Software&quot;),&#32;to&#32;deal&#32;in</emphasis>
<anchor xml:id="_queue_8c_source_1l00007"/>00007 <emphasis role="comment">&#32;*&#32;the&#32;Software&#32;without&#32;restriction,&#32;including&#32;without&#32;limitation&#32;the&#32;rights&#32;to</emphasis>
<anchor xml:id="_queue_8c_source_1l00008"/>00008 <emphasis role="comment">&#32;*&#32;use,&#32;copy,&#32;modify,&#32;merge,&#32;publish,&#32;distribute,&#32;sublicense,&#32;and/or&#32;sell&#32;copies&#32;of</emphasis>
<anchor xml:id="_queue_8c_source_1l00009"/>00009 <emphasis role="comment">&#32;*&#32;the&#32;Software,&#32;and&#32;to&#32;permit&#32;persons&#32;to&#32;whom&#32;the&#32;Software&#32;is&#32;furnished&#32;to&#32;do&#32;so,</emphasis>
<anchor xml:id="_queue_8c_source_1l00010"/>00010 <emphasis role="comment">&#32;*&#32;subject&#32;to&#32;the&#32;following&#32;conditions:</emphasis>
<anchor xml:id="_queue_8c_source_1l00011"/>00011 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8c_source_1l00012"/>00012 <emphasis role="comment">&#32;*&#32;The&#32;above&#32;copyright&#32;notice&#32;and&#32;this&#32;permission&#32;notice&#32;shall&#32;be&#32;included&#32;in&#32;all</emphasis>
<anchor xml:id="_queue_8c_source_1l00013"/>00013 <emphasis role="comment">&#32;*&#32;copies&#32;or&#32;substantial&#32;portions&#32;of&#32;the&#32;Software.</emphasis>
<anchor xml:id="_queue_8c_source_1l00014"/>00014 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8c_source_1l00015"/>00015 <emphasis role="comment">&#32;*&#32;THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;&quot;AS&#32;IS&quot;,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
<anchor xml:id="_queue_8c_source_1l00016"/>00016 <emphasis role="comment">&#32;*&#32;IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,&#32;FITNESS</emphasis>
<anchor xml:id="_queue_8c_source_1l00017"/>00017 <emphasis role="comment">&#32;*&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL&#32;THE&#32;AUTHORS&#32;OR</emphasis>
<anchor xml:id="_queue_8c_source_1l00018"/>00018 <emphasis role="comment">&#32;*&#32;COPYRIGHT&#32;HOLDERS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER&#32;LIABILITY,&#32;WHETHER</emphasis>
<anchor xml:id="_queue_8c_source_1l00019"/>00019 <emphasis role="comment">&#32;*&#32;IN&#32;AN&#32;ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING&#32;FROM,&#32;OUT&#32;OF&#32;OR&#32;IN</emphasis>
<anchor xml:id="_queue_8c_source_1l00020"/>00020 <emphasis role="comment">&#32;*&#32;CONNECTION&#32;WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS&#32;IN&#32;THE&#32;SOFTWARE.</emphasis>
<anchor xml:id="_queue_8c_source_1l00021"/>00021 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8c_source_1l00022"/>00022 <emphasis role="comment">&#32;*&#32;http://www.FreeRTOS.org</emphasis>
<anchor xml:id="_queue_8c_source_1l00023"/>00023 <emphasis role="comment">&#32;*&#32;http://aws.amazon.com/freertos</emphasis>
<anchor xml:id="_queue_8c_source_1l00024"/>00024 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8c_source_1l00025"/>00025 <emphasis role="comment">&#32;*&#32;1&#32;tab&#32;==&#32;4&#32;spaces!</emphasis>
<anchor xml:id="_queue_8c_source_1l00026"/>00026 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00027"/>00027 
<anchor xml:id="_queue_8c_source_1l00028"/>00028 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
<anchor xml:id="_queue_8c_source_1l00029"/>00029 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
<anchor xml:id="_queue_8c_source_1l00030"/>00030 
<anchor xml:id="_queue_8c_source_1l00031"/>00031 <emphasis role="comment">/*&#32;Defining&#32;MPU_WRAPPERS_INCLUDED_FROM_API_FILE&#32;prevents&#32;task.h&#32;from&#32;redefining</emphasis>
<anchor xml:id="_queue_8c_source_1l00032"/>00032 <emphasis role="comment">all&#32;the&#32;API&#32;functions&#32;to&#32;use&#32;the&#32;MPU&#32;wrappers.&#32;&#32;That&#32;should&#32;only&#32;be&#32;done&#32;when</emphasis>
<anchor xml:id="_queue_8c_source_1l00033"/>00033 <emphasis role="comment">task.h&#32;is&#32;included&#32;from&#32;an&#32;application&#32;file.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00034"/><link linkend="_queue_8c_1ab622d8c674f2a417a666a7ed89109e79">00034</link> <emphasis role="preprocessor">#define&#32;MPU_WRAPPERS_INCLUDED_FROM_API_FILE</emphasis>
<anchor xml:id="_queue_8c_source_1l00035"/>00035 
<anchor xml:id="_queue_8c_source_1l00036"/>00036 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__free_r_t_o_s_8h">FreeRTOS.h</link>&quot;</emphasis>
<anchor xml:id="_queue_8c_source_1l00037"/>00037 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_task_8h">task.h</link>&quot;</emphasis>
<anchor xml:id="_queue_8c_source_1l00038"/>00038 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_queue_8h">queue.h</link>&quot;</emphasis>
<anchor xml:id="_queue_8c_source_1l00039"/>00039 
<anchor xml:id="_queue_8c_source_1l00040"/>00040 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_CO_ROUTINES&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00041"/>00041 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#include&#32;&quot;<link linkend="_croutine_8h">croutine.h</link>&quot;</emphasis>
<anchor xml:id="_queue_8c_source_1l00042"/>00042 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_queue_8c_source_1l00043"/>00043 
<anchor xml:id="_queue_8c_source_1l00044"/>00044 <emphasis role="comment">/*&#32;Lint&#32;e9021,&#32;e961&#32;and&#32;e750&#32;are&#32;suppressed&#32;as&#32;a&#32;MISRA&#32;exception&#32;justified</emphasis>
<anchor xml:id="_queue_8c_source_1l00045"/>00045 <emphasis role="comment">because&#32;the&#32;MPU&#32;ports&#32;require&#32;MPU_WRAPPERS_INCLUDED_FROM_API_FILE&#32;to&#32;be&#32;defined</emphasis>
<anchor xml:id="_queue_8c_source_1l00046"/>00046 <emphasis role="comment">for&#32;the&#32;header&#32;files&#32;above,&#32;but&#32;not&#32;in&#32;this&#32;file,&#32;in&#32;order&#32;to&#32;generate&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l00047"/>00047 <emphasis role="comment">correct&#32;privileged&#32;Vs&#32;unprivileged&#32;linkage&#32;and&#32;placement.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00048"/>00048 <emphasis role="preprocessor">#undef&#32;MPU_WRAPPERS_INCLUDED_FROM_API_FILE&#32;</emphasis><emphasis role="comment">/*lint&#32;!e961&#32;!e750&#32;!e9021.&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l00049"/>00049 
<anchor xml:id="_queue_8c_source_1l00050"/>00050 
<anchor xml:id="_queue_8c_source_1l00051"/>00051 <emphasis role="comment">/*&#32;Constants&#32;used&#32;with&#32;the&#32;cRxLock&#32;and&#32;cTxLock&#32;structure&#32;members.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00052"/><link linkend="_queue_8c_1acdb781ba6b38714cf41f7417de8fe6bf">00052</link> <emphasis role="preprocessor">#define&#32;queueUNLOCKED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(&#32;int8_t&#32;)&#32;-1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00053"/><link linkend="_queue_8c_1a60a95aa91f84782416755f38616231fd">00053</link> <emphasis role="preprocessor">#define&#32;queueLOCKED_UNMODIFIED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(&#32;int8_t&#32;)&#32;0&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00054"/>00054 
<anchor xml:id="_queue_8c_source_1l00055"/>00055 <emphasis role="comment">/*&#32;When&#32;the&#32;Queue_t&#32;structure&#32;is&#32;used&#32;to&#32;represent&#32;a&#32;base&#32;queue&#32;its&#32;pcHead&#32;and</emphasis>
<anchor xml:id="_queue_8c_source_1l00056"/>00056 <emphasis role="comment">pcTail&#32;members&#32;are&#32;used&#32;as&#32;pointers&#32;into&#32;the&#32;queue&#32;storage&#32;area.&#32;&#32;When&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l00057"/>00057 <emphasis role="comment">Queue_t&#32;structure&#32;is&#32;used&#32;to&#32;represent&#32;a&#32;mutex&#32;pcHead&#32;and&#32;pcTail&#32;pointers&#32;are</emphasis>
<anchor xml:id="_queue_8c_source_1l00058"/>00058 <emphasis role="comment">not&#32;necessary,&#32;and&#32;the&#32;pcHead&#32;pointer&#32;is&#32;set&#32;to&#32;NULL&#32;to&#32;indicate&#32;that&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l00059"/>00059 <emphasis role="comment">structure&#32;instead&#32;holds&#32;a&#32;pointer&#32;to&#32;the&#32;mutex&#32;holder&#32;(if&#32;any).&#32;&#32;Map&#32;alternative</emphasis>
<anchor xml:id="_queue_8c_source_1l00060"/>00060 <emphasis role="comment">names&#32;to&#32;the&#32;pcHead&#32;and&#32;structure&#32;member&#32;to&#32;ensure&#32;the&#32;readability&#32;of&#32;the&#32;code</emphasis>
<anchor xml:id="_queue_8c_source_1l00061"/>00061 <emphasis role="comment">is&#32;maintained.&#32;&#32;The&#32;QueuePointers_t&#32;and&#32;SemaphoreData_t&#32;types&#32;are&#32;used&#32;to&#32;form</emphasis>
<anchor xml:id="_queue_8c_source_1l00062"/>00062 <emphasis role="comment">a&#32;union&#32;as&#32;their&#32;usage&#32;is&#32;mutually&#32;exclusive&#32;dependent&#32;on&#32;what&#32;the&#32;queue&#32;is</emphasis>
<anchor xml:id="_queue_8c_source_1l00063"/>00063 <emphasis role="comment">being&#32;used&#32;for.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00064"/><link linkend="_queue_8c_1afe3f7afb2a02c085f2d634003902cbc0">00064</link> <emphasis role="preprocessor">#define&#32;uxQueueType&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcHead</emphasis>
<anchor xml:id="_queue_8c_source_1l00065"/><link linkend="_queue_8c_1a0799077a434aea43f5cca3cda3625aa8">00065</link> <emphasis role="preprocessor">#define&#32;queueQUEUE_IS_MUTEX&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NULL</emphasis>
<anchor xml:id="_queue_8c_source_1l00066"/>00066 
<anchor xml:id="_queue_8c_source_1l00067"/><link linkend="_struct_queue_pointers">00067</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_queue_pointers">QueuePointers</link>
<anchor xml:id="_queue_8c_source_1l00068"/>00068 {
<anchor xml:id="_queue_8c_source_1l00069"/><link linkend="_struct_queue_pointers_1acbbdc8eb47b348a824c7bced41512a38">00069</link> &#32;&#32;&#32;&#32;int8_t&#32;*<link linkend="_struct_queue_pointers_1acbbdc8eb47b348a824c7bced41512a38">pcTail</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;Points&#32;to&#32;the&#32;byte&#32;at&#32;the&#32;end&#32;of&#32;the&#32;queue&#32;storage&#32;area.&#32;&#32;Once&#32;more&#32;byte&#32;is&#32;allocated&#32;than&#32;necessary&#32;to&#32;store&#32;the&#32;queue&#32;items,&#32;this&#32;is&#32;used&#32;as&#32;a&#32;marker.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00070"/><link linkend="_struct_queue_pointers_1af381d02bbe6bc4a77934c6fd97598913">00070</link> &#32;&#32;&#32;&#32;int8_t&#32;*<link linkend="_struct_queue_pointers_1af381d02bbe6bc4a77934c6fd97598913">pcReadFrom</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;Points&#32;to&#32;the&#32;last&#32;place&#32;that&#32;a&#32;queued&#32;item&#32;was&#32;read&#32;from&#32;when&#32;the&#32;structure&#32;is&#32;used&#32;as&#32;a&#32;queue.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00071"/><link linkend="_queue_8c_1afa576747932ccf4c923633fc6a46a0d8">00071</link> }&#32;<link linkend="_queue_8c_1afa576747932ccf4c923633fc6a46a0d8">QueuePointers_t</link>;
<anchor xml:id="_queue_8c_source_1l00072"/>00072 
<anchor xml:id="_queue_8c_source_1l00073"/><link linkend="_struct_semaphore_data">00073</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_semaphore_data">SemaphoreData</link>
<anchor xml:id="_queue_8c_source_1l00074"/>00074 {
<anchor xml:id="_queue_8c_source_1l00075"/><link linkend="_struct_semaphore_data_1ab1ed54c7b39dc45b3c310fae7ad08693">00075</link> &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;<link linkend="_struct_semaphore_data_1ab1ed54c7b39dc45b3c310fae7ad08693">xMutexHolder</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;The&#32;handle&#32;of&#32;the&#32;task&#32;that&#32;holds&#32;the&#32;mutex.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00076"/><link linkend="_struct_semaphore_data_1aa428fcfc6e5831d054234444fde56574">00076</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_struct_semaphore_data_1aa428fcfc6e5831d054234444fde56574">uxRecursiveCallCount</link>;<emphasis role="comment">/*&lt;&#32;Maintains&#32;a&#32;count&#32;of&#32;the&#32;number&#32;of&#32;times&#32;a&#32;recursive&#32;mutex&#32;has&#32;been&#32;recursively&#32;&apos;taken&apos;&#32;when&#32;the&#32;structure&#32;is&#32;used&#32;as&#32;a&#32;mutex.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00077"/><link linkend="_queue_8c_1a8806dcfc511df585a0b4daf54a9a909a">00077</link> }&#32;<link linkend="_queue_8c_1a8806dcfc511df585a0b4daf54a9a909a">SemaphoreData_t</link>;
<anchor xml:id="_queue_8c_source_1l00078"/>00078 
<anchor xml:id="_queue_8c_source_1l00079"/>00079 <emphasis role="comment">/*&#32;Semaphores&#32;do&#32;not&#32;actually&#32;store&#32;or&#32;copy&#32;data,&#32;so&#32;have&#32;an&#32;item&#32;size&#32;of</emphasis>
<anchor xml:id="_queue_8c_source_1l00080"/>00080 <emphasis role="comment">zero.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00081"/><link linkend="_queue_8c_1adfb14d07644ad4da4bd2303105884227">00081</link> <emphasis role="preprocessor">#define&#32;queueSEMAPHORE_QUEUE_ITEM_LENGTH&#32;(&#32;(&#32;UBaseType_t&#32;)&#32;0&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00082"/><link linkend="_queue_8c_1a166c89c5c3a213c7e52283e024bb1d50">00082</link> <emphasis role="preprocessor">#define&#32;queueMUTEX_GIVE_BLOCK_TIME&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(&#32;TickType_t&#32;)&#32;0U&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00083"/>00083 
<anchor xml:id="_queue_8c_source_1l00084"/>00084 <emphasis role="preprocessor">#if(&#32;configUSE_PREEMPTION&#32;==&#32;0&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00085"/>00085 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;cooperative&#32;scheduler&#32;is&#32;being&#32;used&#32;then&#32;a&#32;yield&#32;should&#32;not&#32;be</emphasis>
<anchor xml:id="_queue_8c_source_1l00086"/>00086 <emphasis role="comment">&#32;&#32;&#32;&#32;performed&#32;just&#32;because&#32;a&#32;higher&#32;priority&#32;task&#32;has&#32;been&#32;woken.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00087"/>00087 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;queueYIELD_IF_USING_PREEMPTION()</emphasis>
<anchor xml:id="_queue_8c_source_1l00088"/>00088 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="_queue_8c_source_1l00089"/><link linkend="_queue_8c_1adb4472163ac5b0e8ad72183d69387b81">00089</link> <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#define&#32;queueYIELD_IF_USING_PREEMPTION()&#32;portYIELD_WITHIN_API()</emphasis>
<anchor xml:id="_queue_8c_source_1l00090"/>00090 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_queue_8c_source_1l00091"/>00091 
<anchor xml:id="_queue_8c_source_1l00092"/>00092 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8c_source_1l00093"/>00093 <emphasis role="comment">&#32;*&#32;Definition&#32;of&#32;the&#32;queue&#32;used&#32;by&#32;the&#32;scheduler.</emphasis>
<anchor xml:id="_queue_8c_source_1l00094"/>00094 <emphasis role="comment">&#32;*&#32;Items&#32;are&#32;queued&#32;by&#32;copy,&#32;not&#32;reference.&#32;&#32;See&#32;the&#32;following&#32;link&#32;for&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l00095"/>00095 <emphasis role="comment">&#32;*&#32;rationale:&#32;https://www.freertos.org/Embedded-RTOS-Queues.html</emphasis>
<anchor xml:id="_queue_8c_source_1l00096"/>00096 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00097"/><link linkend="_struct_queue_definition">00097</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_queue_definition">QueueDefinition</link>&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;old&#32;naming&#32;convention&#32;is&#32;used&#32;to&#32;prevent&#32;breaking&#32;kernel&#32;aware&#32;debuggers.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00098"/>00098 {
<anchor xml:id="_queue_8c_source_1l00099"/><link linkend="_struct_queue_definition_1a487dc7e43b380c58212cba72bc33e0ed">00099</link> &#32;&#32;&#32;&#32;int8_t&#32;*<link linkend="_struct_queue_definition_1a487dc7e43b380c58212cba72bc33e0ed">pcHead</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;Points&#32;to&#32;the&#32;beginning&#32;of&#32;the&#32;queue&#32;storage&#32;area.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00100"/><link linkend="_struct_queue_definition_1abdf13cc013c8488848cee3fce4f0fed3">00100</link> &#32;&#32;&#32;&#32;int8_t&#32;*<link linkend="_struct_queue_definition_1abdf13cc013c8488848cee3fce4f0fed3">pcWriteTo</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;Points&#32;to&#32;the&#32;free&#32;next&#32;place&#32;in&#32;the&#32;storage&#32;area.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00101"/>00101 
<anchor xml:id="_queue_8c_source_1l00102"/>00102 &#32;&#32;&#32;&#32;<emphasis role="keyword">union</emphasis>
<anchor xml:id="_queue_8c_source_1l00103"/>00103 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00104"/><link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">00104</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_queue_pointers">QueuePointers_t</link>&#32;<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;Data&#32;required&#32;exclusively&#32;when&#32;this&#32;structure&#32;is&#32;used&#32;as&#32;a&#32;queue.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00105"/><link linkend="_struct_queue_definition_1adb2c0818274974553c619ff953b6f477">00105</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_semaphore_data">SemaphoreData_t</link>&#32;<link linkend="_struct_queue_definition_1adb2c0818274974553c619ff953b6f477">xSemaphore</link>;&#32;<emphasis role="comment">/*&lt;&#32;Data&#32;required&#32;exclusively&#32;when&#32;this&#32;structure&#32;is&#32;used&#32;as&#32;a&#32;semaphore.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00106"/><link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">00106</link> &#32;&#32;&#32;&#32;}&#32;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>;
<anchor xml:id="_queue_8c_source_1l00107"/>00107 
<anchor xml:id="_queue_8c_source_1l00108"/><link linkend="_struct_queue_definition_1aaab135c4345cb0393d6ff3cd5164c7b2">00108</link> &#32;&#32;&#32;&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;<link linkend="_struct_queue_definition_1aaab135c4345cb0393d6ff3cd5164c7b2">xTasksWaitingToSend</link>;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;List&#32;of&#32;tasks&#32;that&#32;are&#32;blocked&#32;waiting&#32;to&#32;post&#32;onto&#32;this&#32;queue.&#32;&#32;Stored&#32;in&#32;priority&#32;order.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00109"/><link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">00109</link> &#32;&#32;&#32;&#32;<link linkend="_structx_l_i_s_t">List_t</link>&#32;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>;&#32;&#32;<emphasis role="comment">/*&lt;&#32;List&#32;of&#32;tasks&#32;that&#32;are&#32;blocked&#32;waiting&#32;to&#32;read&#32;from&#32;this&#32;queue.&#32;&#32;Stored&#32;in&#32;priority&#32;order.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00110"/>00110 
<anchor xml:id="_queue_8c_source_1l00111"/><link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">00111</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">volatile</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>;<emphasis role="comment">/*&lt;&#32;The&#32;number&#32;of&#32;items&#32;currently&#32;in&#32;the&#32;queue.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00112"/><link linkend="_struct_queue_definition_1ae80d17a812c669d4d41265b7f693988c">00112</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_struct_queue_definition_1ae80d17a812c669d4d41265b7f693988c">uxLength</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;The&#32;length&#32;of&#32;the&#32;queue&#32;defined&#32;as&#32;the&#32;number&#32;of&#32;items&#32;it&#32;will&#32;hold,&#32;not&#32;the&#32;number&#32;of&#32;bytes.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00113"/><link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">00113</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">uxItemSize</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;The&#32;size&#32;of&#32;each&#32;items&#32;that&#32;the&#32;queue&#32;will&#32;hold.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00114"/>00114 
<anchor xml:id="_queue_8c_source_1l00115"/><link linkend="_struct_queue_definition_1ac750a3f75a6e174adbc697e473a0dd13">00115</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">volatile</emphasis>&#32;int8_t&#32;<link linkend="_struct_queue_definition_1ac750a3f75a6e174adbc697e473a0dd13">cRxLock</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;Stores&#32;the&#32;number&#32;of&#32;items&#32;received&#32;from&#32;the&#32;queue&#32;(removed&#32;from&#32;the&#32;queue)&#32;while&#32;the&#32;queue&#32;was&#32;locked.&#32;&#32;Set&#32;to&#32;queueUNLOCKED&#32;when&#32;the&#32;queue&#32;is&#32;not&#32;locked.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00116"/><link linkend="_struct_queue_definition_1a24ac3f0707f098da2a22244d843fcf82">00116</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">volatile</emphasis>&#32;int8_t&#32;<link linkend="_struct_queue_definition_1a24ac3f0707f098da2a22244d843fcf82">cTxLock</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&lt;&#32;Stores&#32;the&#32;number&#32;of&#32;items&#32;transmitted&#32;to&#32;the&#32;queue&#32;(added&#32;to&#32;the&#32;queue)&#32;while&#32;the&#32;queue&#32;was&#32;locked.&#32;&#32;Set&#32;to&#32;queueUNLOCKED&#32;when&#32;the&#32;queue&#32;is&#32;not&#32;locked.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00117"/>00117 
<anchor xml:id="_queue_8c_source_1l00118"/>00118 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if(&#32;(&#32;configSUPPORT_STATIC_ALLOCATION&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;ucStaticallyAllocated;&#32;&#32;<emphasis role="comment">/*&lt;&#32;Set&#32;to&#32;pdTRUE&#32;if&#32;the&#32;memory&#32;used&#32;by&#32;the&#32;queue&#32;was&#32;statically&#32;allocated&#32;to&#32;ensure&#32;no&#32;attempt&#32;is&#32;made&#32;to&#32;free&#32;the&#32;memory.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00120"/>00120 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_queue_8c_source_1l00121"/>00121 
<anchor xml:id="_queue_8c_source_1l00122"/>00122 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_QUEUE_SETS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_queue_definition">QueueDefinition</link>&#32;*pxQueueSetContainer;
<anchor xml:id="_queue_8c_source_1l00124"/>00124 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_queue_8c_source_1l00125"/>00125 
<anchor xml:id="_queue_8c_source_1l00126"/>00126 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00127"/><link linkend="_struct_queue_definition_1a1b422cf046da7afa63a0646ed6a2e8c6">00127</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_struct_queue_definition_1a1b422cf046da7afa63a0646ed6a2e8c6">uxQueueNumber</link>;
<anchor xml:id="_queue_8c_source_1l00128"/><link linkend="_struct_queue_definition_1a337a8dc6af8fc327a92412275e86fe81">00128</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_struct_queue_definition_1a337a8dc6af8fc327a92412275e86fe81">ucQueueType</link>;
<anchor xml:id="_queue_8c_source_1l00129"/>00129 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_queue_8c_source_1l00130"/>00130 
<anchor xml:id="_queue_8c_source_1l00131"/><link linkend="_queue_8c_1a3c73744015d2aad19ca749e89e747e2a">00131</link> }&#32;<link linkend="_queue_8c_1a3c73744015d2aad19ca749e89e747e2a">xQUEUE</link>;
<anchor xml:id="_queue_8c_source_1l00132"/>00132 
<anchor xml:id="_queue_8c_source_1l00133"/>00133 <emphasis role="comment">/*&#32;The&#32;old&#32;xQUEUE&#32;name&#32;is&#32;maintained&#32;above&#32;then&#32;typedefed&#32;to&#32;the&#32;new&#32;Queue_t</emphasis>
<anchor xml:id="_queue_8c_source_1l00134"/>00134 <emphasis role="comment">name&#32;below&#32;to&#32;enable&#32;the&#32;use&#32;of&#32;older&#32;kernel&#32;aware&#32;debuggers.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00135"/><link linkend="_queue_8c_1ade16d14675fc1ac34af04a1162a6b883">00135</link> <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct_queue_definition">xQUEUE</link>&#32;<link linkend="_queue_8c_1ade16d14675fc1ac34af04a1162a6b883">Queue_t</link>;
<anchor xml:id="_queue_8c_source_1l00136"/>00136 
<anchor xml:id="_queue_8c_source_1l00137"/>00137 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00138"/>00138 
<anchor xml:id="_queue_8c_source_1l00139"/>00139 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8c_source_1l00140"/>00140 <emphasis role="comment">&#32;*&#32;The&#32;queue&#32;registry&#32;is&#32;just&#32;a&#32;means&#32;for&#32;kernel&#32;aware&#32;debuggers&#32;to&#32;locate</emphasis>
<anchor xml:id="_queue_8c_source_1l00141"/>00141 <emphasis role="comment">&#32;*&#32;queue&#32;structures.&#32;&#32;It&#32;has&#32;no&#32;other&#32;purpose&#32;so&#32;is&#32;an&#32;optional&#32;component.</emphasis>
<anchor xml:id="_queue_8c_source_1l00142"/>00142 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00143"/>00143 <emphasis role="preprocessor">#if&#32;(&#32;configQUEUE_REGISTRY_SIZE&#32;&gt;&#32;0&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00144"/>00144 
<anchor xml:id="_queue_8c_source_1l00145"/>00145 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;type&#32;stored&#32;within&#32;the&#32;queue&#32;registry&#32;array.&#32;&#32;This&#32;allows&#32;a&#32;name</emphasis>
<anchor xml:id="_queue_8c_source_1l00146"/>00146 <emphasis role="comment">&#32;&#32;&#32;&#32;to&#32;be&#32;assigned&#32;to&#32;each&#32;queue&#32;making&#32;kernel&#32;aware&#32;debugging&#32;a&#32;little</emphasis>
<anchor xml:id="_queue_8c_source_1l00147"/>00147 <emphasis role="comment">&#32;&#32;&#32;&#32;more&#32;user&#32;friendly.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00148"/><link linkend="_struct_q_u_e_u_e___r_e_g_i_s_t_r_y___i_t_e_m">00148</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_q_u_e_u_e___r_e_g_i_s_t_r_y___i_t_e_m">QUEUE_REGISTRY_ITEM</link>
<anchor xml:id="_queue_8c_source_1l00149"/>00149 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00150"/><link linkend="_struct_q_u_e_u_e___r_e_g_i_s_t_r_y___i_t_e_m_1a64376eea9c34ac70260a9d93d004d251">00150</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_struct_q_u_e_u_e___r_e_g_i_s_t_r_y___i_t_e_m_1a64376eea9c34ac70260a9d93d004d251">pcQueueName</link>;&#32;<emphasis role="comment">/*lint&#32;!e971&#32;Unqualified&#32;char&#32;types&#32;are&#32;allowed&#32;for&#32;strings&#32;and&#32;single&#32;characters&#32;only.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00151"/><link linkend="_struct_q_u_e_u_e___r_e_g_i_s_t_r_y___i_t_e_m_1a51903f689487faaa7c9e9580e3134aa7">00151</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_struct_q_u_e_u_e___r_e_g_i_s_t_r_y___i_t_e_m_1a51903f689487faaa7c9e9580e3134aa7">xHandle</link>;
<anchor xml:id="_queue_8c_source_1l00152"/><link linkend="_queue_8c_1a5c193c2f6f032d7d660699673eaa1c49">00152</link> &#32;&#32;&#32;&#32;}&#32;<link linkend="_queue_8c_1a5c193c2f6f032d7d660699673eaa1c49">xQueueRegistryItem</link>;
<anchor xml:id="_queue_8c_source_1l00153"/>00153 
<anchor xml:id="_queue_8c_source_1l00154"/>00154 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;old&#32;xQueueRegistryItem&#32;name&#32;is&#32;maintained&#32;above&#32;then&#32;typedefed&#32;to&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l00155"/>00155 <emphasis role="comment">&#32;&#32;&#32;&#32;new&#32;xQueueRegistryItem&#32;name&#32;below&#32;to&#32;enable&#32;the&#32;use&#32;of&#32;older&#32;kernel&#32;aware</emphasis>
<anchor xml:id="_queue_8c_source_1l00156"/>00156 <emphasis role="comment">&#32;&#32;&#32;&#32;debuggers.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00157"/><link linkend="_queue_8c_1a51b5b21c8a33be452f8b5c663e07c6f2">00157</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct_q_u_e_u_e___r_e_g_i_s_t_r_y___i_t_e_m">xQueueRegistryItem</link>&#32;<link linkend="_queue_8c_1a51b5b21c8a33be452f8b5c663e07c6f2">QueueRegistryItem_t</link>;
<anchor xml:id="_queue_8c_source_1l00158"/>00158 
<anchor xml:id="_queue_8c_source_1l00159"/>00159 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;queue&#32;registry&#32;is&#32;simply&#32;an&#32;array&#32;of&#32;QueueRegistryItem_t&#32;structures.</emphasis>
<anchor xml:id="_queue_8c_source_1l00160"/>00160 <emphasis role="comment">&#32;&#32;&#32;&#32;The&#32;pcQueueName&#32;member&#32;of&#32;a&#32;structure&#32;being&#32;NULL&#32;is&#32;indicative&#32;of&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l00161"/>00161 <emphasis role="comment">&#32;&#32;&#32;&#32;array&#32;position&#32;being&#32;vacant.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00162"/><link linkend="_queue_8c_1aa255957b515c8fac6c33f319c3a3a2d5">00162</link> &#32;&#32;&#32;&#32;<link linkend="_mpu__wrappers_8h_1a56a0b54ca924c56d192d4389ba585ed5">PRIVILEGED_DATA</link>&#32;<link linkend="_struct_q_u_e_u_e___r_e_g_i_s_t_r_y___i_t_e_m">QueueRegistryItem_t</link>&#32;<link linkend="_queue_8c_1aa255957b515c8fac6c33f319c3a3a2d5">xQueueRegistry</link>[&#32;<link linkend="__free_r_t_o_s_config__default_8h_1aa4b5138c4e42a180f0abd4f2455f90fb">configQUEUE_REGISTRY_SIZE</link>&#32;];
<anchor xml:id="_queue_8c_source_1l00163"/>00163 
<anchor xml:id="_queue_8c_source_1l00164"/>00164 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configQUEUE_REGISTRY_SIZE&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l00165"/>00165 
<anchor xml:id="_queue_8c_source_1l00166"/>00166 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8c_source_1l00167"/>00167 <emphasis role="comment">&#32;*&#32;Unlocks&#32;a&#32;queue&#32;locked&#32;by&#32;a&#32;call&#32;to&#32;prvLockQueue.&#32;&#32;Locking&#32;a&#32;queue&#32;does&#32;not</emphasis>
<anchor xml:id="_queue_8c_source_1l00168"/>00168 <emphasis role="comment">&#32;*&#32;prevent&#32;an&#32;ISR&#32;from&#32;adding&#32;or&#32;removing&#32;items&#32;to&#32;the&#32;queue,&#32;but&#32;does&#32;prevent</emphasis>
<anchor xml:id="_queue_8c_source_1l00169"/>00169 <emphasis role="comment">&#32;*&#32;an&#32;ISR&#32;from&#32;removing&#32;tasks&#32;from&#32;the&#32;queue&#32;event&#32;lists.&#32;&#32;If&#32;an&#32;ISR&#32;finds&#32;a</emphasis>
<anchor xml:id="_queue_8c_source_1l00170"/>00170 <emphasis role="comment">&#32;*&#32;queue&#32;is&#32;locked&#32;it&#32;will&#32;instead&#32;increment&#32;the&#32;appropriate&#32;queue&#32;lock&#32;count</emphasis>
<anchor xml:id="_queue_8c_source_1l00171"/>00171 <emphasis role="comment">&#32;*&#32;to&#32;indicate&#32;that&#32;a&#32;task&#32;may&#32;require&#32;unblocking.&#32;&#32;When&#32;the&#32;queue&#32;in&#32;unlocked</emphasis>
<anchor xml:id="_queue_8c_source_1l00172"/>00172 <emphasis role="comment">&#32;*&#32;these&#32;lock&#32;counts&#32;are&#32;inspected,&#32;and&#32;the&#32;appropriate&#32;action&#32;taken.</emphasis>
<anchor xml:id="_queue_8c_source_1l00173"/>00173 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00174"/>00174 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_queue_8c_1aafc5447bec23cc93aa61911b140273ee">prvUnlockQueue</link>(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8c_source_1l00175"/>00175 
<anchor xml:id="_queue_8c_source_1l00176"/>00176 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8c_source_1l00177"/>00177 <emphasis role="comment">&#32;*&#32;Uses&#32;a&#32;critical&#32;section&#32;to&#32;determine&#32;if&#32;there&#32;is&#32;any&#32;data&#32;in&#32;a&#32;queue.</emphasis>
<anchor xml:id="_queue_8c_source_1l00178"/>00178 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8c_source_1l00179"/>00179 <emphasis role="comment">&#32;*&#32;@return&#32;pdTRUE&#32;if&#32;the&#32;queue&#32;contains&#32;no&#32;items,&#32;otherwise&#32;pdFALSE.</emphasis>
<anchor xml:id="_queue_8c_source_1l00180"/>00180 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00181"/>00181 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8c_1afd0e7fbbf62b3e12d60c4fcdaef1ad76">prvIsQueueEmpty</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*pxQueue&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8c_source_1l00182"/>00182 
<anchor xml:id="_queue_8c_source_1l00183"/>00183 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8c_source_1l00184"/>00184 <emphasis role="comment">&#32;*&#32;Uses&#32;a&#32;critical&#32;section&#32;to&#32;determine&#32;if&#32;there&#32;is&#32;any&#32;space&#32;in&#32;a&#32;queue.</emphasis>
<anchor xml:id="_queue_8c_source_1l00185"/>00185 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_queue_8c_source_1l00186"/>00186 <emphasis role="comment">&#32;*&#32;@return&#32;pdTRUE&#32;if&#32;there&#32;is&#32;no&#32;space,&#32;otherwise&#32;pdFALSE;</emphasis>
<anchor xml:id="_queue_8c_source_1l00187"/>00187 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00188"/>00188 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8c_1ae726cc8b535fc7a601ee442fd2f7da53">prvIsQueueFull</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*pxQueue&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8c_source_1l00189"/>00189 
<anchor xml:id="_queue_8c_source_1l00190"/>00190 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8c_source_1l00191"/>00191 <emphasis role="comment">&#32;*&#32;Copies&#32;an&#32;item&#32;into&#32;the&#32;queue,&#32;either&#32;at&#32;the&#32;front&#32;of&#32;the&#32;queue&#32;or&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l00192"/>00192 <emphasis role="comment">&#32;*&#32;back&#32;of&#32;the&#32;queue.</emphasis>
<anchor xml:id="_queue_8c_source_1l00193"/>00193 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00194"/>00194 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8c_1ad1908d5f670f2b73216a5f1fc78917ae">prvCopyDataToQueue</link>(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pvItemToQueue,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xPosition&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8c_source_1l00195"/>00195 
<anchor xml:id="_queue_8c_source_1l00196"/>00196 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8c_source_1l00197"/>00197 <emphasis role="comment">&#32;*&#32;Copies&#32;an&#32;item&#32;out&#32;of&#32;a&#32;queue.</emphasis>
<anchor xml:id="_queue_8c_source_1l00198"/>00198 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00199"/>00199 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_queue_8c_1a305eea92fc333c62ed162f37ffa63e1d">prvCopyDataFromQueue</link>(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pvBuffer&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8c_source_1l00200"/>00200 
<anchor xml:id="_queue_8c_source_1l00201"/>00201 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_QUEUE_SETS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00202"/>00202 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8c_source_1l00203"/>00203 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;Checks&#32;to&#32;see&#32;if&#32;a&#32;queue&#32;is&#32;a&#32;member&#32;of&#32;a&#32;queue&#32;set,&#32;and&#32;if&#32;so,&#32;notifies</emphasis>
<anchor xml:id="_queue_8c_source_1l00204"/>00204 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;the&#32;queue&#32;set&#32;that&#32;the&#32;queue&#32;contains&#32;data.</emphasis>
<anchor xml:id="_queue_8c_source_1l00205"/>00205 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00206"/>00206 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;prvNotifyQueueSetContainer(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xCopyPosition&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8c_source_1l00207"/>00207 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_queue_8c_source_1l00208"/>00208 
<anchor xml:id="_queue_8c_source_1l00209"/>00209 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8c_source_1l00210"/>00210 <emphasis role="comment">&#32;*&#32;Called&#32;after&#32;a&#32;Queue_t&#32;structure&#32;has&#32;been&#32;allocated&#32;either&#32;statically&#32;or</emphasis>
<anchor xml:id="_queue_8c_source_1l00211"/>00211 <emphasis role="comment">&#32;*&#32;dynamically&#32;to&#32;fill&#32;in&#32;the&#32;structure&apos;s&#32;members.</emphasis>
<anchor xml:id="_queue_8c_source_1l00212"/>00212 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00213"/>00213 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_queue_8c_1aa4bcd737110dced391d9bcb7d246fb34">prvInitialiseNewQueue</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxQueueLength,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxItemSize,&#32;uint8_t&#32;*pucQueueStorage,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;ucQueueType,&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*pxNewQueue&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8c_source_1l00214"/>00214 
<anchor xml:id="_queue_8c_source_1l00215"/>00215 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8c_source_1l00216"/>00216 <emphasis role="comment">&#32;*&#32;Mutexes&#32;are&#32;a&#32;special&#32;type&#32;of&#32;queue.&#32;&#32;When&#32;a&#32;mutex&#32;is&#32;created,&#32;first&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l00217"/>00217 <emphasis role="comment">&#32;*&#32;queue&#32;is&#32;created,&#32;then&#32;prvInitialiseMutex()&#32;is&#32;called&#32;to&#32;configure&#32;the&#32;queue</emphasis>
<anchor xml:id="_queue_8c_source_1l00218"/>00218 <emphasis role="comment">&#32;*&#32;as&#32;a&#32;mutex.</emphasis>
<anchor xml:id="_queue_8c_source_1l00219"/>00219 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00220"/>00220 <emphasis role="preprocessor">#if(&#32;configUSE_MUTEXES&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00221"/>00221 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_queue_8c_1a0af6d378a0b1fe9daca483a0a03b0f69">prvInitialiseMutex</link>(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*pxNewQueue&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8c_source_1l00222"/>00222 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_queue_8c_source_1l00223"/>00223 
<anchor xml:id="_queue_8c_source_1l00224"/>00224 <emphasis role="preprocessor">#if(&#32;configUSE_MUTEXES&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00225"/>00225 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8c_source_1l00226"/>00226 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;If&#32;a&#32;task&#32;waiting&#32;for&#32;a&#32;mutex&#32;causes&#32;the&#32;mutex&#32;holder&#32;to&#32;inherit&#32;a</emphasis>
<anchor xml:id="_queue_8c_source_1l00227"/>00227 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;priority,&#32;but&#32;the&#32;waiting&#32;task&#32;times&#32;out,&#32;then&#32;the&#32;holder&#32;should</emphasis>
<anchor xml:id="_queue_8c_source_1l00228"/>00228 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;disinherit&#32;the&#32;priority&#32;-&#32;but&#32;only&#32;down&#32;to&#32;the&#32;highest&#32;priority&#32;of&#32;any</emphasis>
<anchor xml:id="_queue_8c_source_1l00229"/>00229 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;other&#32;tasks&#32;that&#32;are&#32;waiting&#32;for&#32;the&#32;same&#32;mutex.&#32;&#32;This&#32;function&#32;returns</emphasis>
<anchor xml:id="_queue_8c_source_1l00230"/>00230 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;that&#32;priority.</emphasis>
<anchor xml:id="_queue_8c_source_1l00231"/>00231 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00232"/>00232 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_queue_8c_1a7dd61e286656a8956006b95556b604da">prvGetDisinheritPriorityAfterTimeout</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue&#32;)&#32;<link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link>;
<anchor xml:id="_queue_8c_source_1l00233"/>00233 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_queue_8c_source_1l00234"/>00234 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00235"/>00235 
<anchor xml:id="_queue_8c_source_1l00236"/>00236 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_queue_8c_source_1l00237"/>00237 <emphasis role="comment">&#32;*&#32;Macro&#32;to&#32;mark&#32;a&#32;queue&#32;as&#32;locked.&#32;&#32;Locking&#32;a&#32;queue&#32;prevents&#32;an&#32;ISR&#32;from</emphasis>
<anchor xml:id="_queue_8c_source_1l00238"/>00238 <emphasis role="comment">&#32;*&#32;accessing&#32;the&#32;queue&#32;event&#32;lists.</emphasis>
<anchor xml:id="_queue_8c_source_1l00239"/>00239 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00240"/><link linkend="_queue_8c_1ae4efd14c0f4dee7f189ef2e4d9ce1f1b">00240</link> <emphasis role="preprocessor">#define&#32;prvLockQueue(&#32;pxQueue&#32;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_queue_8c_source_1l00241"/>00241 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;taskENTER_CRITICAL();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_queue_8c_source_1l00242"/>00242 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_queue_8c_source_1l00243"/>00243 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(&#32;(&#32;pxQueue&#32;)-&gt;cRxLock&#32;==&#32;queueUNLOCKED&#32;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_queue_8c_source_1l00244"/>00244 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_queue_8c_source_1l00245"/>00245 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;pxQueue&#32;)-&gt;cRxLock&#32;=&#32;queueLOCKED_UNMODIFIED;&#32;&#32;\</emphasis>
<anchor xml:id="_queue_8c_source_1l00246"/>00246 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_queue_8c_source_1l00247"/>00247 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(&#32;(&#32;pxQueue&#32;)-&gt;cTxLock&#32;==&#32;queueUNLOCKED&#32;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_queue_8c_source_1l00248"/>00248 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_queue_8c_source_1l00249"/>00249 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;pxQueue&#32;)-&gt;cTxLock&#32;=&#32;queueLOCKED_UNMODIFIED;&#32;&#32;\</emphasis>
<anchor xml:id="_queue_8c_source_1l00250"/>00250 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_queue_8c_source_1l00251"/>00251 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_queue_8c_source_1l00252"/>00252 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;taskEXIT_CRITICAL()</emphasis>
<anchor xml:id="_queue_8c_source_1l00253"/>00253 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00254"/>00254 
<anchor xml:id="_queue_8c_source_1l00255"/><link linkend="_queue_8c_1a5e54273dbe3f56b8bdc8f7abee67a871">00255</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8c_1a5e54273dbe3f56b8bdc8f7abee67a871">xQueueGenericReset</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueue,&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xNewQueue&#32;)
<anchor xml:id="_queue_8c_source_1l00256"/>00256 {
<anchor xml:id="_queue_8c_source_1l00257"/>00257 <link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue&#32;=&#32;xQueue;
<anchor xml:id="_queue_8c_source_1l00258"/>00258 
<anchor xml:id="_queue_8c_source_1l00259"/>00259 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l00260"/>00260 
<anchor xml:id="_queue_8c_source_1l00261"/>00261 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l00262"/>00262 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1acbbdc8eb47b348a824c7bced41512a38">pcTail</link>&#32;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a487dc7e43b380c58212cba72bc33e0ed">pcHead</link>&#32;+&#32;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1ae80d17a812c669d4d41265b7f693988c">uxLength</link>&#32;*&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">uxItemSize</link>&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9016&#32;Pointer&#32;arithmetic&#32;allowed&#32;on&#32;char&#32;types,&#32;especially&#32;when&#32;it&#32;assists&#32;conveying&#32;intent.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0U;
<anchor xml:id="_queue_8c_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1abdf13cc013c8488848cee3fce4f0fed3">pcWriteTo</link>&#32;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a487dc7e43b380c58212cba72bc33e0ed">pcHead</link>;
<anchor xml:id="_queue_8c_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1af381d02bbe6bc4a77934c6fd97598913">pcReadFrom</link>&#32;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a487dc7e43b380c58212cba72bc33e0ed">pcHead</link>&#32;+&#32;(&#32;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1ae80d17a812c669d4d41265b7f693988c">uxLength</link>&#32;-&#32;1U&#32;)&#32;*&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">uxItemSize</link>&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9016&#32;Pointer&#32;arithmetic&#32;allowed&#32;on&#32;char&#32;types,&#32;especially&#32;when&#32;it&#32;assists&#32;conveying&#32;intent.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1ac750a3f75a6e174adbc697e473a0dd13">cRxLock</link>&#32;=&#32;<link linkend="_queue_8c_1acdb781ba6b38714cf41f7417de8fe6bf">queueUNLOCKED</link>;
<anchor xml:id="_queue_8c_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a24ac3f0707f098da2a22244d843fcf82">cTxLock</link>&#32;=&#32;<link linkend="_queue_8c_1acdb781ba6b38714cf41f7417de8fe6bf">queueUNLOCKED</link>;
<anchor xml:id="_queue_8c_source_1l00269"/>00269 
<anchor xml:id="_queue_8c_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xNewQueue&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;there&#32;are&#32;tasks&#32;blocked&#32;waiting&#32;to&#32;read&#32;from&#32;the&#32;queue,&#32;then</emphasis>
<anchor xml:id="_queue_8c_source_1l00273"/>00273 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;tasks&#32;will&#32;remain&#32;blocked&#32;as&#32;after&#32;this&#32;function&#32;exits&#32;the&#32;queue</emphasis>
<anchor xml:id="_queue_8c_source_1l00274"/>00274 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;will&#32;still&#32;be&#32;empty.&#32;&#32;If&#32;there&#32;are&#32;tasks&#32;blocked&#32;waiting&#32;to&#32;write&#32;to</emphasis>
<anchor xml:id="_queue_8c_source_1l00275"/>00275 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;queue,&#32;then&#32;one&#32;should&#32;be&#32;unblocked&#32;as&#32;after&#32;this&#32;function&#32;exits</emphasis>
<anchor xml:id="_queue_8c_source_1l00276"/>00276 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it&#32;will&#32;be&#32;possible&#32;to&#32;write&#32;to&#32;it.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1aaba6eb05d67ebc8026bea29193eca28f">listLIST_IS_EMPTY</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1aaab135c4345cb0393d6ff3cd5164c7b2">xTasksWaitingToSend</link>&#32;)&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_task_8h_1a14513b7dd36055f73fba3c5ebbdc1b06">xTaskRemoveFromEventList</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1aaab135c4345cb0393d6ff3cd5164c7b2">xTasksWaitingToSend</link>&#32;)&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1adb4472163ac5b0e8ad72183d69387b81">queueYIELD_IF_USING_PREEMPTION</link>();
<anchor xml:id="_queue_8c_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Ensure&#32;the&#32;event&#32;queues&#32;start&#32;in&#32;the&#32;correct&#32;state.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8c_1aa0831d347bba16bfbe524f4faa790b9d">vListInitialise</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1aaab135c4345cb0393d6ff3cd5164c7b2">xTasksWaitingToSend</link>&#32;)&#32;);
<anchor xml:id="_queue_8c_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_list_8c_1aa0831d347bba16bfbe524f4faa790b9d">vListInitialise</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;);
<anchor xml:id="_queue_8c_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00299"/>00299 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00300"/>00300 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l00301"/>00301 
<anchor xml:id="_queue_8c_source_1l00302"/>00302 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;value&#32;is&#32;returned&#32;for&#32;calling&#32;semantic&#32;consistency&#32;with&#32;previous</emphasis>
<anchor xml:id="_queue_8c_source_1l00303"/>00303 <emphasis role="comment">&#32;&#32;&#32;&#32;versions.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00304"/>00304 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>;
<anchor xml:id="_queue_8c_source_1l00305"/>00305 }
<anchor xml:id="_queue_8c_source_1l00306"/>00306 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00307"/>00307 
<anchor xml:id="_queue_8c_source_1l00308"/>00308 <emphasis role="preprocessor">#if(&#32;configSUPPORT_STATIC_ALLOCATION&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00309"/>00309 
<anchor xml:id="_queue_8c_source_1l00310"/>00310 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueueGenericCreateStatic(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxQueueLength,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxItemSize,&#32;uint8_t&#32;*pucQueueStorage,&#32;<link linkend="_structx_s_t_a_t_i_c___q_u_e_u_e">StaticQueue_t</link>&#32;*pxStaticQueue,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;ucQueueType&#32;)
<anchor xml:id="_queue_8c_source_1l00311"/>00311 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00312"/>00312 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*pxNewQueue;
<anchor xml:id="_queue_8c_source_1l00313"/>00313 
<anchor xml:id="_queue_8c_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;uxQueueLength&#32;&gt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;);
<anchor xml:id="_queue_8c_source_1l00315"/>00315 
<anchor xml:id="_queue_8c_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;StaticQueue_t&#32;structure&#32;and&#32;the&#32;queue&#32;storage&#32;area&#32;must&#32;be</emphasis>
<anchor xml:id="_queue_8c_source_1l00317"/>00317 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;supplied.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxStaticQueue&#32;!=&#32;NULL&#32;);
<anchor xml:id="_queue_8c_source_1l00319"/>00319 
<anchor xml:id="_queue_8c_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;queue&#32;storage&#32;area&#32;should&#32;be&#32;provided&#32;if&#32;the&#32;item&#32;size&#32;is&#32;not&#32;0,&#32;and</emphasis>
<anchor xml:id="_queue_8c_source_1l00321"/>00321 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;should&#32;not&#32;be&#32;provided&#32;if&#32;the&#32;item&#32;size&#32;is&#32;0.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;!(&#32;(&#32;pucQueueStorage&#32;!=&#32;NULL&#32;)&#32;&amp;&amp;&#32;(&#32;uxItemSize&#32;==&#32;0&#32;)&#32;)&#32;);
<anchor xml:id="_queue_8c_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;!(&#32;(&#32;pucQueueStorage&#32;==&#32;NULL&#32;)&#32;&amp;&amp;&#32;(&#32;uxItemSize&#32;!=&#32;0&#32;)&#32;)&#32;);
<anchor xml:id="_queue_8c_source_1l00324"/>00324 
<anchor xml:id="_queue_8c_source_1l00325"/>00325 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;configASSERT_DEFINED&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Sanity&#32;check&#32;that&#32;the&#32;size&#32;of&#32;the&#32;structure&#32;used&#32;to&#32;declare&#32;a</emphasis>
<anchor xml:id="_queue_8c_source_1l00328"/>00328 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;variable&#32;of&#32;type&#32;StaticQueue_t&#32;or&#32;StaticSemaphore_t&#32;equals&#32;the&#32;size&#32;of</emphasis>
<anchor xml:id="_queue_8c_source_1l00329"/>00329 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;real&#32;queue&#32;and&#32;semaphore&#32;structures.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">volatile</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xSize&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<link linkend="__free_r_t_o_s_8h_1a22e8979e2849d002747c0dd4c7c37908">StaticQueue_t</link>&#32;);
<anchor xml:id="_queue_8c_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xSize&#32;==&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;)&#32;);
<anchor xml:id="_queue_8c_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;xSize;&#32;<emphasis role="comment">/*&#32;Keeps&#32;lint&#32;quiet&#32;when&#32;configASSERT()&#32;is&#32;not&#32;defined.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00334"/>00334 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configASSERT_DEFINED&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l00335"/>00335 
<anchor xml:id="_queue_8c_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;address&#32;of&#32;a&#32;statically&#32;allocated&#32;queue&#32;was&#32;passed&#32;in,&#32;use&#32;it.</emphasis>
<anchor xml:id="_queue_8c_source_1l00337"/>00337 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;address&#32;of&#32;a&#32;statically&#32;allocated&#32;storage&#32;area&#32;was&#32;also&#32;passed&#32;in</emphasis>
<anchor xml:id="_queue_8c_source_1l00338"/>00338 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;but&#32;is&#32;already&#32;set.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewQueue&#32;=&#32;(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;)&#32;pxStaticQueue;&#32;<emphasis role="comment">/*lint&#32;!e740&#32;!e9087&#32;Unusual&#32;cast&#32;is&#32;ok&#32;as&#32;the&#32;structures&#32;are&#32;designed&#32;to&#32;have&#32;the&#32;same&#32;alignment,&#32;and&#32;the&#32;size&#32;is&#32;checked&#32;by&#32;an&#32;assert.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00340"/>00340 
<anchor xml:id="_queue_8c_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxNewQueue&#32;!=&#32;NULL&#32;)
<anchor xml:id="_queue_8c_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00343"/>00343 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Queues&#32;can&#32;be&#32;allocated&#32;wither&#32;statically&#32;or&#32;dynamically,&#32;so</emphasis>
<anchor xml:id="_queue_8c_source_1l00346"/>00346 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;note&#32;this&#32;queue&#32;was&#32;allocated&#32;statically&#32;in&#32;case&#32;the&#32;queue&#32;is</emphasis>
<anchor xml:id="_queue_8c_source_1l00347"/>00347 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;later&#32;deleted.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewQueue-&gt;ucStaticallyAllocated&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_queue_8c_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00350"/>00350 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l00351"/>00351 
<anchor xml:id="_queue_8c_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1aa4bcd737110dced391d9bcb7d246fb34">prvInitialiseNewQueue</link>(&#32;uxQueueLength,&#32;uxItemSize,&#32;pucQueueStorage,&#32;ucQueueType,&#32;pxNewQueue&#32;);
<anchor xml:id="_queue_8c_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a3a0d6a2e556a9bb303cbcb2a23700118">traceQUEUE_CREATE_FAILED</link>(&#32;ucQueueType&#32;);
<anchor xml:id="_queue_8c_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00359"/>00359 
<anchor xml:id="_queue_8c_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pxNewQueue;
<anchor xml:id="_queue_8c_source_1l00361"/>00361 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00362"/>00362 
<anchor xml:id="_queue_8c_source_1l00363"/>00363 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configSUPPORT_STATIC_ALLOCATION&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l00364"/>00364 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00365"/>00365 
<anchor xml:id="_queue_8c_source_1l00366"/>00366 <emphasis role="preprocessor">#if(&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00367"/>00367 
<anchor xml:id="_queue_8c_source_1l00368"/><link linkend="_queue_8c_1ac999cdfbb09fff396fa818bb9a30b4e5">00368</link> &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_queue_8c_1ac999cdfbb09fff396fa818bb9a30b4e5">xQueueGenericCreate</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxQueueLength,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxItemSize,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;ucQueueType&#32;)
<anchor xml:id="_queue_8c_source_1l00369"/>00369 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00370"/>00370 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*pxNewQueue;
<anchor xml:id="_queue_8c_source_1l00371"/>00371 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;xQueueSizeInBytes;
<anchor xml:id="_queue_8c_source_1l00372"/>00372 &#32;&#32;&#32;&#32;uint8_t&#32;*pucQueueStorage;
<anchor xml:id="_queue_8c_source_1l00373"/>00373 
<anchor xml:id="_queue_8c_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;uxQueueLength&#32;&gt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;);
<anchor xml:id="_queue_8c_source_1l00375"/>00375 
<anchor xml:id="_queue_8c_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;uxItemSize&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_queue_8c_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;There&#32;is&#32;not&#32;going&#32;to&#32;be&#32;a&#32;queue&#32;storage&#32;area.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xQueueSizeInBytes&#32;=&#32;(&#32;size_t&#32;)&#32;0;
<anchor xml:id="_queue_8c_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Allocate&#32;enough&#32;space&#32;to&#32;hold&#32;the&#32;maximum&#32;number&#32;of&#32;items&#32;that</emphasis>
<anchor xml:id="_queue_8c_source_1l00384"/>00384 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;can&#32;be&#32;in&#32;the&#32;queue&#32;at&#32;any&#32;time.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xQueueSizeInBytes&#32;=&#32;(&#32;size_t&#32;)&#32;(&#32;uxQueueLength&#32;*&#32;uxItemSize&#32;);&#32;<emphasis role="comment">/*lint&#32;!e961&#32;MISRA&#32;exception&#32;as&#32;the&#32;casts&#32;are&#32;only&#32;redundant&#32;for&#32;some&#32;ports.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00387"/>00387 
<anchor xml:id="_queue_8c_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Allocate&#32;the&#32;queue&#32;and&#32;storage&#32;area.&#32;&#32;Justification&#32;for&#32;MISRA</emphasis>
<anchor xml:id="_queue_8c_source_1l00389"/>00389 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;deviation&#32;as&#32;follows:&#32;&#32;pvPortMalloc()&#32;always&#32;ensures&#32;returned&#32;memory</emphasis>
<anchor xml:id="_queue_8c_source_1l00390"/>00390 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;blocks&#32;are&#32;aligned&#32;per&#32;the&#32;requirements&#32;of&#32;the&#32;MCU&#32;stack.&#32;&#32;In&#32;this&#32;case</emphasis>
<anchor xml:id="_queue_8c_source_1l00391"/>00391 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pvPortMalloc()&#32;must&#32;return&#32;a&#32;pointer&#32;that&#32;is&#32;guaranteed&#32;to&#32;meet&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l00392"/>00392 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;alignment&#32;requirements&#32;of&#32;the&#32;Queue_t&#32;structure&#32;-&#32;which&#32;in&#32;this&#32;case</emphasis>
<anchor xml:id="_queue_8c_source_1l00393"/>00393 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;an&#32;int8_t&#32;*.&#32;&#32;Therefore,&#32;whenever&#32;the&#32;stack&#32;alignment&#32;requirements</emphasis>
<anchor xml:id="_queue_8c_source_1l00394"/>00394 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;are&#32;greater&#32;than&#32;or&#32;equal&#32;to&#32;the&#32;pointer&#32;to&#32;char&#32;requirements&#32;the&#32;cast</emphasis>
<anchor xml:id="_queue_8c_source_1l00395"/>00395 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;safe.&#32;&#32;In&#32;other&#32;cases&#32;alignment&#32;requirements&#32;are&#32;not&#32;strict&#32;(one&#32;or</emphasis>
<anchor xml:id="_queue_8c_source_1l00396"/>00396 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;two&#32;bytes).&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewQueue&#32;=&#32;(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;)&#32;<link linkend="_heap__3_8c_1ac56bcb7515f081a5b3df83935499fa4a">pvPortMalloc</link>(&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;)&#32;+&#32;xQueueSizeInBytes&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9087&#32;!e9079&#32;see&#32;comment&#32;above.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00398"/>00398 
<anchor xml:id="_queue_8c_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxNewQueue&#32;!=&#32;NULL&#32;)
<anchor xml:id="_queue_8c_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Jump&#32;past&#32;the&#32;queue&#32;structure&#32;to&#32;find&#32;the&#32;location&#32;of&#32;the&#32;queue</emphasis>
<anchor xml:id="_queue_8c_source_1l00402"/>00402 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;storage&#32;area.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pucQueueStorage&#32;=&#32;(&#32;uint8_t&#32;*&#32;)&#32;pxNewQueue;
<anchor xml:id="_queue_8c_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pucQueueStorage&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<link linkend="_queue_8c_1ade16d14675fc1ac34af04a1162a6b883">Queue_t</link>&#32;);&#32;<emphasis role="comment">/*lint&#32;!e9016&#32;Pointer&#32;arithmetic&#32;allowed&#32;on&#32;char&#32;types,&#32;especially&#32;when&#32;it&#32;assists&#32;conveying&#32;intent.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00405"/>00405 
<anchor xml:id="_queue_8c_source_1l00406"/>00406 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;configSUPPORT_STATIC_ALLOCATION&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Queues&#32;can&#32;be&#32;created&#32;either&#32;statically&#32;or&#32;dynamically,&#32;so</emphasis>
<anchor xml:id="_queue_8c_source_1l00409"/>00409 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;note&#32;this&#32;task&#32;was&#32;created&#32;dynamically&#32;in&#32;case&#32;it&#32;is&#32;later</emphasis>
<anchor xml:id="_queue_8c_source_1l00410"/>00410 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;deleted.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewQueue-&gt;ucStaticallyAllocated&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_queue_8c_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00413"/>00413 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configSUPPORT_STATIC_ALLOCATION&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l00414"/>00414 
<anchor xml:id="_queue_8c_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1aa4bcd737110dced391d9bcb7d246fb34">prvInitialiseNewQueue</link>(&#32;uxQueueLength,&#32;uxItemSize,&#32;pucQueueStorage,&#32;ucQueueType,&#32;pxNewQueue&#32;);
<anchor xml:id="_queue_8c_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a3a0d6a2e556a9bb303cbcb2a23700118">traceQUEUE_CREATE_FAILED</link>(&#32;ucQueueType&#32;);
<anchor xml:id="_queue_8c_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00422"/>00422 
<anchor xml:id="_queue_8c_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pxNewQueue;
<anchor xml:id="_queue_8c_source_1l00424"/>00424 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00425"/>00425 
<anchor xml:id="_queue_8c_source_1l00426"/>00426 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configSUPPORT_STATIC_ALLOCATION&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l00427"/>00427 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00428"/>00428 
<anchor xml:id="_queue_8c_source_1l00429"/><link linkend="_queue_8c_1aa4bcd737110dced391d9bcb7d246fb34">00429</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_queue_8c_1aa4bcd737110dced391d9bcb7d246fb34">prvInitialiseNewQueue</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxQueueLength,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxItemSize,&#32;uint8_t&#32;*pucQueueStorage,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;ucQueueType,&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*pxNewQueue&#32;)
<anchor xml:id="_queue_8c_source_1l00430"/>00430 {
<anchor xml:id="_queue_8c_source_1l00431"/>00431 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Remove&#32;compiler&#32;warnings&#32;about&#32;unused&#32;parameters&#32;should</emphasis>
<anchor xml:id="_queue_8c_source_1l00432"/>00432 <emphasis role="comment">&#32;&#32;&#32;&#32;configUSE_TRACE_FACILITY&#32;not&#32;be&#32;set&#32;to&#32;1.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00433"/>00433 &#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;ucQueueType;
<anchor xml:id="_queue_8c_source_1l00434"/>00434 
<anchor xml:id="_queue_8c_source_1l00435"/>00435 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;uxItemSize&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_queue_8c_source_1l00436"/>00436 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;No&#32;RAM&#32;was&#32;allocated&#32;for&#32;the&#32;queue&#32;storage&#32;area,&#32;but&#32;PC&#32;head&#32;cannot</emphasis>
<anchor xml:id="_queue_8c_source_1l00438"/>00438 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;be&#32;set&#32;to&#32;NULL&#32;because&#32;NULL&#32;is&#32;used&#32;as&#32;a&#32;key&#32;to&#32;say&#32;the&#32;queue&#32;is&#32;used&#32;as</emphasis>
<anchor xml:id="_queue_8c_source_1l00439"/>00439 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;mutex.&#32;&#32;Therefore&#32;just&#32;set&#32;pcHead&#32;to&#32;point&#32;to&#32;the&#32;queue&#32;as&#32;a&#32;benign</emphasis>
<anchor xml:id="_queue_8c_source_1l00440"/>00440 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;that&#32;is&#32;known&#32;to&#32;be&#32;within&#32;the&#32;memory&#32;map.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewQueue-&gt;<link linkend="_struct_queue_definition_1a487dc7e43b380c58212cba72bc33e0ed">pcHead</link>&#32;=&#32;(&#32;int8_t&#32;*&#32;)&#32;pxNewQueue;
<anchor xml:id="_queue_8c_source_1l00442"/>00442 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00443"/>00443 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l00444"/>00444 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Set&#32;the&#32;head&#32;to&#32;the&#32;start&#32;of&#32;the&#32;queue&#32;storage&#32;area.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewQueue-&gt;<link linkend="_struct_queue_definition_1a487dc7e43b380c58212cba72bc33e0ed">pcHead</link>&#32;=&#32;(&#32;int8_t&#32;*&#32;)&#32;pucQueueStorage;
<anchor xml:id="_queue_8c_source_1l00447"/>00447 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00448"/>00448 
<anchor xml:id="_queue_8c_source_1l00449"/>00449 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Initialise&#32;the&#32;queue&#32;members&#32;as&#32;described&#32;where&#32;the&#32;queue&#32;type&#32;is</emphasis>
<anchor xml:id="_queue_8c_source_1l00450"/>00450 <emphasis role="comment">&#32;&#32;&#32;&#32;defined.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00451"/>00451 &#32;&#32;&#32;&#32;pxNewQueue-&gt;<link linkend="_struct_queue_definition_1ae80d17a812c669d4d41265b7f693988c">uxLength</link>&#32;=&#32;uxQueueLength;
<anchor xml:id="_queue_8c_source_1l00452"/>00452 &#32;&#32;&#32;&#32;pxNewQueue-&gt;<link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">uxItemSize</link>&#32;=&#32;uxItemSize;
<anchor xml:id="_queue_8c_source_1l00453"/>00453 &#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_queue_8c_1a5e54273dbe3f56b8bdc8f7abee67a871">xQueueGenericReset</link>(&#32;pxNewQueue,&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>&#32;);
<anchor xml:id="_queue_8c_source_1l00454"/>00454 
<anchor xml:id="_queue_8c_source_1l00455"/>00455 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00456"/>00456 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewQueue-&gt;<link linkend="_struct_queue_definition_1a337a8dc6af8fc327a92412275e86fe81">ucQueueType</link>&#32;=&#32;ucQueueType;
<anchor xml:id="_queue_8c_source_1l00458"/>00458 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00459"/>00459 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TRACE_FACILITY&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l00460"/>00460 
<anchor xml:id="_queue_8c_source_1l00461"/>00461 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if(&#32;configUSE_QUEUE_SETS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00462"/>00462 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewQueue-&gt;pxQueueSetContainer&#32;=&#32;NULL;
<anchor xml:id="_queue_8c_source_1l00464"/>00464 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00465"/>00465 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_QUEUE_SETS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l00466"/>00466 
<anchor xml:id="_queue_8c_source_1l00467"/>00467 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a62dcc27e040063ec72e174c985740f96">traceQUEUE_CREATE</link>(&#32;pxNewQueue&#32;);
<anchor xml:id="_queue_8c_source_1l00468"/>00468 }
<anchor xml:id="_queue_8c_source_1l00469"/>00469 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00470"/>00470 
<anchor xml:id="_queue_8c_source_1l00471"/>00471 <emphasis role="preprocessor">#if(&#32;configUSE_MUTEXES&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00472"/>00472 
<anchor xml:id="_queue_8c_source_1l00473"/><link linkend="_queue_8c_1a0af6d378a0b1fe9daca483a0a03b0f69">00473</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_queue_8c_1a0af6d378a0b1fe9daca483a0a03b0f69">prvInitialiseMutex</link>(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*pxNewQueue&#32;)
<anchor xml:id="_queue_8c_source_1l00474"/>00474 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxNewQueue&#32;!=&#32;NULL&#32;)
<anchor xml:id="_queue_8c_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;queue&#32;create&#32;function&#32;will&#32;set&#32;all&#32;the&#32;queue&#32;structure&#32;members</emphasis>
<anchor xml:id="_queue_8c_source_1l00478"/>00478 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;correctly&#32;for&#32;a&#32;generic&#32;queue,&#32;but&#32;this&#32;function&#32;is&#32;creating&#32;a</emphasis>
<anchor xml:id="_queue_8c_source_1l00479"/>00479 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mutex.&#32;&#32;Overwrite&#32;those&#32;members&#32;that&#32;need&#32;to&#32;be&#32;set&#32;differently&#32;-</emphasis>
<anchor xml:id="_queue_8c_source_1l00480"/>00480 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in&#32;particular&#32;the&#32;information&#32;required&#32;for&#32;priority&#32;inheritance.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1adb2c0818274974553c619ff953b6f477">xSemaphore</link>.<link linkend="_struct_semaphore_data_1ab1ed54c7b39dc45b3c310fae7ad08693">xMutexHolder</link>&#32;=&#32;NULL;
<anchor xml:id="_queue_8c_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewQueue-&gt;uxQueueType&#32;=&#32;<link linkend="_queue_8c_1a0799077a434aea43f5cca3cda3625aa8">queueQUEUE_IS_MUTEX</link>;
<anchor xml:id="_queue_8c_source_1l00483"/>00483 
<anchor xml:id="_queue_8c_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;In&#32;case&#32;this&#32;is&#32;a&#32;recursive&#32;mutex.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxNewQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1adb2c0818274974553c619ff953b6f477">xSemaphore</link>.<link linkend="_struct_semaphore_data_1aa428fcfc6e5831d054234444fde56574">uxRecursiveCallCount</link>&#32;=&#32;0;
<anchor xml:id="_queue_8c_source_1l00486"/>00486 
<anchor xml:id="_queue_8c_source_1l00487"/>00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a2eff67edaee170b33b549966d8b99b47">traceCREATE_MUTEX</link>(&#32;pxNewQueue&#32;);
<anchor xml:id="_queue_8c_source_1l00488"/>00488 
<anchor xml:id="_queue_8c_source_1l00489"/>00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Start&#32;with&#32;the&#32;semaphore&#32;in&#32;the&#32;expected&#32;state.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00490"/>00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_queue_8c_1acb67c81366c00896b21cd826e07d885d">xQueueGenericSend</link>(&#32;pxNewQueue,&#32;NULL,&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;0U,&#32;<link linkend="_queue_8h_1a4d78fa863fbeb90425a2dda08fae8b12">queueSEND_TO_BACK</link>&#32;);
<anchor xml:id="_queue_8c_source_1l00491"/>00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l00493"/>00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1aa01e89d6df9ac9c4506f8918cc809ddf">traceCREATE_MUTEX_FAILED</link>();
<anchor xml:id="_queue_8c_source_1l00495"/>00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00496"/>00496 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00497"/>00497 
<anchor xml:id="_queue_8c_source_1l00498"/>00498 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_MUTEXES&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l00499"/>00499 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00500"/>00500 
<anchor xml:id="_queue_8c_source_1l00501"/>00501 <emphasis role="preprocessor">#if(&#32;(&#32;configUSE_MUTEXES&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00502"/>00502 
<anchor xml:id="_queue_8c_source_1l00503"/><link linkend="_queue_8c_1a2cde35e52724005fa736c80f8c9bc9ee">00503</link> &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_queue_8c_1a2cde35e52724005fa736c80f8c9bc9ee">xQueueCreateMutex</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;ucQueueType&#32;)
<anchor xml:id="_queue_8c_source_1l00504"/>00504 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00505"/>00505 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xNewQueue;
<anchor xml:id="_queue_8c_source_1l00506"/>00506 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxMutexLength&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;1,&#32;uxMutexSize&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0;
<anchor xml:id="_queue_8c_source_1l00507"/>00507 
<anchor xml:id="_queue_8c_source_1l00508"/>00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xNewQueue&#32;=&#32;<link linkend="_queue_8c_1ac999cdfbb09fff396fa818bb9a30b4e5">xQueueGenericCreate</link>(&#32;uxMutexLength,&#32;uxMutexSize,&#32;ucQueueType&#32;);
<anchor xml:id="_queue_8c_source_1l00509"/>00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1a0af6d378a0b1fe9daca483a0a03b0f69">prvInitialiseMutex</link>(&#32;(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;)&#32;xNewQueue&#32;);
<anchor xml:id="_queue_8c_source_1l00510"/>00510 
<anchor xml:id="_queue_8c_source_1l00511"/>00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xNewQueue;
<anchor xml:id="_queue_8c_source_1l00512"/>00512 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00513"/>00513 
<anchor xml:id="_queue_8c_source_1l00514"/>00514 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_MUTEXES&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l00515"/>00515 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00516"/>00516 
<anchor xml:id="_queue_8c_source_1l00517"/>00517 <emphasis role="preprocessor">#if(&#32;(&#32;configUSE_MUTEXES&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configSUPPORT_STATIC_ALLOCATION&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00518"/>00518 
<anchor xml:id="_queue_8c_source_1l00519"/>00519 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_queue_8h_1af92945589381b740932a7cc41e212a37">xQueueCreateMutexStatic</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;ucQueueType,&#32;<link linkend="_structx_s_t_a_t_i_c___q_u_e_u_e">StaticQueue_t</link>&#32;*pxStaticQueue&#32;)
<anchor xml:id="_queue_8c_source_1l00520"/>00520 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00521"/>00521 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xNewQueue;
<anchor xml:id="_queue_8c_source_1l00522"/>00522 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxMutexLength&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;1,&#32;uxMutexSize&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0;
<anchor xml:id="_queue_8c_source_1l00523"/>00523 
<anchor xml:id="_queue_8c_source_1l00524"/>00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Prevent&#32;compiler&#32;warnings&#32;about&#32;unused&#32;parameters&#32;if</emphasis>
<anchor xml:id="_queue_8c_source_1l00525"/>00525 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;configUSE_TRACE_FACILITY&#32;does&#32;not&#32;equal&#32;1.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00526"/>00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;ucQueueType;
<anchor xml:id="_queue_8c_source_1l00527"/>00527 
<anchor xml:id="_queue_8c_source_1l00528"/>00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xNewQueue&#32;=&#32;xQueueGenericCreateStatic(&#32;uxMutexLength,&#32;uxMutexSize,&#32;NULL,&#32;pxStaticQueue,&#32;ucQueueType&#32;);
<anchor xml:id="_queue_8c_source_1l00529"/>00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1a0af6d378a0b1fe9daca483a0a03b0f69">prvInitialiseMutex</link>(&#32;(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;)&#32;xNewQueue&#32;);
<anchor xml:id="_queue_8c_source_1l00530"/>00530 
<anchor xml:id="_queue_8c_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xNewQueue;
<anchor xml:id="_queue_8c_source_1l00532"/>00532 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00533"/>00533 
<anchor xml:id="_queue_8c_source_1l00534"/>00534 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_MUTEXES&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l00535"/>00535 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00536"/>00536 
<anchor xml:id="_queue_8c_source_1l00537"/>00537 <emphasis role="preprocessor">#if&#32;(&#32;(&#32;configUSE_MUTEXES&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;INCLUDE_xSemaphoreGetMutexHolder&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00538"/>00538 
<anchor xml:id="_queue_8c_source_1l00539"/>00539 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;<link linkend="_queue_8h_1ac49b15e4005be658fd04e68407ef4fb1">xQueueGetMutexHolder</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xSemaphore&#32;)
<anchor xml:id="_queue_8c_source_1l00540"/>00540 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00541"/>00541 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;pxReturn;
<anchor xml:id="_queue_8c_source_1l00542"/>00542 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxSemaphore&#32;=&#32;(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;)&#32;xSemaphore;
<anchor xml:id="_queue_8c_source_1l00543"/>00543 
<anchor xml:id="_queue_8c_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;function&#32;is&#32;called&#32;by&#32;xSemaphoreGetMutexHolder(),&#32;and&#32;should&#32;not</emphasis>
<anchor xml:id="_queue_8c_source_1l00545"/>00545 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;be&#32;called&#32;directly.&#32;&#32;Note:&#32;&#32;This&#32;is&#32;a&#32;good&#32;way&#32;of&#32;determining&#32;if&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l00546"/>00546 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;calling&#32;task&#32;is&#32;the&#32;mutex&#32;holder,&#32;but&#32;not&#32;a&#32;good&#32;way&#32;of&#32;determining&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l00547"/>00547 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;identity&#32;of&#32;the&#32;mutex&#32;holder,&#32;as&#32;the&#32;holder&#32;may&#32;change&#32;between&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l00548"/>00548 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;following&#32;critical&#32;section&#32;exiting&#32;and&#32;the&#32;function&#32;returning.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00549"/>00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l00550"/>00550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00551"/>00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxSemaphore-&gt;uxQueueType&#32;==&#32;<link linkend="_queue_8c_1a0799077a434aea43f5cca3cda3625aa8">queueQUEUE_IS_MUTEX</link>&#32;)
<anchor xml:id="_queue_8c_source_1l00552"/>00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxReturn&#32;=&#32;pxSemaphore-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1adb2c0818274974553c619ff953b6f477">xSemaphore</link>.<link linkend="_struct_semaphore_data_1ab1ed54c7b39dc45b3c310fae7ad08693">xMutexHolder</link>;
<anchor xml:id="_queue_8c_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00555"/>00555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l00556"/>00556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00557"/>00557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxReturn&#32;=&#32;NULL;
<anchor xml:id="_queue_8c_source_1l00558"/>00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00559"/>00559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00560"/>00560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l00561"/>00561 
<anchor xml:id="_queue_8c_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pxReturn;
<anchor xml:id="_queue_8c_source_1l00563"/>00563 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">/*lint&#32;!e818&#32;xSemaphore&#32;cannot&#32;be&#32;a&#32;pointer&#32;to&#32;const&#32;because&#32;it&#32;is&#32;a&#32;typedef.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00564"/>00564 
<anchor xml:id="_queue_8c_source_1l00565"/>00565 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_queue_8c_source_1l00566"/>00566 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00567"/>00567 
<anchor xml:id="_queue_8c_source_1l00568"/>00568 <emphasis role="preprocessor">#if&#32;(&#32;(&#32;configUSE_MUTEXES&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;INCLUDE_xSemaphoreGetMutexHolder&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00569"/>00569 
<anchor xml:id="_queue_8c_source_1l00570"/>00570 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;<link linkend="_queue_8h_1a8ccb06cf46ba1c052809a3809954bd07">xQueueGetMutexHolderFromISR</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xSemaphore&#32;)
<anchor xml:id="_queue_8c_source_1l00571"/>00571 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00572"/>00572 &#32;&#32;&#32;&#32;<link linkend="_structtsk_task_control_block">TaskHandle_t</link>&#32;pxReturn;
<anchor xml:id="_queue_8c_source_1l00573"/>00573 
<anchor xml:id="_queue_8c_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xSemaphore&#32;);
<anchor xml:id="_queue_8c_source_1l00575"/>00575 
<anchor xml:id="_queue_8c_source_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Mutexes&#32;cannot&#32;be&#32;used&#32;in&#32;interrupt&#32;service&#32;routines,&#32;so&#32;the&#32;mutex</emphasis>
<anchor xml:id="_queue_8c_source_1l00577"/>00577 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;holder&#32;should&#32;not&#32;change&#32;in&#32;an&#32;ISR,&#32;and&#32;therefore&#32;a&#32;critical&#32;section&#32;is</emphasis>
<anchor xml:id="_queue_8c_source_1l00578"/>00578 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;not&#32;required&#32;here.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00579"/>00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;)&#32;xSemaphore&#32;)-&gt;<link linkend="_queue_8c_1afe3f7afb2a02c085f2d634003902cbc0">uxQueueType</link>&#32;==&#32;<link linkend="_queue_8c_1a0799077a434aea43f5cca3cda3625aa8">queueQUEUE_IS_MUTEX</link>&#32;)
<anchor xml:id="_queue_8c_source_1l00580"/>00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00581"/>00581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxReturn&#32;=&#32;(&#32;(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;)&#32;xSemaphore&#32;)-&gt;u.xSemaphore.xMutexHolder;
<anchor xml:id="_queue_8c_source_1l00582"/>00582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00583"/>00583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l00584"/>00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00585"/>00585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxReturn&#32;=&#32;NULL;
<anchor xml:id="_queue_8c_source_1l00586"/>00586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00587"/>00587 
<anchor xml:id="_queue_8c_source_1l00588"/>00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pxReturn;
<anchor xml:id="_queue_8c_source_1l00589"/>00589 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">/*lint&#32;!e818&#32;xSemaphore&#32;cannot&#32;be&#32;a&#32;pointer&#32;to&#32;const&#32;because&#32;it&#32;is&#32;a&#32;typedef.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00590"/>00590 
<anchor xml:id="_queue_8c_source_1l00591"/>00591 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_queue_8c_source_1l00592"/>00592 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00593"/>00593 
<anchor xml:id="_queue_8c_source_1l00594"/>00594 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_RECURSIVE_MUTEXES&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00595"/>00595 
<anchor xml:id="_queue_8c_source_1l00596"/><link linkend="_queue_8c_1a73ad84b979640a8c3f79dc253e0fa9b5">00596</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8c_1a73ad84b979640a8c3f79dc253e0fa9b5">xQueueGiveMutexRecursive</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xMutex&#32;)
<anchor xml:id="_queue_8c_source_1l00597"/>00597 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00598"/>00598 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l00599"/>00599 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxMutex&#32;=&#32;(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;)&#32;xMutex;
<anchor xml:id="_queue_8c_source_1l00600"/>00600 
<anchor xml:id="_queue_8c_source_1l00601"/>00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxMutex&#32;);
<anchor xml:id="_queue_8c_source_1l00602"/>00602 
<anchor xml:id="_queue_8c_source_1l00603"/>00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;this&#32;is&#32;the&#32;task&#32;that&#32;holds&#32;the&#32;mutex&#32;then&#32;xMutexHolder&#32;will&#32;not</emphasis>
<anchor xml:id="_queue_8c_source_1l00604"/>00604 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;change&#32;outside&#32;of&#32;this&#32;task.&#32;&#32;If&#32;this&#32;task&#32;does&#32;not&#32;hold&#32;the&#32;mutex&#32;then</emphasis>
<anchor xml:id="_queue_8c_source_1l00605"/>00605 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxMutexHolder&#32;can&#32;never&#32;coincidentally&#32;equal&#32;the&#32;tasks&#32;handle,&#32;and&#32;as</emphasis>
<anchor xml:id="_queue_8c_source_1l00606"/>00606 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this&#32;is&#32;the&#32;only&#32;condition&#32;we&#32;are&#32;interested&#32;in&#32;it&#32;does&#32;not&#32;matter&#32;if</emphasis>
<anchor xml:id="_queue_8c_source_1l00607"/>00607 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxMutexHolder&#32;is&#32;accessed&#32;simultaneously&#32;by&#32;another&#32;task.&#32;&#32;Therefore&#32;no</emphasis>
<anchor xml:id="_queue_8c_source_1l00608"/>00608 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mutual&#32;exclusion&#32;is&#32;required&#32;to&#32;test&#32;the&#32;pxMutexHolder&#32;variable.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxMutex-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1adb2c0818274974553c619ff953b6f477">xSemaphore</link>.<link linkend="_struct_semaphore_data_1ab1ed54c7b39dc45b3c310fae7ad08693">xMutexHolder</link>&#32;==&#32;<link linkend="_task_8h_1a85a0f9c9f817b18686efbf8f37c72dfc">xTaskGetCurrentTaskHandle</link>()&#32;)
<anchor xml:id="_queue_8c_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1aa42efc6b6938c6f2a5f04c7367f59b22">traceGIVE_MUTEX_RECURSIVE</link>(&#32;pxMutex&#32;);
<anchor xml:id="_queue_8c_source_1l00612"/>00612 
<anchor xml:id="_queue_8c_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;uxRecursiveCallCount&#32;cannot&#32;be&#32;zero&#32;if&#32;xMutexHolder&#32;is&#32;equal&#32;to</emphasis>
<anchor xml:id="_queue_8c_source_1l00614"/>00614 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;task&#32;handle,&#32;therefore&#32;no&#32;underflow&#32;check&#32;is&#32;required.&#32;&#32;Also,</emphasis>
<anchor xml:id="_queue_8c_source_1l00615"/>00615 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxRecursiveCallCount&#32;is&#32;only&#32;modified&#32;by&#32;the&#32;mutex&#32;holder,&#32;and&#32;as</emphasis>
<anchor xml:id="_queue_8c_source_1l00616"/>00616 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;there&#32;can&#32;only&#32;be&#32;one,&#32;no&#32;mutual&#32;exclusion&#32;is&#32;required&#32;to&#32;modify&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l00617"/>00617 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxRecursiveCallCount&#32;member.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00618"/>00618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;pxMutex-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1adb2c0818274974553c619ff953b6f477">xSemaphore</link>.<link linkend="_struct_semaphore_data_1aa428fcfc6e5831d054234444fde56574">uxRecursiveCallCount</link>&#32;)--;
<anchor xml:id="_queue_8c_source_1l00619"/>00619 
<anchor xml:id="_queue_8c_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Has&#32;the&#32;recursive&#32;call&#32;count&#32;unwound&#32;to&#32;0?&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxMutex-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1adb2c0818274974553c619ff953b6f477">xSemaphore</link>.<link linkend="_struct_semaphore_data_1aa428fcfc6e5831d054234444fde56574">uxRecursiveCallCount</link>&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_queue_8c_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Return&#32;the&#32;mutex.&#32;&#32;This&#32;will&#32;automatically&#32;unblock&#32;any&#32;other</emphasis>
<anchor xml:id="_queue_8c_source_1l00624"/>00624 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;task&#32;that&#32;might&#32;be&#32;waiting&#32;to&#32;access&#32;the&#32;mutex.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_queue_8c_1acb67c81366c00896b21cd826e07d885d">xQueueGenericSend</link>(&#32;pxMutex,&#32;NULL,&#32;<link linkend="_queue_8c_1a166c89c5c3a213c7e52283e024bb1d50">queueMUTEX_GIVE_BLOCK_TIME</link>,&#32;<link linkend="_queue_8h_1a4d78fa863fbeb90425a2dda08fae8b12">queueSEND_TO_BACK</link>&#32;);
<anchor xml:id="_queue_8c_source_1l00626"/>00626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00627"/>00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00629"/>00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l00630"/>00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00631"/>00631 
<anchor xml:id="_queue_8c_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>;
<anchor xml:id="_queue_8c_source_1l00633"/>00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00634"/>00634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l00635"/>00635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00636"/>00636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;mutex&#32;cannot&#32;be&#32;given&#32;because&#32;the&#32;calling&#32;task&#32;is&#32;not&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l00637"/>00637 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;holder.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6">pdFAIL</link>;
<anchor xml:id="_queue_8c_source_1l00639"/>00639 
<anchor xml:id="_queue_8c_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a6b41ab1bbdaa0eb7f8e790602ed21077">traceGIVE_MUTEX_RECURSIVE_FAILED</link>(&#32;pxMutex&#32;);
<anchor xml:id="_queue_8c_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00642"/>00642 
<anchor xml:id="_queue_8c_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l00644"/>00644 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00645"/>00645 
<anchor xml:id="_queue_8c_source_1l00646"/>00646 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_RECURSIVE_MUTEXES&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l00647"/>00647 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00648"/>00648 
<anchor xml:id="_queue_8c_source_1l00649"/>00649 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_RECURSIVE_MUTEXES&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00650"/>00650 
<anchor xml:id="_queue_8c_source_1l00651"/><link linkend="_queue_8c_1aa17470144b72ed310ef73275a0928e09">00651</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8c_1aa17470144b72ed310ef73275a0928e09">xQueueTakeMutexRecursive</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xMutex,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait&#32;)
<anchor xml:id="_queue_8c_source_1l00652"/>00652 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00653"/>00653 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l00654"/>00654 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxMutex&#32;=&#32;(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;)&#32;xMutex;
<anchor xml:id="_queue_8c_source_1l00655"/>00655 
<anchor xml:id="_queue_8c_source_1l00656"/>00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxMutex&#32;);
<anchor xml:id="_queue_8c_source_1l00657"/>00657 
<anchor xml:id="_queue_8c_source_1l00658"/>00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Comments&#32;regarding&#32;mutual&#32;exclusion&#32;as&#32;per&#32;those&#32;within</emphasis>
<anchor xml:id="_queue_8c_source_1l00659"/>00659 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xQueueGiveMutexRecursive().&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00660"/>00660 
<anchor xml:id="_queue_8c_source_1l00661"/>00661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a088b831fdffacf61abf9c7312a2386ad">traceTAKE_MUTEX_RECURSIVE</link>(&#32;pxMutex&#32;);
<anchor xml:id="_queue_8c_source_1l00662"/>00662 
<anchor xml:id="_queue_8c_source_1l00663"/>00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxMutex-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1adb2c0818274974553c619ff953b6f477">xSemaphore</link>.<link linkend="_struct_semaphore_data_1ab1ed54c7b39dc45b3c310fae7ad08693">xMutexHolder</link>&#32;==&#32;<link linkend="_task_8h_1a85a0f9c9f817b18686efbf8f37c72dfc">xTaskGetCurrentTaskHandle</link>()&#32;)
<anchor xml:id="_queue_8c_source_1l00664"/>00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00665"/>00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;pxMutex-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1adb2c0818274974553c619ff953b6f477">xSemaphore</link>.<link linkend="_struct_semaphore_data_1aa428fcfc6e5831d054234444fde56574">uxRecursiveCallCount</link>&#32;)++;
<anchor xml:id="_queue_8c_source_1l00666"/>00666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>;
<anchor xml:id="_queue_8c_source_1l00667"/>00667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00668"/>00668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l00669"/>00669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00670"/>00670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_queue_8c_1ade45e48664e5ec17ea091f00cd34394f">xQueueSemaphoreTake</link>(&#32;pxMutex,&#32;xTicksToWait&#32;);
<anchor xml:id="_queue_8c_source_1l00671"/>00671 
<anchor xml:id="_queue_8c_source_1l00672"/>00672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;pdPASS&#32;will&#32;only&#32;be&#32;returned&#32;if&#32;the&#32;mutex&#32;was&#32;successfully</emphasis>
<anchor xml:id="_queue_8c_source_1l00673"/>00673 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;obtained.&#32;&#32;The&#32;calling&#32;task&#32;may&#32;have&#32;entered&#32;the&#32;Blocked&#32;state</emphasis>
<anchor xml:id="_queue_8c_source_1l00674"/>00674 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;before&#32;reaching&#32;here.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00675"/>00675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xReturn&#32;!=&#32;<link linkend="_projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6">pdFAIL</link>&#32;)
<anchor xml:id="_queue_8c_source_1l00676"/>00676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00677"/>00677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;pxMutex-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1adb2c0818274974553c619ff953b6f477">xSemaphore</link>.<link linkend="_struct_semaphore_data_1aa428fcfc6e5831d054234444fde56574">uxRecursiveCallCount</link>&#32;)++;
<anchor xml:id="_queue_8c_source_1l00678"/>00678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00679"/>00679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l00680"/>00680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00681"/>00681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ad2d983d63b7d1c3d9208b14d3b76df53">traceTAKE_MUTEX_RECURSIVE_FAILED</link>(&#32;pxMutex&#32;);
<anchor xml:id="_queue_8c_source_1l00682"/>00682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00683"/>00683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00684"/>00684 
<anchor xml:id="_queue_8c_source_1l00685"/>00685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l00686"/>00686 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00687"/>00687 
<anchor xml:id="_queue_8c_source_1l00688"/>00688 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_RECURSIVE_MUTEXES&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l00689"/>00689 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00690"/>00690 
<anchor xml:id="_queue_8c_source_1l00691"/>00691 <emphasis role="preprocessor">#if(&#32;(&#32;configUSE_COUNTING_SEMAPHORES&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configSUPPORT_STATIC_ALLOCATION&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00692"/>00692 
<anchor xml:id="_queue_8c_source_1l00693"/>00693 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_queue_8h_1a601cb15993988a393676a9df74b067bd">xQueueCreateCountingSemaphoreStatic</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxMaxCount,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxInitialCount,&#32;<link linkend="_structx_s_t_a_t_i_c___q_u_e_u_e">StaticQueue_t</link>&#32;*pxStaticQueue&#32;)
<anchor xml:id="_queue_8c_source_1l00694"/>00694 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00695"/>00695 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xHandle;
<anchor xml:id="_queue_8c_source_1l00696"/>00696 
<anchor xml:id="_queue_8c_source_1l00697"/>00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;uxMaxCount&#32;!=&#32;0&#32;);
<anchor xml:id="_queue_8c_source_1l00698"/>00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;uxInitialCount&#32;&lt;=&#32;uxMaxCount&#32;);
<anchor xml:id="_queue_8c_source_1l00699"/>00699 
<anchor xml:id="_queue_8c_source_1l00700"/>00700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xHandle&#32;=&#32;xQueueGenericCreateStatic(&#32;uxMaxCount,&#32;<link linkend="_queue_8c_1adfb14d07644ad4da4bd2303105884227">queueSEMAPHORE_QUEUE_ITEM_LENGTH</link>,&#32;NULL,&#32;pxStaticQueue,&#32;<link linkend="_queue_8h_1abccf1c95aa0942f8df163d414010542b">queueQUEUE_TYPE_COUNTING_SEMAPHORE</link>&#32;);
<anchor xml:id="_queue_8c_source_1l00701"/>00701 
<anchor xml:id="_queue_8c_source_1l00702"/>00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xHandle&#32;!=&#32;NULL&#32;)
<anchor xml:id="_queue_8c_source_1l00703"/>00703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00704"/>00704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;)&#32;xHandle&#32;)-&gt;uxMessagesWaiting&#32;=&#32;uxInitialCount;
<anchor xml:id="_queue_8c_source_1l00705"/>00705 
<anchor xml:id="_queue_8c_source_1l00706"/>00706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a3803714a43519a6bfc93dadfa255bf14">traceCREATE_COUNTING_SEMAPHORE</link>();
<anchor xml:id="_queue_8c_source_1l00707"/>00707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00708"/>00708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l00709"/>00709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00710"/>00710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a656fccb9717146cc4036ff8701eeb67e">traceCREATE_COUNTING_SEMAPHORE_FAILED</link>();
<anchor xml:id="_queue_8c_source_1l00711"/>00711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00712"/>00712 
<anchor xml:id="_queue_8c_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xHandle;
<anchor xml:id="_queue_8c_source_1l00714"/>00714 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00715"/>00715 
<anchor xml:id="_queue_8c_source_1l00716"/>00716 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;(&#32;(&#32;configUSE_COUNTING_SEMAPHORES&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;==&#32;1&#32;)&#32;)&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l00717"/>00717 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00718"/>00718 
<anchor xml:id="_queue_8c_source_1l00719"/>00719 <emphasis role="preprocessor">#if(&#32;(&#32;configUSE_COUNTING_SEMAPHORES&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00720"/>00720 
<anchor xml:id="_queue_8c_source_1l00721"/><link linkend="_queue_8c_1a94632b0b3d9fc1961140bd2f6bc01fea">00721</link> &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;<link linkend="_queue_8c_1a94632b0b3d9fc1961140bd2f6bc01fea">xQueueCreateCountingSemaphore</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxMaxCount,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxInitialCount&#32;)
<anchor xml:id="_queue_8c_source_1l00722"/>00722 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00723"/>00723 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xHandle;
<anchor xml:id="_queue_8c_source_1l00724"/>00724 
<anchor xml:id="_queue_8c_source_1l00725"/>00725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;uxMaxCount&#32;!=&#32;0&#32;);
<anchor xml:id="_queue_8c_source_1l00726"/>00726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;uxInitialCount&#32;&lt;=&#32;uxMaxCount&#32;);
<anchor xml:id="_queue_8c_source_1l00727"/>00727 
<anchor xml:id="_queue_8c_source_1l00728"/>00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xHandle&#32;=&#32;<link linkend="_queue_8c_1ac999cdfbb09fff396fa818bb9a30b4e5">xQueueGenericCreate</link>(&#32;uxMaxCount,&#32;<link linkend="_queue_8c_1adfb14d07644ad4da4bd2303105884227">queueSEMAPHORE_QUEUE_ITEM_LENGTH</link>,&#32;<link linkend="_queue_8h_1abccf1c95aa0942f8df163d414010542b">queueQUEUE_TYPE_COUNTING_SEMAPHORE</link>&#32;);
<anchor xml:id="_queue_8c_source_1l00729"/>00729 
<anchor xml:id="_queue_8c_source_1l00730"/>00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xHandle&#32;!=&#32;NULL&#32;)
<anchor xml:id="_queue_8c_source_1l00731"/>00731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00732"/>00732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;)&#32;xHandle&#32;)-&gt;uxMessagesWaiting&#32;=&#32;uxInitialCount;
<anchor xml:id="_queue_8c_source_1l00733"/>00733 
<anchor xml:id="_queue_8c_source_1l00734"/>00734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a3803714a43519a6bfc93dadfa255bf14">traceCREATE_COUNTING_SEMAPHORE</link>();
<anchor xml:id="_queue_8c_source_1l00735"/>00735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00736"/>00736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l00737"/>00737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00738"/>00738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a656fccb9717146cc4036ff8701eeb67e">traceCREATE_COUNTING_SEMAPHORE_FAILED</link>();
<anchor xml:id="_queue_8c_source_1l00739"/>00739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00740"/>00740 
<anchor xml:id="_queue_8c_source_1l00741"/>00741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xHandle;
<anchor xml:id="_queue_8c_source_1l00742"/>00742 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00743"/>00743 
<anchor xml:id="_queue_8c_source_1l00744"/>00744 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;(&#32;(&#32;configUSE_COUNTING_SEMAPHORES&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;==&#32;1&#32;)&#32;)&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l00745"/>00745 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00746"/>00746 
<anchor xml:id="_queue_8c_source_1l00747"/><link linkend="_queue_8c_1acb67c81366c00896b21cd826e07d885d">00747</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8c_1acb67c81366c00896b21cd826e07d885d">xQueueGenericSend</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueue,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pvItemToQueue,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xCopyPosition&#32;)
<anchor xml:id="_queue_8c_source_1l00748"/>00748 {
<anchor xml:id="_queue_8c_source_1l00749"/>00749 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xEntryTimeSet&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>,&#32;xYieldRequired;
<anchor xml:id="_queue_8c_source_1l00750"/>00750 <link linkend="_structx_t_i_m_e___o_u_t">TimeOut_t</link>&#32;xTimeOut;
<anchor xml:id="_queue_8c_source_1l00751"/>00751 <link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue&#32;=&#32;xQueue;
<anchor xml:id="_queue_8c_source_1l00752"/>00752 
<anchor xml:id="_queue_8c_source_1l00753"/>00753 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l00754"/>00754 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;!(&#32;(&#32;pvItemToQueue&#32;==&#32;NULL&#32;)&#32;&amp;&amp;&#32;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">uxItemSize</link>&#32;!=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0U&#32;)&#32;)&#32;);
<anchor xml:id="_queue_8c_source_1l00755"/>00755 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;!(&#32;(&#32;xCopyPosition&#32;==&#32;<link linkend="_queue_8h_1a5bb1c4a46d4b08b6d35cf586983476ef">queueOVERWRITE</link>&#32;)&#32;&amp;&amp;&#32;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1ae80d17a812c669d4d41265b7f693988c">uxLength</link>&#32;!=&#32;1&#32;)&#32;)&#32;);
<anchor xml:id="_queue_8c_source_1l00756"/>00756 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;(&#32;INCLUDE_xTaskGetSchedulerState&#32;==&#32;1&#32;)&#32;||&#32;(&#32;configUSE_TIMERS&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00757"/>00757 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00758"/>00758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;!(&#32;(&#32;<link linkend="_task_8h_1a0241000e08a261372186d34825a35979">xTaskGetSchedulerState</link>()&#32;==&#32;<link linkend="_task_8h_1a0cad071ca127a35df93166e9ed5b6ada">taskSCHEDULER_SUSPENDED</link>&#32;)&#32;&amp;&amp;&#32;(&#32;xTicksToWait&#32;!=&#32;0&#32;)&#32;)&#32;);
<anchor xml:id="_queue_8c_source_1l00759"/>00759 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00760"/>00760 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_queue_8c_source_1l00761"/>00761 
<anchor xml:id="_queue_8c_source_1l00762"/>00762 
<anchor xml:id="_queue_8c_source_1l00763"/>00763 &#32;&#32;&#32;&#32;<emphasis role="comment">/*lint&#32;-save&#32;-e904&#32;This&#32;function&#32;relaxes&#32;the&#32;coding&#32;standard&#32;somewhat&#32;to</emphasis>
<anchor xml:id="_queue_8c_source_1l00764"/>00764 <emphasis role="comment">&#32;&#32;&#32;&#32;allow&#32;return&#32;statements&#32;within&#32;the&#32;function&#32;itself.&#32;&#32;This&#32;is&#32;done&#32;in&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l00765"/>00765 <emphasis role="comment">&#32;&#32;&#32;&#32;interest&#32;of&#32;execution&#32;time&#32;efficiency.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00766"/>00766 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;;;&#32;)
<anchor xml:id="_queue_8c_source_1l00767"/>00767 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00768"/>00768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l00769"/>00769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00770"/>00770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Is&#32;there&#32;room&#32;on&#32;the&#32;queue&#32;now?&#32;&#32;The&#32;running&#32;task&#32;must&#32;be&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l00771"/>00771 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;highest&#32;priority&#32;task&#32;wanting&#32;to&#32;access&#32;the&#32;queue.&#32;&#32;If&#32;the&#32;head&#32;item</emphasis>
<anchor xml:id="_queue_8c_source_1l00772"/>00772 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in&#32;the&#32;queue&#32;is&#32;to&#32;be&#32;overwritten&#32;then&#32;it&#32;does&#32;not&#32;matter&#32;if&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l00773"/>00773 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;queue&#32;is&#32;full.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00774"/>00774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>&#32;&lt;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1ae80d17a812c669d4d41265b7f693988c">uxLength</link>&#32;)&#32;||&#32;(&#32;xCopyPosition&#32;==&#32;<link linkend="_queue_8h_1a5bb1c4a46d4b08b6d35cf586983476ef">queueOVERWRITE</link>&#32;)&#32;)
<anchor xml:id="_queue_8c_source_1l00775"/>00775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00776"/>00776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a5cfc9dd899c89966172cb329740f551a">traceQUEUE_SEND</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l00777"/>00777 
<anchor xml:id="_queue_8c_source_1l00778"/>00778 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_QUEUE_SETS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l00779"/>00779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00780"/>00780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxPreviousMessagesWaiting&#32;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>;
<anchor xml:id="_queue_8c_source_1l00781"/>00781 
<anchor xml:id="_queue_8c_source_1l00782"/>00782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xYieldRequired&#32;=&#32;<link linkend="_queue_8c_1ad1908d5f670f2b73216a5f1fc78917ae">prvCopyDataToQueue</link>(&#32;pxQueue,&#32;pvItemToQueue,&#32;xCopyPosition&#32;);
<anchor xml:id="_queue_8c_source_1l00783"/>00783 
<anchor xml:id="_queue_8c_source_1l00784"/>00784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueue-&gt;pxQueueSetContainer&#32;!=&#32;NULL&#32;)
<anchor xml:id="_queue_8c_source_1l00785"/>00785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00786"/>00786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;xCopyPosition&#32;==&#32;<link linkend="_queue_8h_1a5bb1c4a46d4b08b6d35cf586983476ef">queueOVERWRITE</link>&#32;)&#32;&amp;&amp;&#32;(&#32;uxPreviousMessagesWaiting&#32;!=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)&#32;)
<anchor xml:id="_queue_8c_source_1l00787"/>00787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00788"/>00788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Do&#32;not&#32;notify&#32;the&#32;queue&#32;set&#32;as&#32;an&#32;existing&#32;item</emphasis>
<anchor xml:id="_queue_8c_source_1l00789"/>00789 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;was&#32;overwritten&#32;in&#32;the&#32;queue&#32;so&#32;the&#32;number&#32;of&#32;items</emphasis>
<anchor xml:id="_queue_8c_source_1l00790"/>00790 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in&#32;the&#32;queue&#32;has&#32;not&#32;changed.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00791"/>00791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l00792"/>00792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00793"/>00793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(&#32;prvNotifyQueueSetContainer(&#32;pxQueue,&#32;xCopyPosition&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l00794"/>00794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00795"/>00795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;queue&#32;is&#32;a&#32;member&#32;of&#32;a&#32;queue&#32;set,&#32;and&#32;posting</emphasis>
<anchor xml:id="_queue_8c_source_1l00796"/>00796 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;the&#32;queue&#32;set&#32;caused&#32;a&#32;higher&#32;priority&#32;task&#32;to</emphasis>
<anchor xml:id="_queue_8c_source_1l00797"/>00797 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unblock.&#32;A&#32;context&#32;switch&#32;is&#32;required.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00798"/>00798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1adb4472163ac5b0e8ad72183d69387b81">queueYIELD_IF_USING_PREEMPTION</link>();
<anchor xml:id="_queue_8c_source_1l00799"/>00799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00800"/>00800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l00801"/>00801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00802"/>00802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l00803"/>00803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00804"/>00804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00805"/>00805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l00806"/>00806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00807"/>00807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;there&#32;was&#32;a&#32;task&#32;waiting&#32;for&#32;data&#32;to&#32;arrive&#32;on&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l00808"/>00808 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;queue&#32;then&#32;unblock&#32;it&#32;now.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00809"/>00809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1aaba6eb05d67ebc8026bea29193eca28f">listLIST_IS_EMPTY</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l00810"/>00810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00811"/>00811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_task_8h_1a14513b7dd36055f73fba3c5ebbdc1b06">xTaskRemoveFromEventList</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l00812"/>00812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00813"/>00813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;unblocked&#32;task&#32;has&#32;a&#32;priority&#32;higher&#32;than</emphasis>
<anchor xml:id="_queue_8c_source_1l00814"/>00814 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;our&#32;own&#32;so&#32;yield&#32;immediately.&#32;&#32;Yes&#32;it&#32;is&#32;ok&#32;to</emphasis>
<anchor xml:id="_queue_8c_source_1l00815"/>00815 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;do&#32;this&#32;from&#32;within&#32;the&#32;critical&#32;section&#32;-&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l00816"/>00816 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;kernel&#32;takes&#32;care&#32;of&#32;that.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00817"/>00817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1adb4472163ac5b0e8ad72183d69387b81">queueYIELD_IF_USING_PREEMPTION</link>();
<anchor xml:id="_queue_8c_source_1l00818"/>00818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00819"/>00819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l00820"/>00820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00821"/>00821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l00822"/>00822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00823"/>00823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00824"/>00824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xYieldRequired&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l00825"/>00825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00826"/>00826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;path&#32;is&#32;a&#32;special&#32;case&#32;that&#32;will&#32;only&#32;get</emphasis>
<anchor xml:id="_queue_8c_source_1l00827"/>00827 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;executed&#32;if&#32;the&#32;task&#32;was&#32;holding&#32;multiple&#32;mutexes</emphasis>
<anchor xml:id="_queue_8c_source_1l00828"/>00828 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and&#32;the&#32;mutexes&#32;were&#32;given&#32;back&#32;in&#32;an&#32;order&#32;that&#32;is</emphasis>
<anchor xml:id="_queue_8c_source_1l00829"/>00829 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;different&#32;to&#32;that&#32;in&#32;which&#32;they&#32;were&#32;taken.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00830"/>00830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1adb4472163ac5b0e8ad72183d69387b81">queueYIELD_IF_USING_PREEMPTION</link>();
<anchor xml:id="_queue_8c_source_1l00831"/>00831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00832"/>00832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l00833"/>00833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00834"/>00834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l00835"/>00835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00836"/>00836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00837"/>00837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00838"/>00838 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_QUEUE_SETS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l00839"/>00839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00840"/>00840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xYieldRequired&#32;=&#32;<link linkend="_queue_8c_1ad1908d5f670f2b73216a5f1fc78917ae">prvCopyDataToQueue</link>(&#32;pxQueue,&#32;pvItemToQueue,&#32;xCopyPosition&#32;);
<anchor xml:id="_queue_8c_source_1l00841"/>00841 
<anchor xml:id="_queue_8c_source_1l00842"/>00842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;there&#32;was&#32;a&#32;task&#32;waiting&#32;for&#32;data&#32;to&#32;arrive&#32;on&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l00843"/>00843 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;queue&#32;then&#32;unblock&#32;it&#32;now.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00844"/>00844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1aaba6eb05d67ebc8026bea29193eca28f">listLIST_IS_EMPTY</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l00845"/>00845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00846"/>00846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_task_8h_1a14513b7dd36055f73fba3c5ebbdc1b06">xTaskRemoveFromEventList</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l00847"/>00847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00848"/>00848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;unblocked&#32;task&#32;has&#32;a&#32;priority&#32;higher&#32;than</emphasis>
<anchor xml:id="_queue_8c_source_1l00849"/>00849 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;our&#32;own&#32;so&#32;yield&#32;immediately.&#32;&#32;Yes&#32;it&#32;is&#32;ok&#32;to&#32;do</emphasis>
<anchor xml:id="_queue_8c_source_1l00850"/>00850 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this&#32;from&#32;within&#32;the&#32;critical&#32;section&#32;-&#32;the&#32;kernel</emphasis>
<anchor xml:id="_queue_8c_source_1l00851"/>00851 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;takes&#32;care&#32;of&#32;that.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00852"/>00852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1adb4472163ac5b0e8ad72183d69387b81">queueYIELD_IF_USING_PREEMPTION</link>();
<anchor xml:id="_queue_8c_source_1l00853"/>00853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00854"/>00854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l00855"/>00855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00856"/>00856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l00857"/>00857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00858"/>00858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00859"/>00859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xYieldRequired&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l00860"/>00860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00861"/>00861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;path&#32;is&#32;a&#32;special&#32;case&#32;that&#32;will&#32;only&#32;get</emphasis>
<anchor xml:id="_queue_8c_source_1l00862"/>00862 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;executed&#32;if&#32;the&#32;task&#32;was&#32;holding&#32;multiple&#32;mutexes&#32;and</emphasis>
<anchor xml:id="_queue_8c_source_1l00863"/>00863 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;mutexes&#32;were&#32;given&#32;back&#32;in&#32;an&#32;order&#32;that&#32;is</emphasis>
<anchor xml:id="_queue_8c_source_1l00864"/>00864 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;different&#32;to&#32;that&#32;in&#32;which&#32;they&#32;were&#32;taken.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00865"/>00865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1adb4472163ac5b0e8ad72183d69387b81">queueYIELD_IF_USING_PREEMPTION</link>();
<anchor xml:id="_queue_8c_source_1l00866"/>00866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00867"/>00867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l00868"/>00868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00869"/>00869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l00870"/>00870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00871"/>00871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00872"/>00872 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_QUEUE_SETS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l00873"/>00873 
<anchor xml:id="_queue_8c_source_1l00874"/>00874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l00875"/>00875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>;
<anchor xml:id="_queue_8c_source_1l00876"/>00876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00877"/>00877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l00878"/>00878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00879"/>00879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTicksToWait&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_queue_8c_source_1l00880"/>00880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00881"/>00881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;queue&#32;was&#32;full&#32;and&#32;no&#32;block&#32;time&#32;is&#32;specified&#32;(or</emphasis>
<anchor xml:id="_queue_8c_source_1l00882"/>00882 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;block&#32;time&#32;has&#32;expired)&#32;so&#32;leave&#32;now.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00883"/>00883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l00884"/>00884 
<anchor xml:id="_queue_8c_source_1l00885"/>00885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Return&#32;to&#32;the&#32;original&#32;privilege&#32;level&#32;before&#32;exiting</emphasis>
<anchor xml:id="_queue_8c_source_1l00886"/>00886 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;function.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00887"/>00887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ab4896b8d7e443200918a6e4a7f64585d">traceQUEUE_SEND_FAILED</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l00888"/>00888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_projdefs_8h_1ae40de11e4044a83a97d2cb5d00ce608b">errQUEUE_FULL</link>;
<anchor xml:id="_queue_8c_source_1l00889"/>00889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00890"/>00890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xEntryTimeSet&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l00891"/>00891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00892"/>00892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;queue&#32;was&#32;full&#32;and&#32;a&#32;block&#32;time&#32;was&#32;specified&#32;so</emphasis>
<anchor xml:id="_queue_8c_source_1l00893"/>00893 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;configure&#32;the&#32;timeout&#32;structure.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00894"/>00894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1a9bff8681d5ed262e71b92805ca0da909">vTaskInternalSetTimeOutState</link>(&#32;&amp;xTimeOut&#32;);
<anchor xml:id="_queue_8c_source_1l00895"/>00895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xEntryTimeSet&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_queue_8c_source_1l00896"/>00896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00897"/>00897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l00898"/>00898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00899"/>00899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Entry&#32;time&#32;was&#32;already&#32;set.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00900"/>00900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l00901"/>00901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00902"/>00902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00903"/>00903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00904"/>00904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l00905"/>00905 
<anchor xml:id="_queue_8c_source_1l00906"/>00906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Interrupts&#32;and&#32;other&#32;tasks&#32;can&#32;send&#32;to&#32;and&#32;receive&#32;from&#32;the&#32;queue</emphasis>
<anchor xml:id="_queue_8c_source_1l00907"/>00907 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;now&#32;the&#32;critical&#32;section&#32;has&#32;been&#32;exited.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00908"/>00908 
<anchor xml:id="_queue_8c_source_1l00909"/>00909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1a366b302eba79d10b5ee2a3756f0fcc43">vTaskSuspendAll</link>();
<anchor xml:id="_queue_8c_source_1l00910"/>00910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1ae4efd14c0f4dee7f189ef2e4d9ce1f1b">prvLockQueue</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l00911"/>00911 
<anchor xml:id="_queue_8c_source_1l00912"/>00912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Update&#32;the&#32;timeout&#32;state&#32;to&#32;see&#32;if&#32;it&#32;has&#32;expired&#32;yet.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00913"/>00913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_task_8h_1a3b018a85d339e536a6c05748dd666a3a">xTaskCheckForTimeOut</link>(&#32;&amp;xTimeOut,&#32;&amp;xTicksToWait&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l00914"/>00914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00915"/>00915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_queue_8c_1ae726cc8b535fc7a601ee442fd2f7da53">prvIsQueueFull</link>(&#32;pxQueue&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l00916"/>00916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00917"/>00917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a9484f4523e4bec2ab2dc233f2556c3c5">traceBLOCKING_ON_QUEUE_SEND</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l00918"/>00918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1a56ae23bc0dece4522d666959902221ca">vTaskPlaceOnEventList</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1aaab135c4345cb0393d6ff3cd5164c7b2">xTasksWaitingToSend</link>&#32;),&#32;xTicksToWait&#32;);
<anchor xml:id="_queue_8c_source_1l00919"/>00919 
<anchor xml:id="_queue_8c_source_1l00920"/>00920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Unlocking&#32;the&#32;queue&#32;means&#32;queue&#32;events&#32;can&#32;effect&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l00921"/>00921 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;event&#32;list.&#32;&#32;It&#32;is&#32;possible&#32;that&#32;interrupts&#32;occurring&#32;now</emphasis>
<anchor xml:id="_queue_8c_source_1l00922"/>00922 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remove&#32;this&#32;task&#32;from&#32;the&#32;event&#32;list&#32;again&#32;-&#32;but&#32;as&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l00923"/>00923 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scheduler&#32;is&#32;suspended&#32;the&#32;task&#32;will&#32;go&#32;onto&#32;the&#32;pending</emphasis>
<anchor xml:id="_queue_8c_source_1l00924"/>00924 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ready&#32;last&#32;instead&#32;of&#32;the&#32;actual&#32;ready&#32;list.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00925"/>00925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1aafc5447bec23cc93aa61911b140273ee">prvUnlockQueue</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l00926"/>00926 
<anchor xml:id="_queue_8c_source_1l00927"/>00927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Resuming&#32;the&#32;scheduler&#32;will&#32;move&#32;tasks&#32;from&#32;the&#32;pending</emphasis>
<anchor xml:id="_queue_8c_source_1l00928"/>00928 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ready&#32;list&#32;into&#32;the&#32;ready&#32;list&#32;-&#32;so&#32;it&#32;is&#32;feasible&#32;that&#32;this</emphasis>
<anchor xml:id="_queue_8c_source_1l00929"/>00929 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;task&#32;is&#32;already&#32;in&#32;a&#32;ready&#32;list&#32;before&#32;it&#32;yields&#32;-&#32;in&#32;which</emphasis>
<anchor xml:id="_queue_8c_source_1l00930"/>00930 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;case&#32;the&#32;yield&#32;will&#32;not&#32;cause&#32;a&#32;context&#32;switch&#32;unless&#32;there</emphasis>
<anchor xml:id="_queue_8c_source_1l00931"/>00931 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;also&#32;a&#32;higher&#32;priority&#32;task&#32;in&#32;the&#32;pending&#32;ready&#32;list.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00932"/>00932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_task_8h_1a003f8ae6d649225abd030cc76e1c7d0e">xTaskResumeAll</link>()&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l00933"/>00933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00934"/>00934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1af4484fc07631a16e45ac5f29a3f0556e">portYIELD_WITHIN_API</link>();
<anchor xml:id="_queue_8c_source_1l00935"/>00935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00936"/>00936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00937"/>00937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l00938"/>00938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00939"/>00939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Try&#32;again.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00940"/>00940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1aafc5447bec23cc93aa61911b140273ee">prvUnlockQueue</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l00941"/>00941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_task_8h_1a003f8ae6d649225abd030cc76e1c7d0e">xTaskResumeAll</link>();
<anchor xml:id="_queue_8c_source_1l00942"/>00942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00943"/>00943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00944"/>00944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l00945"/>00945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00946"/>00946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;timeout&#32;has&#32;expired.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00947"/>00947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1aafc5447bec23cc93aa61911b140273ee">prvUnlockQueue</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l00948"/>00948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_task_8h_1a003f8ae6d649225abd030cc76e1c7d0e">xTaskResumeAll</link>();
<anchor xml:id="_queue_8c_source_1l00949"/>00949 
<anchor xml:id="_queue_8c_source_1l00950"/>00950 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ab4896b8d7e443200918a6e4a7f64585d">traceQUEUE_SEND_FAILED</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l00951"/>00951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_projdefs_8h_1ae40de11e4044a83a97d2cb5d00ce608b">errQUEUE_FULL</link>;
<anchor xml:id="_queue_8c_source_1l00952"/>00952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l00953"/>00953 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">/*lint&#32;-restore&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00954"/>00954 }
<anchor xml:id="_queue_8c_source_1l00955"/>00955 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00956"/>00956 
<anchor xml:id="_queue_8c_source_1l00957"/><link linkend="_queue_8c_1a0fb58b25eb396a5cf8e1688b7e1a56cb">00957</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8c_1a0fb58b25eb396a5cf8e1688b7e1a56cb">xQueueGenericSendFromISR</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueue,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pvItemToQueue,&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxHigherPriorityTaskWoken,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xCopyPosition&#32;)
<anchor xml:id="_queue_8c_source_1l00958"/>00958 {
<anchor xml:id="_queue_8c_source_1l00959"/>00959 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l00960"/>00960 <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxSavedInterruptStatus;
<anchor xml:id="_queue_8c_source_1l00961"/>00961 <link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue&#32;=&#32;xQueue;
<anchor xml:id="_queue_8c_source_1l00962"/>00962 
<anchor xml:id="_queue_8c_source_1l00963"/>00963 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l00964"/>00964 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;!(&#32;(&#32;pvItemToQueue&#32;==&#32;NULL&#32;)&#32;&amp;&amp;&#32;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">uxItemSize</link>&#32;!=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0U&#32;)&#32;)&#32;);
<anchor xml:id="_queue_8c_source_1l00965"/>00965 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;!(&#32;(&#32;xCopyPosition&#32;==&#32;<link linkend="_queue_8h_1a5bb1c4a46d4b08b6d35cf586983476ef">queueOVERWRITE</link>&#32;)&#32;&amp;&amp;&#32;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1ae80d17a812c669d4d41265b7f693988c">uxLength</link>&#32;!=&#32;1&#32;)&#32;)&#32;);
<anchor xml:id="_queue_8c_source_1l00966"/>00966 
<anchor xml:id="_queue_8c_source_1l00967"/>00967 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;RTOS&#32;ports&#32;that&#32;support&#32;interrupt&#32;nesting&#32;have&#32;the&#32;concept&#32;of&#32;a&#32;maximum</emphasis>
<anchor xml:id="_queue_8c_source_1l00968"/>00968 <emphasis role="comment">&#32;&#32;&#32;&#32;system&#32;call&#32;(or&#32;maximum&#32;API&#32;call)&#32;interrupt&#32;priority.&#32;&#32;Interrupts&#32;that&#32;are</emphasis>
<anchor xml:id="_queue_8c_source_1l00969"/>00969 <emphasis role="comment">&#32;&#32;&#32;&#32;above&#32;the&#32;maximum&#32;system&#32;call&#32;priority&#32;are&#32;kept&#32;permanently&#32;enabled,&#32;even</emphasis>
<anchor xml:id="_queue_8c_source_1l00970"/>00970 <emphasis role="comment">&#32;&#32;&#32;&#32;when&#32;the&#32;RTOS&#32;kernel&#32;is&#32;in&#32;a&#32;critical&#32;section,&#32;but&#32;cannot&#32;make&#32;any&#32;calls&#32;to</emphasis>
<anchor xml:id="_queue_8c_source_1l00971"/>00971 <emphasis role="comment">&#32;&#32;&#32;&#32;FreeRTOS&#32;API&#32;functions.&#32;&#32;If&#32;configASSERT()&#32;is&#32;defined&#32;in&#32;FreeRTOSConfig.h</emphasis>
<anchor xml:id="_queue_8c_source_1l00972"/>00972 <emphasis role="comment">&#32;&#32;&#32;&#32;then&#32;portASSERT_IF_INTERRUPT_PRIORITY_INVALID()&#32;will&#32;result&#32;in&#32;an&#32;assertion</emphasis>
<anchor xml:id="_queue_8c_source_1l00973"/>00973 <emphasis role="comment">&#32;&#32;&#32;&#32;failure&#32;if&#32;a&#32;FreeRTOS&#32;API&#32;function&#32;is&#32;called&#32;from&#32;an&#32;interrupt&#32;that&#32;has&#32;been</emphasis>
<anchor xml:id="_queue_8c_source_1l00974"/>00974 <emphasis role="comment">&#32;&#32;&#32;&#32;assigned&#32;a&#32;priority&#32;above&#32;the&#32;configured&#32;maximum&#32;system&#32;call&#32;priority.</emphasis>
<anchor xml:id="_queue_8c_source_1l00975"/>00975 <emphasis role="comment">&#32;&#32;&#32;&#32;Only&#32;FreeRTOS&#32;functions&#32;that&#32;end&#32;in&#32;FromISR&#32;can&#32;be&#32;called&#32;from&#32;interrupts</emphasis>
<anchor xml:id="_queue_8c_source_1l00976"/>00976 <emphasis role="comment">&#32;&#32;&#32;&#32;that&#32;have&#32;been&#32;assigned&#32;a&#32;priority&#32;at&#32;or&#32;(logically)&#32;below&#32;the&#32;maximum</emphasis>
<anchor xml:id="_queue_8c_source_1l00977"/>00977 <emphasis role="comment">&#32;&#32;&#32;&#32;system&#32;call&#32;interrupt&#32;priority.&#32;&#32;FreeRTOS&#32;maintains&#32;a&#32;separate&#32;interrupt</emphasis>
<anchor xml:id="_queue_8c_source_1l00978"/>00978 <emphasis role="comment">&#32;&#32;&#32;&#32;safe&#32;API&#32;to&#32;ensure&#32;interrupt&#32;entry&#32;is&#32;as&#32;fast&#32;and&#32;as&#32;simple&#32;as&#32;possible.</emphasis>
<anchor xml:id="_queue_8c_source_1l00979"/>00979 <emphasis role="comment">&#32;&#32;&#32;&#32;More&#32;information&#32;(albeit&#32;Cortex-M&#32;specific)&#32;is&#32;provided&#32;on&#32;the&#32;following</emphasis>
<anchor xml:id="_queue_8c_source_1l00980"/>00980 <emphasis role="comment">&#32;&#32;&#32;&#32;link:&#32;http://www.freertos.org/RTOS-Cortex-M3-M4.html&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00981"/>00981 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a10f75d20c71c4289f96d1b89cb6c62e2">portASSERT_IF_INTERRUPT_PRIORITY_INVALID</link>();
<anchor xml:id="_queue_8c_source_1l00982"/>00982 
<anchor xml:id="_queue_8c_source_1l00983"/>00983 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Similar&#32;to&#32;xQueueGenericSend,&#32;except&#32;without&#32;blocking&#32;if&#32;there&#32;is&#32;no&#32;room</emphasis>
<anchor xml:id="_queue_8c_source_1l00984"/>00984 <emphasis role="comment">&#32;&#32;&#32;&#32;in&#32;the&#32;queue.&#32;&#32;Also&#32;don&apos;t&#32;directly&#32;wake&#32;a&#32;task&#32;that&#32;was&#32;blocked&#32;on&#32;a&#32;queue</emphasis>
<anchor xml:id="_queue_8c_source_1l00985"/>00985 <emphasis role="comment">&#32;&#32;&#32;&#32;read,&#32;instead&#32;return&#32;a&#32;flag&#32;to&#32;say&#32;whether&#32;a&#32;context&#32;switch&#32;is&#32;required&#32;or</emphasis>
<anchor xml:id="_queue_8c_source_1l00986"/>00986 <emphasis role="comment">&#32;&#32;&#32;&#32;not&#32;(i.e.&#32;has&#32;a&#32;task&#32;with&#32;a&#32;higher&#32;priority&#32;than&#32;us&#32;been&#32;woken&#32;by&#32;this</emphasis>
<anchor xml:id="_queue_8c_source_1l00987"/>00987 <emphasis role="comment">&#32;&#32;&#32;&#32;post).&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l00988"/>00988 &#32;&#32;&#32;&#32;uxSavedInterruptStatus&#32;=&#32;<link linkend="_portmacro_8h_1a31b4260dbc1823ba80b578f86eb15a98">portSET_INTERRUPT_MASK_FROM_ISR</link>();
<anchor xml:id="_queue_8c_source_1l00989"/>00989 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00990"/>00990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>&#32;&lt;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1ae80d17a812c669d4d41265b7f693988c">uxLength</link>&#32;)&#32;||&#32;(&#32;xCopyPosition&#32;==&#32;<link linkend="_queue_8h_1a5bb1c4a46d4b08b6d35cf586983476ef">queueOVERWRITE</link>&#32;)&#32;)
<anchor xml:id="_queue_8c_source_1l00991"/>00991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l00992"/>00992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;int8_t&#32;cTxLock&#32;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a24ac3f0707f098da2a22244d843fcf82">cTxLock</link>;
<anchor xml:id="_queue_8c_source_1l00993"/>00993 
<anchor xml:id="_queue_8c_source_1l00994"/>00994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a590bfae4dcb6be8a4b3daadf09a1b587">traceQUEUE_SEND_FROM_ISR</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l00995"/>00995 
<anchor xml:id="_queue_8c_source_1l00996"/>00996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Semaphores&#32;use&#32;xQueueGiveFromISR(),&#32;so&#32;pxQueue&#32;will&#32;not&#32;be&#32;a</emphasis>
<anchor xml:id="_queue_8c_source_1l00997"/>00997 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;semaphore&#32;or&#32;mutex.&#32;&#32;That&#32;means&#32;prvCopyDataToQueue()&#32;cannot&#32;result</emphasis>
<anchor xml:id="_queue_8c_source_1l00998"/>00998 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in&#32;a&#32;task&#32;disinheriting&#32;a&#32;priority&#32;and&#32;prvCopyDataToQueue()&#32;can&#32;be</emphasis>
<anchor xml:id="_queue_8c_source_1l00999"/>00999 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;called&#32;here&#32;even&#32;though&#32;the&#32;disinherit&#32;function&#32;does&#32;not&#32;check&#32;if</emphasis>
<anchor xml:id="_queue_8c_source_1l01000"/>01000 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;scheduler&#32;is&#32;suspended&#32;before&#32;accessing&#32;the&#32;ready&#32;lists.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01001"/>01001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_queue_8c_1ad1908d5f670f2b73216a5f1fc78917ae">prvCopyDataToQueue</link>(&#32;pxQueue,&#32;pvItemToQueue,&#32;xCopyPosition&#32;);
<anchor xml:id="_queue_8c_source_1l01002"/>01002 
<anchor xml:id="_queue_8c_source_1l01003"/>01003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;event&#32;list&#32;is&#32;not&#32;altered&#32;if&#32;the&#32;queue&#32;is&#32;locked.&#32;&#32;This&#32;will</emphasis>
<anchor xml:id="_queue_8c_source_1l01004"/>01004 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;be&#32;done&#32;when&#32;the&#32;queue&#32;is&#32;unlocked&#32;later.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01005"/>01005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;cTxLock&#32;==&#32;<link linkend="_queue_8c_1acdb781ba6b38714cf41f7417de8fe6bf">queueUNLOCKED</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01006"/>01006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01007"/>01007 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_QUEUE_SETS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l01008"/>01008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01009"/>01009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueue-&gt;pxQueueSetContainer&#32;!=&#32;NULL&#32;)
<anchor xml:id="_queue_8c_source_1l01010"/>01010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01011"/>01011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;prvNotifyQueueSetContainer(&#32;pxQueue,&#32;xCopyPosition&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01012"/>01012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01013"/>01013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;queue&#32;is&#32;a&#32;member&#32;of&#32;a&#32;queue&#32;set,&#32;and&#32;posting</emphasis>
<anchor xml:id="_queue_8c_source_1l01014"/>01014 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to&#32;the&#32;queue&#32;set&#32;caused&#32;a&#32;higher&#32;priority&#32;task&#32;to</emphasis>
<anchor xml:id="_queue_8c_source_1l01015"/>01015 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unblock.&#32;&#32;A&#32;context&#32;switch&#32;is&#32;required.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01016"/>01016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxHigherPriorityTaskWoken&#32;!=&#32;NULL&#32;)
<anchor xml:id="_queue_8c_source_1l01017"/>01017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01018"/>01018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pxHigherPriorityTaskWoken&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_queue_8c_source_1l01019"/>01019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01020"/>01020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01021"/>01021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01022"/>01022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01023"/>01023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01024"/>01024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01025"/>01025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01026"/>01026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01027"/>01027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01028"/>01028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01029"/>01029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01030"/>01030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01031"/>01031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01032"/>01032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1aaba6eb05d67ebc8026bea29193eca28f">listLIST_IS_EMPTY</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01033"/>01033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01034"/>01034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_task_8h_1a14513b7dd36055f73fba3c5ebbdc1b06">xTaskRemoveFromEventList</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01035"/>01035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01036"/>01036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;waiting&#32;has&#32;a&#32;higher&#32;priority&#32;so</emphasis>
<anchor xml:id="_queue_8c_source_1l01037"/>01037 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;record&#32;that&#32;a&#32;context&#32;switch&#32;is&#32;required.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01038"/>01038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxHigherPriorityTaskWoken&#32;!=&#32;NULL&#32;)
<anchor xml:id="_queue_8c_source_1l01039"/>01039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01040"/>01040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pxHigherPriorityTaskWoken&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_queue_8c_source_1l01041"/>01041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01042"/>01042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01043"/>01043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01044"/>01044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01045"/>01045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01046"/>01046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01047"/>01047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01048"/>01048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01049"/>01049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01050"/>01050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01051"/>01051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01052"/>01052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01053"/>01053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01054"/>01054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01055"/>01055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01056"/>01056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01057"/>01057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01058"/>01058 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_QUEUE_SETS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l01059"/>01059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01060"/>01060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1aaba6eb05d67ebc8026bea29193eca28f">listLIST_IS_EMPTY</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01061"/>01061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01062"/>01062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_task_8h_1a14513b7dd36055f73fba3c5ebbdc1b06">xTaskRemoveFromEventList</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01063"/>01063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01064"/>01064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;waiting&#32;has&#32;a&#32;higher&#32;priority&#32;so&#32;record&#32;that&#32;a</emphasis>
<anchor xml:id="_queue_8c_source_1l01065"/>01065 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;context&#32;switch&#32;is&#32;required.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01066"/>01066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxHigherPriorityTaskWoken&#32;!=&#32;NULL&#32;)
<anchor xml:id="_queue_8c_source_1l01067"/>01067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01068"/>01068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pxHigherPriorityTaskWoken&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_queue_8c_source_1l01069"/>01069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01070"/>01070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01071"/>01071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01072"/>01072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01073"/>01073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01074"/>01074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01075"/>01075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01076"/>01076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01077"/>01077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01078"/>01078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01079"/>01079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01080"/>01080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01081"/>01081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01082"/>01082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01083"/>01083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01084"/>01084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01085"/>01085 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_QUEUE_SETS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l01086"/>01086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01087"/>01087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01088"/>01088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01089"/>01089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Increment&#32;the&#32;lock&#32;count&#32;so&#32;the&#32;task&#32;that&#32;unlocks&#32;the&#32;queue</emphasis>
<anchor xml:id="_queue_8c_source_1l01090"/>01090 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;knows&#32;that&#32;data&#32;was&#32;posted&#32;while&#32;it&#32;was&#32;locked.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01091"/>01091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a24ac3f0707f098da2a22244d843fcf82">cTxLock</link>&#32;=&#32;(&#32;int8_t&#32;)&#32;(&#32;cTxLock&#32;+&#32;1&#32;);
<anchor xml:id="_queue_8c_source_1l01092"/>01092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01093"/>01093 
<anchor xml:id="_queue_8c_source_1l01094"/>01094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>;
<anchor xml:id="_queue_8c_source_1l01095"/>01095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01096"/>01096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01097"/>01097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01098"/>01098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a71fa002ce8a199d38e697d94c613649f">traceQUEUE_SEND_FROM_ISR_FAILED</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01099"/>01099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1ae40de11e4044a83a97d2cb5d00ce608b">errQUEUE_FULL</link>;
<anchor xml:id="_queue_8c_source_1l01100"/>01100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01101"/>01101 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01102"/>01102 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a79d65a5d0f6f9133a0739832e9d8367e">portCLEAR_INTERRUPT_MASK_FROM_ISR</link>(&#32;uxSavedInterruptStatus&#32;);
<anchor xml:id="_queue_8c_source_1l01103"/>01103 
<anchor xml:id="_queue_8c_source_1l01104"/>01104 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l01105"/>01105 }
<anchor xml:id="_queue_8c_source_1l01106"/>01106 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01107"/>01107 
<anchor xml:id="_queue_8c_source_1l01108"/><link linkend="_queue_8c_1a4df49fafb6ba4400ede6f2d07a40865f">01108</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8c_1a4df49fafb6ba4400ede6f2d07a40865f">xQueueGiveFromISR</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueue,&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxHigherPriorityTaskWoken&#32;)
<anchor xml:id="_queue_8c_source_1l01109"/>01109 {
<anchor xml:id="_queue_8c_source_1l01110"/>01110 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l01111"/>01111 <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxSavedInterruptStatus;
<anchor xml:id="_queue_8c_source_1l01112"/>01112 <link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue&#32;=&#32;xQueue;
<anchor xml:id="_queue_8c_source_1l01113"/>01113 
<anchor xml:id="_queue_8c_source_1l01114"/>01114 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Similar&#32;to&#32;xQueueGenericSendFromISR()&#32;but&#32;used&#32;with&#32;semaphores&#32;where&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l01115"/>01115 <emphasis role="comment">&#32;&#32;&#32;&#32;item&#32;size&#32;is&#32;0.&#32;&#32;Don&apos;t&#32;directly&#32;wake&#32;a&#32;task&#32;that&#32;was&#32;blocked&#32;on&#32;a&#32;queue</emphasis>
<anchor xml:id="_queue_8c_source_1l01116"/>01116 <emphasis role="comment">&#32;&#32;&#32;&#32;read,&#32;instead&#32;return&#32;a&#32;flag&#32;to&#32;say&#32;whether&#32;a&#32;context&#32;switch&#32;is&#32;required&#32;or</emphasis>
<anchor xml:id="_queue_8c_source_1l01117"/>01117 <emphasis role="comment">&#32;&#32;&#32;&#32;not&#32;(i.e.&#32;has&#32;a&#32;task&#32;with&#32;a&#32;higher&#32;priority&#32;than&#32;us&#32;been&#32;woken&#32;by&#32;this</emphasis>
<anchor xml:id="_queue_8c_source_1l01118"/>01118 <emphasis role="comment">&#32;&#32;&#32;&#32;post).&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01119"/>01119 
<anchor xml:id="_queue_8c_source_1l01120"/>01120 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01121"/>01121 
<anchor xml:id="_queue_8c_source_1l01122"/>01122 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;xQueueGenericSendFromISR()&#32;should&#32;be&#32;used&#32;instead&#32;of&#32;xQueueGiveFromISR()</emphasis>
<anchor xml:id="_queue_8c_source_1l01123"/>01123 <emphasis role="comment">&#32;&#32;&#32;&#32;if&#32;the&#32;item&#32;size&#32;is&#32;not&#32;0.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01124"/>01124 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">uxItemSize</link>&#32;==&#32;0&#32;);
<anchor xml:id="_queue_8c_source_1l01125"/>01125 
<anchor xml:id="_queue_8c_source_1l01126"/>01126 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Normally&#32;a&#32;mutex&#32;would&#32;not&#32;be&#32;given&#32;from&#32;an&#32;interrupt,&#32;especially&#32;if</emphasis>
<anchor xml:id="_queue_8c_source_1l01127"/>01127 <emphasis role="comment">&#32;&#32;&#32;&#32;there&#32;is&#32;a&#32;mutex&#32;holder,&#32;as&#32;priority&#32;inheritance&#32;makes&#32;no&#32;sense&#32;for&#32;an</emphasis>
<anchor xml:id="_queue_8c_source_1l01128"/>01128 <emphasis role="comment">&#32;&#32;&#32;&#32;interrupts,&#32;only&#32;tasks.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01129"/>01129 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;!(&#32;(&#32;pxQueue-&gt;uxQueueType&#32;==&#32;<link linkend="_queue_8c_1a0799077a434aea43f5cca3cda3625aa8">queueQUEUE_IS_MUTEX</link>&#32;)&#32;&amp;&amp;&#32;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1adb2c0818274974553c619ff953b6f477">xSemaphore</link>.<link linkend="_struct_semaphore_data_1ab1ed54c7b39dc45b3c310fae7ad08693">xMutexHolder</link>&#32;!=&#32;NULL&#32;)&#32;)&#32;);
<anchor xml:id="_queue_8c_source_1l01130"/>01130 
<anchor xml:id="_queue_8c_source_1l01131"/>01131 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;RTOS&#32;ports&#32;that&#32;support&#32;interrupt&#32;nesting&#32;have&#32;the&#32;concept&#32;of&#32;a&#32;maximum</emphasis>
<anchor xml:id="_queue_8c_source_1l01132"/>01132 <emphasis role="comment">&#32;&#32;&#32;&#32;system&#32;call&#32;(or&#32;maximum&#32;API&#32;call)&#32;interrupt&#32;priority.&#32;&#32;Interrupts&#32;that&#32;are</emphasis>
<anchor xml:id="_queue_8c_source_1l01133"/>01133 <emphasis role="comment">&#32;&#32;&#32;&#32;above&#32;the&#32;maximum&#32;system&#32;call&#32;priority&#32;are&#32;kept&#32;permanently&#32;enabled,&#32;even</emphasis>
<anchor xml:id="_queue_8c_source_1l01134"/>01134 <emphasis role="comment">&#32;&#32;&#32;&#32;when&#32;the&#32;RTOS&#32;kernel&#32;is&#32;in&#32;a&#32;critical&#32;section,&#32;but&#32;cannot&#32;make&#32;any&#32;calls&#32;to</emphasis>
<anchor xml:id="_queue_8c_source_1l01135"/>01135 <emphasis role="comment">&#32;&#32;&#32;&#32;FreeRTOS&#32;API&#32;functions.&#32;&#32;If&#32;configASSERT()&#32;is&#32;defined&#32;in&#32;FreeRTOSConfig.h</emphasis>
<anchor xml:id="_queue_8c_source_1l01136"/>01136 <emphasis role="comment">&#32;&#32;&#32;&#32;then&#32;portASSERT_IF_INTERRUPT_PRIORITY_INVALID()&#32;will&#32;result&#32;in&#32;an&#32;assertion</emphasis>
<anchor xml:id="_queue_8c_source_1l01137"/>01137 <emphasis role="comment">&#32;&#32;&#32;&#32;failure&#32;if&#32;a&#32;FreeRTOS&#32;API&#32;function&#32;is&#32;called&#32;from&#32;an&#32;interrupt&#32;that&#32;has&#32;been</emphasis>
<anchor xml:id="_queue_8c_source_1l01138"/>01138 <emphasis role="comment">&#32;&#32;&#32;&#32;assigned&#32;a&#32;priority&#32;above&#32;the&#32;configured&#32;maximum&#32;system&#32;call&#32;priority.</emphasis>
<anchor xml:id="_queue_8c_source_1l01139"/>01139 <emphasis role="comment">&#32;&#32;&#32;&#32;Only&#32;FreeRTOS&#32;functions&#32;that&#32;end&#32;in&#32;FromISR&#32;can&#32;be&#32;called&#32;from&#32;interrupts</emphasis>
<anchor xml:id="_queue_8c_source_1l01140"/>01140 <emphasis role="comment">&#32;&#32;&#32;&#32;that&#32;have&#32;been&#32;assigned&#32;a&#32;priority&#32;at&#32;or&#32;(logically)&#32;below&#32;the&#32;maximum</emphasis>
<anchor xml:id="_queue_8c_source_1l01141"/>01141 <emphasis role="comment">&#32;&#32;&#32;&#32;system&#32;call&#32;interrupt&#32;priority.&#32;&#32;FreeRTOS&#32;maintains&#32;a&#32;separate&#32;interrupt</emphasis>
<anchor xml:id="_queue_8c_source_1l01142"/>01142 <emphasis role="comment">&#32;&#32;&#32;&#32;safe&#32;API&#32;to&#32;ensure&#32;interrupt&#32;entry&#32;is&#32;as&#32;fast&#32;and&#32;as&#32;simple&#32;as&#32;possible.</emphasis>
<anchor xml:id="_queue_8c_source_1l01143"/>01143 <emphasis role="comment">&#32;&#32;&#32;&#32;More&#32;information&#32;(albeit&#32;Cortex-M&#32;specific)&#32;is&#32;provided&#32;on&#32;the&#32;following</emphasis>
<anchor xml:id="_queue_8c_source_1l01144"/>01144 <emphasis role="comment">&#32;&#32;&#32;&#32;link:&#32;http://www.freertos.org/RTOS-Cortex-M3-M4.html&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01145"/>01145 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a10f75d20c71c4289f96d1b89cb6c62e2">portASSERT_IF_INTERRUPT_PRIORITY_INVALID</link>();
<anchor xml:id="_queue_8c_source_1l01146"/>01146 
<anchor xml:id="_queue_8c_source_1l01147"/>01147 &#32;&#32;&#32;&#32;uxSavedInterruptStatus&#32;=&#32;<link linkend="_portmacro_8h_1a31b4260dbc1823ba80b578f86eb15a98">portSET_INTERRUPT_MASK_FROM_ISR</link>();
<anchor xml:id="_queue_8c_source_1l01148"/>01148 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01149"/>01149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxMessagesWaiting&#32;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>;
<anchor xml:id="_queue_8c_source_1l01150"/>01150 
<anchor xml:id="_queue_8c_source_1l01151"/>01151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;When&#32;the&#32;queue&#32;is&#32;used&#32;to&#32;implement&#32;a&#32;semaphore&#32;no&#32;data&#32;is&#32;ever</emphasis>
<anchor xml:id="_queue_8c_source_1l01152"/>01152 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;moved&#32;through&#32;the&#32;queue&#32;but&#32;it&#32;is&#32;still&#32;valid&#32;to&#32;see&#32;if&#32;the&#32;queue&#32;&apos;has</emphasis>
<anchor xml:id="_queue_8c_source_1l01153"/>01153 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;space&apos;.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01154"/>01154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;uxMessagesWaiting&#32;&lt;&#32;pxQueue-&gt;uxLength&#32;)
<anchor xml:id="_queue_8c_source_1l01155"/>01155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01156"/>01156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;int8_t&#32;cTxLock&#32;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a24ac3f0707f098da2a22244d843fcf82">cTxLock</link>;
<anchor xml:id="_queue_8c_source_1l01157"/>01157 
<anchor xml:id="_queue_8c_source_1l01158"/>01158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a590bfae4dcb6be8a4b3daadf09a1b587">traceQUEUE_SEND_FROM_ISR</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01159"/>01159 
<anchor xml:id="_queue_8c_source_1l01160"/>01160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;task&#32;can&#32;only&#32;have&#32;an&#32;inherited&#32;priority&#32;if&#32;it&#32;is&#32;a&#32;mutex</emphasis>
<anchor xml:id="_queue_8c_source_1l01161"/>01161 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;holder&#32;-&#32;and&#32;if&#32;there&#32;is&#32;a&#32;mutex&#32;holder&#32;then&#32;the&#32;mutex&#32;cannot&#32;be</emphasis>
<anchor xml:id="_queue_8c_source_1l01162"/>01162 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;given&#32;from&#32;an&#32;ISR.&#32;&#32;As&#32;this&#32;is&#32;the&#32;ISR&#32;version&#32;of&#32;the&#32;function&#32;it</emphasis>
<anchor xml:id="_queue_8c_source_1l01163"/>01163 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;can&#32;be&#32;assumed&#32;there&#32;is&#32;no&#32;mutex&#32;holder&#32;and&#32;no&#32;need&#32;to&#32;determine&#32;if</emphasis>
<anchor xml:id="_queue_8c_source_1l01164"/>01164 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;priority&#32;disinheritance&#32;is&#32;needed.&#32;&#32;Simply&#32;increase&#32;the&#32;count&#32;of</emphasis>
<anchor xml:id="_queue_8c_source_1l01165"/>01165 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;messages&#32;(semaphores)&#32;available.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01166"/>01166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>&#32;=&#32;uxMessagesWaiting&#32;+&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;1;
<anchor xml:id="_queue_8c_source_1l01167"/>01167 
<anchor xml:id="_queue_8c_source_1l01168"/>01168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;event&#32;list&#32;is&#32;not&#32;altered&#32;if&#32;the&#32;queue&#32;is&#32;locked.&#32;&#32;This&#32;will</emphasis>
<anchor xml:id="_queue_8c_source_1l01169"/>01169 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;be&#32;done&#32;when&#32;the&#32;queue&#32;is&#32;unlocked&#32;later.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01170"/>01170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;cTxLock&#32;==&#32;<link linkend="_queue_8c_1acdb781ba6b38714cf41f7417de8fe6bf">queueUNLOCKED</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01171"/>01171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01172"/>01172 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_QUEUE_SETS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l01173"/>01173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01174"/>01174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueue-&gt;pxQueueSetContainer&#32;!=&#32;NULL&#32;)
<anchor xml:id="_queue_8c_source_1l01175"/>01175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01176"/>01176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;prvNotifyQueueSetContainer(&#32;pxQueue,&#32;<link linkend="_queue_8h_1a4d78fa863fbeb90425a2dda08fae8b12">queueSEND_TO_BACK</link>&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01177"/>01177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01178"/>01178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;semaphore&#32;is&#32;a&#32;member&#32;of&#32;a&#32;queue&#32;set,&#32;and</emphasis>
<anchor xml:id="_queue_8c_source_1l01179"/>01179 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;posting&#32;to&#32;the&#32;queue&#32;set&#32;caused&#32;a&#32;higher&#32;priority</emphasis>
<anchor xml:id="_queue_8c_source_1l01180"/>01180 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;task&#32;to&#32;unblock.&#32;&#32;A&#32;context&#32;switch&#32;is&#32;required.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01181"/>01181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxHigherPriorityTaskWoken&#32;!=&#32;NULL&#32;)
<anchor xml:id="_queue_8c_source_1l01182"/>01182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01183"/>01183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pxHigherPriorityTaskWoken&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_queue_8c_source_1l01184"/>01184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01185"/>01185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01186"/>01186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01187"/>01187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01188"/>01188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01189"/>01189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01190"/>01190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01191"/>01191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01192"/>01192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01193"/>01193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01194"/>01194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01195"/>01195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01196"/>01196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01197"/>01197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1aaba6eb05d67ebc8026bea29193eca28f">listLIST_IS_EMPTY</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01198"/>01198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01199"/>01199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_task_8h_1a14513b7dd36055f73fba3c5ebbdc1b06">xTaskRemoveFromEventList</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01200"/>01200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01201"/>01201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;waiting&#32;has&#32;a&#32;higher&#32;priority&#32;so</emphasis>
<anchor xml:id="_queue_8c_source_1l01202"/>01202 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;record&#32;that&#32;a&#32;context&#32;switch&#32;is&#32;required.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01203"/>01203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxHigherPriorityTaskWoken&#32;!=&#32;NULL&#32;)
<anchor xml:id="_queue_8c_source_1l01204"/>01204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01205"/>01205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pxHigherPriorityTaskWoken&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_queue_8c_source_1l01206"/>01206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01207"/>01207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01208"/>01208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01209"/>01209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01210"/>01210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01211"/>01211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01212"/>01212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01213"/>01213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01214"/>01214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01215"/>01215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01216"/>01216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01217"/>01217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01218"/>01218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01219"/>01219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01220"/>01220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01221"/>01221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01222"/>01222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01223"/>01223 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_QUEUE_SETS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l01224"/>01224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01225"/>01225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1aaba6eb05d67ebc8026bea29193eca28f">listLIST_IS_EMPTY</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01226"/>01226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01227"/>01227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_task_8h_1a14513b7dd36055f73fba3c5ebbdc1b06">xTaskRemoveFromEventList</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01228"/>01228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01229"/>01229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;waiting&#32;has&#32;a&#32;higher&#32;priority&#32;so&#32;record&#32;that&#32;a</emphasis>
<anchor xml:id="_queue_8c_source_1l01230"/>01230 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;context&#32;switch&#32;is&#32;required.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01231"/>01231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxHigherPriorityTaskWoken&#32;!=&#32;NULL&#32;)
<anchor xml:id="_queue_8c_source_1l01232"/>01232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01233"/>01233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pxHigherPriorityTaskWoken&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_queue_8c_source_1l01234"/>01234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01235"/>01235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01236"/>01236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01237"/>01237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01238"/>01238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01239"/>01239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01240"/>01240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01241"/>01241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01242"/>01242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01243"/>01243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01244"/>01244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01245"/>01245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01246"/>01246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01247"/>01247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01248"/>01248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01249"/>01249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01250"/>01250 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_QUEUE_SETS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l01251"/>01251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01252"/>01252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01253"/>01253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01254"/>01254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Increment&#32;the&#32;lock&#32;count&#32;so&#32;the&#32;task&#32;that&#32;unlocks&#32;the&#32;queue</emphasis>
<anchor xml:id="_queue_8c_source_1l01255"/>01255 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;knows&#32;that&#32;data&#32;was&#32;posted&#32;while&#32;it&#32;was&#32;locked.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01256"/>01256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a24ac3f0707f098da2a22244d843fcf82">cTxLock</link>&#32;=&#32;(&#32;int8_t&#32;)&#32;(&#32;cTxLock&#32;+&#32;1&#32;);
<anchor xml:id="_queue_8c_source_1l01257"/>01257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01258"/>01258 
<anchor xml:id="_queue_8c_source_1l01259"/>01259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>;
<anchor xml:id="_queue_8c_source_1l01260"/>01260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01261"/>01261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01262"/>01262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01263"/>01263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a71fa002ce8a199d38e697d94c613649f">traceQUEUE_SEND_FROM_ISR_FAILED</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01264"/>01264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1ae40de11e4044a83a97d2cb5d00ce608b">errQUEUE_FULL</link>;
<anchor xml:id="_queue_8c_source_1l01265"/>01265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01266"/>01266 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01267"/>01267 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a79d65a5d0f6f9133a0739832e9d8367e">portCLEAR_INTERRUPT_MASK_FROM_ISR</link>(&#32;uxSavedInterruptStatus&#32;);
<anchor xml:id="_queue_8c_source_1l01268"/>01268 
<anchor xml:id="_queue_8c_source_1l01269"/>01269 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l01270"/>01270 }
<anchor xml:id="_queue_8c_source_1l01271"/>01271 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01272"/>01272 
<anchor xml:id="_queue_8c_source_1l01273"/><link linkend="_queue_8c_1ad0a166f3b1219a5e37e31f8090d4800d">01273</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8c_1ad0a166f3b1219a5e37e31f8090d4800d">xQueueReceive</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueue,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pvBuffer,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait&#32;)
<anchor xml:id="_queue_8c_source_1l01274"/>01274 {
<anchor xml:id="_queue_8c_source_1l01275"/>01275 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xEntryTimeSet&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_queue_8c_source_1l01276"/>01276 <link linkend="_structx_t_i_m_e___o_u_t">TimeOut_t</link>&#32;xTimeOut;
<anchor xml:id="_queue_8c_source_1l01277"/>01277 <link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue&#32;=&#32;xQueue;
<anchor xml:id="_queue_8c_source_1l01278"/>01278 
<anchor xml:id="_queue_8c_source_1l01279"/>01279 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Check&#32;the&#32;pointer&#32;is&#32;not&#32;NULL.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01280"/>01280 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;(&#32;pxQueue&#32;)&#32;);
<anchor xml:id="_queue_8c_source_1l01281"/>01281 
<anchor xml:id="_queue_8c_source_1l01282"/>01282 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;buffer&#32;into&#32;which&#32;data&#32;is&#32;received&#32;can&#32;only&#32;be&#32;NULL&#32;if&#32;the&#32;data&#32;size</emphasis>
<anchor xml:id="_queue_8c_source_1l01283"/>01283 <emphasis role="comment">&#32;&#32;&#32;&#32;is&#32;zero&#32;(so&#32;no&#32;data&#32;is&#32;copied&#32;into&#32;the&#32;buffer.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01284"/>01284 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;!(&#32;(&#32;(&#32;pvBuffer&#32;)&#32;==&#32;NULL&#32;)&#32;&amp;&amp;&#32;(&#32;(&#32;pxQueue&#32;)-&gt;uxItemSize&#32;!=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0U&#32;)&#32;)&#32;);
<anchor xml:id="_queue_8c_source_1l01285"/>01285 
<anchor xml:id="_queue_8c_source_1l01286"/>01286 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Cannot&#32;block&#32;if&#32;the&#32;scheduler&#32;is&#32;suspended.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01287"/>01287 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;(&#32;INCLUDE_xTaskGetSchedulerState&#32;==&#32;1&#32;)&#32;||&#32;(&#32;configUSE_TIMERS&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l01288"/>01288 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01289"/>01289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;!(&#32;(&#32;<link linkend="_task_8h_1a0241000e08a261372186d34825a35979">xTaskGetSchedulerState</link>()&#32;==&#32;<link linkend="_task_8h_1a0cad071ca127a35df93166e9ed5b6ada">taskSCHEDULER_SUSPENDED</link>&#32;)&#32;&amp;&amp;&#32;(&#32;xTicksToWait&#32;!=&#32;0&#32;)&#32;)&#32;);
<anchor xml:id="_queue_8c_source_1l01290"/>01290 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01291"/>01291 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_queue_8c_source_1l01292"/>01292 
<anchor xml:id="_queue_8c_source_1l01293"/>01293 
<anchor xml:id="_queue_8c_source_1l01294"/>01294 &#32;&#32;&#32;&#32;<emphasis role="comment">/*lint&#32;-save&#32;-e904&#32;&#32;This&#32;function&#32;relaxes&#32;the&#32;coding&#32;standard&#32;somewhat&#32;to</emphasis>
<anchor xml:id="_queue_8c_source_1l01295"/>01295 <emphasis role="comment">&#32;&#32;&#32;&#32;allow&#32;return&#32;statements&#32;within&#32;the&#32;function&#32;itself.&#32;&#32;This&#32;is&#32;done&#32;in&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l01296"/>01296 <emphasis role="comment">&#32;&#32;&#32;&#32;interest&#32;of&#32;execution&#32;time&#32;efficiency.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01297"/>01297 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;;;&#32;)
<anchor xml:id="_queue_8c_source_1l01298"/>01298 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01299"/>01299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l01300"/>01300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01301"/>01301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxMessagesWaiting&#32;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>;
<anchor xml:id="_queue_8c_source_1l01302"/>01302 
<anchor xml:id="_queue_8c_source_1l01303"/>01303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Is&#32;there&#32;data&#32;in&#32;the&#32;queue&#32;now?&#32;&#32;To&#32;be&#32;running&#32;the&#32;calling&#32;task</emphasis>
<anchor xml:id="_queue_8c_source_1l01304"/>01304 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;must&#32;be&#32;the&#32;highest&#32;priority&#32;task&#32;wanting&#32;to&#32;access&#32;the&#32;queue.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01305"/>01305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;uxMessagesWaiting&#32;&gt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_queue_8c_source_1l01306"/>01306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01307"/>01307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Data&#32;available,&#32;remove&#32;one&#32;item.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01308"/>01308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1a305eea92fc333c62ed162f37ffa63e1d">prvCopyDataFromQueue</link>(&#32;pxQueue,&#32;pvBuffer&#32;);
<anchor xml:id="_queue_8c_source_1l01309"/>01309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a82b39aa722910a5e43793e882ded0faf">traceQUEUE_RECEIVE</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01310"/>01310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>&#32;=&#32;uxMessagesWaiting&#32;-&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;1;
<anchor xml:id="_queue_8c_source_1l01311"/>01311 
<anchor xml:id="_queue_8c_source_1l01312"/>01312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;There&#32;is&#32;now&#32;space&#32;in&#32;the&#32;queue,&#32;were&#32;any&#32;tasks&#32;waiting&#32;to</emphasis>
<anchor xml:id="_queue_8c_source_1l01313"/>01313 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;post&#32;to&#32;the&#32;queue?&#32;&#32;If&#32;so,&#32;unblock&#32;the&#32;highest&#32;priority&#32;waiting</emphasis>
<anchor xml:id="_queue_8c_source_1l01314"/>01314 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;task.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01315"/>01315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1aaba6eb05d67ebc8026bea29193eca28f">listLIST_IS_EMPTY</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1aaab135c4345cb0393d6ff3cd5164c7b2">xTasksWaitingToSend</link>&#32;)&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01316"/>01316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01317"/>01317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_task_8h_1a14513b7dd36055f73fba3c5ebbdc1b06">xTaskRemoveFromEventList</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1aaab135c4345cb0393d6ff3cd5164c7b2">xTasksWaitingToSend</link>&#32;)&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01318"/>01318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01319"/>01319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1adb4472163ac5b0e8ad72183d69387b81">queueYIELD_IF_USING_PREEMPTION</link>();
<anchor xml:id="_queue_8c_source_1l01320"/>01320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01321"/>01321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01322"/>01322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01323"/>01323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01324"/>01324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01325"/>01325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01326"/>01326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01327"/>01327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01328"/>01328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01329"/>01329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01330"/>01330 
<anchor xml:id="_queue_8c_source_1l01331"/>01331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l01332"/>01332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>;
<anchor xml:id="_queue_8c_source_1l01333"/>01333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01334"/>01334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01335"/>01335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01336"/>01336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTicksToWait&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_queue_8c_source_1l01337"/>01337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01338"/>01338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;queue&#32;was&#32;empty&#32;and&#32;no&#32;block&#32;time&#32;is&#32;specified&#32;(or</emphasis>
<anchor xml:id="_queue_8c_source_1l01339"/>01339 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;block&#32;time&#32;has&#32;expired)&#32;so&#32;leave&#32;now.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01340"/>01340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l01341"/>01341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a0dbf5969c9d984920177a19d5b402e4e">traceQUEUE_RECEIVE_FAILED</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01342"/>01342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_projdefs_8h_1a4d79b09954b1efa73ad8d87a36b4a575">errQUEUE_EMPTY</link>;
<anchor xml:id="_queue_8c_source_1l01343"/>01343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01344"/>01344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xEntryTimeSet&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01345"/>01345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01346"/>01346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;queue&#32;was&#32;empty&#32;and&#32;a&#32;block&#32;time&#32;was&#32;specified&#32;so</emphasis>
<anchor xml:id="_queue_8c_source_1l01347"/>01347 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;configure&#32;the&#32;timeout&#32;structure.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01348"/>01348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1a9bff8681d5ed262e71b92805ca0da909">vTaskInternalSetTimeOutState</link>(&#32;&amp;xTimeOut&#32;);
<anchor xml:id="_queue_8c_source_1l01349"/>01349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xEntryTimeSet&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_queue_8c_source_1l01350"/>01350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01351"/>01351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01352"/>01352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01353"/>01353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Entry&#32;time&#32;was&#32;already&#32;set.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01354"/>01354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01355"/>01355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01356"/>01356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01357"/>01357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01358"/>01358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l01359"/>01359 
<anchor xml:id="_queue_8c_source_1l01360"/>01360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Interrupts&#32;and&#32;other&#32;tasks&#32;can&#32;send&#32;to&#32;and&#32;receive&#32;from&#32;the&#32;queue</emphasis>
<anchor xml:id="_queue_8c_source_1l01361"/>01361 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;now&#32;the&#32;critical&#32;section&#32;has&#32;been&#32;exited.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01362"/>01362 
<anchor xml:id="_queue_8c_source_1l01363"/>01363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1a366b302eba79d10b5ee2a3756f0fcc43">vTaskSuspendAll</link>();
<anchor xml:id="_queue_8c_source_1l01364"/>01364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1ae4efd14c0f4dee7f189ef2e4d9ce1f1b">prvLockQueue</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01365"/>01365 
<anchor xml:id="_queue_8c_source_1l01366"/>01366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Update&#32;the&#32;timeout&#32;state&#32;to&#32;see&#32;if&#32;it&#32;has&#32;expired&#32;yet.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01367"/>01367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_task_8h_1a3b018a85d339e536a6c05748dd666a3a">xTaskCheckForTimeOut</link>(&#32;&amp;xTimeOut,&#32;&amp;xTicksToWait&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01368"/>01368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01369"/>01369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;timeout&#32;has&#32;not&#32;expired.&#32;&#32;If&#32;the&#32;queue&#32;is&#32;still&#32;empty&#32;place</emphasis>
<anchor xml:id="_queue_8c_source_1l01370"/>01370 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;task&#32;on&#32;the&#32;list&#32;of&#32;tasks&#32;waiting&#32;to&#32;receive&#32;from&#32;the&#32;queue.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01371"/>01371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_queue_8c_1afd0e7fbbf62b3e12d60c4fcdaef1ad76">prvIsQueueEmpty</link>(&#32;pxQueue&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01372"/>01372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01373"/>01373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a657997eddb8c89bef7157e74bac003e2">traceBLOCKING_ON_QUEUE_RECEIVE</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01374"/>01374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1a56ae23bc0dece4522d666959902221ca">vTaskPlaceOnEventList</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;),&#32;xTicksToWait&#32;);
<anchor xml:id="_queue_8c_source_1l01375"/>01375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1aafc5447bec23cc93aa61911b140273ee">prvUnlockQueue</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01376"/>01376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_task_8h_1a003f8ae6d649225abd030cc76e1c7d0e">xTaskResumeAll</link>()&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01377"/>01377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01378"/>01378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1af4484fc07631a16e45ac5f29a3f0556e">portYIELD_WITHIN_API</link>();
<anchor xml:id="_queue_8c_source_1l01379"/>01379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01380"/>01380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01381"/>01381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01382"/>01382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01383"/>01383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01384"/>01384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01385"/>01385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01386"/>01386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01387"/>01387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;queue&#32;contains&#32;data&#32;again.&#32;&#32;Loop&#32;back&#32;to&#32;try&#32;and&#32;read&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l01388"/>01388 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01389"/>01389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1aafc5447bec23cc93aa61911b140273ee">prvUnlockQueue</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01390"/>01390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_task_8h_1a003f8ae6d649225abd030cc76e1c7d0e">xTaskResumeAll</link>();
<anchor xml:id="_queue_8c_source_1l01391"/>01391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01392"/>01392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01393"/>01393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01394"/>01394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01395"/>01395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Timed&#32;out.&#32;&#32;If&#32;there&#32;is&#32;no&#32;data&#32;in&#32;the&#32;queue&#32;exit,&#32;otherwise&#32;loop</emphasis>
<anchor xml:id="_queue_8c_source_1l01396"/>01396 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;back&#32;and&#32;attempt&#32;to&#32;read&#32;the&#32;data.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01397"/>01397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1aafc5447bec23cc93aa61911b140273ee">prvUnlockQueue</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01398"/>01398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_task_8h_1a003f8ae6d649225abd030cc76e1c7d0e">xTaskResumeAll</link>();
<anchor xml:id="_queue_8c_source_1l01399"/>01399 
<anchor xml:id="_queue_8c_source_1l01400"/>01400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_queue_8c_1afd0e7fbbf62b3e12d60c4fcdaef1ad76">prvIsQueueEmpty</link>(&#32;pxQueue&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01401"/>01401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01402"/>01402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a0dbf5969c9d984920177a19d5b402e4e">traceQUEUE_RECEIVE_FAILED</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01403"/>01403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_projdefs_8h_1a4d79b09954b1efa73ad8d87a36b4a575">errQUEUE_EMPTY</link>;
<anchor xml:id="_queue_8c_source_1l01404"/>01404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01405"/>01405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01406"/>01406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01407"/>01407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01408"/>01408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01409"/>01409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01410"/>01410 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">/*lint&#32;-restore&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01411"/>01411 }
<anchor xml:id="_queue_8c_source_1l01412"/>01412 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01413"/>01413 
<anchor xml:id="_queue_8c_source_1l01414"/><link linkend="_queue_8c_1ade45e48664e5ec17ea091f00cd34394f">01414</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8c_1ade45e48664e5ec17ea091f00cd34394f">xQueueSemaphoreTake</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueue,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait&#32;)
<anchor xml:id="_queue_8c_source_1l01415"/>01415 {
<anchor xml:id="_queue_8c_source_1l01416"/>01416 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xEntryTimeSet&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_queue_8c_source_1l01417"/>01417 <link linkend="_structx_t_i_m_e___o_u_t">TimeOut_t</link>&#32;xTimeOut;
<anchor xml:id="_queue_8c_source_1l01418"/>01418 <link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue&#32;=&#32;xQueue;
<anchor xml:id="_queue_8c_source_1l01419"/>01419 <emphasis role="keywordtype">void</emphasis>&#32;*pvBuffer&#32;=&#32;NULL;
<anchor xml:id="_queue_8c_source_1l01420"/>01420 (void)pvBuffer;
<anchor xml:id="_queue_8c_source_1l01421"/>01421 
<anchor xml:id="_queue_8c_source_1l01422"/>01422 <emphasis role="preprocessor">#if(&#32;configUSE_MUTEXES&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l01423"/>01423 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xInheritanceOccurred&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_queue_8c_source_1l01424"/>01424 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_queue_8c_source_1l01425"/>01425 
<anchor xml:id="_queue_8c_source_1l01426"/>01426 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Check&#32;the&#32;queue&#32;pointer&#32;is&#32;not&#32;NULL.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01427"/>01427 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;(&#32;pxQueue&#32;)&#32;);
<anchor xml:id="_queue_8c_source_1l01428"/>01428 
<anchor xml:id="_queue_8c_source_1l01429"/>01429 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Check&#32;this&#32;really&#32;is&#32;a&#32;semaphore,&#32;in&#32;which&#32;case&#32;the&#32;item&#32;size&#32;will&#32;be</emphasis>
<anchor xml:id="_queue_8c_source_1l01430"/>01430 <emphasis role="comment">&#32;&#32;&#32;&#32;0.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01431"/>01431 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">uxItemSize</link>&#32;==&#32;0&#32;);
<anchor xml:id="_queue_8c_source_1l01432"/>01432 
<anchor xml:id="_queue_8c_source_1l01433"/>01433 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Cannot&#32;block&#32;if&#32;the&#32;scheduler&#32;is&#32;suspended.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01434"/>01434 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;(&#32;INCLUDE_xTaskGetSchedulerState&#32;==&#32;1&#32;)&#32;||&#32;(&#32;configUSE_TIMERS&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l01435"/>01435 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01436"/>01436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;!(&#32;(&#32;<link linkend="_task_8h_1a0241000e08a261372186d34825a35979">xTaskGetSchedulerState</link>()&#32;==&#32;<link linkend="_task_8h_1a0cad071ca127a35df93166e9ed5b6ada">taskSCHEDULER_SUSPENDED</link>&#32;)&#32;&amp;&amp;&#32;(&#32;xTicksToWait&#32;!=&#32;0&#32;)&#32;)&#32;);
<anchor xml:id="_queue_8c_source_1l01437"/>01437 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01438"/>01438 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_queue_8c_source_1l01439"/>01439 
<anchor xml:id="_queue_8c_source_1l01440"/>01440 
<anchor xml:id="_queue_8c_source_1l01441"/>01441 &#32;&#32;&#32;&#32;<emphasis role="comment">/*lint&#32;-save&#32;-e904&#32;This&#32;function&#32;relaxes&#32;the&#32;coding&#32;standard&#32;somewhat&#32;to&#32;allow&#32;return</emphasis>
<anchor xml:id="_queue_8c_source_1l01442"/>01442 <emphasis role="comment">&#32;&#32;&#32;&#32;statements&#32;within&#32;the&#32;function&#32;itself.&#32;&#32;This&#32;is&#32;done&#32;in&#32;the&#32;interest</emphasis>
<anchor xml:id="_queue_8c_source_1l01443"/>01443 <emphasis role="comment">&#32;&#32;&#32;&#32;of&#32;execution&#32;time&#32;efficiency.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01444"/>01444 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;;;&#32;)
<anchor xml:id="_queue_8c_source_1l01445"/>01445 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01446"/>01446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l01447"/>01447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01448"/>01448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Semaphores&#32;are&#32;queues&#32;with&#32;an&#32;item&#32;size&#32;of&#32;0,&#32;and&#32;where&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l01449"/>01449 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;number&#32;of&#32;messages&#32;in&#32;the&#32;queue&#32;is&#32;the&#32;semaphore&apos;s&#32;count&#32;value.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01450"/>01450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxSemaphoreCount&#32;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>;
<anchor xml:id="_queue_8c_source_1l01451"/>01451 
<anchor xml:id="_queue_8c_source_1l01452"/>01452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Is&#32;there&#32;data&#32;in&#32;the&#32;queue&#32;now?&#32;&#32;To&#32;be&#32;running&#32;the&#32;calling&#32;task</emphasis>
<anchor xml:id="_queue_8c_source_1l01453"/>01453 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;must&#32;be&#32;the&#32;highest&#32;priority&#32;task&#32;wanting&#32;to&#32;access&#32;the&#32;queue.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01454"/>01454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;uxSemaphoreCount&#32;&gt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_queue_8c_source_1l01455"/>01455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01456"/>01456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a82b39aa722910a5e43793e882ded0faf">traceQUEUE_RECEIVE</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01457"/>01457 
<anchor xml:id="_queue_8c_source_1l01458"/>01458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Semaphores&#32;are&#32;queues&#32;with&#32;a&#32;data&#32;size&#32;of&#32;zero&#32;and&#32;where&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l01459"/>01459 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;messages&#32;waiting&#32;is&#32;the&#32;semaphore&apos;s&#32;count.&#32;&#32;Reduce&#32;the&#32;count.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01460"/>01460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>&#32;=&#32;uxSemaphoreCount&#32;-&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;1;
<anchor xml:id="_queue_8c_source_1l01461"/>01461 
<anchor xml:id="_queue_8c_source_1l01462"/>01462 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_MUTEXES&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l01463"/>01463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01464"/>01464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueue-&gt;uxQueueType&#32;==&#32;<link linkend="_queue_8c_1a0799077a434aea43f5cca3cda3625aa8">queueQUEUE_IS_MUTEX</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01465"/>01465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01466"/>01466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Record&#32;the&#32;information&#32;required&#32;to&#32;implement</emphasis>
<anchor xml:id="_queue_8c_source_1l01467"/>01467 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;priority&#32;inheritance&#32;should&#32;it&#32;become&#32;necessary.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01468"/>01468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1adb2c0818274974553c619ff953b6f477">xSemaphore</link>.<link linkend="_struct_semaphore_data_1ab1ed54c7b39dc45b3c310fae7ad08693">xMutexHolder</link>&#32;=&#32;<link linkend="_task_8h_1a54430b124666d513049dcbf888e6935f">pvTaskIncrementMutexHeldCount</link>();
<anchor xml:id="_queue_8c_source_1l01469"/>01469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01470"/>01470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01471"/>01471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01472"/>01472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01473"/>01473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01474"/>01474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01475"/>01475 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_MUTEXES&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l01476"/>01476 
<anchor xml:id="_queue_8c_source_1l01477"/>01477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Check&#32;to&#32;see&#32;if&#32;other&#32;tasks&#32;are&#32;blocked&#32;waiting&#32;to&#32;give&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l01478"/>01478 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;semaphore,&#32;and&#32;if&#32;so,&#32;unblock&#32;the&#32;highest&#32;priority&#32;such&#32;task.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01479"/>01479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1aaba6eb05d67ebc8026bea29193eca28f">listLIST_IS_EMPTY</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1aaab135c4345cb0393d6ff3cd5164c7b2">xTasksWaitingToSend</link>&#32;)&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01480"/>01480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01481"/>01481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_task_8h_1a14513b7dd36055f73fba3c5ebbdc1b06">xTaskRemoveFromEventList</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1aaab135c4345cb0393d6ff3cd5164c7b2">xTasksWaitingToSend</link>&#32;)&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01482"/>01482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01483"/>01483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1adb4472163ac5b0e8ad72183d69387b81">queueYIELD_IF_USING_PREEMPTION</link>();
<anchor xml:id="_queue_8c_source_1l01484"/>01484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01485"/>01485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01486"/>01486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01487"/>01487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01488"/>01488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01489"/>01489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01490"/>01490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01491"/>01491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01492"/>01492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01493"/>01493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01494"/>01494 
<anchor xml:id="_queue_8c_source_1l01495"/>01495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l01496"/>01496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>;
<anchor xml:id="_queue_8c_source_1l01497"/>01497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01498"/>01498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01499"/>01499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01500"/>01500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTicksToWait&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_queue_8c_source_1l01501"/>01501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01502"/>01502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;For&#32;inheritance&#32;to&#32;have&#32;occurred&#32;there&#32;must&#32;have&#32;been&#32;an</emphasis>
<anchor xml:id="_queue_8c_source_1l01503"/>01503 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;initial&#32;timeout,&#32;and&#32;an&#32;adjusted&#32;timeout&#32;cannot&#32;become&#32;0,&#32;as</emphasis>
<anchor xml:id="_queue_8c_source_1l01504"/>01504 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;it&#32;were&#32;0&#32;the&#32;function&#32;would&#32;have&#32;exited.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01505"/>01505 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if(&#32;configUSE_MUTEXES&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l01506"/>01506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01507"/>01507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xInheritanceOccurred&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;);
<anchor xml:id="_queue_8c_source_1l01508"/>01508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01509"/>01509 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_MUTEXES&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l01510"/>01510 
<anchor xml:id="_queue_8c_source_1l01511"/>01511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;semaphore&#32;count&#32;was&#32;0&#32;and&#32;no&#32;block&#32;time&#32;is&#32;specified</emphasis>
<anchor xml:id="_queue_8c_source_1l01512"/>01512 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(or&#32;the&#32;block&#32;time&#32;has&#32;expired)&#32;so&#32;exit&#32;now.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01513"/>01513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l01514"/>01514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a0dbf5969c9d984920177a19d5b402e4e">traceQUEUE_RECEIVE_FAILED</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01515"/>01515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_projdefs_8h_1a4d79b09954b1efa73ad8d87a36b4a575">errQUEUE_EMPTY</link>;
<anchor xml:id="_queue_8c_source_1l01516"/>01516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01517"/>01517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xEntryTimeSet&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01518"/>01518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01519"/>01519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;semaphore&#32;count&#32;was&#32;0&#32;and&#32;a&#32;block&#32;time&#32;was&#32;specified</emphasis>
<anchor xml:id="_queue_8c_source_1l01520"/>01520 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;so&#32;configure&#32;the&#32;timeout&#32;structure&#32;ready&#32;to&#32;block.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01521"/>01521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1a9bff8681d5ed262e71b92805ca0da909">vTaskInternalSetTimeOutState</link>(&#32;&amp;xTimeOut&#32;);
<anchor xml:id="_queue_8c_source_1l01522"/>01522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xEntryTimeSet&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_queue_8c_source_1l01523"/>01523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01524"/>01524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01525"/>01525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01526"/>01526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Entry&#32;time&#32;was&#32;already&#32;set.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01527"/>01527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01528"/>01528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01529"/>01529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01530"/>01530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01531"/>01531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l01532"/>01532 
<anchor xml:id="_queue_8c_source_1l01533"/>01533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Interrupts&#32;and&#32;other&#32;tasks&#32;can&#32;give&#32;to&#32;and&#32;take&#32;from&#32;the&#32;semaphore</emphasis>
<anchor xml:id="_queue_8c_source_1l01534"/>01534 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;now&#32;the&#32;critical&#32;section&#32;has&#32;been&#32;exited.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01535"/>01535 
<anchor xml:id="_queue_8c_source_1l01536"/>01536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1a366b302eba79d10b5ee2a3756f0fcc43">vTaskSuspendAll</link>();
<anchor xml:id="_queue_8c_source_1l01537"/>01537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1ae4efd14c0f4dee7f189ef2e4d9ce1f1b">prvLockQueue</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01538"/>01538 
<anchor xml:id="_queue_8c_source_1l01539"/>01539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Update&#32;the&#32;timeout&#32;state&#32;to&#32;see&#32;if&#32;it&#32;has&#32;expired&#32;yet.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01540"/>01540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_task_8h_1a3b018a85d339e536a6c05748dd666a3a">xTaskCheckForTimeOut</link>(&#32;&amp;xTimeOut,&#32;&amp;xTicksToWait&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01541"/>01541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01542"/>01542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;A&#32;block&#32;time&#32;is&#32;specified&#32;and&#32;not&#32;expired.&#32;&#32;If&#32;the&#32;semaphore</emphasis>
<anchor xml:id="_queue_8c_source_1l01543"/>01543 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count&#32;is&#32;0&#32;then&#32;enter&#32;the&#32;Blocked&#32;state&#32;to&#32;wait&#32;for&#32;a&#32;semaphore&#32;to</emphasis>
<anchor xml:id="_queue_8c_source_1l01544"/>01544 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;become&#32;available.&#32;&#32;As&#32;semaphores&#32;are&#32;implemented&#32;with&#32;queues&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l01545"/>01545 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;queue&#32;being&#32;empty&#32;is&#32;equivalent&#32;to&#32;the&#32;semaphore&#32;count&#32;being&#32;0.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01546"/>01546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_queue_8c_1afd0e7fbbf62b3e12d60c4fcdaef1ad76">prvIsQueueEmpty</link>(&#32;pxQueue&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01547"/>01547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01548"/>01548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a657997eddb8c89bef7157e74bac003e2">traceBLOCKING_ON_QUEUE_RECEIVE</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01549"/>01549 
<anchor xml:id="_queue_8c_source_1l01550"/>01550 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_MUTEXES&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l01551"/>01551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01552"/>01552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueue-&gt;uxQueueType&#32;==&#32;<link linkend="_queue_8c_1a0799077a434aea43f5cca3cda3625aa8">queueQUEUE_IS_MUTEX</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01553"/>01553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01554"/>01554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l01555"/>01555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01556"/>01556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xInheritanceOccurred&#32;=&#32;<link linkend="_task_8h_1aa715a488a6014df5a9393ca38c5938c0">xTaskPriorityInherit</link>(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1adb2c0818274974553c619ff953b6f477">xSemaphore</link>.<link linkend="_struct_semaphore_data_1ab1ed54c7b39dc45b3c310fae7ad08693">xMutexHolder</link>&#32;);
<anchor xml:id="_queue_8c_source_1l01557"/>01557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01558"/>01558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l01559"/>01559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01560"/>01560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01561"/>01561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01562"/>01562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01563"/>01563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01564"/>01564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01565"/>01565 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_queue_8c_source_1l01566"/>01566 
<anchor xml:id="_queue_8c_source_1l01567"/>01567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1a56ae23bc0dece4522d666959902221ca">vTaskPlaceOnEventList</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;),&#32;xTicksToWait&#32;);
<anchor xml:id="_queue_8c_source_1l01568"/>01568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1aafc5447bec23cc93aa61911b140273ee">prvUnlockQueue</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01569"/>01569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_task_8h_1a003f8ae6d649225abd030cc76e1c7d0e">xTaskResumeAll</link>()&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01570"/>01570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01571"/>01571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1af4484fc07631a16e45ac5f29a3f0556e">portYIELD_WITHIN_API</link>();
<anchor xml:id="_queue_8c_source_1l01572"/>01572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01573"/>01573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01574"/>01574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01575"/>01575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01576"/>01576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01577"/>01577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01578"/>01578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01579"/>01579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01580"/>01580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;There&#32;was&#32;no&#32;timeout&#32;and&#32;the&#32;semaphore&#32;count&#32;was&#32;not&#32;0,&#32;so</emphasis>
<anchor xml:id="_queue_8c_source_1l01581"/>01581 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;attempt&#32;to&#32;take&#32;the&#32;semaphore&#32;again.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01582"/>01582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1aafc5447bec23cc93aa61911b140273ee">prvUnlockQueue</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01583"/>01583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_task_8h_1a003f8ae6d649225abd030cc76e1c7d0e">xTaskResumeAll</link>();
<anchor xml:id="_queue_8c_source_1l01584"/>01584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01585"/>01585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01586"/>01586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01587"/>01587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01588"/>01588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Timed&#32;out.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01589"/>01589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1aafc5447bec23cc93aa61911b140273ee">prvUnlockQueue</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01590"/>01590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_task_8h_1a003f8ae6d649225abd030cc76e1c7d0e">xTaskResumeAll</link>();
<anchor xml:id="_queue_8c_source_1l01591"/>01591 
<anchor xml:id="_queue_8c_source_1l01592"/>01592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;semaphore&#32;count&#32;is&#32;0&#32;exit&#32;now&#32;as&#32;the&#32;timeout&#32;has</emphasis>
<anchor xml:id="_queue_8c_source_1l01593"/>01593 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;expired.&#32;&#32;Otherwise&#32;return&#32;to&#32;attempt&#32;to&#32;take&#32;the&#32;semaphore&#32;that&#32;is</emphasis>
<anchor xml:id="_queue_8c_source_1l01594"/>01594 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;known&#32;to&#32;be&#32;available.&#32;&#32;As&#32;semaphores&#32;are&#32;implemented&#32;by&#32;queues&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l01595"/>01595 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;queue&#32;being&#32;empty&#32;is&#32;equivalent&#32;to&#32;the&#32;semaphore&#32;count&#32;being&#32;0.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01596"/>01596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_queue_8c_1afd0e7fbbf62b3e12d60c4fcdaef1ad76">prvIsQueueEmpty</link>(&#32;pxQueue&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01597"/>01597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01598"/>01598 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_MUTEXES&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l01599"/>01599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01600"/>01600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;xInheritanceOccurred&#32;could&#32;only&#32;have&#32;be&#32;set&#32;if</emphasis>
<anchor xml:id="_queue_8c_source_1l01601"/>01601 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;uxQueueType&#32;==&#32;queueQUEUE_IS_MUTEX&#32;so&#32;no&#32;need&#32;to</emphasis>
<anchor xml:id="_queue_8c_source_1l01602"/>01602 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;test&#32;the&#32;mutex&#32;type&#32;again&#32;to&#32;check&#32;it&#32;is&#32;actually&#32;a&#32;mutex.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01603"/>01603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xInheritanceOccurred&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01604"/>01604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01605"/>01605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l01606"/>01606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01607"/>01607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxHighestWaitingPriority;
<anchor xml:id="_queue_8c_source_1l01608"/>01608 
<anchor xml:id="_queue_8c_source_1l01609"/>01609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;task&#32;blocking&#32;on&#32;the&#32;mutex&#32;caused&#32;another</emphasis>
<anchor xml:id="_queue_8c_source_1l01610"/>01610 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;task&#32;to&#32;inherit&#32;this&#32;task&apos;s&#32;priority.&#32;&#32;Now&#32;this&#32;task</emphasis>
<anchor xml:id="_queue_8c_source_1l01611"/>01611 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;has&#32;timed&#32;out&#32;the&#32;priority&#32;should&#32;be&#32;disinherited</emphasis>
<anchor xml:id="_queue_8c_source_1l01612"/>01612 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;again,&#32;but&#32;only&#32;as&#32;low&#32;as&#32;the&#32;next&#32;highest&#32;priority</emphasis>
<anchor xml:id="_queue_8c_source_1l01613"/>01613 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;task&#32;that&#32;is&#32;waiting&#32;for&#32;the&#32;same&#32;mutex.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01614"/>01614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxHighestWaitingPriority&#32;=&#32;<link linkend="_queue_8c_1a7dd61e286656a8956006b95556b604da">prvGetDisinheritPriorityAfterTimeout</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01615"/>01615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aa11e6a58d2534fe91ed8ee3a02c9b5e0">vTaskPriorityDisinheritAfterTimeout</link>(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1adb2c0818274974553c619ff953b6f477">xSemaphore</link>.<link linkend="_struct_semaphore_data_1ab1ed54c7b39dc45b3c310fae7ad08693">xMutexHolder</link>,&#32;uxHighestWaitingPriority&#32;);
<anchor xml:id="_queue_8c_source_1l01616"/>01616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01617"/>01617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l01618"/>01618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01619"/>01619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01620"/>01620 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_MUTEXES&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l01621"/>01621 
<anchor xml:id="_queue_8c_source_1l01622"/>01622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a0dbf5969c9d984920177a19d5b402e4e">traceQUEUE_RECEIVE_FAILED</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01623"/>01623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_projdefs_8h_1a4d79b09954b1efa73ad8d87a36b4a575">errQUEUE_EMPTY</link>;
<anchor xml:id="_queue_8c_source_1l01624"/>01624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01625"/>01625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01626"/>01626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01627"/>01627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01628"/>01628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01629"/>01629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01630"/>01630 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">/*lint&#32;-restore&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01631"/>01631 }
<anchor xml:id="_queue_8c_source_1l01632"/>01632 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01633"/>01633 
<anchor xml:id="_queue_8c_source_1l01634"/><link linkend="_queue_8c_1a8f68e37e931bbf95440c8845f512e090">01634</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8c_1a8f68e37e931bbf95440c8845f512e090">xQueuePeek</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueue,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pvBuffer,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait&#32;)
<anchor xml:id="_queue_8c_source_1l01635"/>01635 {
<anchor xml:id="_queue_8c_source_1l01636"/>01636 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xEntryTimeSet&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_queue_8c_source_1l01637"/>01637 <link linkend="_structx_t_i_m_e___o_u_t">TimeOut_t</link>&#32;xTimeOut;
<anchor xml:id="_queue_8c_source_1l01638"/>01638 int8_t&#32;*pcOriginalReadPosition;
<anchor xml:id="_queue_8c_source_1l01639"/>01639 <link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue&#32;=&#32;xQueue;
<anchor xml:id="_queue_8c_source_1l01640"/>01640 
<anchor xml:id="_queue_8c_source_1l01641"/>01641 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Check&#32;the&#32;pointer&#32;is&#32;not&#32;NULL.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01642"/>01642 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;(&#32;pxQueue&#32;)&#32;);
<anchor xml:id="_queue_8c_source_1l01643"/>01643 
<anchor xml:id="_queue_8c_source_1l01644"/>01644 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;buffer&#32;into&#32;which&#32;data&#32;is&#32;received&#32;can&#32;only&#32;be&#32;NULL&#32;if&#32;the&#32;data&#32;size</emphasis>
<anchor xml:id="_queue_8c_source_1l01645"/>01645 <emphasis role="comment">&#32;&#32;&#32;&#32;is&#32;zero&#32;(so&#32;no&#32;data&#32;is&#32;copied&#32;into&#32;the&#32;buffer.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01646"/>01646 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;!(&#32;(&#32;(&#32;pvBuffer&#32;)&#32;==&#32;NULL&#32;)&#32;&amp;&amp;&#32;(&#32;(&#32;pxQueue&#32;)-&gt;uxItemSize&#32;!=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0U&#32;)&#32;)&#32;);
<anchor xml:id="_queue_8c_source_1l01647"/>01647 
<anchor xml:id="_queue_8c_source_1l01648"/>01648 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Cannot&#32;block&#32;if&#32;the&#32;scheduler&#32;is&#32;suspended.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01649"/>01649 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;(&#32;INCLUDE_xTaskGetSchedulerState&#32;==&#32;1&#32;)&#32;||&#32;(&#32;configUSE_TIMERS&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l01650"/>01650 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01651"/>01651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;!(&#32;(&#32;<link linkend="_task_8h_1a0241000e08a261372186d34825a35979">xTaskGetSchedulerState</link>()&#32;==&#32;<link linkend="_task_8h_1a0cad071ca127a35df93166e9ed5b6ada">taskSCHEDULER_SUSPENDED</link>&#32;)&#32;&amp;&amp;&#32;(&#32;xTicksToWait&#32;!=&#32;0&#32;)&#32;)&#32;);
<anchor xml:id="_queue_8c_source_1l01652"/>01652 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01653"/>01653 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_queue_8c_source_1l01654"/>01654 
<anchor xml:id="_queue_8c_source_1l01655"/>01655 
<anchor xml:id="_queue_8c_source_1l01656"/>01656 &#32;&#32;&#32;&#32;<emphasis role="comment">/*lint&#32;-save&#32;-e904&#32;&#32;This&#32;function&#32;relaxes&#32;the&#32;coding&#32;standard&#32;somewhat&#32;to</emphasis>
<anchor xml:id="_queue_8c_source_1l01657"/>01657 <emphasis role="comment">&#32;&#32;&#32;&#32;allow&#32;return&#32;statements&#32;within&#32;the&#32;function&#32;itself.&#32;&#32;This&#32;is&#32;done&#32;in&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l01658"/>01658 <emphasis role="comment">&#32;&#32;&#32;&#32;interest&#32;of&#32;execution&#32;time&#32;efficiency.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01659"/>01659 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;;;&#32;)
<anchor xml:id="_queue_8c_source_1l01660"/>01660 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01661"/>01661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l01662"/>01662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01663"/>01663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxMessagesWaiting&#32;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>;
<anchor xml:id="_queue_8c_source_1l01664"/>01664 
<anchor xml:id="_queue_8c_source_1l01665"/>01665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Is&#32;there&#32;data&#32;in&#32;the&#32;queue&#32;now?&#32;&#32;To&#32;be&#32;running&#32;the&#32;calling&#32;task</emphasis>
<anchor xml:id="_queue_8c_source_1l01666"/>01666 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;must&#32;be&#32;the&#32;highest&#32;priority&#32;task&#32;wanting&#32;to&#32;access&#32;the&#32;queue.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01667"/>01667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;uxMessagesWaiting&#32;&gt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_queue_8c_source_1l01668"/>01668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01669"/>01669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Remember&#32;the&#32;read&#32;position&#32;so&#32;it&#32;can&#32;be&#32;reset&#32;after&#32;the&#32;data</emphasis>
<anchor xml:id="_queue_8c_source_1l01670"/>01670 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;read&#32;from&#32;the&#32;queue&#32;as&#32;this&#32;function&#32;is&#32;only&#32;peeking&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l01671"/>01671 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data,&#32;not&#32;removing&#32;it.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01672"/>01672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcOriginalReadPosition&#32;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1af381d02bbe6bc4a77934c6fd97598913">pcReadFrom</link>;
<anchor xml:id="_queue_8c_source_1l01673"/>01673 
<anchor xml:id="_queue_8c_source_1l01674"/>01674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1a305eea92fc333c62ed162f37ffa63e1d">prvCopyDataFromQueue</link>(&#32;pxQueue,&#32;pvBuffer&#32;);
<anchor xml:id="_queue_8c_source_1l01675"/>01675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1acd24b909ecdd18ed844cdede3027e534">traceQUEUE_PEEK</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01676"/>01676 
<anchor xml:id="_queue_8c_source_1l01677"/>01677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;data&#32;is&#32;not&#32;being&#32;removed,&#32;so&#32;reset&#32;the&#32;read&#32;pointer.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01678"/>01678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1af381d02bbe6bc4a77934c6fd97598913">pcReadFrom</link>&#32;=&#32;pcOriginalReadPosition;
<anchor xml:id="_queue_8c_source_1l01679"/>01679 
<anchor xml:id="_queue_8c_source_1l01680"/>01680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;data&#32;is&#32;being&#32;left&#32;in&#32;the&#32;queue,&#32;so&#32;see&#32;if&#32;there&#32;are</emphasis>
<anchor xml:id="_queue_8c_source_1l01681"/>01681 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;any&#32;other&#32;tasks&#32;waiting&#32;for&#32;the&#32;data.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01682"/>01682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1aaba6eb05d67ebc8026bea29193eca28f">listLIST_IS_EMPTY</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01683"/>01683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01684"/>01684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_task_8h_1a14513b7dd36055f73fba3c5ebbdc1b06">xTaskRemoveFromEventList</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01685"/>01685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01686"/>01686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;waiting&#32;has&#32;a&#32;higher&#32;priority&#32;than&#32;this&#32;task.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01687"/>01687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1adb4472163ac5b0e8ad72183d69387b81">queueYIELD_IF_USING_PREEMPTION</link>();
<anchor xml:id="_queue_8c_source_1l01688"/>01688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01689"/>01689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01690"/>01690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01691"/>01691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01692"/>01692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01693"/>01693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01694"/>01694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01695"/>01695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01696"/>01696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01697"/>01697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01698"/>01698 
<anchor xml:id="_queue_8c_source_1l01699"/>01699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l01700"/>01700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>;
<anchor xml:id="_queue_8c_source_1l01701"/>01701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01702"/>01702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01703"/>01703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01704"/>01704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTicksToWait&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_queue_8c_source_1l01705"/>01705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01706"/>01706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;queue&#32;was&#32;empty&#32;and&#32;no&#32;block&#32;time&#32;is&#32;specified&#32;(or</emphasis>
<anchor xml:id="_queue_8c_source_1l01707"/>01707 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;block&#32;time&#32;has&#32;expired)&#32;so&#32;leave&#32;now.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01708"/>01708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l01709"/>01709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1afa4b34739a92eb44f09947a669c98fb7">traceQUEUE_PEEK_FAILED</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01710"/>01710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_projdefs_8h_1a4d79b09954b1efa73ad8d87a36b4a575">errQUEUE_EMPTY</link>;
<anchor xml:id="_queue_8c_source_1l01711"/>01711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01712"/>01712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xEntryTimeSet&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01713"/>01713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01714"/>01714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;queue&#32;was&#32;empty&#32;and&#32;a&#32;block&#32;time&#32;was&#32;specified&#32;so</emphasis>
<anchor xml:id="_queue_8c_source_1l01715"/>01715 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;configure&#32;the&#32;timeout&#32;structure&#32;ready&#32;to&#32;enter&#32;the&#32;blocked</emphasis>
<anchor xml:id="_queue_8c_source_1l01716"/>01716 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;state.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01717"/>01717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1a9bff8681d5ed262e71b92805ca0da909">vTaskInternalSetTimeOutState</link>(&#32;&amp;xTimeOut&#32;);
<anchor xml:id="_queue_8c_source_1l01718"/>01718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xEntryTimeSet&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_queue_8c_source_1l01719"/>01719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01720"/>01720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01721"/>01721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01722"/>01722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Entry&#32;time&#32;was&#32;already&#32;set.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01723"/>01723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01724"/>01724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01725"/>01725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01726"/>01726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01727"/>01727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l01728"/>01728 
<anchor xml:id="_queue_8c_source_1l01729"/>01729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Interrupts&#32;and&#32;other&#32;tasks&#32;can&#32;send&#32;to&#32;and&#32;receive&#32;from&#32;the&#32;queue</emphasis>
<anchor xml:id="_queue_8c_source_1l01730"/>01730 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;now&#32;the&#32;critical&#32;section&#32;has&#32;been&#32;exited.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01731"/>01731 
<anchor xml:id="_queue_8c_source_1l01732"/>01732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1a366b302eba79d10b5ee2a3756f0fcc43">vTaskSuspendAll</link>();
<anchor xml:id="_queue_8c_source_1l01733"/>01733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1ae4efd14c0f4dee7f189ef2e4d9ce1f1b">prvLockQueue</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01734"/>01734 
<anchor xml:id="_queue_8c_source_1l01735"/>01735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Update&#32;the&#32;timeout&#32;state&#32;to&#32;see&#32;if&#32;it&#32;has&#32;expired&#32;yet.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01736"/>01736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_task_8h_1a3b018a85d339e536a6c05748dd666a3a">xTaskCheckForTimeOut</link>(&#32;&amp;xTimeOut,&#32;&amp;xTicksToWait&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01737"/>01737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01738"/>01738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Timeout&#32;has&#32;not&#32;expired&#32;yet,&#32;check&#32;to&#32;see&#32;if&#32;there&#32;is&#32;data&#32;in&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l01739"/>01739 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;queue&#32;now,&#32;and&#32;if&#32;not&#32;enter&#32;the&#32;Blocked&#32;state&#32;to&#32;wait&#32;for&#32;data.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01740"/>01740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_queue_8c_1afd0e7fbbf62b3e12d60c4fcdaef1ad76">prvIsQueueEmpty</link>(&#32;pxQueue&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01741"/>01741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01742"/>01742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a186c66f73c470500e556ec0f2fd3994f">traceBLOCKING_ON_QUEUE_PEEK</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01743"/>01743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1a56ae23bc0dece4522d666959902221ca">vTaskPlaceOnEventList</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;),&#32;xTicksToWait&#32;);
<anchor xml:id="_queue_8c_source_1l01744"/>01744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1aafc5447bec23cc93aa61911b140273ee">prvUnlockQueue</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01745"/>01745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_task_8h_1a003f8ae6d649225abd030cc76e1c7d0e">xTaskResumeAll</link>()&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01746"/>01746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01747"/>01747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1af4484fc07631a16e45ac5f29a3f0556e">portYIELD_WITHIN_API</link>();
<anchor xml:id="_queue_8c_source_1l01748"/>01748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01749"/>01749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01750"/>01750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01751"/>01751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01752"/>01752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01753"/>01753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01754"/>01754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01755"/>01755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01756"/>01756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;There&#32;is&#32;data&#32;in&#32;the&#32;queue&#32;now,&#32;so&#32;don&apos;t&#32;enter&#32;the&#32;blocked</emphasis>
<anchor xml:id="_queue_8c_source_1l01757"/>01757 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;state,&#32;instead&#32;return&#32;to&#32;try&#32;and&#32;obtain&#32;the&#32;data.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01758"/>01758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1aafc5447bec23cc93aa61911b140273ee">prvUnlockQueue</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01759"/>01759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_task_8h_1a003f8ae6d649225abd030cc76e1c7d0e">xTaskResumeAll</link>();
<anchor xml:id="_queue_8c_source_1l01760"/>01760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01761"/>01761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01762"/>01762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01763"/>01763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01764"/>01764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;timeout&#32;has&#32;expired.&#32;&#32;If&#32;there&#32;is&#32;still&#32;no&#32;data&#32;in&#32;the&#32;queue</emphasis>
<anchor xml:id="_queue_8c_source_1l01765"/>01765 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit,&#32;otherwise&#32;go&#32;back&#32;and&#32;try&#32;to&#32;read&#32;the&#32;data&#32;again.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01766"/>01766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1aafc5447bec23cc93aa61911b140273ee">prvUnlockQueue</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01767"/>01767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_task_8h_1a003f8ae6d649225abd030cc76e1c7d0e">xTaskResumeAll</link>();
<anchor xml:id="_queue_8c_source_1l01768"/>01768 
<anchor xml:id="_queue_8c_source_1l01769"/>01769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_queue_8c_1afd0e7fbbf62b3e12d60c4fcdaef1ad76">prvIsQueueEmpty</link>(&#32;pxQueue&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01770"/>01770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01771"/>01771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1afa4b34739a92eb44f09947a669c98fb7">traceQUEUE_PEEK_FAILED</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01772"/>01772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_projdefs_8h_1a4d79b09954b1efa73ad8d87a36b4a575">errQUEUE_EMPTY</link>;
<anchor xml:id="_queue_8c_source_1l01773"/>01773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01774"/>01774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01775"/>01775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01776"/>01776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01777"/>01777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01778"/>01778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01779"/>01779 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">/*lint&#32;-restore&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01780"/>01780 }
<anchor xml:id="_queue_8c_source_1l01781"/>01781 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01782"/>01782 
<anchor xml:id="_queue_8c_source_1l01783"/><link linkend="_queue_8c_1ac61ec62828e70ed35d18559a35550462">01783</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8c_1ac61ec62828e70ed35d18559a35550462">xQueueReceiveFromISR</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueue,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pvBuffer,&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxHigherPriorityTaskWoken&#32;)
<anchor xml:id="_queue_8c_source_1l01784"/>01784 {
<anchor xml:id="_queue_8c_source_1l01785"/>01785 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l01786"/>01786 <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxSavedInterruptStatus;
<anchor xml:id="_queue_8c_source_1l01787"/>01787 <link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue&#32;=&#32;xQueue;
<anchor xml:id="_queue_8c_source_1l01788"/>01788 
<anchor xml:id="_queue_8c_source_1l01789"/>01789 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01790"/>01790 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;!(&#32;(&#32;pvBuffer&#32;==&#32;NULL&#32;)&#32;&amp;&amp;&#32;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">uxItemSize</link>&#32;!=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0U&#32;)&#32;)&#32;);
<anchor xml:id="_queue_8c_source_1l01791"/>01791 
<anchor xml:id="_queue_8c_source_1l01792"/>01792 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;RTOS&#32;ports&#32;that&#32;support&#32;interrupt&#32;nesting&#32;have&#32;the&#32;concept&#32;of&#32;a&#32;maximum</emphasis>
<anchor xml:id="_queue_8c_source_1l01793"/>01793 <emphasis role="comment">&#32;&#32;&#32;&#32;system&#32;call&#32;(or&#32;maximum&#32;API&#32;call)&#32;interrupt&#32;priority.&#32;&#32;Interrupts&#32;that&#32;are</emphasis>
<anchor xml:id="_queue_8c_source_1l01794"/>01794 <emphasis role="comment">&#32;&#32;&#32;&#32;above&#32;the&#32;maximum&#32;system&#32;call&#32;priority&#32;are&#32;kept&#32;permanently&#32;enabled,&#32;even</emphasis>
<anchor xml:id="_queue_8c_source_1l01795"/>01795 <emphasis role="comment">&#32;&#32;&#32;&#32;when&#32;the&#32;RTOS&#32;kernel&#32;is&#32;in&#32;a&#32;critical&#32;section,&#32;but&#32;cannot&#32;make&#32;any&#32;calls&#32;to</emphasis>
<anchor xml:id="_queue_8c_source_1l01796"/>01796 <emphasis role="comment">&#32;&#32;&#32;&#32;FreeRTOS&#32;API&#32;functions.&#32;&#32;If&#32;configASSERT()&#32;is&#32;defined&#32;in&#32;FreeRTOSConfig.h</emphasis>
<anchor xml:id="_queue_8c_source_1l01797"/>01797 <emphasis role="comment">&#32;&#32;&#32;&#32;then&#32;portASSERT_IF_INTERRUPT_PRIORITY_INVALID()&#32;will&#32;result&#32;in&#32;an&#32;assertion</emphasis>
<anchor xml:id="_queue_8c_source_1l01798"/>01798 <emphasis role="comment">&#32;&#32;&#32;&#32;failure&#32;if&#32;a&#32;FreeRTOS&#32;API&#32;function&#32;is&#32;called&#32;from&#32;an&#32;interrupt&#32;that&#32;has&#32;been</emphasis>
<anchor xml:id="_queue_8c_source_1l01799"/>01799 <emphasis role="comment">&#32;&#32;&#32;&#32;assigned&#32;a&#32;priority&#32;above&#32;the&#32;configured&#32;maximum&#32;system&#32;call&#32;priority.</emphasis>
<anchor xml:id="_queue_8c_source_1l01800"/>01800 <emphasis role="comment">&#32;&#32;&#32;&#32;Only&#32;FreeRTOS&#32;functions&#32;that&#32;end&#32;in&#32;FromISR&#32;can&#32;be&#32;called&#32;from&#32;interrupts</emphasis>
<anchor xml:id="_queue_8c_source_1l01801"/>01801 <emphasis role="comment">&#32;&#32;&#32;&#32;that&#32;have&#32;been&#32;assigned&#32;a&#32;priority&#32;at&#32;or&#32;(logically)&#32;below&#32;the&#32;maximum</emphasis>
<anchor xml:id="_queue_8c_source_1l01802"/>01802 <emphasis role="comment">&#32;&#32;&#32;&#32;system&#32;call&#32;interrupt&#32;priority.&#32;&#32;FreeRTOS&#32;maintains&#32;a&#32;separate&#32;interrupt</emphasis>
<anchor xml:id="_queue_8c_source_1l01803"/>01803 <emphasis role="comment">&#32;&#32;&#32;&#32;safe&#32;API&#32;to&#32;ensure&#32;interrupt&#32;entry&#32;is&#32;as&#32;fast&#32;and&#32;as&#32;simple&#32;as&#32;possible.</emphasis>
<anchor xml:id="_queue_8c_source_1l01804"/>01804 <emphasis role="comment">&#32;&#32;&#32;&#32;More&#32;information&#32;(albeit&#32;Cortex-M&#32;specific)&#32;is&#32;provided&#32;on&#32;the&#32;following</emphasis>
<anchor xml:id="_queue_8c_source_1l01805"/>01805 <emphasis role="comment">&#32;&#32;&#32;&#32;link:&#32;http://www.freertos.org/RTOS-Cortex-M3-M4.html&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01806"/>01806 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a10f75d20c71c4289f96d1b89cb6c62e2">portASSERT_IF_INTERRUPT_PRIORITY_INVALID</link>();
<anchor xml:id="_queue_8c_source_1l01807"/>01807 
<anchor xml:id="_queue_8c_source_1l01808"/>01808 &#32;&#32;&#32;&#32;uxSavedInterruptStatus&#32;=&#32;<link linkend="_portmacro_8h_1a31b4260dbc1823ba80b578f86eb15a98">portSET_INTERRUPT_MASK_FROM_ISR</link>();
<anchor xml:id="_queue_8c_source_1l01809"/>01809 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01810"/>01810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxMessagesWaiting&#32;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>;
<anchor xml:id="_queue_8c_source_1l01811"/>01811 
<anchor xml:id="_queue_8c_source_1l01812"/>01812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Cannot&#32;block&#32;in&#32;an&#32;ISR,&#32;so&#32;check&#32;there&#32;is&#32;data&#32;available.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01813"/>01813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;uxMessagesWaiting&#32;&gt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_queue_8c_source_1l01814"/>01814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01815"/>01815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;int8_t&#32;cRxLock&#32;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1ac750a3f75a6e174adbc697e473a0dd13">cRxLock</link>;
<anchor xml:id="_queue_8c_source_1l01816"/>01816 
<anchor xml:id="_queue_8c_source_1l01817"/>01817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ace59eac86a08f533c19edf91594961c6">traceQUEUE_RECEIVE_FROM_ISR</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01818"/>01818 
<anchor xml:id="_queue_8c_source_1l01819"/>01819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1a305eea92fc333c62ed162f37ffa63e1d">prvCopyDataFromQueue</link>(&#32;pxQueue,&#32;pvBuffer&#32;);
<anchor xml:id="_queue_8c_source_1l01820"/>01820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>&#32;=&#32;uxMessagesWaiting&#32;-&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;1;
<anchor xml:id="_queue_8c_source_1l01821"/>01821 
<anchor xml:id="_queue_8c_source_1l01822"/>01822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;queue&#32;is&#32;locked&#32;the&#32;event&#32;list&#32;will&#32;not&#32;be&#32;modified.</emphasis>
<anchor xml:id="_queue_8c_source_1l01823"/>01823 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Instead&#32;update&#32;the&#32;lock&#32;count&#32;so&#32;the&#32;task&#32;that&#32;unlocks&#32;the&#32;queue</emphasis>
<anchor xml:id="_queue_8c_source_1l01824"/>01824 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;will&#32;know&#32;that&#32;an&#32;ISR&#32;has&#32;removed&#32;data&#32;while&#32;the&#32;queue&#32;was</emphasis>
<anchor xml:id="_queue_8c_source_1l01825"/>01825 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;locked.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01826"/>01826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;cRxLock&#32;==&#32;<link linkend="_queue_8c_1acdb781ba6b38714cf41f7417de8fe6bf">queueUNLOCKED</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01827"/>01827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01828"/>01828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1aaba6eb05d67ebc8026bea29193eca28f">listLIST_IS_EMPTY</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1aaab135c4345cb0393d6ff3cd5164c7b2">xTasksWaitingToSend</link>&#32;)&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01829"/>01829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01830"/>01830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_task_8h_1a14513b7dd36055f73fba3c5ebbdc1b06">xTaskRemoveFromEventList</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1aaab135c4345cb0393d6ff3cd5164c7b2">xTasksWaitingToSend</link>&#32;)&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01831"/>01831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01832"/>01832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;waiting&#32;has&#32;a&#32;higher&#32;priority&#32;than&#32;us&#32;so</emphasis>
<anchor xml:id="_queue_8c_source_1l01833"/>01833 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;force&#32;a&#32;context&#32;switch.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01834"/>01834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxHigherPriorityTaskWoken&#32;!=&#32;NULL&#32;)
<anchor xml:id="_queue_8c_source_1l01835"/>01835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01836"/>01836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pxHigherPriorityTaskWoken&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_queue_8c_source_1l01837"/>01837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01838"/>01838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01839"/>01839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01840"/>01840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01841"/>01841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01842"/>01842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01843"/>01843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01844"/>01844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01845"/>01845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01846"/>01846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01847"/>01847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01848"/>01848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01849"/>01849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01850"/>01850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l01851"/>01851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01852"/>01852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01853"/>01853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01854"/>01854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01855"/>01855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Increment&#32;the&#32;lock&#32;count&#32;so&#32;the&#32;task&#32;that&#32;unlocks&#32;the&#32;queue</emphasis>
<anchor xml:id="_queue_8c_source_1l01856"/>01856 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;knows&#32;that&#32;data&#32;was&#32;removed&#32;while&#32;it&#32;was&#32;locked.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01857"/>01857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1ac750a3f75a6e174adbc697e473a0dd13">cRxLock</link>&#32;=&#32;(&#32;int8_t&#32;)&#32;(&#32;cRxLock&#32;+&#32;1&#32;);
<anchor xml:id="_queue_8c_source_1l01858"/>01858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01859"/>01859 
<anchor xml:id="_queue_8c_source_1l01860"/>01860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>;
<anchor xml:id="_queue_8c_source_1l01861"/>01861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01862"/>01862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01863"/>01863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01864"/>01864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6">pdFAIL</link>;
<anchor xml:id="_queue_8c_source_1l01865"/>01865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a1f1f4a1fea93a33050fa6c27c30752d5">traceQUEUE_RECEIVE_FROM_ISR_FAILED</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01866"/>01866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01867"/>01867 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01868"/>01868 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a79d65a5d0f6f9133a0739832e9d8367e">portCLEAR_INTERRUPT_MASK_FROM_ISR</link>(&#32;uxSavedInterruptStatus&#32;);
<anchor xml:id="_queue_8c_source_1l01869"/>01869 
<anchor xml:id="_queue_8c_source_1l01870"/>01870 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l01871"/>01871 }
<anchor xml:id="_queue_8c_source_1l01872"/>01872 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01873"/>01873 
<anchor xml:id="_queue_8c_source_1l01874"/><link linkend="_queue_8c_1af67763957452955ac663c374d71278ce">01874</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8c_1af67763957452955ac663c374d71278ce">xQueuePeekFromISR</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueue,&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pvBuffer&#32;)
<anchor xml:id="_queue_8c_source_1l01875"/>01875 {
<anchor xml:id="_queue_8c_source_1l01876"/>01876 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l01877"/>01877 <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxSavedInterruptStatus;
<anchor xml:id="_queue_8c_source_1l01878"/>01878 int8_t&#32;*pcOriginalReadPosition;
<anchor xml:id="_queue_8c_source_1l01879"/>01879 <link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue&#32;=&#32;xQueue;
<anchor xml:id="_queue_8c_source_1l01880"/>01880 
<anchor xml:id="_queue_8c_source_1l01881"/>01881 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01882"/>01882 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;!(&#32;(&#32;pvBuffer&#32;==&#32;NULL&#32;)&#32;&amp;&amp;&#32;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">uxItemSize</link>&#32;!=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0U&#32;)&#32;)&#32;);
<anchor xml:id="_queue_8c_source_1l01883"/>01883 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">uxItemSize</link>&#32;!=&#32;0&#32;);&#32;<emphasis role="comment">/*&#32;Can&apos;t&#32;peek&#32;a&#32;semaphore.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01884"/>01884 
<anchor xml:id="_queue_8c_source_1l01885"/>01885 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;RTOS&#32;ports&#32;that&#32;support&#32;interrupt&#32;nesting&#32;have&#32;the&#32;concept&#32;of&#32;a&#32;maximum</emphasis>
<anchor xml:id="_queue_8c_source_1l01886"/>01886 <emphasis role="comment">&#32;&#32;&#32;&#32;system&#32;call&#32;(or&#32;maximum&#32;API&#32;call)&#32;interrupt&#32;priority.&#32;&#32;Interrupts&#32;that&#32;are</emphasis>
<anchor xml:id="_queue_8c_source_1l01887"/>01887 <emphasis role="comment">&#32;&#32;&#32;&#32;above&#32;the&#32;maximum&#32;system&#32;call&#32;priority&#32;are&#32;kept&#32;permanently&#32;enabled,&#32;even</emphasis>
<anchor xml:id="_queue_8c_source_1l01888"/>01888 <emphasis role="comment">&#32;&#32;&#32;&#32;when&#32;the&#32;RTOS&#32;kernel&#32;is&#32;in&#32;a&#32;critical&#32;section,&#32;but&#32;cannot&#32;make&#32;any&#32;calls&#32;to</emphasis>
<anchor xml:id="_queue_8c_source_1l01889"/>01889 <emphasis role="comment">&#32;&#32;&#32;&#32;FreeRTOS&#32;API&#32;functions.&#32;&#32;If&#32;configASSERT()&#32;is&#32;defined&#32;in&#32;FreeRTOSConfig.h</emphasis>
<anchor xml:id="_queue_8c_source_1l01890"/>01890 <emphasis role="comment">&#32;&#32;&#32;&#32;then&#32;portASSERT_IF_INTERRUPT_PRIORITY_INVALID()&#32;will&#32;result&#32;in&#32;an&#32;assertion</emphasis>
<anchor xml:id="_queue_8c_source_1l01891"/>01891 <emphasis role="comment">&#32;&#32;&#32;&#32;failure&#32;if&#32;a&#32;FreeRTOS&#32;API&#32;function&#32;is&#32;called&#32;from&#32;an&#32;interrupt&#32;that&#32;has&#32;been</emphasis>
<anchor xml:id="_queue_8c_source_1l01892"/>01892 <emphasis role="comment">&#32;&#32;&#32;&#32;assigned&#32;a&#32;priority&#32;above&#32;the&#32;configured&#32;maximum&#32;system&#32;call&#32;priority.</emphasis>
<anchor xml:id="_queue_8c_source_1l01893"/>01893 <emphasis role="comment">&#32;&#32;&#32;&#32;Only&#32;FreeRTOS&#32;functions&#32;that&#32;end&#32;in&#32;FromISR&#32;can&#32;be&#32;called&#32;from&#32;interrupts</emphasis>
<anchor xml:id="_queue_8c_source_1l01894"/>01894 <emphasis role="comment">&#32;&#32;&#32;&#32;that&#32;have&#32;been&#32;assigned&#32;a&#32;priority&#32;at&#32;or&#32;(logically)&#32;below&#32;the&#32;maximum</emphasis>
<anchor xml:id="_queue_8c_source_1l01895"/>01895 <emphasis role="comment">&#32;&#32;&#32;&#32;system&#32;call&#32;interrupt&#32;priority.&#32;&#32;FreeRTOS&#32;maintains&#32;a&#32;separate&#32;interrupt</emphasis>
<anchor xml:id="_queue_8c_source_1l01896"/>01896 <emphasis role="comment">&#32;&#32;&#32;&#32;safe&#32;API&#32;to&#32;ensure&#32;interrupt&#32;entry&#32;is&#32;as&#32;fast&#32;and&#32;as&#32;simple&#32;as&#32;possible.</emphasis>
<anchor xml:id="_queue_8c_source_1l01897"/>01897 <emphasis role="comment">&#32;&#32;&#32;&#32;More&#32;information&#32;(albeit&#32;Cortex-M&#32;specific)&#32;is&#32;provided&#32;on&#32;the&#32;following</emphasis>
<anchor xml:id="_queue_8c_source_1l01898"/>01898 <emphasis role="comment">&#32;&#32;&#32;&#32;link:&#32;http://www.freertos.org/RTOS-Cortex-M3-M4.html&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01899"/>01899 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a10f75d20c71c4289f96d1b89cb6c62e2">portASSERT_IF_INTERRUPT_PRIORITY_INVALID</link>();
<anchor xml:id="_queue_8c_source_1l01900"/>01900 
<anchor xml:id="_queue_8c_source_1l01901"/>01901 &#32;&#32;&#32;&#32;uxSavedInterruptStatus&#32;=&#32;<link linkend="_portmacro_8h_1a31b4260dbc1823ba80b578f86eb15a98">portSET_INTERRUPT_MASK_FROM_ISR</link>();
<anchor xml:id="_queue_8c_source_1l01902"/>01902 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01903"/>01903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Cannot&#32;block&#32;in&#32;an&#32;ISR,&#32;so&#32;check&#32;there&#32;is&#32;data&#32;available.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01904"/>01904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>&#32;&gt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_queue_8c_source_1l01905"/>01905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01906"/>01906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a3e2a14b61c26f9690deb26d76cc801ee">traceQUEUE_PEEK_FROM_ISR</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01907"/>01907 
<anchor xml:id="_queue_8c_source_1l01908"/>01908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Remember&#32;the&#32;read&#32;position&#32;so&#32;it&#32;can&#32;be&#32;reset&#32;as&#32;nothing&#32;is</emphasis>
<anchor xml:id="_queue_8c_source_1l01909"/>01909 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;actually&#32;being&#32;removed&#32;from&#32;the&#32;queue.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01910"/>01910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcOriginalReadPosition&#32;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1af381d02bbe6bc4a77934c6fd97598913">pcReadFrom</link>;
<anchor xml:id="_queue_8c_source_1l01911"/>01911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1a305eea92fc333c62ed162f37ffa63e1d">prvCopyDataFromQueue</link>(&#32;pxQueue,&#32;pvBuffer&#32;);
<anchor xml:id="_queue_8c_source_1l01912"/>01912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1af381d02bbe6bc4a77934c6fd97598913">pcReadFrom</link>&#32;=&#32;pcOriginalReadPosition;
<anchor xml:id="_queue_8c_source_1l01913"/>01913 
<anchor xml:id="_queue_8c_source_1l01914"/>01914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>;
<anchor xml:id="_queue_8c_source_1l01915"/>01915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01916"/>01916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l01917"/>01917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01918"/>01918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6">pdFAIL</link>;
<anchor xml:id="_queue_8c_source_1l01919"/>01919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a72ea0f09cc6a38363f2b5217aab27fd3">traceQUEUE_PEEK_FROM_ISR_FAILED</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01920"/>01920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01921"/>01921 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01922"/>01922 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a79d65a5d0f6f9133a0739832e9d8367e">portCLEAR_INTERRUPT_MASK_FROM_ISR</link>(&#32;uxSavedInterruptStatus&#32;);
<anchor xml:id="_queue_8c_source_1l01923"/>01923 
<anchor xml:id="_queue_8c_source_1l01924"/>01924 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l01925"/>01925 }
<anchor xml:id="_queue_8c_source_1l01926"/>01926 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01927"/>01927 
<anchor xml:id="_queue_8c_source_1l01928"/><link linkend="_queue_8c_1a4158a6134c9d1c60ffdb18d279d475b1">01928</link> <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_queue_8c_1a4158a6134c9d1c60ffdb18d279d475b1">uxQueueMessagesWaiting</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueue&#32;)
<anchor xml:id="_queue_8c_source_1l01929"/>01929 {
<anchor xml:id="_queue_8c_source_1l01930"/>01930 <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxReturn;
<anchor xml:id="_queue_8c_source_1l01931"/>01931 
<anchor xml:id="_queue_8c_source_1l01932"/>01932 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;xQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01933"/>01933 
<anchor xml:id="_queue_8c_source_1l01934"/>01934 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l01935"/>01935 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01936"/>01936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxReturn&#32;=&#32;(&#32;(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;)&#32;xQueue&#32;)-&gt;uxMessagesWaiting;
<anchor xml:id="_queue_8c_source_1l01937"/>01937 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01938"/>01938 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l01939"/>01939 
<anchor xml:id="_queue_8c_source_1l01940"/>01940 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;uxReturn;
<anchor xml:id="_queue_8c_source_1l01941"/>01941 }&#32;<emphasis role="comment">/*lint&#32;!e818&#32;Pointer&#32;cannot&#32;be&#32;declared&#32;const&#32;as&#32;xQueue&#32;is&#32;a&#32;typedef&#32;not&#32;pointer.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01942"/>01942 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01943"/>01943 
<anchor xml:id="_queue_8c_source_1l01944"/><link linkend="_queue_8c_1a27d6fb77ce7a0b5a16f6471730d33201">01944</link> <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_queue_8c_1a27d6fb77ce7a0b5a16f6471730d33201">uxQueueSpacesAvailable</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueue&#32;)
<anchor xml:id="_queue_8c_source_1l01945"/>01945 {
<anchor xml:id="_queue_8c_source_1l01946"/>01946 <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxReturn;
<anchor xml:id="_queue_8c_source_1l01947"/>01947 <link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue&#32;=&#32;xQueue;
<anchor xml:id="_queue_8c_source_1l01948"/>01948 
<anchor xml:id="_queue_8c_source_1l01949"/>01949 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01950"/>01950 
<anchor xml:id="_queue_8c_source_1l01951"/>01951 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l01952"/>01952 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01953"/>01953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxReturn&#32;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1ae80d17a812c669d4d41265b7f693988c">uxLength</link>&#32;-&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>;
<anchor xml:id="_queue_8c_source_1l01954"/>01954 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01955"/>01955 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l01956"/>01956 
<anchor xml:id="_queue_8c_source_1l01957"/>01957 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;uxReturn;
<anchor xml:id="_queue_8c_source_1l01958"/>01958 }&#32;<emphasis role="comment">/*lint&#32;!e818&#32;Pointer&#32;cannot&#32;be&#32;declared&#32;const&#32;as&#32;xQueue&#32;is&#32;a&#32;typedef&#32;not&#32;pointer.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01959"/>01959 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01960"/>01960 
<anchor xml:id="_queue_8c_source_1l01961"/><link linkend="_queue_8c_1ad5d110bc27c691ff8da238e0116bf92a">01961</link> <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_queue_8c_1ad5d110bc27c691ff8da238e0116bf92a">uxQueueMessagesWaitingFromISR</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueue&#32;)
<anchor xml:id="_queue_8c_source_1l01962"/>01962 {
<anchor xml:id="_queue_8c_source_1l01963"/>01963 <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxReturn;
<anchor xml:id="_queue_8c_source_1l01964"/>01964 <link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue&#32;=&#32;xQueue;
<anchor xml:id="_queue_8c_source_1l01965"/>01965 
<anchor xml:id="_queue_8c_source_1l01966"/>01966 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01967"/>01967 &#32;&#32;&#32;&#32;uxReturn&#32;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>;
<anchor xml:id="_queue_8c_source_1l01968"/>01968 
<anchor xml:id="_queue_8c_source_1l01969"/>01969 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;uxReturn;
<anchor xml:id="_queue_8c_source_1l01970"/>01970 }&#32;<emphasis role="comment">/*lint&#32;!e818&#32;Pointer&#32;cannot&#32;be&#32;declared&#32;const&#32;as&#32;xQueue&#32;is&#32;a&#32;typedef&#32;not&#32;pointer.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01971"/>01971 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01972"/>01972 
<anchor xml:id="_queue_8c_source_1l01973"/><link linkend="_queue_8c_1a35c0b4f9a0e940cb3a86ca4c5e84c41c">01973</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_queue_8c_1a35c0b4f9a0e940cb3a86ca4c5e84c41c">vQueueDelete</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueue&#32;)
<anchor xml:id="_queue_8c_source_1l01974"/>01974 {
<anchor xml:id="_queue_8c_source_1l01975"/>01975 <link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue&#32;=&#32;xQueue;
<anchor xml:id="_queue_8c_source_1l01976"/>01976 
<anchor xml:id="_queue_8c_source_1l01977"/>01977 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01978"/>01978 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1aae8ebd9c82ecd564953a37bb26a5a1e5">traceQUEUE_DELETE</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01979"/>01979 
<anchor xml:id="_queue_8c_source_1l01980"/>01980 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;(&#32;configQUEUE_REGISTRY_SIZE&#32;&gt;&#32;0&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l01981"/>01981 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01982"/>01982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1ac695c7cde3c32b32a1db4689239603ed">vQueueUnregisterQueue</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01983"/>01983 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01984"/>01984 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_queue_8c_source_1l01985"/>01985 
<anchor xml:id="_queue_8c_source_1l01986"/>01986 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if(&#32;(&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configSUPPORT_STATIC_ALLOCATION&#32;==&#32;0&#32;)&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l01987"/>01987 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01988"/>01988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;queue&#32;can&#32;only&#32;have&#32;been&#32;allocated&#32;dynamically&#32;-&#32;free&#32;it</emphasis>
<anchor xml:id="_queue_8c_source_1l01989"/>01989 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;again.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01990"/>01990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_heap__3_8c_1a1e7cea2fd1bc894ea3b5f5e8179d259b">vPortFree</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01991"/>01991 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l01992"/>01992 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#elif(&#32;(&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configSUPPORT_STATIC_ALLOCATION&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l01993"/>01993 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01994"/>01994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;queue&#32;could&#32;have&#32;been&#32;allocated&#32;statically&#32;or&#32;dynamically,&#32;so</emphasis>
<anchor xml:id="_queue_8c_source_1l01995"/>01995 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;check&#32;before&#32;attempting&#32;to&#32;free&#32;the&#32;memory.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l01996"/>01996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueue-&gt;ucStaticallyAllocated&#32;==&#32;(&#32;uint8_t&#32;)&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l01997"/>01997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l01998"/>01998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_heap__3_8c_1a1e7cea2fd1bc894ea3b5f5e8179d259b">vPortFree</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l01999"/>01999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02000"/>02000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02001"/>02001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02002"/>02002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02003"/>02003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02004"/>02004 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02005"/>02005 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="_queue_8c_source_1l02006"/>02006 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02007"/>02007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;queue&#32;must&#32;have&#32;been&#32;statically&#32;allocated,&#32;so&#32;is&#32;not&#32;going&#32;to&#32;be</emphasis>
<anchor xml:id="_queue_8c_source_1l02008"/>02008 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;deleted.&#32;&#32;Avoid&#32;compiler&#32;warnings&#32;about&#32;the&#32;unused&#32;parameter.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02009"/>02009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;pxQueue;
<anchor xml:id="_queue_8c_source_1l02010"/>02010 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02011"/>02011 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l02012"/>02012 }
<anchor xml:id="_queue_8c_source_1l02013"/>02013 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02014"/>02014 
<anchor xml:id="_queue_8c_source_1l02015"/>02015 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l02016"/>02016 
<anchor xml:id="_queue_8c_source_1l02017"/><link linkend="_queue_8c_1a2b57cf206a70fc6872c070d847503855">02017</link> &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_queue_8c_1a2b57cf206a70fc6872c070d847503855">uxQueueGetQueueNumber</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueue&#32;)
<anchor xml:id="_queue_8c_source_1l02018"/>02018 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02019"/>02019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(&#32;(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;)&#32;xQueue&#32;)-&gt;uxQueueNumber;
<anchor xml:id="_queue_8c_source_1l02020"/>02020 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02021"/>02021 
<anchor xml:id="_queue_8c_source_1l02022"/>02022 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TRACE_FACILITY&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l02023"/>02023 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02024"/>02024 
<anchor xml:id="_queue_8c_source_1l02025"/>02025 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l02026"/>02026 
<anchor xml:id="_queue_8c_source_1l02027"/><link linkend="_queue_8c_1a9bc1fccf1806aa650a9ce02b8e643022">02027</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_queue_8c_1a9bc1fccf1806aa650a9ce02b8e643022">vQueueSetQueueNumber</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueue,&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxQueueNumber&#32;)
<anchor xml:id="_queue_8c_source_1l02028"/>02028 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02029"/>02029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;)&#32;xQueue&#32;)-&gt;uxQueueNumber&#32;=&#32;uxQueueNumber;
<anchor xml:id="_queue_8c_source_1l02030"/>02030 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02031"/>02031 
<anchor xml:id="_queue_8c_source_1l02032"/>02032 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TRACE_FACILITY&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l02033"/>02033 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02034"/>02034 
<anchor xml:id="_queue_8c_source_1l02035"/>02035 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_TRACE_FACILITY&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l02036"/>02036 
<anchor xml:id="_queue_8c_source_1l02037"/><link linkend="_queue_8c_1a6e857ec4dd73c5c250924e92885c2433">02037</link> &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_queue_8c_1a6e857ec4dd73c5c250924e92885c2433">ucQueueGetQueueType</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueue&#32;)
<anchor xml:id="_queue_8c_source_1l02038"/>02038 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02039"/>02039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(&#32;(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;)&#32;xQueue&#32;)-&gt;ucQueueType;
<anchor xml:id="_queue_8c_source_1l02040"/>02040 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02041"/>02041 
<anchor xml:id="_queue_8c_source_1l02042"/>02042 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TRACE_FACILITY&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l02043"/>02043 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02044"/>02044 
<anchor xml:id="_queue_8c_source_1l02045"/>02045 <emphasis role="preprocessor">#if(&#32;configUSE_MUTEXES&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l02046"/>02046 
<anchor xml:id="_queue_8c_source_1l02047"/><link linkend="_queue_8c_1a7dd61e286656a8956006b95556b604da">02047</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;<link linkend="_queue_8c_1a7dd61e286656a8956006b95556b604da">prvGetDisinheritPriorityAfterTimeout</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue&#32;)
<anchor xml:id="_queue_8c_source_1l02048"/>02048 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02049"/>02049 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxHighestPriorityOfWaitingTasks;
<anchor xml:id="_queue_8c_source_1l02050"/>02050 
<anchor xml:id="_queue_8c_source_1l02051"/>02051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;a&#32;task&#32;waiting&#32;for&#32;a&#32;mutex&#32;causes&#32;the&#32;mutex&#32;holder&#32;to&#32;inherit&#32;a</emphasis>
<anchor xml:id="_queue_8c_source_1l02052"/>02052 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;priority,&#32;but&#32;the&#32;waiting&#32;task&#32;times&#32;out,&#32;then&#32;the&#32;holder&#32;should</emphasis>
<anchor xml:id="_queue_8c_source_1l02053"/>02053 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;disinherit&#32;the&#32;priority&#32;-&#32;but&#32;only&#32;down&#32;to&#32;the&#32;highest&#32;priority&#32;of&#32;any</emphasis>
<anchor xml:id="_queue_8c_source_1l02054"/>02054 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;other&#32;tasks&#32;that&#32;are&#32;waiting&#32;for&#32;the&#32;same&#32;mutex.&#32;&#32;For&#32;this&#32;purpose,</emphasis>
<anchor xml:id="_queue_8c_source_1l02055"/>02055 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;the&#32;priority&#32;of&#32;the&#32;highest&#32;priority&#32;task&#32;that&#32;is&#32;waiting&#32;for&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l02056"/>02056 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mutex.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02057"/>02057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1a18b4aded515bdc512017ea6e677a13bb">listCURRENT_LIST_LENGTH</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;)&#32;&gt;&#32;0U&#32;)
<anchor xml:id="_queue_8c_source_1l02058"/>02058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02059"/>02059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxHighestPriorityOfWaitingTasks&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="__free_r_t_o_s_config__default_8h_1a9a78f5ac61e6cb172dadf2a51f11db38">configMAX_PRIORITIES</link>&#32;-&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="_list_8h_1a63742b27958b959ac9ab69d8e9aed241">listGET_ITEM_VALUE_OF_HEAD_ENTRY</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;);
<anchor xml:id="_queue_8c_source_1l02060"/>02060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02061"/>02061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02062"/>02062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02063"/>02063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uxHighestPriorityOfWaitingTasks&#32;=&#32;<link linkend="_task_8h_1a94ed0b9b3b4e8ccc859c322f18583e67">tskIDLE_PRIORITY</link>;
<anchor xml:id="_queue_8c_source_1l02064"/>02064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02065"/>02065 
<anchor xml:id="_queue_8c_source_1l02066"/>02066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;uxHighestPriorityOfWaitingTasks;
<anchor xml:id="_queue_8c_source_1l02067"/>02067 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02068"/>02068 
<anchor xml:id="_queue_8c_source_1l02069"/>02069 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_MUTEXES&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l02070"/>02070 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02071"/>02071 
<anchor xml:id="_queue_8c_source_1l02072"/><link linkend="_queue_8c_1ad1908d5f670f2b73216a5f1fc78917ae">02072</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8c_1ad1908d5f670f2b73216a5f1fc78917ae">prvCopyDataToQueue</link>(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pvItemToQueue,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xPosition&#32;)
<anchor xml:id="_queue_8c_source_1l02073"/>02073 {
<anchor xml:id="_queue_8c_source_1l02074"/>02074 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_queue_8c_source_1l02075"/>02075 <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxMessagesWaiting;
<anchor xml:id="_queue_8c_source_1l02076"/>02076 
<anchor xml:id="_queue_8c_source_1l02077"/>02077 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;function&#32;is&#32;called&#32;from&#32;a&#32;critical&#32;section.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02078"/>02078 
<anchor xml:id="_queue_8c_source_1l02079"/>02079 &#32;&#32;&#32;&#32;uxMessagesWaiting&#32;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>;
<anchor xml:id="_queue_8c_source_1l02080"/>02080 
<anchor xml:id="_queue_8c_source_1l02081"/>02081 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">uxItemSize</link>&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_queue_8c_source_1l02082"/>02082 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02083"/>02083 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_MUTEXES&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l02084"/>02084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02085"/>02085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueue-&gt;uxQueueType&#32;==&#32;<link linkend="_queue_8c_1a0799077a434aea43f5cca3cda3625aa8">queueQUEUE_IS_MUTEX</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02086"/>02086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02087"/>02087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;mutex&#32;is&#32;no&#32;longer&#32;being&#32;held.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02088"/>02088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_task_8h_1a02fe2e1419fd6c35f75a1357c5e5ce22">xTaskPriorityDisinherit</link>(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1adb2c0818274974553c619ff953b6f477">xSemaphore</link>.<link linkend="_struct_semaphore_data_1ab1ed54c7b39dc45b3c310fae7ad08693">xMutexHolder</link>&#32;);
<anchor xml:id="_queue_8c_source_1l02089"/>02089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1adb2c0818274974553c619ff953b6f477">xSemaphore</link>.<link linkend="_struct_semaphore_data_1ab1ed54c7b39dc45b3c310fae7ad08693">xMutexHolder</link>&#32;=&#32;NULL;
<anchor xml:id="_queue_8c_source_1l02090"/>02090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02091"/>02091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02092"/>02092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02093"/>02093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02094"/>02094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02095"/>02095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02096"/>02096 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_MUTEXES&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l02097"/>02097 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02098"/>02098 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xPosition&#32;==&#32;<link linkend="_queue_8h_1a4d78fa863fbeb90425a2dda08fae8b12">queueSEND_TO_BACK</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02099"/>02099 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02100"/>02100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;memcpy(&#32;(&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;)&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1abdf13cc013c8488848cee3fce4f0fed3">pcWriteTo</link>,&#32;pvItemToQueue,&#32;(&#32;size_t&#32;)&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">uxItemSize</link>&#32;);&#32;<emphasis role="comment">/*lint&#32;!e961&#32;!e418&#32;!e9087&#32;MISRA&#32;exception&#32;as&#32;the&#32;casts&#32;are&#32;only&#32;redundant&#32;for&#32;some&#32;ports,&#32;plus&#32;previous&#32;logic&#32;ensures&#32;a&#32;null&#32;pointer&#32;can&#32;only&#32;be&#32;passed&#32;to&#32;memcpy()&#32;if&#32;the&#32;copy&#32;size&#32;is&#32;0.&#32;&#32;Cast&#32;to&#32;void&#32;required&#32;by&#32;function&#32;signature&#32;and&#32;safe&#32;as&#32;no&#32;alignment&#32;requirement&#32;and&#32;copy&#32;length&#32;specified&#32;in&#32;bytes.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02101"/>02101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1abdf13cc013c8488848cee3fce4f0fed3">pcWriteTo</link>&#32;+=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">uxItemSize</link>;&#32;<emphasis role="comment">/*lint&#32;!e9016&#32;Pointer&#32;arithmetic&#32;on&#32;char&#32;types&#32;ok,&#32;especially&#32;in&#32;this&#32;use&#32;case&#32;where&#32;it&#32;is&#32;the&#32;clearest&#32;way&#32;of&#32;conveying&#32;intent.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02102"/>02102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1abdf13cc013c8488848cee3fce4f0fed3">pcWriteTo</link>&#32;&gt;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1acbbdc8eb47b348a824c7bced41512a38">pcTail</link>&#32;)&#32;<emphasis role="comment">/*lint&#32;!e946&#32;MISRA&#32;exception&#32;justified&#32;as&#32;comparison&#32;of&#32;pointers&#32;is&#32;the&#32;cleanest&#32;solution.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02103"/>02103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02104"/>02104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1abdf13cc013c8488848cee3fce4f0fed3">pcWriteTo</link>&#32;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a487dc7e43b380c58212cba72bc33e0ed">pcHead</link>;
<anchor xml:id="_queue_8c_source_1l02105"/>02105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02106"/>02106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02107"/>02107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02108"/>02108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02109"/>02109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02110"/>02110 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02111"/>02111 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02112"/>02112 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02113"/>02113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;memcpy(&#32;(&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;)&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1af381d02bbe6bc4a77934c6fd97598913">pcReadFrom</link>,&#32;pvItemToQueue,&#32;(&#32;size_t&#32;)&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">uxItemSize</link>&#32;);&#32;<emphasis role="comment">/*lint&#32;!e961&#32;!e9087&#32;!e418&#32;MISRA&#32;exception&#32;as&#32;the&#32;casts&#32;are&#32;only&#32;redundant&#32;for&#32;some&#32;ports.&#32;&#32;Cast&#32;to&#32;void&#32;required&#32;by&#32;function&#32;signature&#32;and&#32;safe&#32;as&#32;no&#32;alignment&#32;requirement&#32;and&#32;copy&#32;length&#32;specified&#32;in&#32;bytes.&#32;&#32;Assert&#32;checks&#32;null&#32;pointer&#32;only&#32;used&#32;when&#32;length&#32;is&#32;0.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02114"/>02114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1af381d02bbe6bc4a77934c6fd97598913">pcReadFrom</link>&#32;-=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">uxItemSize</link>;
<anchor xml:id="_queue_8c_source_1l02115"/>02115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1af381d02bbe6bc4a77934c6fd97598913">pcReadFrom</link>&#32;&lt;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a487dc7e43b380c58212cba72bc33e0ed">pcHead</link>&#32;)&#32;<emphasis role="comment">/*lint&#32;!e946&#32;MISRA&#32;exception&#32;justified&#32;as&#32;comparison&#32;of&#32;pointers&#32;is&#32;the&#32;cleanest&#32;solution.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02116"/>02116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02117"/>02117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1af381d02bbe6bc4a77934c6fd97598913">pcReadFrom</link>&#32;=&#32;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1acbbdc8eb47b348a824c7bced41512a38">pcTail</link>&#32;-&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">uxItemSize</link>&#32;);
<anchor xml:id="_queue_8c_source_1l02118"/>02118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02119"/>02119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02120"/>02120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02121"/>02121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02122"/>02122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02123"/>02123 
<anchor xml:id="_queue_8c_source_1l02124"/>02124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xPosition&#32;==&#32;<link linkend="_queue_8h_1a5bb1c4a46d4b08b6d35cf586983476ef">queueOVERWRITE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02125"/>02125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02126"/>02126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;uxMessagesWaiting&#32;&gt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_queue_8c_source_1l02127"/>02127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02128"/>02128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;An&#32;item&#32;is&#32;not&#32;being&#32;added&#32;but&#32;overwritten,&#32;so&#32;subtract</emphasis>
<anchor xml:id="_queue_8c_source_1l02129"/>02129 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;one&#32;from&#32;the&#32;recorded&#32;number&#32;of&#32;items&#32;in&#32;the&#32;queue&#32;so&#32;when</emphasis>
<anchor xml:id="_queue_8c_source_1l02130"/>02130 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;one&#32;is&#32;added&#32;again&#32;below&#32;the&#32;number&#32;of&#32;recorded&#32;items&#32;remains</emphasis>
<anchor xml:id="_queue_8c_source_1l02131"/>02131 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;correct.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02132"/>02132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--uxMessagesWaiting;
<anchor xml:id="_queue_8c_source_1l02133"/>02133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02134"/>02134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02135"/>02135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02136"/>02136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02137"/>02137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02138"/>02138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02139"/>02139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02140"/>02140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02141"/>02141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02142"/>02142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02143"/>02143 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02144"/>02144 
<anchor xml:id="_queue_8c_source_1l02145"/>02145 &#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>&#32;=&#32;uxMessagesWaiting&#32;+&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;1;
<anchor xml:id="_queue_8c_source_1l02146"/>02146 
<anchor xml:id="_queue_8c_source_1l02147"/>02147 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l02148"/>02148 }
<anchor xml:id="_queue_8c_source_1l02149"/>02149 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02150"/>02150 
<anchor xml:id="_queue_8c_source_1l02151"/><link linkend="_queue_8c_1a305eea92fc333c62ed162f37ffa63e1d">02151</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_queue_8c_1a305eea92fc333c62ed162f37ffa63e1d">prvCopyDataFromQueue</link>(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pvBuffer&#32;)
<anchor xml:id="_queue_8c_source_1l02152"/>02152 {
<anchor xml:id="_queue_8c_source_1l02153"/>02153 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">uxItemSize</link>&#32;!=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_queue_8c_source_1l02154"/>02154 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02155"/>02155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1af381d02bbe6bc4a77934c6fd97598913">pcReadFrom</link>&#32;+=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">uxItemSize</link>;&#32;<emphasis role="comment">/*lint&#32;!e9016&#32;Pointer&#32;arithmetic&#32;on&#32;char&#32;types&#32;ok,&#32;especially&#32;in&#32;this&#32;use&#32;case&#32;where&#32;it&#32;is&#32;the&#32;clearest&#32;way&#32;of&#32;conveying&#32;intent.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02156"/>02156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1af381d02bbe6bc4a77934c6fd97598913">pcReadFrom</link>&#32;&gt;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1acbbdc8eb47b348a824c7bced41512a38">pcTail</link>&#32;)&#32;<emphasis role="comment">/*lint&#32;!e946&#32;MISRA&#32;exception&#32;justified&#32;as&#32;use&#32;of&#32;the&#32;relational&#32;operator&#32;is&#32;the&#32;cleanest&#32;solutions.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02157"/>02157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02158"/>02158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1af381d02bbe6bc4a77934c6fd97598913">pcReadFrom</link>&#32;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a487dc7e43b380c58212cba72bc33e0ed">pcHead</link>;
<anchor xml:id="_queue_8c_source_1l02159"/>02159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02160"/>02160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02161"/>02161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02162"/>02162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02163"/>02163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02164"/>02164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;memcpy(&#32;(&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;)&#32;pvBuffer,&#32;(&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;)&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1af381d02bbe6bc4a77934c6fd97598913">pcReadFrom</link>,&#32;(&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;)&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">uxItemSize</link>&#32;);&#32;<emphasis role="comment">/*lint&#32;!e961&#32;!e418&#32;!e9087&#32;MISRA&#32;exception&#32;as&#32;the&#32;casts&#32;are&#32;only&#32;redundant&#32;for&#32;some&#32;ports.&#32;&#32;Also&#32;previous&#32;logic&#32;ensures&#32;a&#32;null&#32;pointer&#32;can&#32;only&#32;be&#32;passed&#32;to&#32;memcpy()&#32;when&#32;the&#32;count&#32;is&#32;0.&#32;&#32;Cast&#32;to&#32;void&#32;required&#32;by&#32;function&#32;signature&#32;and&#32;safe&#32;as&#32;no&#32;alignment&#32;requirement&#32;and&#32;copy&#32;length&#32;specified&#32;in&#32;bytes.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02165"/>02165 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02166"/>02166 }
<anchor xml:id="_queue_8c_source_1l02167"/>02167 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02168"/>02168 
<anchor xml:id="_queue_8c_source_1l02169"/><link linkend="_queue_8c_1aafc5447bec23cc93aa61911b140273ee">02169</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_queue_8c_1aafc5447bec23cc93aa61911b140273ee">prvUnlockQueue</link>(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue&#32;)
<anchor xml:id="_queue_8c_source_1l02170"/>02170 {
<anchor xml:id="_queue_8c_source_1l02171"/>02171 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;THIS&#32;FUNCTION&#32;MUST&#32;BE&#32;CALLED&#32;WITH&#32;THE&#32;SCHEDULER&#32;SUSPENDED.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02172"/>02172 
<anchor xml:id="_queue_8c_source_1l02173"/>02173 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;lock&#32;counts&#32;contains&#32;the&#32;number&#32;of&#32;extra&#32;data&#32;items&#32;placed&#32;or</emphasis>
<anchor xml:id="_queue_8c_source_1l02174"/>02174 <emphasis role="comment">&#32;&#32;&#32;&#32;removed&#32;from&#32;the&#32;queue&#32;while&#32;the&#32;queue&#32;was&#32;locked.&#32;&#32;When&#32;a&#32;queue&#32;is</emphasis>
<anchor xml:id="_queue_8c_source_1l02175"/>02175 <emphasis role="comment">&#32;&#32;&#32;&#32;locked&#32;items&#32;can&#32;be&#32;added&#32;or&#32;removed,&#32;but&#32;the&#32;event&#32;lists&#32;cannot&#32;be</emphasis>
<anchor xml:id="_queue_8c_source_1l02176"/>02176 <emphasis role="comment">&#32;&#32;&#32;&#32;updated.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02177"/>02177 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l02178"/>02178 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02179"/>02179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int8_t&#32;cTxLock&#32;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a24ac3f0707f098da2a22244d843fcf82">cTxLock</link>;
<anchor xml:id="_queue_8c_source_1l02180"/>02180 
<anchor xml:id="_queue_8c_source_1l02181"/>02181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;See&#32;if&#32;data&#32;was&#32;added&#32;to&#32;the&#32;queue&#32;while&#32;it&#32;was&#32;locked.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02182"/>02182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(&#32;cTxLock&#32;&gt;&#32;<link linkend="_queue_8c_1a60a95aa91f84782416755f38616231fd">queueLOCKED_UNMODIFIED</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02183"/>02183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02184"/>02184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Data&#32;was&#32;posted&#32;while&#32;the&#32;queue&#32;was&#32;locked.&#32;&#32;Are&#32;any&#32;tasks</emphasis>
<anchor xml:id="_queue_8c_source_1l02185"/>02185 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;blocked&#32;waiting&#32;for&#32;data&#32;to&#32;become&#32;available?&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02186"/>02186 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;(&#32;configUSE_QUEUE_SETS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l02187"/>02187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02188"/>02188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueue-&gt;pxQueueSetContainer&#32;!=&#32;NULL&#32;)
<anchor xml:id="_queue_8c_source_1l02189"/>02189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02190"/>02190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;prvNotifyQueueSetContainer(&#32;pxQueue,&#32;<link linkend="_queue_8h_1a4d78fa863fbeb90425a2dda08fae8b12">queueSEND_TO_BACK</link>&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02191"/>02191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02192"/>02192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;queue&#32;is&#32;a&#32;member&#32;of&#32;a&#32;queue&#32;set,&#32;and&#32;posting&#32;to</emphasis>
<anchor xml:id="_queue_8c_source_1l02193"/>02193 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;queue&#32;set&#32;caused&#32;a&#32;higher&#32;priority&#32;task&#32;to&#32;unblock.</emphasis>
<anchor xml:id="_queue_8c_source_1l02194"/>02194 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;A&#32;context&#32;switch&#32;is&#32;required.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02195"/>02195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1a998c69e37431a3a32c637b31ff60089a">vTaskMissedYield</link>();
<anchor xml:id="_queue_8c_source_1l02196"/>02196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02197"/>02197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02198"/>02198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02199"/>02199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02200"/>02200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02201"/>02201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02202"/>02202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02203"/>02203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02204"/>02204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Tasks&#32;that&#32;are&#32;removed&#32;from&#32;the&#32;event&#32;list&#32;will&#32;get</emphasis>
<anchor xml:id="_queue_8c_source_1l02205"/>02205 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;added&#32;to&#32;the&#32;pending&#32;ready&#32;list&#32;as&#32;the&#32;scheduler&#32;is&#32;still</emphasis>
<anchor xml:id="_queue_8c_source_1l02206"/>02206 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;suspended.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02207"/>02207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1aaba6eb05d67ebc8026bea29193eca28f">listLIST_IS_EMPTY</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02208"/>02208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02209"/>02209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_task_8h_1a14513b7dd36055f73fba3c5ebbdc1b06">xTaskRemoveFromEventList</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02210"/>02210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02211"/>02211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;waiting&#32;has&#32;a&#32;higher&#32;priority&#32;so&#32;record&#32;that&#32;a</emphasis>
<anchor xml:id="_queue_8c_source_1l02212"/>02212 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;context&#32;switch&#32;is&#32;required.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02213"/>02213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1a998c69e37431a3a32c637b31ff60089a">vTaskMissedYield</link>();
<anchor xml:id="_queue_8c_source_1l02214"/>02214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02215"/>02215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02216"/>02216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02217"/>02217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02218"/>02218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02219"/>02219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02220"/>02220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02221"/>02221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02222"/>02222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_queue_8c_source_1l02223"/>02223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02224"/>02224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02225"/>02225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02226"/>02226 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_QUEUE_SETS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l02227"/>02227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02228"/>02228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Tasks&#32;that&#32;are&#32;removed&#32;from&#32;the&#32;event&#32;list&#32;will&#32;get&#32;added&#32;to</emphasis>
<anchor xml:id="_queue_8c_source_1l02229"/>02229 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;pending&#32;ready&#32;list&#32;as&#32;the&#32;scheduler&#32;is&#32;still&#32;suspended.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02230"/>02230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1aaba6eb05d67ebc8026bea29193eca28f">listLIST_IS_EMPTY</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02231"/>02231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02232"/>02232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_task_8h_1a14513b7dd36055f73fba3c5ebbdc1b06">xTaskRemoveFromEventList</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02233"/>02233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02234"/>02234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;waiting&#32;has&#32;a&#32;higher&#32;priority&#32;so&#32;record&#32;that</emphasis>
<anchor xml:id="_queue_8c_source_1l02235"/>02235 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;context&#32;switch&#32;is&#32;required.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02236"/>02236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1a998c69e37431a3a32c637b31ff60089a">vTaskMissedYield</link>();
<anchor xml:id="_queue_8c_source_1l02237"/>02237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02238"/>02238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02239"/>02239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02240"/>02240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02241"/>02241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02242"/>02242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02243"/>02243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02244"/>02244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02245"/>02245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_queue_8c_source_1l02246"/>02246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02247"/>02247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02248"/>02248 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_QUEUE_SETS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l02249"/>02249 
<anchor xml:id="_queue_8c_source_1l02250"/>02250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--cTxLock;
<anchor xml:id="_queue_8c_source_1l02251"/>02251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02252"/>02252 
<anchor xml:id="_queue_8c_source_1l02253"/>02253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a24ac3f0707f098da2a22244d843fcf82">cTxLock</link>&#32;=&#32;<link linkend="_queue_8c_1acdb781ba6b38714cf41f7417de8fe6bf">queueUNLOCKED</link>;
<anchor xml:id="_queue_8c_source_1l02254"/>02254 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02255"/>02255 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l02256"/>02256 
<anchor xml:id="_queue_8c_source_1l02257"/>02257 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Do&#32;the&#32;same&#32;for&#32;the&#32;Rx&#32;lock.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02258"/>02258 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l02259"/>02259 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02260"/>02260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int8_t&#32;cRxLock&#32;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1ac750a3f75a6e174adbc697e473a0dd13">cRxLock</link>;
<anchor xml:id="_queue_8c_source_1l02261"/>02261 
<anchor xml:id="_queue_8c_source_1l02262"/>02262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(&#32;cRxLock&#32;&gt;&#32;<link linkend="_queue_8c_1a60a95aa91f84782416755f38616231fd">queueLOCKED_UNMODIFIED</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02263"/>02263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02264"/>02264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1aaba6eb05d67ebc8026bea29193eca28f">listLIST_IS_EMPTY</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1aaab135c4345cb0393d6ff3cd5164c7b2">xTasksWaitingToSend</link>&#32;)&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02265"/>02265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02266"/>02266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_task_8h_1a14513b7dd36055f73fba3c5ebbdc1b06">xTaskRemoveFromEventList</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1aaab135c4345cb0393d6ff3cd5164c7b2">xTasksWaitingToSend</link>&#32;)&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02267"/>02267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02268"/>02268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1a998c69e37431a3a32c637b31ff60089a">vTaskMissedYield</link>();
<anchor xml:id="_queue_8c_source_1l02269"/>02269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02270"/>02270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02271"/>02271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02272"/>02272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02273"/>02273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02274"/>02274 
<anchor xml:id="_queue_8c_source_1l02275"/>02275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--cRxLock;
<anchor xml:id="_queue_8c_source_1l02276"/>02276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02277"/>02277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02278"/>02278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02279"/>02279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_queue_8c_source_1l02280"/>02280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02281"/>02281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02282"/>02282 
<anchor xml:id="_queue_8c_source_1l02283"/>02283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1ac750a3f75a6e174adbc697e473a0dd13">cRxLock</link>&#32;=&#32;<link linkend="_queue_8c_1acdb781ba6b38714cf41f7417de8fe6bf">queueUNLOCKED</link>;
<anchor xml:id="_queue_8c_source_1l02284"/>02284 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02285"/>02285 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l02286"/>02286 }
<anchor xml:id="_queue_8c_source_1l02287"/>02287 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02288"/>02288 
<anchor xml:id="_queue_8c_source_1l02289"/><link linkend="_queue_8c_1afd0e7fbbf62b3e12d60c4fcdaef1ad76">02289</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8c_1afd0e7fbbf62b3e12d60c4fcdaef1ad76">prvIsQueueEmpty</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*pxQueue&#32;)
<anchor xml:id="_queue_8c_source_1l02290"/>02290 {
<anchor xml:id="_queue_8c_source_1l02291"/>02291 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l02292"/>02292 
<anchor xml:id="_queue_8c_source_1l02293"/>02293 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l02294"/>02294 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02295"/>02295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;&#32;0&#32;)
<anchor xml:id="_queue_8c_source_1l02296"/>02296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02297"/>02297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_queue_8c_source_1l02298"/>02298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02299"/>02299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02300"/>02300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02301"/>02301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_queue_8c_source_1l02302"/>02302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02303"/>02303 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02304"/>02304 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l02305"/>02305 
<anchor xml:id="_queue_8c_source_1l02306"/>02306 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l02307"/>02307 }
<anchor xml:id="_queue_8c_source_1l02308"/>02308 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02309"/>02309 
<anchor xml:id="_queue_8c_source_1l02310"/><link linkend="_queue_8c_1a7d076f57a56ef50315418f8bbfba96fd">02310</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8c_1a7d076f57a56ef50315418f8bbfba96fd">xQueueIsQueueEmptyFromISR</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueue&#32;)
<anchor xml:id="_queue_8c_source_1l02311"/>02311 {
<anchor xml:id="_queue_8c_source_1l02312"/>02312 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l02313"/>02313 <link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue&#32;=&#32;xQueue;
<anchor xml:id="_queue_8c_source_1l02314"/>02314 
<anchor xml:id="_queue_8c_source_1l02315"/>02315 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l02316"/>02316 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_queue_8c_source_1l02317"/>02317 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02318"/>02318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_queue_8c_source_1l02319"/>02319 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02320"/>02320 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02321"/>02321 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02322"/>02322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_queue_8c_source_1l02323"/>02323 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02324"/>02324 
<anchor xml:id="_queue_8c_source_1l02325"/>02325 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l02326"/>02326 }&#32;<emphasis role="comment">/*lint&#32;!e818&#32;xQueue&#32;could&#32;not&#32;be&#32;pointer&#32;to&#32;const&#32;because&#32;it&#32;is&#32;a&#32;typedef.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02327"/>02327 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02328"/>02328 
<anchor xml:id="_queue_8c_source_1l02329"/><link linkend="_queue_8c_1ae726cc8b535fc7a601ee442fd2f7da53">02329</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8c_1ae726cc8b535fc7a601ee442fd2f7da53">prvIsQueueFull</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*pxQueue&#32;)
<anchor xml:id="_queue_8c_source_1l02330"/>02330 {
<anchor xml:id="_queue_8c_source_1l02331"/>02331 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l02332"/>02332 
<anchor xml:id="_queue_8c_source_1l02333"/>02333 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l02334"/>02334 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02335"/>02335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>&#32;==&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1ae80d17a812c669d4d41265b7f693988c">uxLength</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02336"/>02336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02337"/>02337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_queue_8c_source_1l02338"/>02338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02339"/>02339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02340"/>02340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02341"/>02341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_queue_8c_source_1l02342"/>02342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02343"/>02343 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02344"/>02344 &#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l02345"/>02345 
<anchor xml:id="_queue_8c_source_1l02346"/>02346 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l02347"/>02347 }
<anchor xml:id="_queue_8c_source_1l02348"/>02348 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02349"/>02349 
<anchor xml:id="_queue_8c_source_1l02350"/><link linkend="_queue_8c_1a76bbe8ebd21b3e89784e865d06f1058c">02350</link> <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8c_1a76bbe8ebd21b3e89784e865d06f1058c">xQueueIsQueueFullFromISR</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueue&#32;)
<anchor xml:id="_queue_8c_source_1l02351"/>02351 {
<anchor xml:id="_queue_8c_source_1l02352"/>02352 <link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l02353"/>02353 <link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue&#32;=&#32;xQueue;
<anchor xml:id="_queue_8c_source_1l02354"/>02354 
<anchor xml:id="_queue_8c_source_1l02355"/>02355 &#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l02356"/>02356 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>&#32;==&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1ae80d17a812c669d4d41265b7f693988c">uxLength</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02357"/>02357 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02358"/>02358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_queue_8c_source_1l02359"/>02359 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02360"/>02360 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02361"/>02361 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02362"/>02362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_queue_8c_source_1l02363"/>02363 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02364"/>02364 
<anchor xml:id="_queue_8c_source_1l02365"/>02365 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l02366"/>02366 }&#32;<emphasis role="comment">/*lint&#32;!e818&#32;xQueue&#32;could&#32;not&#32;be&#32;pointer&#32;to&#32;const&#32;because&#32;it&#32;is&#32;a&#32;typedef.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02367"/>02367 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02368"/>02368 
<anchor xml:id="_queue_8c_source_1l02369"/>02369 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_CO_ROUTINES&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l02370"/>02370 
<anchor xml:id="_queue_8c_source_1l02371"/>02371 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8h_1abb5d7bd9b62f2b642104fde73c1c666b">xQueueCRSend</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueue,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pvItemToQueue,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait&#32;)
<anchor xml:id="_queue_8c_source_1l02372"/>02372 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02373"/>02373 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l02374"/>02374 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue&#32;=&#32;xQueue;
<anchor xml:id="_queue_8c_source_1l02375"/>02375 
<anchor xml:id="_queue_8c_source_1l02376"/>02376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;queue&#32;is&#32;already&#32;full&#32;we&#32;may&#32;have&#32;to&#32;block.&#32;&#32;A&#32;critical&#32;section</emphasis>
<anchor xml:id="_queue_8c_source_1l02377"/>02377 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;required&#32;to&#32;prevent&#32;an&#32;interrupt&#32;removing&#32;something&#32;from&#32;the&#32;queue</emphasis>
<anchor xml:id="_queue_8c_source_1l02378"/>02378 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;between&#32;the&#32;check&#32;to&#32;see&#32;if&#32;the&#32;queue&#32;is&#32;full&#32;and&#32;blocking&#32;on&#32;the&#32;queue.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02379"/>02379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a6e3d10ee1a0734a647ca192523c2cfc1">portDISABLE_INTERRUPTS</link>();
<anchor xml:id="_queue_8c_source_1l02380"/>02380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02381"/>02381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_queue_8c_1ae726cc8b535fc7a601ee442fd2f7da53">prvIsQueueFull</link>(&#32;pxQueue&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02382"/>02382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02383"/>02383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;queue&#32;is&#32;full&#32;-&#32;do&#32;we&#32;want&#32;to&#32;block&#32;or&#32;just&#32;leave&#32;without</emphasis>
<anchor xml:id="_queue_8c_source_1l02384"/>02384 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;posting?&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02385"/>02385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTicksToWait&#32;&gt;&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_queue_8c_source_1l02386"/>02386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02387"/>02387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;As&#32;this&#32;is&#32;called&#32;from&#32;a&#32;coroutine&#32;we&#32;cannot&#32;block&#32;directly,&#32;but</emphasis>
<anchor xml:id="_queue_8c_source_1l02388"/>02388 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;indicating&#32;that&#32;we&#32;need&#32;to&#32;block.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02389"/>02389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_croutine_8h_1a6b5b1c5857d38b79c96636754208e32d">vCoRoutineAddToDelayedList</link>(&#32;xTicksToWait,&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1aaab135c4345cb0393d6ff3cd5164c7b2">xTasksWaitingToSend</link>&#32;)&#32;);
<anchor xml:id="_queue_8c_source_1l02390"/>02390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1abc47e85a6befbb47961ad5ee7aa57173">portENABLE_INTERRUPTS</link>();
<anchor xml:id="_queue_8c_source_1l02391"/>02391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_projdefs_8h_1a4a7ca54ee5527cd7a14830956e05ea55">errQUEUE_BLOCKED</link>;
<anchor xml:id="_queue_8c_source_1l02392"/>02392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02393"/>02393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02394"/>02394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02395"/>02395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1abc47e85a6befbb47961ad5ee7aa57173">portENABLE_INTERRUPTS</link>();
<anchor xml:id="_queue_8c_source_1l02396"/>02396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_projdefs_8h_1ae40de11e4044a83a97d2cb5d00ce608b">errQUEUE_FULL</link>;
<anchor xml:id="_queue_8c_source_1l02397"/>02397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02398"/>02398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02399"/>02399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02400"/>02400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1abc47e85a6befbb47961ad5ee7aa57173">portENABLE_INTERRUPTS</link>();
<anchor xml:id="_queue_8c_source_1l02401"/>02401 
<anchor xml:id="_queue_8c_source_1l02402"/>02402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a6e3d10ee1a0734a647ca192523c2cfc1">portDISABLE_INTERRUPTS</link>();
<anchor xml:id="_queue_8c_source_1l02403"/>02403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02404"/>02404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>&#32;&lt;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1ae80d17a812c669d4d41265b7f693988c">uxLength</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02405"/>02405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02406"/>02406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;There&#32;is&#32;room&#32;in&#32;the&#32;queue,&#32;copy&#32;the&#32;data&#32;into&#32;the&#32;queue.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02407"/>02407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1ad1908d5f670f2b73216a5f1fc78917ae">prvCopyDataToQueue</link>(&#32;pxQueue,&#32;pvItemToQueue,&#32;<link linkend="_queue_8h_1a4d78fa863fbeb90425a2dda08fae8b12">queueSEND_TO_BACK</link>&#32;);
<anchor xml:id="_queue_8c_source_1l02408"/>02408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>;
<anchor xml:id="_queue_8c_source_1l02409"/>02409 
<anchor xml:id="_queue_8c_source_1l02410"/>02410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Were&#32;any&#32;co-routines&#32;waiting&#32;for&#32;data&#32;to&#32;become&#32;available?&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02411"/>02411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1aaba6eb05d67ebc8026bea29193eca28f">listLIST_IS_EMPTY</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02412"/>02412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02413"/>02413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;In&#32;this&#32;instance&#32;the&#32;co-routine&#32;could&#32;be&#32;placed&#32;directly</emphasis>
<anchor xml:id="_queue_8c_source_1l02414"/>02414 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;into&#32;the&#32;ready&#32;list&#32;as&#32;we&#32;are&#32;within&#32;a&#32;critical&#32;section.</emphasis>
<anchor xml:id="_queue_8c_source_1l02415"/>02415 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Instead&#32;the&#32;same&#32;pending&#32;ready&#32;list&#32;mechanism&#32;is&#32;used&#32;as&#32;if</emphasis>
<anchor xml:id="_queue_8c_source_1l02416"/>02416 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;event&#32;were&#32;caused&#32;from&#32;within&#32;an&#32;interrupt.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02417"/>02417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_croutine_8h_1af2a96db518b18f5a7e1cd2fdf3c82873">xCoRoutineRemoveFromEventList</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02418"/>02418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02419"/>02419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;co-routine&#32;waiting&#32;has&#32;a&#32;higher&#32;priority&#32;so&#32;record</emphasis>
<anchor xml:id="_queue_8c_source_1l02420"/>02420 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;that&#32;a&#32;yield&#32;might&#32;be&#32;appropriate.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02421"/>02421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a3b2e2afaa2851576dfc2779a7fea59b4">errQUEUE_YIELD</link>;
<anchor xml:id="_queue_8c_source_1l02422"/>02422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02423"/>02423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02424"/>02424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02425"/>02425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02426"/>02426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02427"/>02427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02428"/>02428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02429"/>02429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02430"/>02430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02431"/>02431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02432"/>02432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02433"/>02433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02434"/>02434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02435"/>02435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1ae40de11e4044a83a97d2cb5d00ce608b">errQUEUE_FULL</link>;
<anchor xml:id="_queue_8c_source_1l02436"/>02436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02437"/>02437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02438"/>02438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1abc47e85a6befbb47961ad5ee7aa57173">portENABLE_INTERRUPTS</link>();
<anchor xml:id="_queue_8c_source_1l02439"/>02439 
<anchor xml:id="_queue_8c_source_1l02440"/>02440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l02441"/>02441 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02442"/>02442 
<anchor xml:id="_queue_8c_source_1l02443"/>02443 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_CO_ROUTINES&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l02444"/>02444 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02445"/>02445 
<anchor xml:id="_queue_8c_source_1l02446"/>02446 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_CO_ROUTINES&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l02447"/>02447 
<anchor xml:id="_queue_8c_source_1l02448"/>02448 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8h_1a88a02b37c486c38b8c4112e16dfed099">xQueueCRReceive</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueue,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pvBuffer,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait&#32;)
<anchor xml:id="_queue_8c_source_1l02449"/>02449 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02450"/>02450 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l02451"/>02451 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue&#32;=&#32;xQueue;
<anchor xml:id="_queue_8c_source_1l02452"/>02452 
<anchor xml:id="_queue_8c_source_1l02453"/>02453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;queue&#32;is&#32;already&#32;empty&#32;we&#32;may&#32;have&#32;to&#32;block.&#32;&#32;A&#32;critical&#32;section</emphasis>
<anchor xml:id="_queue_8c_source_1l02454"/>02454 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;required&#32;to&#32;prevent&#32;an&#32;interrupt&#32;adding&#32;something&#32;to&#32;the&#32;queue</emphasis>
<anchor xml:id="_queue_8c_source_1l02455"/>02455 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;between&#32;the&#32;check&#32;to&#32;see&#32;if&#32;the&#32;queue&#32;is&#32;empty&#32;and&#32;blocking&#32;on&#32;the&#32;queue.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02456"/>02456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a6e3d10ee1a0734a647ca192523c2cfc1">portDISABLE_INTERRUPTS</link>();
<anchor xml:id="_queue_8c_source_1l02457"/>02457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02458"/>02458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_queue_8c_source_1l02459"/>02459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02460"/>02460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;There&#32;are&#32;no&#32;messages&#32;in&#32;the&#32;queue,&#32;do&#32;we&#32;want&#32;to&#32;block&#32;or&#32;just</emphasis>
<anchor xml:id="_queue_8c_source_1l02461"/>02461 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;leave&#32;with&#32;nothing?&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02462"/>02462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xTicksToWait&#32;&gt;&#32;(&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_queue_8c_source_1l02463"/>02463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02464"/>02464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;As&#32;this&#32;is&#32;a&#32;co-routine&#32;we&#32;cannot&#32;block&#32;directly,&#32;but&#32;return</emphasis>
<anchor xml:id="_queue_8c_source_1l02465"/>02465 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;indicating&#32;that&#32;we&#32;need&#32;to&#32;block.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02466"/>02466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_croutine_8h_1a6b5b1c5857d38b79c96636754208e32d">vCoRoutineAddToDelayedList</link>(&#32;xTicksToWait,&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;);
<anchor xml:id="_queue_8c_source_1l02467"/>02467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1abc47e85a6befbb47961ad5ee7aa57173">portENABLE_INTERRUPTS</link>();
<anchor xml:id="_queue_8c_source_1l02468"/>02468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_projdefs_8h_1a4a7ca54ee5527cd7a14830956e05ea55">errQUEUE_BLOCKED</link>;
<anchor xml:id="_queue_8c_source_1l02469"/>02469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02470"/>02470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02471"/>02471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02472"/>02472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1abc47e85a6befbb47961ad5ee7aa57173">portENABLE_INTERRUPTS</link>();
<anchor xml:id="_queue_8c_source_1l02473"/>02473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_projdefs_8h_1ae40de11e4044a83a97d2cb5d00ce608b">errQUEUE_FULL</link>;
<anchor xml:id="_queue_8c_source_1l02474"/>02474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02475"/>02475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02476"/>02476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02477"/>02477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02478"/>02478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02479"/>02479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02480"/>02480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02481"/>02481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1abc47e85a6befbb47961ad5ee7aa57173">portENABLE_INTERRUPTS</link>();
<anchor xml:id="_queue_8c_source_1l02482"/>02482 
<anchor xml:id="_queue_8c_source_1l02483"/>02483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a6e3d10ee1a0734a647ca192523c2cfc1">portDISABLE_INTERRUPTS</link>();
<anchor xml:id="_queue_8c_source_1l02484"/>02484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02485"/>02485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>&#32;&gt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_queue_8c_source_1l02486"/>02486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02487"/>02487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Data&#32;is&#32;available&#32;from&#32;the&#32;queue.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02488"/>02488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1af381d02bbe6bc4a77934c6fd97598913">pcReadFrom</link>&#32;+=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">uxItemSize</link>;
<anchor xml:id="_queue_8c_source_1l02489"/>02489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1af381d02bbe6bc4a77934c6fd97598913">pcReadFrom</link>&#32;&gt;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1acbbdc8eb47b348a824c7bced41512a38">pcTail</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02490"/>02490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02491"/>02491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1af381d02bbe6bc4a77934c6fd97598913">pcReadFrom</link>&#32;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a487dc7e43b380c58212cba72bc33e0ed">pcHead</link>;
<anchor xml:id="_queue_8c_source_1l02492"/>02492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02493"/>02493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02494"/>02494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02495"/>02495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02496"/>02496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02497"/>02497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>&#32;);
<anchor xml:id="_queue_8c_source_1l02498"/>02498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;memcpy(&#32;(&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;)&#32;pvBuffer,&#32;(&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;)&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1af381d02bbe6bc4a77934c6fd97598913">pcReadFrom</link>,&#32;(&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;)&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">uxItemSize</link>&#32;);
<anchor xml:id="_queue_8c_source_1l02499"/>02499 
<anchor xml:id="_queue_8c_source_1l02500"/>02500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>;
<anchor xml:id="_queue_8c_source_1l02501"/>02501 
<anchor xml:id="_queue_8c_source_1l02502"/>02502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Were&#32;any&#32;co-routines&#32;waiting&#32;for&#32;space&#32;to&#32;become&#32;available?&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02503"/>02503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1aaba6eb05d67ebc8026bea29193eca28f">listLIST_IS_EMPTY</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1aaab135c4345cb0393d6ff3cd5164c7b2">xTasksWaitingToSend</link>&#32;)&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02504"/>02504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02505"/>02505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;In&#32;this&#32;instance&#32;the&#32;co-routine&#32;could&#32;be&#32;placed&#32;directly</emphasis>
<anchor xml:id="_queue_8c_source_1l02506"/>02506 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;into&#32;the&#32;ready&#32;list&#32;as&#32;we&#32;are&#32;within&#32;a&#32;critical&#32;section.</emphasis>
<anchor xml:id="_queue_8c_source_1l02507"/>02507 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Instead&#32;the&#32;same&#32;pending&#32;ready&#32;list&#32;mechanism&#32;is&#32;used&#32;as&#32;if</emphasis>
<anchor xml:id="_queue_8c_source_1l02508"/>02508 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;event&#32;were&#32;caused&#32;from&#32;within&#32;an&#32;interrupt.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02509"/>02509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_croutine_8h_1af2a96db518b18f5a7e1cd2fdf3c82873">xCoRoutineRemoveFromEventList</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1aaab135c4345cb0393d6ff3cd5164c7b2">xTasksWaitingToSend</link>&#32;)&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02510"/>02510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02511"/>02511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a3b2e2afaa2851576dfc2779a7fea59b4">errQUEUE_YIELD</link>;
<anchor xml:id="_queue_8c_source_1l02512"/>02512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02513"/>02513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02514"/>02514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02515"/>02515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02516"/>02516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02517"/>02517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02518"/>02518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02519"/>02519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02520"/>02520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02521"/>02521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02522"/>02522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02523"/>02523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02524"/>02524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02525"/>02525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6">pdFAIL</link>;
<anchor xml:id="_queue_8c_source_1l02526"/>02526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02527"/>02527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02528"/>02528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1abc47e85a6befbb47961ad5ee7aa57173">portENABLE_INTERRUPTS</link>();
<anchor xml:id="_queue_8c_source_1l02529"/>02529 
<anchor xml:id="_queue_8c_source_1l02530"/>02530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l02531"/>02531 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02532"/>02532 
<anchor xml:id="_queue_8c_source_1l02533"/>02533 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_CO_ROUTINES&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l02534"/>02534 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02535"/>02535 
<anchor xml:id="_queue_8c_source_1l02536"/>02536 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_CO_ROUTINES&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l02537"/>02537 
<anchor xml:id="_queue_8c_source_1l02538"/>02538 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8h_1a80af2aff3f472600a12dea0642fa8b27">xQueueCRSendFromISR</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueue,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pvItemToQueue,&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xCoRoutinePreviouslyWoken&#32;)
<anchor xml:id="_queue_8c_source_1l02539"/>02539 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02540"/>02540 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue&#32;=&#32;xQueue;
<anchor xml:id="_queue_8c_source_1l02541"/>02541 
<anchor xml:id="_queue_8c_source_1l02542"/>02542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Cannot&#32;block&#32;within&#32;an&#32;ISR&#32;so&#32;if&#32;there&#32;is&#32;no&#32;space&#32;on&#32;the&#32;queue&#32;then</emphasis>
<anchor xml:id="_queue_8c_source_1l02543"/>02543 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit&#32;without&#32;doing&#32;anything.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02544"/>02544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>&#32;&lt;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1ae80d17a812c669d4d41265b7f693988c">uxLength</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02545"/>02545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02546"/>02546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1ad1908d5f670f2b73216a5f1fc78917ae">prvCopyDataToQueue</link>(&#32;pxQueue,&#32;pvItemToQueue,&#32;<link linkend="_queue_8h_1a4d78fa863fbeb90425a2dda08fae8b12">queueSEND_TO_BACK</link>&#32;);
<anchor xml:id="_queue_8c_source_1l02547"/>02547 
<anchor xml:id="_queue_8c_source_1l02548"/>02548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;We&#32;only&#32;want&#32;to&#32;wake&#32;one&#32;co-routine&#32;per&#32;ISR,&#32;so&#32;check&#32;that&#32;a</emphasis>
<anchor xml:id="_queue_8c_source_1l02549"/>02549 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;co-routine&#32;has&#32;not&#32;already&#32;been&#32;woken.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02550"/>02550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xCoRoutinePreviouslyWoken&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02551"/>02551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02552"/>02552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1aaba6eb05d67ebc8026bea29193eca28f">listLIST_IS_EMPTY</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02553"/>02553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02554"/>02554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_croutine_8h_1af2a96db518b18f5a7e1cd2fdf3c82873">xCoRoutineRemoveFromEventList</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02555"/>02555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02556"/>02556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_queue_8c_source_1l02557"/>02557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02558"/>02558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02559"/>02559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02560"/>02560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02561"/>02561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02562"/>02562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02563"/>02563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02564"/>02564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02565"/>02565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02566"/>02566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02567"/>02567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02568"/>02568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02569"/>02569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02570"/>02570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02571"/>02571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02572"/>02572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02573"/>02573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02574"/>02574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02575"/>02575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02576"/>02576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02577"/>02577 
<anchor xml:id="_queue_8c_source_1l02578"/>02578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xCoRoutinePreviouslyWoken;
<anchor xml:id="_queue_8c_source_1l02579"/>02579 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02580"/>02580 
<anchor xml:id="_queue_8c_source_1l02581"/>02581 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_CO_ROUTINES&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l02582"/>02582 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02583"/>02583 
<anchor xml:id="_queue_8c_source_1l02584"/>02584 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_CO_ROUTINES&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l02585"/>02585 
<anchor xml:id="_queue_8c_source_1l02586"/>02586 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8h_1ad66b08c1d6a17efa8985605bf182b997">xQueueCRReceiveFromISR</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueue,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*pvBuffer,&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;*pxCoRoutineWoken&#32;)
<anchor xml:id="_queue_8c_source_1l02587"/>02587 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02588"/>02588 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l02589"/>02589 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue&#32;=&#32;xQueue;
<anchor xml:id="_queue_8c_source_1l02590"/>02590 
<anchor xml:id="_queue_8c_source_1l02591"/>02591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;We&#32;cannot&#32;block&#32;from&#32;an&#32;ISR,&#32;so&#32;check&#32;there&#32;is&#32;data&#32;available.&#32;If</emphasis>
<anchor xml:id="_queue_8c_source_1l02592"/>02592 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;not&#32;then&#32;just&#32;leave&#32;without&#32;doing&#32;anything.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02593"/>02593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>&#32;&gt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_queue_8c_source_1l02594"/>02594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02595"/>02595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Copy&#32;the&#32;data&#32;from&#32;the&#32;queue.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02596"/>02596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1af381d02bbe6bc4a77934c6fd97598913">pcReadFrom</link>&#32;+=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">uxItemSize</link>;
<anchor xml:id="_queue_8c_source_1l02597"/>02597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1af381d02bbe6bc4a77934c6fd97598913">pcReadFrom</link>&#32;&gt;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1acbbdc8eb47b348a824c7bced41512a38">pcTail</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02598"/>02598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02599"/>02599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1af381d02bbe6bc4a77934c6fd97598913">pcReadFrom</link>&#32;=&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a487dc7e43b380c58212cba72bc33e0ed">pcHead</link>;
<anchor xml:id="_queue_8c_source_1l02600"/>02600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02601"/>02601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02602"/>02602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02603"/>02603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02604"/>02604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02605"/>02605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>&#32;);
<anchor xml:id="_queue_8c_source_1l02606"/>02606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;memcpy(&#32;(&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;)&#32;pvBuffer,&#32;(&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;)&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a026466df9465a22741441e259aa985aa">u</link>.<link linkend="_struct_queue_definition_1aea4a2daf33054ff6b535f158bd4007f0">xQueue</link>.<link linkend="_struct_queue_pointers_1af381d02bbe6bc4a77934c6fd97598913">pcReadFrom</link>,&#32;(&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;)&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a81bb7d3826909244baa9debf5a55abb0">uxItemSize</link>&#32;);
<anchor xml:id="_queue_8c_source_1l02607"/>02607 
<anchor xml:id="_queue_8c_source_1l02608"/>02608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;*pxCoRoutineWoken&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02609"/>02609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02610"/>02610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1aaba6eb05d67ebc8026bea29193eca28f">listLIST_IS_EMPTY</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1aaab135c4345cb0393d6ff3cd5164c7b2">xTasksWaitingToSend</link>&#32;)&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02611"/>02611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02612"/>02612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_croutine_8h_1af2a96db518b18f5a7e1cd2fdf3c82873">xCoRoutineRemoveFromEventList</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1aaab135c4345cb0393d6ff3cd5164c7b2">xTasksWaitingToSend</link>&#32;)&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02613"/>02613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02614"/>02614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*pxCoRoutineWoken&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_queue_8c_source_1l02615"/>02615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02616"/>02616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02617"/>02617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02618"/>02618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02619"/>02619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02620"/>02620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02621"/>02621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02622"/>02622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02623"/>02623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02624"/>02624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02625"/>02625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02626"/>02626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02627"/>02627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02628"/>02628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02629"/>02629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02630"/>02630 
<anchor xml:id="_queue_8c_source_1l02631"/>02631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>;
<anchor xml:id="_queue_8c_source_1l02632"/>02632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02633"/>02633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02634"/>02634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02635"/>02635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6">pdFAIL</link>;
<anchor xml:id="_queue_8c_source_1l02636"/>02636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02637"/>02637 
<anchor xml:id="_queue_8c_source_1l02638"/>02638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l02639"/>02639 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02640"/>02640 
<anchor xml:id="_queue_8c_source_1l02641"/>02641 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_CO_ROUTINES&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l02642"/>02642 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02643"/>02643 
<anchor xml:id="_queue_8c_source_1l02644"/>02644 <emphasis role="preprocessor">#if&#32;(&#32;configQUEUE_REGISTRY_SIZE&#32;&gt;&#32;0&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l02645"/>02645 
<anchor xml:id="_queue_8c_source_1l02646"/><link linkend="_queue_8c_1a1d5e2402c801e7a0ab079f6944b97f93">02646</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_queue_8c_1a1d5e2402c801e7a0ab079f6944b97f93">vQueueAddToRegistry</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueue,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*pcQueueName&#32;)&#32;<emphasis role="comment">/*lint&#32;!e971&#32;Unqualified&#32;char&#32;types&#32;are&#32;allowed&#32;for&#32;strings&#32;and&#32;single&#32;characters&#32;only.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02647"/>02647 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02648"/>02648 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;ux;
<anchor xml:id="_queue_8c_source_1l02649"/>02649 
<anchor xml:id="_queue_8c_source_1l02650"/>02650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;See&#32;if&#32;there&#32;is&#32;an&#32;empty&#32;space&#32;in&#32;the&#32;registry.&#32;&#32;A&#32;NULL&#32;name&#32;denotes</emphasis>
<anchor xml:id="_queue_8c_source_1l02651"/>02651 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;free&#32;slot.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02652"/>02652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;ux&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0U;&#32;ux&#32;&lt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="__free_r_t_o_s_config__default_8h_1aa4b5138c4e42a180f0abd4f2455f90fb">configQUEUE_REGISTRY_SIZE</link>;&#32;ux++&#32;)
<anchor xml:id="_queue_8c_source_1l02653"/>02653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02654"/>02654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_queue_8c_1aa255957b515c8fac6c33f319c3a3a2d5">xQueueRegistry</link>[&#32;ux&#32;].pcQueueName&#32;==&#32;NULL&#32;)
<anchor xml:id="_queue_8c_source_1l02655"/>02655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02656"/>02656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Store&#32;the&#32;information&#32;on&#32;this&#32;queue.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02657"/>02657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1aa255957b515c8fac6c33f319c3a3a2d5">xQueueRegistry</link>[&#32;ux&#32;].<link linkend="_struct_q_u_e_u_e___r_e_g_i_s_t_r_y___i_t_e_m_1a64376eea9c34ac70260a9d93d004d251">pcQueueName</link>&#32;=&#32;pcQueueName;
<anchor xml:id="_queue_8c_source_1l02658"/>02658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1aa255957b515c8fac6c33f319c3a3a2d5">xQueueRegistry</link>[&#32;ux&#32;].<link linkend="_struct_q_u_e_u_e___r_e_g_i_s_t_r_y___i_t_e_m_1a51903f689487faaa7c9e9580e3134aa7">xHandle</link>&#32;=&#32;xQueue;
<anchor xml:id="_queue_8c_source_1l02659"/>02659 
<anchor xml:id="_queue_8c_source_1l02660"/>02660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a2f326b01ad82a3ab14cc9fc4b3abd6b8">traceQUEUE_REGISTRY_ADD</link>(&#32;xQueue,&#32;pcQueueName&#32;);
<anchor xml:id="_queue_8c_source_1l02661"/>02661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_queue_8c_source_1l02662"/>02662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02663"/>02663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02664"/>02664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02665"/>02665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02666"/>02666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02667"/>02667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02668"/>02668 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02669"/>02669 
<anchor xml:id="_queue_8c_source_1l02670"/>02670 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configQUEUE_REGISTRY_SIZE&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l02671"/>02671 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02672"/>02672 
<anchor xml:id="_queue_8c_source_1l02673"/>02673 <emphasis role="preprocessor">#if&#32;(&#32;configQUEUE_REGISTRY_SIZE&#32;&gt;&#32;0&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l02674"/>02674 
<anchor xml:id="_queue_8c_source_1l02675"/><link linkend="_queue_8c_1a6cd1431e6d0f46927d6260d49f0d6df3">02675</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_queue_8c_1a6cd1431e6d0f46927d6260d49f0d6df3">pcQueueGetName</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueue&#32;)&#32;<emphasis role="comment">/*lint&#32;!e971&#32;Unqualified&#32;char&#32;types&#32;are&#32;allowed&#32;for&#32;strings&#32;and&#32;single&#32;characters&#32;only.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02676"/>02676 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02677"/>02677 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;ux;
<anchor xml:id="_queue_8c_source_1l02678"/>02678 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*pcReturn&#32;=&#32;NULL;&#32;<emphasis role="comment">/*lint&#32;!e971&#32;Unqualified&#32;char&#32;types&#32;are&#32;allowed&#32;for&#32;strings&#32;and&#32;single&#32;characters&#32;only.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02679"/>02679 
<anchor xml:id="_queue_8c_source_1l02680"/>02680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Note&#32;there&#32;is&#32;nothing&#32;here&#32;to&#32;protect&#32;against&#32;another&#32;task&#32;adding&#32;or</emphasis>
<anchor xml:id="_queue_8c_source_1l02681"/>02681 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;removing&#32;entries&#32;from&#32;the&#32;registry&#32;while&#32;it&#32;is&#32;being&#32;searched.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02682"/>02682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;ux&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0U;&#32;ux&#32;&lt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="__free_r_t_o_s_config__default_8h_1aa4b5138c4e42a180f0abd4f2455f90fb">configQUEUE_REGISTRY_SIZE</link>;&#32;ux++&#32;)
<anchor xml:id="_queue_8c_source_1l02683"/>02683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02684"/>02684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_queue_8c_1aa255957b515c8fac6c33f319c3a3a2d5">xQueueRegistry</link>[&#32;ux&#32;].xHandle&#32;==&#32;xQueue&#32;)
<anchor xml:id="_queue_8c_source_1l02685"/>02685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02686"/>02686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pcReturn&#32;=&#32;<link linkend="_queue_8c_1aa255957b515c8fac6c33f319c3a3a2d5">xQueueRegistry</link>[&#32;ux&#32;].<link linkend="_struct_q_u_e_u_e___r_e_g_i_s_t_r_y___i_t_e_m_1a64376eea9c34ac70260a9d93d004d251">pcQueueName</link>;
<anchor xml:id="_queue_8c_source_1l02687"/>02687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_queue_8c_source_1l02688"/>02688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02689"/>02689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02690"/>02690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02691"/>02691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02692"/>02692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02693"/>02693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02694"/>02694 
<anchor xml:id="_queue_8c_source_1l02695"/>02695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pcReturn;
<anchor xml:id="_queue_8c_source_1l02696"/>02696 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">/*lint&#32;!e818&#32;xQueue&#32;cannot&#32;be&#32;a&#32;pointer&#32;to&#32;const&#32;because&#32;it&#32;is&#32;a&#32;typedef.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02697"/>02697 
<anchor xml:id="_queue_8c_source_1l02698"/>02698 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configQUEUE_REGISTRY_SIZE&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l02699"/>02699 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02700"/>02700 
<anchor xml:id="_queue_8c_source_1l02701"/>02701 <emphasis role="preprocessor">#if&#32;(&#32;configQUEUE_REGISTRY_SIZE&#32;&gt;&#32;0&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l02702"/>02702 
<anchor xml:id="_queue_8c_source_1l02703"/><link linkend="_queue_8c_1ac695c7cde3c32b32a1db4689239603ed">02703</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_queue_8c_1ac695c7cde3c32b32a1db4689239603ed">vQueueUnregisterQueue</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueue&#32;)
<anchor xml:id="_queue_8c_source_1l02704"/>02704 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02705"/>02705 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;ux;
<anchor xml:id="_queue_8c_source_1l02706"/>02706 
<anchor xml:id="_queue_8c_source_1l02707"/>02707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;See&#32;if&#32;the&#32;handle&#32;of&#32;the&#32;queue&#32;being&#32;unregistered&#32;in&#32;actually&#32;in&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l02708"/>02708 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;registry.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02709"/>02709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;ux&#32;=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0U;&#32;ux&#32;&lt;&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<link linkend="__free_r_t_o_s_config__default_8h_1aa4b5138c4e42a180f0abd4f2455f90fb">configQUEUE_REGISTRY_SIZE</link>;&#32;ux++&#32;)
<anchor xml:id="_queue_8c_source_1l02710"/>02710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02711"/>02711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_queue_8c_1aa255957b515c8fac6c33f319c3a3a2d5">xQueueRegistry</link>[&#32;ux&#32;].xHandle&#32;==&#32;xQueue&#32;)
<anchor xml:id="_queue_8c_source_1l02712"/>02712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02713"/>02713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Set&#32;the&#32;name&#32;to&#32;NULL&#32;to&#32;show&#32;that&#32;this&#32;slot&#32;if&#32;free&#32;again.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02714"/>02714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1aa255957b515c8fac6c33f319c3a3a2d5">xQueueRegistry</link>[&#32;ux&#32;].<link linkend="_struct_q_u_e_u_e___r_e_g_i_s_t_r_y___i_t_e_m_1a64376eea9c34ac70260a9d93d004d251">pcQueueName</link>&#32;=&#32;NULL;
<anchor xml:id="_queue_8c_source_1l02715"/>02715 
<anchor xml:id="_queue_8c_source_1l02716"/>02716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Set&#32;the&#32;handle&#32;to&#32;NULL&#32;to&#32;ensure&#32;the&#32;same&#32;queue&#32;handle&#32;cannot</emphasis>
<anchor xml:id="_queue_8c_source_1l02717"/>02717 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;appear&#32;in&#32;the&#32;registry&#32;twice&#32;if&#32;it&#32;is&#32;added,&#32;removed,&#32;then</emphasis>
<anchor xml:id="_queue_8c_source_1l02718"/>02718 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;added&#32;again.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02719"/>02719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1aa255957b515c8fac6c33f319c3a3a2d5">xQueueRegistry</link>[&#32;ux&#32;].<link linkend="_struct_q_u_e_u_e___r_e_g_i_s_t_r_y___i_t_e_m_1a51903f689487faaa7c9e9580e3134aa7">xHandle</link>&#32;=&#32;(&#32;<link linkend="_queue_8h_1a57349603001f8ddf51c888c49e2804d7">QueueHandle_t</link>&#32;)&#32;0;
<anchor xml:id="_queue_8c_source_1l02720"/>02720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_queue_8c_source_1l02721"/>02721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02722"/>02722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02723"/>02723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02724"/>02724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02725"/>02725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02726"/>02726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02727"/>02727 
<anchor xml:id="_queue_8c_source_1l02728"/>02728 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">/*lint&#32;!e818&#32;xQueue&#32;could&#32;not&#32;be&#32;pointer&#32;to&#32;const&#32;because&#32;it&#32;is&#32;a&#32;typedef.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02729"/>02729 
<anchor xml:id="_queue_8c_source_1l02730"/>02730 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configQUEUE_REGISTRY_SIZE&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l02731"/>02731 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02732"/>02732 
<anchor xml:id="_queue_8c_source_1l02733"/>02733 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_TIMERS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l02734"/>02734 
<anchor xml:id="_queue_8c_source_1l02735"/><link linkend="_queue_8c_1a26b1fd7901888337b760adeb8a2a3faa">02735</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_queue_8c_1a26b1fd7901888337b760adeb8a2a3faa">vQueueWaitForMessageRestricted</link>(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;xQueue,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;xTicksToWait,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xWaitIndefinitely&#32;)
<anchor xml:id="_queue_8c_source_1l02736"/>02736 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02737"/>02737 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue&#32;=&#32;xQueue;
<anchor xml:id="_queue_8c_source_1l02738"/>02738 
<anchor xml:id="_queue_8c_source_1l02739"/>02739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;function&#32;should&#32;not&#32;be&#32;called&#32;by&#32;application&#32;code&#32;hence&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l02740"/>02740 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&apos;Restricted&apos;&#32;in&#32;its&#32;name.&#32;&#32;It&#32;is&#32;not&#32;part&#32;of&#32;the&#32;public&#32;API.&#32;&#32;It&#32;is</emphasis>
<anchor xml:id="_queue_8c_source_1l02741"/>02741 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;designed&#32;for&#32;use&#32;by&#32;kernel&#32;code,&#32;and&#32;has&#32;special&#32;calling&#32;requirements.</emphasis>
<anchor xml:id="_queue_8c_source_1l02742"/>02742 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;It&#32;can&#32;result&#32;in&#32;vListInsert()&#32;being&#32;called&#32;on&#32;a&#32;list&#32;that&#32;can&#32;only</emphasis>
<anchor xml:id="_queue_8c_source_1l02743"/>02743 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;possibly&#32;ever&#32;have&#32;one&#32;item&#32;in&#32;it,&#32;so&#32;the&#32;list&#32;will&#32;be&#32;fast,&#32;but&#32;even</emphasis>
<anchor xml:id="_queue_8c_source_1l02744"/>02744 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;so&#32;it&#32;should&#32;be&#32;called&#32;with&#32;the&#32;scheduler&#32;locked&#32;and&#32;not&#32;from&#32;a&#32;critical</emphasis>
<anchor xml:id="_queue_8c_source_1l02745"/>02745 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;section.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02746"/>02746 
<anchor xml:id="_queue_8c_source_1l02747"/>02747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Only&#32;do&#32;anything&#32;if&#32;there&#32;are&#32;no&#32;messages&#32;in&#32;the&#32;queue.&#32;&#32;This&#32;function</emphasis>
<anchor xml:id="_queue_8c_source_1l02748"/>02748 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;will&#32;not&#32;actually&#32;cause&#32;the&#32;task&#32;to&#32;block,&#32;just&#32;place&#32;it&#32;on&#32;a&#32;blocked</emphasis>
<anchor xml:id="_queue_8c_source_1l02749"/>02749 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;list.&#32;&#32;It&#32;will&#32;not&#32;block&#32;until&#32;the&#32;scheduler&#32;is&#32;unlocked&#32;-&#32;at&#32;which</emphasis>
<anchor xml:id="_queue_8c_source_1l02750"/>02750 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;time&#32;a&#32;yield&#32;will&#32;be&#32;performed.&#32;&#32;If&#32;an&#32;item&#32;is&#32;added&#32;to&#32;the&#32;queue&#32;while</emphasis>
<anchor xml:id="_queue_8c_source_1l02751"/>02751 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;queue&#32;is&#32;locked,&#32;and&#32;the&#32;calling&#32;task&#32;blocks&#32;on&#32;the&#32;queue,&#32;then&#32;the</emphasis>
<anchor xml:id="_queue_8c_source_1l02752"/>02752 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;calling&#32;task&#32;will&#32;be&#32;immediately&#32;unblocked&#32;when&#32;the&#32;queue&#32;is&#32;unlocked.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02753"/>02753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1ae4efd14c0f4dee7f189ef2e4d9ce1f1b">prvLockQueue</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l02754"/>02754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>&#32;==&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0U&#32;)
<anchor xml:id="_queue_8c_source_1l02755"/>02755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02756"/>02756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;There&#32;is&#32;nothing&#32;in&#32;the&#32;queue,&#32;block&#32;for&#32;the&#32;specified&#32;period.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02757"/>02757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ada3eb00e16241f5b648184a406a6a6fd">vTaskPlaceOnEventListRestricted</link>(&#32;&amp;(&#32;pxQueue-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;),&#32;xTicksToWait,&#32;xWaitIndefinitely&#32;);
<anchor xml:id="_queue_8c_source_1l02758"/>02758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02759"/>02759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02760"/>02760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02761"/>02761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02762"/>02762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02763"/>02763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_queue_8c_1aafc5447bec23cc93aa61911b140273ee">prvUnlockQueue</link>(&#32;pxQueue&#32;);
<anchor xml:id="_queue_8c_source_1l02764"/>02764 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02765"/>02765 
<anchor xml:id="_queue_8c_source_1l02766"/>02766 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_TIMERS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l02767"/>02767 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02768"/>02768 
<anchor xml:id="_queue_8c_source_1l02769"/>02769 <emphasis role="preprocessor">#if(&#32;(&#32;configUSE_QUEUE_SETS&#32;==&#32;1&#32;)&#32;&amp;&amp;&#32;(&#32;configSUPPORT_DYNAMIC_ALLOCATION&#32;==&#32;1&#32;)&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l02770"/>02770 
<anchor xml:id="_queue_8c_source_1l02771"/>02771 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">QueueSetHandle_t</link>&#32;<link linkend="_queue_8h_1ad4208ad97f737af942a13e64b45e83e8">xQueueCreateSet</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;uxEventQueueLength&#32;)
<anchor xml:id="_queue_8c_source_1l02772"/>02772 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02773"/>02773 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">QueueSetHandle_t</link>&#32;pxQueue;
<anchor xml:id="_queue_8c_source_1l02774"/>02774 
<anchor xml:id="_queue_8c_source_1l02775"/>02775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueue&#32;=&#32;<link linkend="_queue_8c_1ac999cdfbb09fff396fa818bb9a30b4e5">xQueueGenericCreate</link>(&#32;uxEventQueueLength,&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;),&#32;<link linkend="_queue_8h_1a9b8e1b1d5d9952bd0121ae71cf3aba8d">queueQUEUE_TYPE_SET</link>&#32;);
<anchor xml:id="_queue_8c_source_1l02776"/>02776 
<anchor xml:id="_queue_8c_source_1l02777"/>02777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;pxQueue;
<anchor xml:id="_queue_8c_source_1l02778"/>02778 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02779"/>02779 
<anchor xml:id="_queue_8c_source_1l02780"/>02780 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_QUEUE_SETS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l02781"/>02781 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02782"/>02782 
<anchor xml:id="_queue_8c_source_1l02783"/>02783 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_QUEUE_SETS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l02784"/>02784 
<anchor xml:id="_queue_8c_source_1l02785"/>02785 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8h_1ae07b563e6bbe42a977f7c46853aa11eb">xQueueAddToSet</link>(&#32;<link linkend="_struct_queue_definition">QueueSetMemberHandle_t</link>&#32;xQueueOrSemaphore,&#32;<link linkend="_struct_queue_definition">QueueSetHandle_t</link>&#32;xQueueSet&#32;)
<anchor xml:id="_queue_8c_source_1l02786"/>02786 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02787"/>02787 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l02788"/>02788 
<anchor xml:id="_queue_8c_source_1l02789"/>02789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l02790"/>02790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02791"/>02791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;)&#32;xQueueOrSemaphore&#32;)-&gt;pxQueueSetContainer&#32;!=&#32;NULL&#32;)
<anchor xml:id="_queue_8c_source_1l02792"/>02792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02793"/>02793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Cannot&#32;add&#32;a&#32;queue/semaphore&#32;to&#32;more&#32;than&#32;one&#32;queue&#32;set.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02794"/>02794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6">pdFAIL</link>;
<anchor xml:id="_queue_8c_source_1l02795"/>02795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02796"/>02796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;)&#32;xQueueOrSemaphore&#32;)-&gt;uxMessagesWaiting&#32;!=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_queue_8c_source_1l02797"/>02797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02798"/>02798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Cannot&#32;add&#32;a&#32;queue/semaphore&#32;to&#32;a&#32;queue&#32;set&#32;if&#32;there&#32;are&#32;already</emphasis>
<anchor xml:id="_queue_8c_source_1l02799"/>02799 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;items&#32;in&#32;the&#32;queue/semaphore.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02800"/>02800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6">pdFAIL</link>;
<anchor xml:id="_queue_8c_source_1l02801"/>02801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02802"/>02802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02803"/>02803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02804"/>02804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;)&#32;xQueueOrSemaphore&#32;)-&gt;pxQueueSetContainer&#32;=&#32;xQueueSet;
<anchor xml:id="_queue_8c_source_1l02805"/>02805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>;
<anchor xml:id="_queue_8c_source_1l02806"/>02806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02807"/>02807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02808"/>02808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l02809"/>02809 
<anchor xml:id="_queue_8c_source_1l02810"/>02810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l02811"/>02811 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02812"/>02812 
<anchor xml:id="_queue_8c_source_1l02813"/>02813 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_QUEUE_SETS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l02814"/>02814 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02815"/>02815 
<anchor xml:id="_queue_8c_source_1l02816"/>02816 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_QUEUE_SETS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l02817"/>02817 
<anchor xml:id="_queue_8c_source_1l02818"/>02818 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;<link linkend="_queue_8h_1ab16fdd17b9b6d74a82c8366f47cda162">xQueueRemoveFromSet</link>(&#32;<link linkend="_struct_queue_definition">QueueSetMemberHandle_t</link>&#32;xQueueOrSemaphore,&#32;<link linkend="_struct_queue_definition">QueueSetHandle_t</link>&#32;xQueueSet&#32;)
<anchor xml:id="_queue_8c_source_1l02819"/>02819 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02820"/>02820 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l02821"/>02821 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueueOrSemaphore&#32;=&#32;(&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;)&#32;xQueueOrSemaphore;
<anchor xml:id="_queue_8c_source_1l02822"/>02822 
<anchor xml:id="_queue_8c_source_1l02823"/>02823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueueOrSemaphore-&gt;pxQueueSetContainer&#32;!=&#32;xQueueSet&#32;)
<anchor xml:id="_queue_8c_source_1l02824"/>02824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02825"/>02825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;queue&#32;was&#32;not&#32;a&#32;member&#32;of&#32;the&#32;set.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02826"/>02826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6">pdFAIL</link>;
<anchor xml:id="_queue_8c_source_1l02827"/>02827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02828"/>02828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueueOrSemaphore-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>&#32;!=&#32;(&#32;<link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link>&#32;)&#32;0&#32;)
<anchor xml:id="_queue_8c_source_1l02829"/>02829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02830"/>02830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;It&#32;is&#32;dangerous&#32;to&#32;remove&#32;a&#32;queue&#32;from&#32;a&#32;set&#32;when&#32;the&#32;queue&#32;is</emphasis>
<anchor xml:id="_queue_8c_source_1l02831"/>02831 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;not&#32;empty&#32;because&#32;the&#32;queue&#32;set&#32;will&#32;still&#32;hold&#32;pending&#32;events&#32;for</emphasis>
<anchor xml:id="_queue_8c_source_1l02832"/>02832 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;the&#32;queue.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02833"/>02833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a99e2866c8cf4fe86db87dab62e7d6aa6">pdFAIL</link>;
<anchor xml:id="_queue_8c_source_1l02834"/>02834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02835"/>02835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02836"/>02836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02837"/>02837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1ab7bf0ae866292ba8296091a9d5209689">taskENTER_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l02838"/>02838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02839"/>02839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;queue&#32;is&#32;no&#32;longer&#32;contained&#32;in&#32;the&#32;set.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02840"/>02840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueueOrSemaphore-&gt;pxQueueSetContainer&#32;=&#32;NULL;
<anchor xml:id="_queue_8c_source_1l02841"/>02841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02842"/>02842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_task_8h_1aac8f36abc45ac4ee714bd6b81e3b1643">taskEXIT_CRITICAL</link>();
<anchor xml:id="_queue_8c_source_1l02843"/>02843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1a07848d3078849bd32353c69d30a479b3">pdPASS</link>;
<anchor xml:id="_queue_8c_source_1l02844"/>02844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02845"/>02845 
<anchor xml:id="_queue_8c_source_1l02846"/>02846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l02847"/>02847 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">/*lint&#32;!e818&#32;xQueueSet&#32;could&#32;not&#32;be&#32;declared&#32;as&#32;pointing&#32;to&#32;const&#32;as&#32;it&#32;is&#32;a&#32;typedef.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02848"/>02848 
<anchor xml:id="_queue_8c_source_1l02849"/>02849 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_QUEUE_SETS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l02850"/>02850 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02851"/>02851 
<anchor xml:id="_queue_8c_source_1l02852"/>02852 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_QUEUE_SETS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l02853"/>02853 
<anchor xml:id="_queue_8c_source_1l02854"/>02854 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">QueueSetMemberHandle_t</link>&#32;<link linkend="_queue_8h_1a71f56e6277ed4e419c707c8d0c785065">xQueueSelectFromSet</link>(&#32;<link linkend="_struct_queue_definition">QueueSetHandle_t</link>&#32;xQueueSet,&#32;<link linkend="_portmacro_8h_1aa69c48c6e902ce54f70886e6573c92a9">TickType_t</link>&#32;<emphasis role="keyword">const</emphasis>&#32;xTicksToWait&#32;)
<anchor xml:id="_queue_8c_source_1l02855"/>02855 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02856"/>02856 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">QueueSetMemberHandle_t</link>&#32;xReturn&#32;=&#32;NULL;
<anchor xml:id="_queue_8c_source_1l02857"/>02857 
<anchor xml:id="_queue_8c_source_1l02858"/>02858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_queue_8c_1ad0a166f3b1219a5e37e31f8090d4800d">xQueueReceive</link>(&#32;(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;)&#32;xQueueSet,&#32;&amp;xReturn,&#32;xTicksToWait&#32;);&#32;<emphasis role="comment">/*lint&#32;!e961&#32;Casting&#32;from&#32;one&#32;typedef&#32;to&#32;another&#32;is&#32;not&#32;redundant.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02859"/>02859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l02860"/>02860 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02861"/>02861 
<anchor xml:id="_queue_8c_source_1l02862"/>02862 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_QUEUE_SETS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l02863"/>02863 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02864"/>02864 
<anchor xml:id="_queue_8c_source_1l02865"/>02865 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_QUEUE_SETS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l02866"/>02866 
<anchor xml:id="_queue_8c_source_1l02867"/>02867 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">QueueSetMemberHandle_t</link>&#32;<link linkend="_queue_8h_1ac58b34fd733cf460cddab1abb9a899b3">xQueueSelectFromSetFromISR</link>(&#32;<link linkend="_struct_queue_definition">QueueSetHandle_t</link>&#32;xQueueSet&#32;)
<anchor xml:id="_queue_8c_source_1l02868"/>02868 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02869"/>02869 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">QueueSetMemberHandle_t</link>&#32;xReturn&#32;=&#32;NULL;
<anchor xml:id="_queue_8c_source_1l02870"/>02870 
<anchor xml:id="_queue_8c_source_1l02871"/>02871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;void&#32;)&#32;<link linkend="_queue_8c_1ac61ec62828e70ed35d18559a35550462">xQueueReceiveFromISR</link>(&#32;(&#32;<link linkend="_struct_queue_definition">QueueHandle_t</link>&#32;)&#32;xQueueSet,&#32;&amp;xReturn,&#32;NULL&#32;);&#32;<emphasis role="comment">/*lint&#32;!e961&#32;Casting&#32;from&#32;one&#32;typedef&#32;to&#32;another&#32;is&#32;not&#32;redundant.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02872"/>02872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l02873"/>02873 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02874"/>02874 
<anchor xml:id="_queue_8c_source_1l02875"/>02875 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_QUEUE_SETS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l02876"/>02876 <emphasis role="comment">/*-----------------------------------------------------------*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02877"/>02877 
<anchor xml:id="_queue_8c_source_1l02878"/>02878 <emphasis role="preprocessor">#if&#32;(&#32;configUSE_QUEUE_SETS&#32;==&#32;1&#32;)</emphasis>
<anchor xml:id="_queue_8c_source_1l02879"/>02879 
<anchor xml:id="_queue_8c_source_1l02880"/>02880 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;prvNotifyQueueSetContainer(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxQueue,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xCopyPosition&#32;)
<anchor xml:id="_queue_8c_source_1l02881"/>02881 &#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02882"/>02882 &#32;&#32;&#32;&#32;<link linkend="_struct_queue_definition">Queue_t</link>&#32;*pxQueueSetContainer&#32;=&#32;pxQueue-&gt;pxQueueSetContainer;
<anchor xml:id="_queue_8c_source_1l02883"/>02883 &#32;&#32;&#32;&#32;<link linkend="_portmacro_8h_1a46fb21e00ae0729d7515c0fbf2269796">BaseType_t</link>&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>;
<anchor xml:id="_queue_8c_source_1l02884"/>02884 
<anchor xml:id="_queue_8c_source_1l02885"/>02885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;This&#32;function&#32;must&#32;be&#32;called&#32;form&#32;a&#32;critical&#32;section.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02886"/>02886 
<anchor xml:id="_queue_8c_source_1l02887"/>02887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxQueueSetContainer&#32;);
<anchor xml:id="_queue_8c_source_1l02888"/>02888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a228c70cd48927d6ab730ed1a6dfbe35f">configASSERT</link>(&#32;pxQueueSetContainer-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>&#32;&lt;&#32;pxQueueSetContainer-&gt;<link linkend="_struct_queue_definition_1ae80d17a812c669d4d41265b7f693988c">uxLength</link>&#32;);
<anchor xml:id="_queue_8c_source_1l02889"/>02889 
<anchor xml:id="_queue_8c_source_1l02890"/>02890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pxQueueSetContainer-&gt;<link linkend="_struct_queue_definition_1a12b07a40152d0f21488ca06d362d13d1">uxMessagesWaiting</link>&#32;&lt;&#32;pxQueueSetContainer-&gt;<link linkend="_struct_queue_definition_1ae80d17a812c669d4d41265b7f693988c">uxLength</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02891"/>02891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02892"/>02892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;int8_t&#32;cTxLock&#32;=&#32;pxQueueSetContainer-&gt;<link linkend="_struct_queue_definition_1a24ac3f0707f098da2a22244d843fcf82">cTxLock</link>;
<anchor xml:id="_queue_8c_source_1l02893"/>02893 
<anchor xml:id="_queue_8c_source_1l02894"/>02894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1a5cfc9dd899c89966172cb329740f551a">traceQUEUE_SEND</link>(&#32;pxQueueSetContainer&#32;);
<anchor xml:id="_queue_8c_source_1l02895"/>02895 
<anchor xml:id="_queue_8c_source_1l02896"/>02896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;data&#32;copied&#32;is&#32;the&#32;handle&#32;of&#32;the&#32;queue&#32;that&#32;contains&#32;data.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02897"/>02897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_queue_8c_1ad1908d5f670f2b73216a5f1fc78917ae">prvCopyDataToQueue</link>(&#32;pxQueueSetContainer,&#32;&amp;pxQueue,&#32;xCopyPosition&#32;);
<anchor xml:id="_queue_8c_source_1l02898"/>02898 
<anchor xml:id="_queue_8c_source_1l02899"/>02899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;cTxLock&#32;==&#32;<link linkend="_queue_8c_1acdb781ba6b38714cf41f7417de8fe6bf">queueUNLOCKED</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02900"/>02900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02901"/>02901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_list_8h_1aaba6eb05d67ebc8026bea29193eca28f">listLIST_IS_EMPTY</link>(&#32;&amp;(&#32;pxQueueSetContainer-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;)&#32;==&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02902"/>02902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02903"/>02903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_task_8h_1a14513b7dd36055f73fba3c5ebbdc1b06">xTaskRemoveFromEventList</link>(&#32;&amp;(&#32;pxQueueSetContainer-&gt;<link linkend="_struct_queue_definition_1af6d61526f77beee659cd604a0c473359">xTasksWaitingToReceive</link>&#32;)&#32;)&#32;!=&#32;<link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link>&#32;)
<anchor xml:id="_queue_8c_source_1l02904"/>02904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02905"/>02905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;task&#32;waiting&#32;has&#32;a&#32;higher&#32;priority.&#32;*/</emphasis>
<anchor xml:id="_queue_8c_source_1l02906"/>02906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xReturn&#32;=&#32;<link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link>;
<anchor xml:id="_queue_8c_source_1l02907"/>02907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02908"/>02908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02909"/>02909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02910"/>02910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02911"/>02911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02912"/>02912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02913"/>02913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02914"/>02914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02915"/>02915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02916"/>02916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02917"/>02917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02918"/>02918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02919"/>02919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02920"/>02920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pxQueueSetContainer-&gt;<link linkend="_struct_queue_definition_1a24ac3f0707f098da2a22244d843fcf82">cTxLock</link>&#32;=&#32;(&#32;int8_t&#32;)&#32;(&#32;cTxLock&#32;+&#32;1&#32;);
<anchor xml:id="_queue_8c_source_1l02921"/>02921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02922"/>02922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02923"/>02923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_queue_8c_source_1l02924"/>02924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_queue_8c_source_1l02925"/>02925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__free_r_t_o_s_8h_1ac77e2af1a6b0d38fbab36cf2aa96f1a8">mtCOVERAGE_TEST_MARKER</link>();
<anchor xml:id="_queue_8c_source_1l02926"/>02926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02927"/>02927 
<anchor xml:id="_queue_8c_source_1l02928"/>02928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xReturn;
<anchor xml:id="_queue_8c_source_1l02929"/>02929 &#32;&#32;&#32;&#32;}
<anchor xml:id="_queue_8c_source_1l02930"/>02930 
<anchor xml:id="_queue_8c_source_1l02931"/>02931 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;configUSE_QUEUE_SETS&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_queue_8c_source_1l02932"/>02932 
<anchor xml:id="_queue_8c_source_1l02933"/>02933 
<anchor xml:id="_queue_8c_source_1l02934"/>02934 
<anchor xml:id="_queue_8c_source_1l02935"/>02935 
<anchor xml:id="_queue_8c_source_1l02936"/>02936 
<anchor xml:id="_queue_8c_source_1l02937"/>02937 
<anchor xml:id="_queue_8c_source_1l02938"/>02938 
<anchor xml:id="_queue_8c_source_1l02939"/>02939 
<anchor xml:id="_queue_8c_source_1l02940"/>02940 
<anchor xml:id="_queue_8c_source_1l02941"/>02941 
<anchor xml:id="_queue_8c_source_1l02942"/>02942 
<anchor xml:id="_queue_8c_source_1l02943"/>02943 
</programlisting></section>
