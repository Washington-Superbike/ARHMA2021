<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__c_a_n_8ino" xml:lang="en-US">
<title>CAN.ino File Reference</title>
<indexterm><primary>CAN.ino</primary></indexterm>
<para>

<para>The <link linkend="__c_a_n_8ino">CAN.ino</link> file operates the CAN bus for the bike&apos;s firmware. This updates all the variables in the <link linkend="__c_a_n_8h">CAN.h</link> file using the various helper methods. Really simple. Just reads in the message using the CAN bus and then updates them according to the values derived from the datasheets. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &quot;CAN.h&quot;
#include &quot;FreeRTOS_TEENSY4.h&quot;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="__c_a_n_8ino_1a785e095da30ce4993a186804102bf2ea">canTask</link> (void *canData)</para>
</listitem>
            <listitem><para>void <link linkend="__c_a_n_8ino_1a833ae6516ecb5cb3f8a7bd5adbf2bd9b">setupCAN</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="__c_a_n_8ino_1acc8ad6a9a2388c904e5c2a81e263c59d">decipherEVCCStats</link> (CAN_message_t msg, <link linkend="_struct_charge_controller_stats">ChargeControllerStats</link> evccStats)</para>
</listitem>
            <listitem><para>void <link linkend="__c_a_n_8ino_1a3e5ce0cee4895bc07047a515ac2fa8ea">decipherChargerStats</link> (CAN_message_t msg, <link linkend="_struct_charger_stats">ChargerStats</link> <link linkend="__main_8h_1aa249f1d073086c27682168bbd7dc77ee">chargerStats</link>)</para>
</listitem>
            <listitem><para>void <link linkend="__c_a_n_8ino_1abd98b0e43fb7330bf8964d8da390810f">decodeMotorStats</link> (CAN_message_t msg, <link linkend="_struct_motor_stats">MotorStats</link> <link linkend="__main_8h_1a9eeb128a9907154869e9ffa78e065039">motorStats</link>)</para>
</listitem>
            <listitem><para>void <link linkend="__c_a_n_8ino_1a950c51dd93e1585b49156c52113ab832">decodeMotorTemps</link> (CAN_message_t msg, <link linkend="_struct_motor_temps">MotorTemps</link> <link linkend="__main_8h_1abb61c6dc61d12b31aad7bdadd495b70a">motorTemps</link>)</para>
</listitem>
            <listitem><para>void <link linkend="__c_a_n_8ino_1ac7f58797b08a603835f0488b5fe3fb7c">decipherBMSStatus</link> (CAN_message_t msg, <link linkend="_struct_b_m_s_status">BMSStatus</link> <link linkend="__main_8h_1ae0522609134711f92c96ffa8ed05e582">bmsStatus</link>)</para>
</listitem>
            <listitem><para>void <link linkend="__c_a_n_8ino_1ac7f0128ba5279b58ce4917ff6d80264e">decipherCellsVoltage</link> (CAN_message_t msg, <link linkend="_struct_cell_voltages">CellVoltages</link> <link linkend="__main_8h_1afca6798677cebeeb7599ea00e1e243dd">cellVoltages</link>)</para>
</listitem>
            <listitem><para>void <link linkend="__c_a_n_8ino_1a11cd027f4ad6ca2a6b9a860a07fb8e41">decipherThermistors</link> (CAN_message_t msg, <link linkend="_struct_thermistor_temps">ThermistorTemps</link> <link linkend="__main_8h_1a18571448b101f12a60457d717dc4f953">thermistorTemps</link>)</para>
</listitem>
            <listitem><para>void <link linkend="__c_a_n_8ino_1afd1fb5329197c4478969008e0ee42f90">calculateSeriesVoltage</link> (<link linkend="_struct_cell_voltages">CellVoltages</link> cellVs)</para>
</listitem>
            <listitem><para>void <link linkend="__c_a_n_8ino_1ab92f5f7e74cba4411e9f1c6f32a720a5">checkCAN</link> (<link linkend="_struct_c_a_n_task_data">CANTaskData</link> canData)</para>
</listitem>
            <listitem><para>void <link linkend="__c_a_n_8ino_1a317708f05ea5de4b748e27c49e2a85e8">printBMSStatus</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="__c_a_n_8ino_1ad899aaa07def0c8757bea6e9a75f878d">printMessage</link> (CAN_message_t msg)</para>
</listitem>
            <listitem><para>void <link linkend="__c_a_n_8ino_1a0953b2f37f0e637d3f5fba2148109d2a">requestCellVoltages</link> (int LTC)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>The <link linkend="__c_a_n_8ino">CAN.ino</link> file operates the CAN bus for the bike&apos;s firmware. This updates all the variables in the <link linkend="__c_a_n_8h">CAN.h</link> file using the various helper methods. Really simple. Just reads in the message using the CAN bus and then updates them according to the values derived from the datasheets. </para>

<para><formalpara><title>Author</title>

<para>Washington Superbike </para>
</formalpara>
<formalpara><title>Date</title>

<para>1-March-2023 </para>
</formalpara>
<note><title>Note</title>

<para>Dont mess with this too much. It&apos;s great.</para>
</note>
<para><link linkend="_todo_1_todo000002">Todo</link> 
<para>Change the &quot;if CAN_NODES != 0&quot; to be an ifndef statement in the start. That means the checkCAN and requestCellVoltages lines will not execute unless CAN_NODES is a non-zero number in <link linkend="__main_8h">Main.h</link> before compiling. 
<literallayout>&#160;&#xa;</literallayout>
 
<literallayout>&#160;&#xa;</literallayout>
 Potentially, check if the data is actually being updated by HIL. There is no real instantiation of associating the CAN variables with the messages being read in in the <link linkend="__c_a_n_8ino_1a785e095da30ce4993a186804102bf2ea">canTask()</link>, so maybe call on those methods to read in those values, in case it doesnt work. 
<literallayout>&#160;&#xa;</literallayout>
 
<literallayout>&#160;&#xa;</literallayout>
 Goal 3. 
<literallayout>&#160;&#xa;</literallayout>
 
<literallayout>&#160;&#xa;</literallayout>
 Final Goal. </para>
</para></para>
<para>
Definition in file <link linkend="__c_a_n_8ino_source">CAN.ino</link>.</para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="__c_a_n_8ino_1afd1fb5329197c4478969008e0ee42f90"/><section>
    <title>calculateSeriesVoltage()</title>
<indexterm><primary>calculateSeriesVoltage</primary><secondary>CAN.ino</secondary></indexterm>
<indexterm><primary>CAN.ino</primary><secondary>calculateSeriesVoltage</secondary></indexterm>
<para><computeroutput>void calculateSeriesVoltage (<link linkend="_struct_cell_voltages">CellVoltages</link> cellVs)</computeroutput></para><para>
Definition at line <link linkend="__c_a_n_8ino_source_1l00135">135</link> of file <link linkend="__c_a_n_8ino_source">CAN.ino</link>.</para>
</section>
<anchor xml:id="__c_a_n_8ino_1a785e095da30ce4993a186804102bf2ea"/><section>
    <title>canTask()</title>
<indexterm><primary>canTask</primary><secondary>CAN.ino</secondary></indexterm>
<indexterm><primary>CAN.ino</primary><secondary>canTask</secondary></indexterm>
<para><computeroutput>void canTask (void * canData)</computeroutput></para>
<para>First <link linkend="__c_a_n_8ino_1a785e095da30ce4993a186804102bf2ea">canTask()</link> checks for new incoming messages</para>

<para>NOTE: CAN breaks if we try sending messages with 0 other nodes on the bus as there is no node to &apos;ACK&apos; our message. Therefore, change CAN_NODES in <link linkend="__main_8h">Main.h</link> to make sure things dont break.</para>

<para>Ask for other half of cell voltages from BMS every 2 seconds</para>
<para>
Definition at line <link linkend="__c_a_n_8ino_source_1l00031">31</link> of file <link linkend="__c_a_n_8ino_source">CAN.ino</link>.</para>
</section>
<anchor xml:id="__c_a_n_8ino_1ab92f5f7e74cba4411e9f1c6f32a720a5"/><section>
    <title>checkCAN()</title>
<indexterm><primary>checkCAN</primary><secondary>CAN.ino</secondary></indexterm>
<indexterm><primary>CAN.ino</primary><secondary>checkCAN</secondary></indexterm>
<para><computeroutput>void checkCAN (<link linkend="_struct_c_a_n_task_data">CANTaskData</link> canData)</computeroutput></para><para>
Definition at line <link linkend="__c_a_n_8ino_source_1l00145">145</link> of file <link linkend="__c_a_n_8ino_source">CAN.ino</link>.</para>
</section>
<anchor xml:id="__c_a_n_8ino_1ac7f58797b08a603835f0488b5fe3fb7c"/><section>
    <title>decipherBMSStatus()</title>
<indexterm><primary>decipherBMSStatus</primary><secondary>CAN.ino</secondary></indexterm>
<indexterm><primary>CAN.ino</primary><secondary>decipherBMSStatus</secondary></indexterm>
<para><computeroutput>void decipherBMSStatus (CAN_message_t msg, <link linkend="_struct_b_m_s_status">BMSStatus</link> bmsStatus)</computeroutput></para><para>
Definition at line <link linkend="__c_a_n_8ino_source_1l00088">88</link> of file <link linkend="__c_a_n_8ino_source">CAN.ino</link>.</para>
</section>
<anchor xml:id="__c_a_n_8ino_1ac7f0128ba5279b58ce4917ff6d80264e"/><section>
    <title>decipherCellsVoltage()</title>
<indexterm><primary>decipherCellsVoltage</primary><secondary>CAN.ino</secondary></indexterm>
<indexterm><primary>CAN.ino</primary><secondary>decipherCellsVoltage</secondary></indexterm>
<para><computeroutput>void decipherCellsVoltage (CAN_message_t msg, <link linkend="_struct_cell_voltages">CellVoltages</link> cellVoltages)</computeroutput></para><para>
Definition at line <link linkend="__c_a_n_8ino_source_1l00096">96</link> of file <link linkend="__c_a_n_8ino_source">CAN.ino</link>.</para>
</section>
<anchor xml:id="__c_a_n_8ino_1a3e5ce0cee4895bc07047a515ac2fa8ea"/><section>
    <title>decipherChargerStats()</title>
<indexterm><primary>decipherChargerStats</primary><secondary>CAN.ino</secondary></indexterm>
<indexterm><primary>CAN.ino</primary><secondary>decipherChargerStats</secondary></indexterm>
<para><computeroutput>void decipherChargerStats (CAN_message_t msg, <link linkend="_struct_charger_stats">ChargerStats</link> chargerStats)</computeroutput></para><para>
Definition at line <link linkend="__c_a_n_8ino_source_1l00066">66</link> of file <link linkend="__c_a_n_8ino_source">CAN.ino</link>.</para>
</section>
<anchor xml:id="__c_a_n_8ino_1acc8ad6a9a2388c904e5c2a81e263c59d"/><section>
    <title>decipherEVCCStats()</title>
<indexterm><primary>decipherEVCCStats</primary><secondary>CAN.ino</secondary></indexterm>
<indexterm><primary>CAN.ino</primary><secondary>decipherEVCCStats</secondary></indexterm>
<para><computeroutput>void decipherEVCCStats (CAN_message_t msg, <link linkend="_struct_charge_controller_stats">ChargeControllerStats</link> evccStats)</computeroutput></para><para>
Definition at line <link linkend="__c_a_n_8ino_source_1l00060">60</link> of file <link linkend="__c_a_n_8ino_source">CAN.ino</link>.</para>
</section>
<anchor xml:id="__c_a_n_8ino_1a11cd027f4ad6ca2a6b9a860a07fb8e41"/><section>
    <title>decipherThermistors()</title>
<indexterm><primary>decipherThermistors</primary><secondary>CAN.ino</secondary></indexterm>
<indexterm><primary>CAN.ino</primary><secondary>decipherThermistors</secondary></indexterm>
<para><computeroutput>void decipherThermistors (CAN_message_t msg, <link linkend="_struct_thermistor_temps">ThermistorTemps</link> thermistorTemps)</computeroutput></para><para>
Definition at line <link linkend="__c_a_n_8ino_source_1l00123">123</link> of file <link linkend="__c_a_n_8ino_source">CAN.ino</link>.</para>
</section>
<anchor xml:id="__c_a_n_8ino_1abd98b0e43fb7330bf8964d8da390810f"/><section>
    <title>decodeMotorStats()</title>
<indexterm><primary>decodeMotorStats</primary><secondary>CAN.ino</secondary></indexterm>
<indexterm><primary>CAN.ino</primary><secondary>decodeMotorStats</secondary></indexterm>
<para><computeroutput>void decodeMotorStats (CAN_message_t msg, <link linkend="_struct_motor_stats">MotorStats</link> motorStats)</computeroutput></para><para>
Definition at line <link linkend="__c_a_n_8ino_source_1l00074">74</link> of file <link linkend="__c_a_n_8ino_source">CAN.ino</link>.</para>
</section>
<anchor xml:id="__c_a_n_8ino_1a950c51dd93e1585b49156c52113ab832"/><section>
    <title>decodeMotorTemps()</title>
<indexterm><primary>decodeMotorTemps</primary><secondary>CAN.ino</secondary></indexterm>
<indexterm><primary>CAN.ino</primary><secondary>decodeMotorTemps</secondary></indexterm>
<para><computeroutput>void decodeMotorTemps (CAN_message_t msg, <link linkend="_struct_motor_temps">MotorTemps</link> motorTemps)</computeroutput></para><para>
Definition at line <link linkend="__c_a_n_8ino_source_1l00081">81</link> of file <link linkend="__c_a_n_8ino_source">CAN.ino</link>.</para>
</section>
<anchor xml:id="__c_a_n_8ino_1a317708f05ea5de4b748e27c49e2a85e8"/><section>
    <title>printBMSStatus()</title>
<indexterm><primary>printBMSStatus</primary><secondary>CAN.ino</secondary></indexterm>
<indexterm><primary>CAN.ino</primary><secondary>printBMSStatus</secondary></indexterm>
<para><computeroutput>void printBMSStatus ( )</computeroutput></para><para>
Definition at line <link linkend="__c_a_n_8ino_source_1l00190">190</link> of file <link linkend="__c_a_n_8ino_source">CAN.ino</link>.</para>
</section>
<anchor xml:id="__c_a_n_8ino_1ad899aaa07def0c8757bea6e9a75f878d"/><section>
    <title>printMessage()</title>
<indexterm><primary>printMessage</primary><secondary>CAN.ino</secondary></indexterm>
<indexterm><primary>CAN.ino</primary><secondary>printMessage</secondary></indexterm>
<para><computeroutput>void printMessage (CAN_message_t msg)</computeroutput></para><para>
Definition at line <link linkend="__c_a_n_8ino_source_1l00224">224</link> of file <link linkend="__c_a_n_8ino_source">CAN.ino</link>.</para>
</section>
<anchor xml:id="__c_a_n_8ino_1a0953b2f37f0e637d3f5fba2148109d2a"/><section>
    <title>requestCellVoltages()</title>
<indexterm><primary>requestCellVoltages</primary><secondary>CAN.ino</secondary></indexterm>
<indexterm><primary>CAN.ino</primary><secondary>requestCellVoltages</secondary></indexterm>
<para><computeroutput>void requestCellVoltages (int LTC)</computeroutput></para><para>
Definition at line <link linkend="__c_a_n_8ino_source_1l00234">234</link> of file <link linkend="__c_a_n_8ino_source">CAN.ino</link>.</para>
</section>
<anchor xml:id="__c_a_n_8ino_1a833ae6516ecb5cb3f8a7bd5adbf2bd9b"/><section>
    <title>setupCAN()</title>
<indexterm><primary>setupCAN</primary><secondary>CAN.ino</secondary></indexterm>
<indexterm><primary>CAN.ino</primary><secondary>setupCAN</secondary></indexterm>
<para><computeroutput>void setupCAN ( )</computeroutput></para><para>
Definition at line <link linkend="__c_a_n_8ino_source_1l00055">55</link> of file <link linkend="__c_a_n_8ino_source">CAN.ino</link>.</para>
</section>
</section>
</section>
