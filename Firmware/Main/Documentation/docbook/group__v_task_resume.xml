<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group__v_task_resume" xml:lang="en-US">
<title>vTaskResume</title>
<indexterm><primary>vTaskResume</primary></indexterm>

<para>task. h <literallayout>void <link linkend="_task_8h_1a84a1584f29fb7736a1aa72ad5b3e9b44">vTaskResume( TaskHandle_t xTaskToResume )</link>;</literallayout></para>

<para>INCLUDE_vTaskSuspend must be defined as 1 for this function to be available. See the configuration section for more information.</para>

<para>Resumes a suspended task.</para>

<para>A task that has been suspended by one or more calls to vTaskSuspend () will be made available for running again by a single call to vTaskResume ().</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>xTaskToResume</entry><entry>
<para>Handle to the task being readied.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                Example usage: <literallayout>
void vAFunction( void )
{
TaskHandle_t xHandle;

    // Create a task, storing the handle.
    xTaskCreate( vTaskCode, &quot;NAME&quot;, STACK_SIZE, NULL, tskIDLE_PRIORITY, &amp;xHandle );

    // ...

    // Use the handle to suspend the created task.
    vTaskSuspend( xHandle );

    // ...

    // The created task will not run during this period, unless
    // another task calls vTaskResume( xHandle ).

    //...


    // Resume the suspended task ourselves.
    vTaskResume( xHandle );

    // The created task will once again get microcontroller processing
    // time in accordance with its priority within the system.
}
  </literallayout> </para>
</section>
