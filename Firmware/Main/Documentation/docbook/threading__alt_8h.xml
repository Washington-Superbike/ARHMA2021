<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_threading__alt_8h" xml:lang="en-US">
<title>FreeRTOS/threading_alt.h File Reference</title>
<indexterm><primary>FreeRTOS/threading_alt.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;FreeRTOS.h&quot;
#include &quot;semphr.h&quot;
</programlisting><simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structmbedtls__threading__mutex__t">mbedtls_threading_mutex_t</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_threading__alt_8h_1a827c7ec5b9ed1dfa35c77c0d3664de49">mbedtls_threading_set_alt</link> (void(*mutex_init)(<link linkend="_structmbedtls__threading__mutex__t">mbedtls_threading_mutex_t</link> *), void(*mutex_free)(<link linkend="_structmbedtls__threading__mutex__t">mbedtls_threading_mutex_t</link> *), int(*mutex_lock)(<link linkend="_structmbedtls__threading__mutex__t">mbedtls_threading_mutex_t</link> *), int(*mutex_unlock)(<link linkend="_structmbedtls__threading__mutex__t">mbedtls_threading_mutex_t</link> *))</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_threading__alt_8h_1a827c7ec5b9ed1dfa35c77c0d3664de49"/><section>
    <title>mbedtls_threading_set_alt()</title>
<indexterm><primary>mbedtls_threading_set_alt</primary><secondary>threading_alt.h</secondary></indexterm>
<indexterm><primary>threading_alt.h</primary><secondary>mbedtls_threading_set_alt</secondary></indexterm>
<para><computeroutput>void mbedtls_threading_set_alt (void(*)(<link linkend="_structmbedtls__threading__mutex__t">mbedtls_threading_mutex_t</link> *) mutex_init, void(*)(<link linkend="_structmbedtls__threading__mutex__t">mbedtls_threading_mutex_t</link> *) mutex_free, int(*)(<link linkend="_structmbedtls__threading__mutex__t">mbedtls_threading_mutex_t</link> *) mutex_lock, int(*)(<link linkend="_structmbedtls__threading__mutex__t">mbedtls_threading_mutex_t</link> *) mutex_unlock)</computeroutput></para></section>
</section>
</section>
