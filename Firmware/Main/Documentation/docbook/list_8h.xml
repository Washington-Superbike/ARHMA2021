<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_list_8h" xml:lang="en-US">
<title>FreeRTOS/list.h File Reference</title>
<indexterm><primary>FreeRTOS/list.h</primary></indexterm>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structx_l_i_s_t___i_t_e_m">xLIST_ITEM</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structx_m_i_n_i___l_i_s_t___i_t_e_m">xMINI_LIST_ITEM</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structx_l_i_s_t">xLIST</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_list_8h_1a2d5de557c5561c8980d1bf51d87d8cba">configLIST_VOLATILE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_list_8h_1a3611bd5d5d87cb26ac1dc7a4852b94a0">listFIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_list_8h_1abf45f853974db484cd7df434bd006e98">listSECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_list_8h_1a3a52b5a4f70d3a07e37a5814a23ba880">listFIRST_LIST_INTEGRITY_CHECK_VALUE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_list_8h_1a87dc70c22e3ff0eba560d6f357472634">listSECOND_LIST_INTEGRITY_CHECK_VALUE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_list_8h_1a0e65118e1baa7ab805cdfb37e580501d">listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE</link>(pxItem)</para>
</listitem>
            <listitem><para>#define <link linkend="_list_8h_1ac8b9d912bdcfdb5544f373d2a94268b2">listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE</link>(pxItem)</para>
</listitem>
            <listitem><para>#define <link linkend="_list_8h_1a5d68b1187d09c64d6ee329786cb0289b">listSET_LIST_INTEGRITY_CHECK_1_VALUE</link>(pxList)</para>
</listitem>
            <listitem><para>#define <link linkend="_list_8h_1a83b40c6e61534ef41229bd912dacab48">listSET_LIST_INTEGRITY_CHECK_2_VALUE</link>(pxList)</para>
</listitem>
            <listitem><para>#define <link linkend="_list_8h_1a95b994725c299cdc81c74efc16210cc6">listTEST_LIST_ITEM_INTEGRITY</link>(pxItem)</para>
</listitem>
            <listitem><para>#define <link linkend="_list_8h_1a337d6137e0a4d37321efc5c2f31dba22">listTEST_LIST_INTEGRITY</link>(pxList)</para>
</listitem>
            <listitem><para>#define <link linkend="_list_8h_1acc01a08e534b54fe438847ef02e5060a">listSET_LIST_ITEM_OWNER</link>(pxListItem,  pxOwner)   ( ( pxListItem )-&gt;pvOwner = ( void * ) ( pxOwner ) )</para>
</listitem>
            <listitem><para>#define <link linkend="_list_8h_1aa9469bd061a44b4f75d30c6175f66d5c">listGET_LIST_ITEM_OWNER</link>(pxListItem)   ( ( pxListItem )-&gt;pvOwner )</para>
</listitem>
            <listitem><para>#define <link linkend="_list_8h_1a83e95e61652f032fdc26aa622f5e2610">listSET_LIST_ITEM_VALUE</link>(pxListItem,  xValue)   ( ( pxListItem )-&gt;xItemValue = ( xValue ) )</para>
</listitem>
            <listitem><para>#define <link linkend="_list_8h_1aa50d09950abc602741d7ebe8387f4e1a">listGET_LIST_ITEM_VALUE</link>(pxListItem)   ( ( pxListItem )-&gt;xItemValue )</para>
</listitem>
            <listitem><para>#define <link linkend="_list_8h_1a63742b27958b959ac9ab69d8e9aed241">listGET_ITEM_VALUE_OF_HEAD_ENTRY</link>(pxList)   ( ( ( pxList )-&gt;xListEnd ).pxNext-&gt;xItemValue )</para>
</listitem>
            <listitem><para>#define <link linkend="_list_8h_1a987cb2766e509022c23b654907cea199">listGET_HEAD_ENTRY</link>(pxList)   ( ( ( pxList )-&gt;xListEnd ).pxNext )</para>
</listitem>
            <listitem><para>#define <link linkend="_list_8h_1aabf78d3f24ba56ac1d0bf0179438b960">listGET_NEXT</link>(pxListItem)   ( ( pxListItem )-&gt;pxNext )</para>
</listitem>
            <listitem><para>#define <link linkend="_list_8h_1a96cb0919f02e5c0d8e41ded0e65197a3">listGET_END_MARKER</link>(pxList)   ( ( <link linkend="_list_8h_1a1a62d469392f9bfe2443e7efab9c8398">ListItem_t</link> const * ) ( &amp;( ( pxList )-&gt;xListEnd ) ) )</para>
</listitem>
            <listitem><para>#define <link linkend="_list_8h_1aaba6eb05d67ebc8026bea29193eca28f">listLIST_IS_EMPTY</link>(pxList)   ( ( ( pxList )-&gt;uxNumberOfItems == ( <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> ) 0 ) ? <link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link> : <link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link> )</para>
</listitem>
            <listitem><para>#define <link linkend="_list_8h_1a18b4aded515bdc512017ea6e677a13bb">listCURRENT_LIST_LENGTH</link>(pxList)   ( ( pxList )-&gt;uxNumberOfItems )</para>
</listitem>
            <listitem><para>#define <link linkend="_list_8h_1a275d9855e9b71652e2b8f6e2ed62aadd">listGET_OWNER_OF_NEXT_ENTRY</link>(pxTCB,  pxList)</para>
</listitem>
            <listitem><para>#define <link linkend="_list_8h_1a715561302af8cb5b74416b23ce4e999d">listGET_OWNER_OF_HEAD_ENTRY</link>(pxList)   ( (&amp;( ( pxList )-&gt;xListEnd ))-&gt;pxNext-&gt;pvOwner )</para>
</listitem>
            <listitem><para>#define <link linkend="_list_8h_1a60302b468d21f8c53d13987372acb8fa">listIS_CONTAINED_WITHIN</link>(pxList,  pxListItem)   ( ( ( pxListItem )-&gt;pxContainer == ( pxList ) ) ? ( <link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link> ) : ( <link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link> ) )</para>
</listitem>
            <listitem><para>#define <link linkend="_list_8h_1a7c4dff11380cd843ed0b6a8dc065916b">listLIST_ITEM_CONTAINER</link>(pxListItem)   ( ( pxListItem )-&gt;pxContainer )</para>
</listitem>
            <listitem><para>#define <link linkend="_list_8h_1a7e17f81438dd0bd705714267a611ff28">listLIST_IS_INITIALISED</link>(pxList)   ( ( pxList )-&gt;xListEnd.xItemValue == <link linkend="_portmacro_8h_1a72723ba1e4a85ca14f25c2b9e066613d">portMAX_DELAY</link> )</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef struct <link linkend="_structx_l_i_s_t___i_t_e_m">xLIST_ITEM</link> <link linkend="_list_8h_1a1a62d469392f9bfe2443e7efab9c8398">ListItem_t</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_structx_m_i_n_i___l_i_s_t___i_t_e_m">xMINI_LIST_ITEM</link> <link linkend="_list_8h_1a542a8d55e98bc407593979e61f83cd02">MiniListItem_t</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_structx_l_i_s_t">xLIST</link> <link linkend="_list_8h_1ad14d7e3de1350e459c7c23c6f59c902a">List_t</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_list_8h_1adeef7734d7d6d9a3eea642a70c106919">vListInitialise</link> (<link linkend="_list_8h_1ad14d7e3de1350e459c7c23c6f59c902a">List_t</link> *const pxList) <link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link></para>
</listitem>
            <listitem><para>void <link linkend="_list_8h_1ab91611baae53be209a05d211f55f5395">vListInitialiseItem</link> (<link linkend="_list_8h_1a1a62d469392f9bfe2443e7efab9c8398">ListItem_t</link> *const pxItem) <link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link></para>
</listitem>
            <listitem><para>void <link linkend="_list_8h_1aa129290da5cbda47dffb7bf877b2f02a">vListInsert</link> (<link linkend="_list_8h_1ad14d7e3de1350e459c7c23c6f59c902a">List_t</link> *const pxList, <link linkend="_list_8h_1a1a62d469392f9bfe2443e7efab9c8398">ListItem_t</link> *const pxNewListItem) <link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link></para>
</listitem>
            <listitem><para>void <link linkend="_list_8h_1a71a6a6099b3cbd8f90539aabe5c9e572">vListInsertEnd</link> (<link linkend="_list_8h_1ad14d7e3de1350e459c7c23c6f59c902a">List_t</link> *const pxList, <link linkend="_list_8h_1a1a62d469392f9bfe2443e7efab9c8398">ListItem_t</link> *const pxNewListItem) <link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link></para>
</listitem>
            <listitem><para><link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> <link linkend="_list_8h_1a2eb1558482076fff8cafc63419c2d34a">uxListRemove</link> (<link linkend="_list_8h_1a1a62d469392f9bfe2443e7efab9c8398">ListItem_t</link> *const pxItemToRemove) <link linkend="_mpu__wrappers_8h_1a4785c4f4a8c04b835139dcc2a6682078">PRIVILEGED_FUNCTION</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_list_8h_1a2d5de557c5561c8980d1bf51d87d8cba"/><section>
    <title>configLIST_VOLATILE</title>
<indexterm><primary>configLIST_VOLATILE</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>configLIST_VOLATILE</secondary></indexterm>
<para><computeroutput>#define configLIST_VOLATILE</computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00092">92</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
<anchor xml:id="_list_8h_1a18b4aded515bdc512017ea6e677a13bb"/><section>
    <title>listCURRENT_LIST_LENGTH</title>
<indexterm><primary>listCURRENT_LIST_LENGTH</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>listCURRENT_LIST_LENGTH</secondary></indexterm>
<para><computeroutput>#define listCURRENT_LIST_LENGTH( pxList)   ( ( pxList )-&gt;uxNumberOfItems )</computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00255">255</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
<anchor xml:id="_list_8h_1a3a52b5a4f70d3a07e37a5814a23ba880"/><section>
    <title>listFIRST_LIST_INTEGRITY_CHECK_VALUE</title>
<indexterm><primary>listFIRST_LIST_INTEGRITY_CHECK_VALUE</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>listFIRST_LIST_INTEGRITY_CHECK_VALUE</secondary></indexterm>
<para><computeroutput>#define listFIRST_LIST_INTEGRITY_CHECK_VALUE</computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00108">108</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
<anchor xml:id="_list_8h_1a3611bd5d5d87cb26ac1dc7a4852b94a0"/><section>
    <title>listFIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE</title>
<indexterm><primary>listFIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>listFIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE</secondary></indexterm>
<para><computeroutput>#define listFIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE</computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00106">106</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
<anchor xml:id="_list_8h_1a96cb0919f02e5c0d8e41ded0e65197a3"/><section>
    <title>listGET_END_MARKER</title>
<indexterm><primary>listGET_END_MARKER</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>listGET_END_MARKER</secondary></indexterm>
<para><computeroutput>#define listGET_END_MARKER( pxList)   ( ( <link linkend="_list_8h_1a1a62d469392f9bfe2443e7efab9c8398">ListItem_t</link> const * ) ( &amp;( ( pxList )-&gt;xListEnd ) ) )</computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00241">241</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
<anchor xml:id="_list_8h_1a987cb2766e509022c23b654907cea199"/><section>
    <title>listGET_HEAD_ENTRY</title>
<indexterm><primary>listGET_HEAD_ENTRY</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>listGET_HEAD_ENTRY</secondary></indexterm>
<para><computeroutput>#define listGET_HEAD_ENTRY( pxList)   ( ( ( pxList )-&gt;xListEnd ).pxNext )</computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00225">225</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
<anchor xml:id="_list_8h_1a63742b27958b959ac9ab69d8e9aed241"/><section>
    <title>listGET_ITEM_VALUE_OF_HEAD_ENTRY</title>
<indexterm><primary>listGET_ITEM_VALUE_OF_HEAD_ENTRY</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>listGET_ITEM_VALUE_OF_HEAD_ENTRY</secondary></indexterm>
<para><computeroutput>#define listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxList)   ( ( ( pxList )-&gt;xListEnd ).pxNext-&gt;xItemValue )</computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00217">217</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
<anchor xml:id="_list_8h_1aa9469bd061a44b4f75d30c6175f66d5c"/><section>
    <title>listGET_LIST_ITEM_OWNER</title>
<indexterm><primary>listGET_LIST_ITEM_OWNER</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>listGET_LIST_ITEM_OWNER</secondary></indexterm>
<para><computeroutput>#define listGET_LIST_ITEM_OWNER( pxListItem)   ( ( pxListItem )-&gt;pvOwner )</computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00189">189</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
<anchor xml:id="_list_8h_1aa50d09950abc602741d7ebe8387f4e1a"/><section>
    <title>listGET_LIST_ITEM_VALUE</title>
<indexterm><primary>listGET_LIST_ITEM_VALUE</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>listGET_LIST_ITEM_VALUE</secondary></indexterm>
<para><computeroutput>#define listGET_LIST_ITEM_VALUE( pxListItem)   ( ( pxListItem )-&gt;xItemValue )</computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00208">208</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
<anchor xml:id="_list_8h_1aabf78d3f24ba56ac1d0bf0179438b960"/><section>
    <title>listGET_NEXT</title>
<indexterm><primary>listGET_NEXT</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>listGET_NEXT</secondary></indexterm>
<para><computeroutput>#define listGET_NEXT( pxListItem)   ( ( pxListItem )-&gt;pxNext )</computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00233">233</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
<anchor xml:id="_list_8h_1a715561302af8cb5b74416b23ce4e999d"/><section>
    <title>listGET_OWNER_OF_HEAD_ENTRY</title>
<indexterm><primary>listGET_OWNER_OF_HEAD_ENTRY</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>listGET_OWNER_OF_HEAD_ENTRY</secondary></indexterm>
<para><computeroutput>#define listGET_OWNER_OF_HEAD_ENTRY( pxList)   ( (&amp;( ( pxList )-&gt;xListEnd ))-&gt;pxNext-&gt;pvOwner )</computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00307">307</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
<anchor xml:id="_list_8h_1a275d9855e9b71652e2b8f6e2ed62aadd"/><section>
    <title>listGET_OWNER_OF_NEXT_ENTRY</title>
<indexterm><primary>listGET_OWNER_OF_NEXT_ENTRY</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>listGET_OWNER_OF_NEXT_ENTRY</secondary></indexterm>
<para><computeroutput>#define listGET_OWNER_OF_NEXT_ENTRY( pxTCB,  pxList)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
List_t&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;pxConstList&#32;=&#32;(&#32;pxList&#32;);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Increment&#32;the&#32;index&#32;to&#32;the&#32;next&#32;item&#32;and&#32;return&#32;the&#32;item,&#32;ensuring&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;we&#32;don&apos;t&#32;return&#32;the&#32;marker&#32;used&#32;at&#32;the&#32;end&#32;of&#32;the&#32;list.&#32;&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;(&#32;pxConstList&#32;)-&gt;pxIndex&#32;=&#32;(&#32;pxConstList&#32;)-&gt;pxIndex-&gt;pxNext;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;if(&#32;(&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;)&#32;(&#32;pxConstList&#32;)-&gt;pxIndex&#32;==&#32;(&#32;<emphasis role="keywordtype">void</emphasis>&#32;*&#32;)&#32;&amp;(&#32;(&#32;pxConstList&#32;)-&gt;xListEnd&#32;)&#32;)&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;pxConstList&#32;)-&gt;pxIndex&#32;=&#32;(&#32;pxConstList&#32;)-&gt;pxIndex-&gt;pxNext;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;(&#32;pxTCB&#32;)&#32;=&#32;(&#32;pxConstList&#32;)-&gt;pxIndex-&gt;pvOwner;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
}
</programlisting><para>
Definition at line <link linkend="_list_8h_source_1l00277">277</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
<anchor xml:id="_list_8h_1a60302b468d21f8c53d13987372acb8fa"/><section>
    <title>listIS_CONTAINED_WITHIN</title>
<indexterm><primary>listIS_CONTAINED_WITHIN</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>listIS_CONTAINED_WITHIN</secondary></indexterm>
<para><computeroutput>#define listIS_CONTAINED_WITHIN( pxList,  pxListItem)   ( ( ( pxListItem )-&gt;pxContainer == ( pxList ) ) ? ( <link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link> ) : ( <link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link> ) )</computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00318">318</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
<anchor xml:id="_list_8h_1aaba6eb05d67ebc8026bea29193eca28f"/><section>
    <title>listLIST_IS_EMPTY</title>
<indexterm><primary>listLIST_IS_EMPTY</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>listLIST_IS_EMPTY</secondary></indexterm>
<para><computeroutput>#define listLIST_IS_EMPTY( pxList)   ( ( ( pxList )-&gt;uxNumberOfItems == ( <link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> ) 0 ) ? <link linkend="_projdefs_8h_1af268cf937960eb029256bd9c4d949fbe">pdTRUE</link> : <link linkend="_projdefs_8h_1aa56260e937e7e203026707e5ba944273">pdFALSE</link> )</computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00250">250</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
<anchor xml:id="_list_8h_1a7e17f81438dd0bd705714267a611ff28"/><section>
    <title>listLIST_IS_INITIALISED</title>
<indexterm><primary>listLIST_IS_INITIALISED</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>listLIST_IS_INITIALISED</secondary></indexterm>
<para><computeroutput>#define listLIST_IS_INITIALISED( pxList)   ( ( pxList )-&gt;xListEnd.xItemValue == <link linkend="_portmacro_8h_1a72723ba1e4a85ca14f25c2b9e066613d">portMAX_DELAY</link> )</computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00333">333</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
<anchor xml:id="_list_8h_1a7c4dff11380cd843ed0b6a8dc065916b"/><section>
    <title>listLIST_ITEM_CONTAINER</title>
<indexterm><primary>listLIST_ITEM_CONTAINER</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>listLIST_ITEM_CONTAINER</secondary></indexterm>
<para><computeroutput>#define listLIST_ITEM_CONTAINER( pxListItem)   ( ( pxListItem )-&gt;pxContainer )</computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00326">326</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
<anchor xml:id="_list_8h_1a87dc70c22e3ff0eba560d6f357472634"/><section>
    <title>listSECOND_LIST_INTEGRITY_CHECK_VALUE</title>
<indexterm><primary>listSECOND_LIST_INTEGRITY_CHECK_VALUE</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>listSECOND_LIST_INTEGRITY_CHECK_VALUE</secondary></indexterm>
<para><computeroutput>#define listSECOND_LIST_INTEGRITY_CHECK_VALUE</computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00109">109</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
<anchor xml:id="_list_8h_1abf45f853974db484cd7df434bd006e98"/><section>
    <title>listSECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE</title>
<indexterm><primary>listSECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>listSECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE</secondary></indexterm>
<para><computeroutput>#define listSECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE</computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00107">107</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
<anchor xml:id="_list_8h_1a0e65118e1baa7ab805cdfb37e580501d"/><section>
    <title>listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE</title>
<indexterm><primary>listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE</secondary></indexterm>
<para><computeroutput>#define listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem)</computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00110">110</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
<anchor xml:id="_list_8h_1a5d68b1187d09c64d6ee329786cb0289b"/><section>
    <title>listSET_LIST_INTEGRITY_CHECK_1_VALUE</title>
<indexterm><primary>listSET_LIST_INTEGRITY_CHECK_1_VALUE</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>listSET_LIST_INTEGRITY_CHECK_1_VALUE</secondary></indexterm>
<para><computeroutput>#define listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList)</computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00112">112</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
<anchor xml:id="_list_8h_1a83b40c6e61534ef41229bd912dacab48"/><section>
    <title>listSET_LIST_INTEGRITY_CHECK_2_VALUE</title>
<indexterm><primary>listSET_LIST_INTEGRITY_CHECK_2_VALUE</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>listSET_LIST_INTEGRITY_CHECK_2_VALUE</secondary></indexterm>
<para><computeroutput>#define listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList)</computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00113">113</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
<anchor xml:id="_list_8h_1acc01a08e534b54fe438847ef02e5060a"/><section>
    <title>listSET_LIST_ITEM_OWNER</title>
<indexterm><primary>listSET_LIST_ITEM_OWNER</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>listSET_LIST_ITEM_OWNER</secondary></indexterm>
<para><computeroutput>#define listSET_LIST_ITEM_OWNER( pxListItem,  pxOwner)   ( ( pxListItem )-&gt;pvOwner = ( void * ) ( pxOwner ) )</computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00180">180</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
<anchor xml:id="_list_8h_1a83e95e61652f032fdc26aa622f5e2610"/><section>
    <title>listSET_LIST_ITEM_VALUE</title>
<indexterm><primary>listSET_LIST_ITEM_VALUE</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>listSET_LIST_ITEM_VALUE</secondary></indexterm>
<para><computeroutput>#define listSET_LIST_ITEM_VALUE( pxListItem,  xValue)   ( ( pxListItem )-&gt;xItemValue = ( xValue ) )</computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00198">198</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
<anchor xml:id="_list_8h_1ac8b9d912bdcfdb5544f373d2a94268b2"/><section>
    <title>listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE</title>
<indexterm><primary>listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE</secondary></indexterm>
<para><computeroutput>#define listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem)</computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00111">111</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
<anchor xml:id="_list_8h_1a337d6137e0a4d37321efc5c2f31dba22"/><section>
    <title>listTEST_LIST_INTEGRITY</title>
<indexterm><primary>listTEST_LIST_INTEGRITY</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>listTEST_LIST_INTEGRITY</secondary></indexterm>
<para><computeroutput>#define listTEST_LIST_INTEGRITY( pxList)</computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00115">115</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
<anchor xml:id="_list_8h_1a95b994725c299cdc81c74efc16210cc6"/><section>
    <title>listTEST_LIST_ITEM_INTEGRITY</title>
<indexterm><primary>listTEST_LIST_ITEM_INTEGRITY</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>listTEST_LIST_ITEM_INTEGRITY</secondary></indexterm>
<para><computeroutput>#define listTEST_LIST_ITEM_INTEGRITY( pxItem)</computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00114">114</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_list_8h_1ad14d7e3de1350e459c7c23c6f59c902a"/><section>
    <title>List_t</title>
<indexterm><primary>List_t</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>List_t</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structx_l_i_s_t">xLIST</link> <link linkend="_list_8h_1ad14d7e3de1350e459c7c23c6f59c902a">List_t</link></computeroutput></para></section>
<anchor xml:id="_list_8h_1a1a62d469392f9bfe2443e7efab9c8398"/><section>
    <title>ListItem_t</title>
<indexterm><primary>ListItem_t</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>ListItem_t</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structx_l_i_s_t___i_t_e_m">xLIST_ITEM</link> <link linkend="_list_8h_1a1a62d469392f9bfe2443e7efab9c8398">ListItem_t</link></computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00150">150</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
<anchor xml:id="_list_8h_1a542a8d55e98bc407593979e61f83cd02"/><section>
    <title>MiniListItem_t</title>
<indexterm><primary>MiniListItem_t</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>MiniListItem_t</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structx_m_i_n_i___l_i_s_t___i_t_e_m">xMINI_LIST_ITEM</link> <link linkend="_list_8h_1a542a8d55e98bc407593979e61f83cd02">MiniListItem_t</link></computeroutput></para><para>
Definition at line <link linkend="_list_8h_source_1l00159">159</link> of file <link linkend="_list_8h_source">list.h</link>.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_list_8h_1a2eb1558482076fff8cafc63419c2d34a"/><section>
    <title>uxListRemove()</title>
<indexterm><primary>uxListRemove</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>uxListRemove</secondary></indexterm>
<para><computeroutput><link linkend="_portmacro_8h_1a646f89d4298e4f5afd522202b11cb2e6">UBaseType_t</link> uxListRemove (<link linkend="_list_8h_1a1a62d469392f9bfe2443e7efab9c8398">ListItem_t</link> *const pxItemToRemove)</computeroutput></para><para>
Definition at line <link linkend="_list_8c_source_1l00170">170</link> of file <link linkend="_list_8c_source">list.c</link>.</para>
</section>
<anchor xml:id="_list_8h_1adeef7734d7d6d9a3eea642a70c106919"/><section>
    <title>vListInitialise()</title>
<indexterm><primary>vListInitialise</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>vListInitialise</secondary></indexterm>
<para><computeroutput>void vListInitialise (<link linkend="_list_8h_1ad14d7e3de1350e459c7c23c6f59c902a">List_t</link> *const pxList)</computeroutput></para><para>
Definition at line <link linkend="_list_8c_source_1l00037">37</link> of file <link linkend="_list_8c_source">list.c</link>.</para>
</section>
<anchor xml:id="_list_8h_1ab91611baae53be209a05d211f55f5395"/><section>
    <title>vListInitialiseItem()</title>
<indexterm><primary>vListInitialiseItem</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>vListInitialiseItem</secondary></indexterm>
<para><computeroutput>void vListInitialiseItem (<link linkend="_list_8h_1a1a62d469392f9bfe2443e7efab9c8398">ListItem_t</link> *const pxItem)</computeroutput></para><para>
Definition at line <link linkend="_list_8c_source_1l00062">62</link> of file <link linkend="_list_8c_source">list.c</link>.</para>
</section>
<anchor xml:id="_list_8h_1aa129290da5cbda47dffb7bf877b2f02a"/><section>
    <title>vListInsert()</title>
<indexterm><primary>vListInsert</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>vListInsert</secondary></indexterm>
<para><computeroutput>void vListInsert (<link linkend="_list_8h_1ad14d7e3de1350e459c7c23c6f59c902a">List_t</link> *const pxList, <link linkend="_list_8h_1a1a62d469392f9bfe2443e7efab9c8398">ListItem_t</link> *const pxNewListItem)</computeroutput></para><para>
Definition at line <link linkend="_list_8c_source_1l00103">103</link> of file <link linkend="_list_8c_source">list.c</link>.</para>
</section>
<anchor xml:id="_list_8h_1a71a6a6099b3cbd8f90539aabe5c9e572"/><section>
    <title>vListInsertEnd()</title>
<indexterm><primary>vListInsertEnd</primary><secondary>list.h</secondary></indexterm>
<indexterm><primary>list.h</primary><secondary>vListInsertEnd</secondary></indexterm>
<para><computeroutput>void vListInsertEnd (<link linkend="_list_8h_1ad14d7e3de1350e459c7c23c6f59c902a">List_t</link> *const pxList, <link linkend="_list_8h_1a1a62d469392f9bfe2443e7efab9c8398">ListItem_t</link> *const pxNewListItem)</computeroutput></para><para>
Definition at line <link linkend="_list_8c_source_1l00074">74</link> of file <link linkend="_list_8c_source">list.c</link>.</para>
</section>
</section>
</section>
