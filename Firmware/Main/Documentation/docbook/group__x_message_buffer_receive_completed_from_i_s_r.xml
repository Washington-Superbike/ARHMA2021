<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group__x_message_buffer_receive_completed_from_i_s_r" xml:lang="en-US">
<title>xMessageBufferReceiveCompletedFromISR</title>
<indexterm><primary>xMessageBufferReceiveCompletedFromISR</primary></indexterm>

<para><link linkend="_message__buffer_8h">message_buffer.h</link></para>

<para><literallayout>
BaseType_t <link linkend="_message__buffer_8h_1a22b1a37d0d4f39acd87250f73d9aab0c">xMessageBufferReceiveCompletedFromISR( MessageBufferHandle_t xStreamBuffer, BaseType_t *pxHigherPriorityTaskWoken )</link>;
</literallayout></para>

<para>For advanced users only.</para>

<para>The <link linkend="_stream__buffer_8c_1a4d6a29d283acfa2d4ef576476eedc789">sbRECEIVE_COMPLETED()</link> macro is called from within the FreeRTOS APIs when data is read out of a message buffer or stream buffer. If there was a task that was blocked on the message or stream buffer waiting for data to arrive then the <link linkend="_stream__buffer_8c_1a4d6a29d283acfa2d4ef576476eedc789">sbRECEIVE_COMPLETED()</link> macro sends a notification to the task to remove it from the Blocked state. <link linkend="_message__buffer_8h_1a22b1a37d0d4f39acd87250f73d9aab0c">xMessageBufferReceiveCompletedFromISR()</link> does the same thing. It is provided to enable application writers to implement their own version of <link linkend="_stream__buffer_8c_1a4d6a29d283acfa2d4ef576476eedc789">sbRECEIVE_COMPLETED()</link>, and MUST NOT BE USED AT ANY OTHER TIME.</para>

<para>See the example implemented in FreeRTOS/Demo/Minimal/MessageBufferAMP.c for additional information.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>xStreamBuffer</entry><entry>
<para>The handle of the stream buffer from which data was read.</para>
</entry>
                            </row>
                            <row>
<entry>pxHigherPriorityTaskWoken</entry><entry>
<para>*pxHigherPriorityTaskWoken should be initialised to pdFALSE before it is passed into <link linkend="_message__buffer_8h_1a22b1a37d0d4f39acd87250f73d9aab0c">xMessageBufferReceiveCompletedFromISR()</link>. If calling <link linkend="_message__buffer_8h_1a22b1a37d0d4f39acd87250f73d9aab0c">xMessageBufferReceiveCompletedFromISR()</link> removes a task from the Blocked state, and the task has a priority above the priority of the currently running task, then *pxHigherPriorityTaskWoken will get set to pdTRUE indicating that a context switch should be performed before exiting the ISR.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>If a task was removed from the Blocked state then pdTRUE is returned. Otherwise pdFALSE is returned. </para>
</formalpara>
</para>
</section>
